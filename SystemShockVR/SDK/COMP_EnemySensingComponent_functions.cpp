#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_EnemySensingComponent

#include "Basic.hpp"

#include "COMP_EnemySensingComponent_classes.hpp"
#include "COMP_EnemySensingComponent_parameters.hpp"


namespace SDK
{

// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.OnSeePawn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::OnSeePawn__DelegateSignature(class APAWN_SystemShockCharacter_C* Pawn, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "OnSeePawn__DelegateSignature");

	Params::COMP_EnemySensingComponent_C_OnSeePawn__DelegateSignature Parms{};

	Parms.Pawn = Pawn;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.OnHearPawn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Loudness                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::OnHearPawn__DelegateSignature(class APAWN_SystemShockCharacter_C* Pawn, const struct FVector& Location, float Loudness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "OnHearPawn__DelegateSignature");

	Params::COMP_EnemySensingComponent_C_OnHearPawn__DelegateSignature Parms{};

	Parms.Pawn = Pawn;
	Parms.Location = std::move(Location);
	Parms.Loudness = Loudness;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.ExecuteUbergraph_COMP_EnemySensingComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::ExecuteUbergraph_COMP_EnemySensingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "ExecuteUbergraph_COMP_EnemySensingComponent");

	Params::COMP_EnemySensingComponent_C_ExecuteUbergraph_COMP_EnemySensingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "ReceiveTick");

	Params::COMP_EnemySensingComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.InitializeSensingComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_EnemyDetection_C*           DetectionComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  BodyComponent_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BodySocketName_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         LocalBodyRotation_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  HeadComponent_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HeadSocketName_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocalHeadOffset_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::InitializeSensingComponent(class UCOMP_EnemyDetection_C* DetectionComponent, class USceneComponent* BodyComponent_0, class FName BodySocketName_0, const struct FRotator& LocalBodyRotation_0, class USceneComponent* HeadComponent_0, class FName HeadSocketName_0, const struct FVector& LocalHeadOffset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "InitializeSensingComponent");

	Params::COMP_EnemySensingComponent_C_InitializeSensingComponent Parms{};

	Parms.DetectionComponent = DetectionComponent;
	Parms.BodyComponent_0 = BodyComponent_0;
	Parms.BodySocketName_0 = BodySocketName_0;
	Parms.LocalBodyRotation_0 = std::move(LocalBodyRotation_0);
	Parms.HeadComponent_0 = HeadComponent_0;
	Parms.HeadSocketName_0 = HeadSocketName_0;
	Parms.LocalHeadOffset_0 = std::move(LocalHeadOffset_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.BindAttributeEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemySensingComponent_C::BindAttributeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "BindAttributeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.SetSensingUpdatesEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemySensingComponent_C::SetSensingUpdatesEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "SetSensingUpdatesEnabled");

	Params::COMP_EnemySensingComponent_C_SetSensingUpdatesEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.SetSightDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::SetSightDistance(float NewDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "SetSightDistance");

	Params::COMP_EnemySensingComponent_C_SetSightDistance Parms{};

	Parms.NewDistance = NewDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.UpdateVision
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemySensingComponent_C::UpdateVision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "UpdateVision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.OnHearSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     SourcePawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SoundRange                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Obstruction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Occlusion                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::OnHearSound(class APAWN_SystemShockCharacter_C* SourcePawn, const struct FVector& SourceLocation, const struct FVector& TargetLocation, float SoundRange, float Obstruction, float Occlusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "OnHearSound");

	Params::COMP_EnemySensingComponent_C_OnHearSound Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.SourceLocation = std::move(SourceLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.SoundRange = SoundRange;
	Parms.Obstruction = Obstruction;
	Parms.Occlusion = Occlusion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.GetBodyTransform
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UCOMP_EnemySensingComponent_C::GetBodyTransform(struct FTransform* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "GetBodyTransform");

	Params::COMP_EnemySensingComponent_C_GetBodyTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.GetHeadLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::GetHeadLocation(struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "GetHeadLocation");

	Params::COMP_EnemySensingComponent_C_GetHeadLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.HadVisionToTargetLastTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENUM_VisionTraceType                    SightingType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::HadVisionToTargetLastTick(bool* Visible, ENUM_VisionTraceType* SightingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "HadVisionToTargetLastTick");

	Params::COMP_EnemySensingComponent_C_HadVisionToTargetLastTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;

	if (SightingType != nullptr)
		*SightingType = Parms.SightingType;
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.IsLocationInVisionCone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DistanceToTarget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CosAngleToTarget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::IsLocationInVisionCone(const struct FVector& Location, bool* Result, float* DistanceToTarget, float* CosAngleToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "IsLocationInVisionCone");

	Params::COMP_EnemySensingComponent_C_IsLocationInVisionCone Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DistanceToTarget != nullptr)
		*DistanceToTarget = Parms.DistanceToTarget;

	if (CosAngleToTarget != nullptr)
		*CosAngleToTarget = Parms.CosAngleToTarget;
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.EVENT_OnSightConeScaleChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::EVENT_OnSightConeScaleChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "EVENT_OnSightConeScaleChanged");

	Params::COMP_EnemySensingComponent_C_EVENT_OnSightConeScaleChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.EVENT_OnSightDistanceScaleChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::EVENT_OnSightDistanceScaleChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "EVENT_OnSightDistanceScaleChanged");

	Params::COMP_EnemySensingComponent_C_EVENT_OnSightDistanceScaleChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.PerformVisionTrace
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DistanceToTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CosAngleToTarget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   ActorsToIgnore                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemySensingComponent_C::PerformVisionTrace(const struct FVector& SourceLocation, const struct FVector& TargetLocation, float DistanceToTarget, float CosAngleToTarget, class APAWN_SystemShockCharacter_C* PlayerPawn, TArray<class AActor*>& ActorsToIgnore, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "PerformVisionTrace");

	Params::COMP_EnemySensingComponent_C_PerformVisionTrace Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.DistanceToTarget = DistanceToTarget;
	Parms.CosAngleToTarget = CosAngleToTarget;
	Parms.PlayerPawn = PlayerPawn;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);

	UObject::ProcessEvent(Func, &Parms);

	ActorsToIgnore = std::move(Parms.ActorsToIgnore);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_EnemySensingComponent.COMP_EnemySensingComponent_C.IsLocationInVisionConeInternal
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       VisionTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DistanceToTarget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CosAngleToTarget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemySensingComponent_C::IsLocationInVisionConeInternal(const struct FTransform& VisionTransform, const struct FVector& TargetLocation, bool* Result, float* DistanceToTarget, float* CosAngleToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemySensingComponent_C", "IsLocationInVisionConeInternal");

	Params::COMP_EnemySensingComponent_C_IsLocationInVisionConeInternal Parms{};

	Parms.VisionTransform = std::move(VisionTransform);
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DistanceToTarget != nullptr)
		*DistanceToTarget = Parms.DistanceToTarget;

	if (CosAngleToTarget != nullptr)
		*CosAngleToTarget = Parms.CosAngleToTarget;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_ButtonColorType_structs.hpp"
#include "INTERACT_Button_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_Button.INTERACT_Button_C
// 0x0118 (0x0520 - 0x0408)
class AINTERACT_Button_C final : public AINTERACT_Button_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_Button_C;                  // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SparkNode;                                         // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       TargetSphere;                                      // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxCollision;                                      // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFXSystemAsset>          BrokenEmitter;                                     // 0x0438(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               BrokenSoundCue;                                    // 0x0460(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            ButtonPressMontage;                                // 0x0488(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         SparkStartedTimestamp;                             // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SparkDuration;                                     // 0x04B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonPulseStartTimestamp;                         // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ButtonPulseTimer;                                  // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonPulseDuration;                               // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ButtonColorType                          ButtonColorType;                                   // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRetriggering;                                    // 0x04CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE[0x2];                                      // 0x04CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetriggerDuration;                                 // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetriggerTimestamp;                                // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RetriggerTimerHandle;                              // 0x04D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   ButtonRetriggeringMessage;                         // 0x04E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USoundCue>               PoweredDownSoundCue;                               // 0x04F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_Button(int32 EntryPoint);
	void BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void UserConstructionScript();
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void OnBrokenInteraction(bool* Result);
	void InitializeButtonState();
	void SetButtonMeshColor(const struct FLinearColor& Color);
	void UpdateButtonColor();
	void StartButtonPulse();
	void TickButtonPulse();
	void OnLockedInteraction(bool* Result);
	void TryUpdateRetriggerTimer();
	void EVENT_OnRetriggerButton();
	void GetInteractBusy(bool* Result, class FText* BusyMessage);
	void UpdateButtonVisibility(bool VisibilityState);
	void OnInteractSuccess(class AActor* SourceActor);
	void OnTargetLockStateChanged();
	void OnButtonBecameDysfunctional();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_Button_C">();
	}
	static class AINTERACT_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_Button_C>();
	}
};
static_assert(alignof(AINTERACT_Button_C) == 0x000008, "Wrong alignment on AINTERACT_Button_C");
static_assert(sizeof(AINTERACT_Button_C) == 0x000520, "Wrong size on AINTERACT_Button_C");
static_assert(offsetof(AINTERACT_Button_C, UberGraphFrame_INTERACT_Button_C) == 0x000408, "Member 'AINTERACT_Button_C::UberGraphFrame_INTERACT_Button_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, COMP_VoxelCullable) == 0x000410, "Member 'AINTERACT_Button_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, SparkNode) == 0x000418, "Member 'AINTERACT_Button_C::SparkNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, TargetSphere) == 0x000420, "Member 'AINTERACT_Button_C::TargetSphere' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, BoxCollision) == 0x000428, "Member 'AINTERACT_Button_C::BoxCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, SkeletalMesh) == 0x000430, "Member 'AINTERACT_Button_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, BrokenEmitter) == 0x000438, "Member 'AINTERACT_Button_C::BrokenEmitter' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, BrokenSoundCue) == 0x000460, "Member 'AINTERACT_Button_C::BrokenSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonPressMontage) == 0x000488, "Member 'AINTERACT_Button_C::ButtonPressMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, SparkStartedTimestamp) == 0x0004B0, "Member 'AINTERACT_Button_C::SparkStartedTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, SparkDuration) == 0x0004B4, "Member 'AINTERACT_Button_C::SparkDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonPulseStartTimestamp) == 0x0004B8, "Member 'AINTERACT_Button_C::ButtonPulseStartTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonPulseTimer) == 0x0004C0, "Member 'AINTERACT_Button_C::ButtonPulseTimer' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonPulseDuration) == 0x0004C8, "Member 'AINTERACT_Button_C::ButtonPulseDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonColorType) == 0x0004CC, "Member 'AINTERACT_Button_C::ButtonColorType' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, IsRetriggering) == 0x0004CD, "Member 'AINTERACT_Button_C::IsRetriggering' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, RetriggerDuration) == 0x0004D0, "Member 'AINTERACT_Button_C::RetriggerDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, RetriggerTimestamp) == 0x0004D4, "Member 'AINTERACT_Button_C::RetriggerTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, RetriggerTimerHandle) == 0x0004D8, "Member 'AINTERACT_Button_C::RetriggerTimerHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, ButtonRetriggeringMessage) == 0x0004E0, "Member 'AINTERACT_Button_C::ButtonRetriggeringMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_Button_C, PoweredDownSoundCue) == 0x0004F8, "Member 'AINTERACT_Button_C::PoweredDownSoundCue' has a wrong offset!");

}


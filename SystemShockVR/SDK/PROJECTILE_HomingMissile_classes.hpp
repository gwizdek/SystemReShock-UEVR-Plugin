#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROJECTILE_HomingMissile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ExplosiveProjectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C
// 0x0040 (0x0388 - 0x0348)
class APROJECTILE_HomingMissile_C final : public AExplosiveProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PROJECTILE_HomingMissile_C;         // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   MissileMesh;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HomingTargetActor;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            HomingMagnitudeCurve;                              // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MovementStartTimestamp;                            // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrusterDuration;                                  // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLinearSpeed;                                    // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHomingRotationSpeed;                            // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TwistSpeed;                                        // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x037C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PROJECTILE_HomingMissile(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void InitializeHomingMissile(class AActor* TargetActor, const struct FVector& TargetLocation_0, float MaxSpreadRadius);
	void UpdateHomingMotion(float DeltaTime);
	void GetTargetLocation(struct FVector* Location);
	void OnHomingMissileCollision();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PROJECTILE_HomingMissile_C">();
	}
	static class APROJECTILE_HomingMissile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APROJECTILE_HomingMissile_C>();
	}
};
static_assert(alignof(APROJECTILE_HomingMissile_C) == 0x000008, "Wrong alignment on APROJECTILE_HomingMissile_C");
static_assert(sizeof(APROJECTILE_HomingMissile_C) == 0x000388, "Wrong size on APROJECTILE_HomingMissile_C");
static_assert(offsetof(APROJECTILE_HomingMissile_C, UberGraphFrame_PROJECTILE_HomingMissile_C) == 0x000348, "Member 'APROJECTILE_HomingMissile_C::UberGraphFrame_PROJECTILE_HomingMissile_C' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, MissileMesh) == 0x000350, "Member 'APROJECTILE_HomingMissile_C::MissileMesh' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, HomingTargetActor) == 0x000358, "Member 'APROJECTILE_HomingMissile_C::HomingTargetActor' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, HomingMagnitudeCurve) == 0x000360, "Member 'APROJECTILE_HomingMissile_C::HomingMagnitudeCurve' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, MovementStartTimestamp) == 0x000368, "Member 'APROJECTILE_HomingMissile_C::MovementStartTimestamp' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, ThrusterDuration) == 0x00036C, "Member 'APROJECTILE_HomingMissile_C::ThrusterDuration' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, MaxLinearSpeed) == 0x000370, "Member 'APROJECTILE_HomingMissile_C::MaxLinearSpeed' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, MaxHomingRotationSpeed) == 0x000374, "Member 'APROJECTILE_HomingMissile_C::MaxHomingRotationSpeed' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, TwistSpeed) == 0x000378, "Member 'APROJECTILE_HomingMissile_C::TwistSpeed' has a wrong offset!");
static_assert(offsetof(APROJECTILE_HomingMissile_C, TargetLocation) == 0x00037C, "Member 'APROJECTILE_HomingMissile_C::TargetLocation' has a wrong offset!");

}


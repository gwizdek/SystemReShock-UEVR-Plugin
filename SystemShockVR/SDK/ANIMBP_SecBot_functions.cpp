#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_SecBot

#include "Basic.hpp"

#include "ANIMBP_SecBot_classes.hpp"
#include "ANIMBP_SecBot_parameters.hpp"


namespace SDK
{

// Function ANIMBP_SecBot.ANIMBP_SecBot_C.ExecuteUbergraph_ANIMBP_SecBot
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::ExecuteUbergraph_ANIMBP_SecBot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "ExecuteUbergraph_ANIMBP_SecBot");

	Params::ANIMBP_SecBot_C_ExecuteUbergraph_ANIMBP_SecBot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "BlueprintUpdateAnimation");

	Params::ANIMBP_SecBot_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.UpdateAiming
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::UpdateAiming(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "UpdateAiming");

	Params::ANIMBP_SecBot_C_UpdateAiming Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        AnimGraph_0                                            (Parm, OutParm, NoDestructor)

void UANIMBP_SecBot_C::AnimGraph(struct FPoseLink* AnimGraph_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "AnimGraph");

	Params::ANIMBP_SecBot_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimGraph_0 != nullptr)
		*AnimGraph_0 = std::move(Parms.AnimGraph_0);
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetVoiceAmplitude
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   VoiceAmplitude                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetVoiceAmplitude(float VoiceAmplitude, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetVoiceAmplitude");

	Params::ANIMBP_SecBot_C_SetVoiceAmplitude Parms{};

	Parms.VoiceAmplitude = VoiceAmplitude;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.IsStunned
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::IsStunned(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "IsStunned");

	Params::ANIMBP_SecBot_C_IsStunned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetStunnedSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    StunnedSequence                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetStunnedSequence(class UAnimSequence* StunnedSequence, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetStunnedSequence");

	Params::ANIMBP_SecBot_C_SetStunnedSequence Parms{};

	Parms.StunnedSequence = StunnedSequence;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetSprintEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SprintEnabled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetSprintEnabled(bool SprintEnabled, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetSprintEnabled");

	Params::ANIMBP_SecBot_C_SetSprintEnabled Parms{};

	Parms.SprintEnabled = SprintEnabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetTravelMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TravelModeOn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetTravelMode(bool TravelModeOn, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetTravelMode");

	Params::ANIMBP_SecBot_C_SetTravelMode Parms{};

	Parms.TravelModeOn = TravelModeOn;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.GetAimTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::GetAimTarget(class UOBJ_EnemyTarget_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "GetAimTarget");

	Params::ANIMBP_SecBot_C_GetAimTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetAimTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetAimTarget(class UOBJ_EnemyTarget_C* Target, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetAimTarget");

	Params::ANIMBP_SecBot_C_SetAimTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.GetIdleOverrideSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                IdleOverride_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::GetIdleOverrideSequence(class UAnimSequenceBase** IdleOverride_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "GetIdleOverrideSequence");

	Params::ANIMBP_SecBot_C_GetIdleOverrideSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IdleOverride_0 != nullptr)
		*IdleOverride_0 = Parms.IdleOverride_0;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetIdleOverrideSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                IdleOverride_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetIdleOverrideSequence(class UAnimSequenceBase* IdleOverride_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetIdleOverrideSequence");

	Params::ANIMBP_SecBot_C_SetIdleOverrideSequence Parms{};

	Parms.IdleOverride_0 = IdleOverride_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetRelativeAimAngleOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   YawOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PitchOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetRelativeAimAngleOffset(float YawOffset, float PitchOffset, float Alpha, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetRelativeAimAngleOffset");

	Params::ANIMBP_SecBot_C_SetRelativeAimAngleOffset Parms{};

	Parms.YawOffset = YawOffset;
	Parms.PitchOffset = PitchOffset;
	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.GetRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         AnimRotationPerSecond                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   AnimRotationAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::GetRotation(struct FRotator* AnimRotationPerSecond, float* AnimRotationAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "GetRotation");

	Params::ANIMBP_SecBot_C_GetRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimRotationPerSecond != nullptr)
		*AnimRotationPerSecond = std::move(Parms.AnimRotationPerSecond);

	if (AnimRotationAlpha != nullptr)
		*AnimRotationAlpha = Parms.AnimRotationAlpha;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.GetStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_Emotions                           Stance                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UANIMBP_SecBot_C::GetStance(ENUM_Emotions* Stance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "GetStance");

	Params::ANIMBP_SecBot_C_GetStance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stance != nullptr)
		*Stance = Parms.Stance;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_Emotions                           Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetStance(ENUM_Emotions Stance, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetStance");

	Params::ANIMBP_SecBot_C_SetStance Parms{};

	Parms.Stance = Stance;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetCatatonic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetCatatonic(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetCatatonic");

	Params::ANIMBP_SecBot_C_SetCatatonic Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetStandingTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SignedAngleToTarget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStanding                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetStandingTurn(float SignedAngleToTarget, bool IsStanding, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetStandingTurn");

	Params::ANIMBP_SecBot_C_SetStandingTurn Parms{};

	Parms.SignedAngleToTarget = SignedAngleToTarget;
	Parms.IsStanding = IsStanding;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.ReceiveDeathBlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_DeathBlowType                      BodyPart                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::ReceiveDeathBlow(ENUM_DeathBlowType BodyPart, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "ReceiveDeathBlow");

	Params::ANIMBP_SecBot_C_ReceiveDeathBlow Parms{};

	Parms.BodyPart = BodyPart;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.ReceiveImpact
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FlinchTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::ReceiveImpact(const struct FVector& Impulse, const struct FVector& ImpactLocation, const struct FVector& ImpactNormal, class FName BoneName, const class FString& DamageType, float DamageAmount, float FlinchTime, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "ReceiveImpact");

	Params::ANIMBP_SecBot_C_ReceiveImpact Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.ImpactLocation = std::move(ImpactLocation);
	Parms.ImpactNormal = std::move(ImpactNormal);
	Parms.BoneName = BoneName;
	Parms.DamageType = std::move(DamageType);
	Parms.DamageAmount = DamageAmount;
	Parms.FlinchTime = FlinchTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetIsAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAlive_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetIsAlive(bool IsAlive_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetIsAlive");

	Params::ANIMBP_SecBot_C_SetIsAlive Parms{};

	Parms.IsAlive_0 = IsAlive_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetMovementParameters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         DesiredRotation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetMovementParameters(const struct FVector& Velocity, const struct FRotator& Rotation, const struct FRotator& DesiredRotation, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetMovementParameters");

	Params::ANIMBP_SecBot_C_SetMovementParameters Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.Rotation = std::move(Rotation);
	Parms.DesiredRotation = std::move(DesiredRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetLookAtAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetLookAtAlpha(float Alpha, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetLookAtAlpha");

	Params::ANIMBP_SecBot_C_SetLookAtAlpha Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ANIMBP_SecBot.ANIMBP_SecBot_C.SetLookAtLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UANIMBP_SecBot_C::SetLookAtLocation(const struct FVector& Location, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ANIMBP_SecBot_C", "SetLookAtLocation");

	Params::ANIMBP_SecBot_C_SetLookAtLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


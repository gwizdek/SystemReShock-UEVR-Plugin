#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_Headlook

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function COMP_Headlook.COMP_Headlook_C.ExecuteUbergraph_COMP_Headlook
// 0x0040 (0x0040 - 0x0000)
struct COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtAlpha_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook) == 0x000008, "Wrong alignment on COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook");
static_assert(sizeof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook) == 0x000040, "Wrong size on COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, EntryPoint) == 0x000000, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000010, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000030, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook, CallFunc_SetLookAtAlpha_Result) == 0x000039, "Member 'COMP_Headlook_C_ExecuteUbergraph_COMP_Headlook::CallFunc_SetLookAtAlpha_Result' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_Headlook_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Headlook_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_Headlook_C_ReceiveTick");
static_assert(sizeof(COMP_Headlook_C_ReceiveTick) == 0x000004, "Wrong size on COMP_Headlook_C_ReceiveTick");
static_assert(offsetof(COMP_Headlook_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_Headlook_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.SetHeadlookTarget
// 0x0030 (0x0030 - 0x0000)
struct COMP_Headlook_C_SetHeadlookTarget final
{
public:
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Owner;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Headlook_C_SetHeadlookTarget) == 0x000008, "Wrong alignment on COMP_Headlook_C_SetHeadlookTarget");
static_assert(sizeof(COMP_Headlook_C_SetHeadlookTarget) == 0x000030, "Wrong size on COMP_Headlook_C_SetHeadlookTarget");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, Target) == 0x000000, "Member 'COMP_Headlook_C_SetHeadlookTarget::Target' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, Owner) == 0x000008, "Member 'COMP_Headlook_C_SetHeadlookTarget::Owner' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_Headlook_C_SetHeadlookTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'COMP_Headlook_C_SetHeadlookTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000020, "Member 'COMP_Headlook_C_SetHeadlookTarget::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetHeadlookTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_Headlook_C_SetHeadlookTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.UpdateHeadlook
// 0x0120 (0x0120 - 0x0000)
struct COMP_Headlook_C_UpdateHeadlook final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMoveDirection_Current_Direction;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtAlpha_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character_1;      // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtLocation_Result;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEventLocation_EventLocation;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetGazeLocations_GazeLocations;           // 0x0098(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_ChooseGazeLocation_Location;              // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Headlook_C_UpdateHeadlook) == 0x000008, "Wrong alignment on COMP_Headlook_C_UpdateHeadlook");
static_assert(sizeof(COMP_Headlook_C_UpdateHeadlook) == 0x000120, "Wrong size on COMP_Headlook_C_UpdateHeadlook");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, TargetLocation) == 0x000000, "Member 'COMP_Headlook_C_UpdateHeadlook::TargetLocation' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetMoveDirection_Current_Direction) == 0x000018, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetMoveDirection_Current_Direction' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000028, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_SetLookAtAlpha_Result) == 0x000039, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_SetLookAtAlpha_Result' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000040, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_DynamicCast_AsINTERF_ANIM_Character_1) == 0x000048, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_DynamicCast_AsINTERF_ANIM_Character_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_SetLookAtLocation_Result) == 0x000059, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_SetLookAtLocation_Result' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006C, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetEventLocation_EventLocation) == 0x000078, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetEventLocation_EventLocation' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetDetectedPawn_Pawn) == 0x000088, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetGazeLocations_GazeLocations) == 0x000098, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetGazeLocations_GazeLocations' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_ChooseGazeLocation_Location) == 0x0000A8, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_ChooseGazeLocation_Location' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetSocketLocation_ReturnValue) == 0x0000B4, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, Temp_float_Variable) == 0x0000C0, "Member 'COMP_Headlook_C_UpdateHeadlook::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, Temp_float_Variable_1) == 0x0000D0, "Member 'COMP_Headlook_C_UpdateHeadlook::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0000D4, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Get_Target_Location_Location) == 0x0000E0, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000EC, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, Temp_bool_Variable) == 0x0000F8, "Member 'COMP_Headlook_C_UpdateHeadlook::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_Select_Default) == 0x0000FC, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'COMP_Headlook_C_UpdateHeadlook::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000104, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_Add_FloatFloat_ReturnValue) == 0x00010C, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000110, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_UpdateHeadlook, CallFunc_IsValid_ReturnValue_2) == 0x00011C, "Member 'COMP_Headlook_C_UpdateHeadlook::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.ChooseGazeLocation
// 0x0050 (0x0050 - 0x0000)
struct COMP_Headlook_C_ChooseGazeLocation final
{
public:
	TArray<struct FVector>                        GazeLocations;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Headlook_C_ChooseGazeLocation) == 0x000008, "Wrong alignment on COMP_Headlook_C_ChooseGazeLocation");
static_assert(sizeof(COMP_Headlook_C_ChooseGazeLocation) == 0x000050, "Wrong size on COMP_Headlook_C_ChooseGazeLocation");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, GazeLocations) == 0x000000, "Member 'COMP_Headlook_C_ChooseGazeLocation::GazeLocations' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, Location) == 0x000010, "Member 'COMP_Headlook_C_ChooseGazeLocation::Location' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000028, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00003C, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_ChooseGazeLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'COMP_Headlook_C_ChooseGazeLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.GetHeadlookTarget
// 0x0008 (0x0008 - 0x0000)
struct COMP_Headlook_C_GetHeadlookTarget final
{
public:
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Headlook_C_GetHeadlookTarget) == 0x000008, "Wrong alignment on COMP_Headlook_C_GetHeadlookTarget");
static_assert(sizeof(COMP_Headlook_C_GetHeadlookTarget) == 0x000008, "Wrong size on COMP_Headlook_C_GetHeadlookTarget");
static_assert(offsetof(COMP_Headlook_C_GetHeadlookTarget, Target) == 0x000000, "Member 'COMP_Headlook_C_GetHeadlookTarget::Target' has a wrong offset!");

// Function COMP_Headlook.COMP_Headlook_C.SetIsAlive
// 0x0002 (0x0002 - 0x0000)
struct COMP_Headlook_C_SetIsAlive final
{
public:
	bool                                          IsAlive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Headlook_C_SetIsAlive) == 0x000001, "Wrong alignment on COMP_Headlook_C_SetIsAlive");
static_assert(sizeof(COMP_Headlook_C_SetIsAlive) == 0x000002, "Wrong size on COMP_Headlook_C_SetIsAlive");
static_assert(offsetof(COMP_Headlook_C_SetIsAlive, IsAlive) == 0x000000, "Member 'COMP_Headlook_C_SetIsAlive::IsAlive' has a wrong offset!");
static_assert(offsetof(COMP_Headlook_C_SetIsAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'COMP_Headlook_C_SetIsAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


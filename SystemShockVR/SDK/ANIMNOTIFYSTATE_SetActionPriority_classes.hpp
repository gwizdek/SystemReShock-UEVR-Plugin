#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMNOTIFYSTATE_SetActionPriority

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ENUM_ActionPriority_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ANIMNOTIFYSTATE_SetActionPriority.ANIMNOTIFYSTATE_SetActionPriority_C
// 0x0008 (0x0038 - 0x0030)
class UANIMNOTIFYSTATE_SetActionPriority_C final : public UAnimNotifyState
{
public:
	ENUM_ActionPriority                           StartPriority;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           EndPriority;                                       // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetWeaponSideOnFinished;                         // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetActionPriority(class UMeshComponent* Mesh, ENUM_ActionPriority Priority) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMNOTIFYSTATE_SetActionPriority_C">();
	}
	static class UANIMNOTIFYSTATE_SetActionPriority_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMNOTIFYSTATE_SetActionPriority_C>();
	}
};
static_assert(alignof(UANIMNOTIFYSTATE_SetActionPriority_C) == 0x000008, "Wrong alignment on UANIMNOTIFYSTATE_SetActionPriority_C");
static_assert(sizeof(UANIMNOTIFYSTATE_SetActionPriority_C) == 0x000038, "Wrong size on UANIMNOTIFYSTATE_SetActionPriority_C");
static_assert(offsetof(UANIMNOTIFYSTATE_SetActionPriority_C, StartPriority) == 0x000030, "Member 'UANIMNOTIFYSTATE_SetActionPriority_C::StartPriority' has a wrong offset!");
static_assert(offsetof(UANIMNOTIFYSTATE_SetActionPriority_C, EndPriority) == 0x000031, "Member 'UANIMNOTIFYSTATE_SetActionPriority_C::EndPriority' has a wrong offset!");
static_assert(offsetof(UANIMNOTIFYSTATE_SetActionPriority_C, ResetWeaponSideOnFinished) == 0x000032, "Member 'UANIMNOTIFYSTATE_SetActionPriority_C::ResetWeaponSideOnFinished' has a wrong offset!");

}


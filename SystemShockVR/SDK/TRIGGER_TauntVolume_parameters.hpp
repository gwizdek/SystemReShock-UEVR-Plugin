#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_TauntVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_TriggerCondition_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.ExecuteUbergraph_TRIGGER_TauntVolume
// 0x00D8 (0x00D8 - 0x0000)
struct TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryTriggerFromOverlapEvent_Result;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TryTriggerFromOverlapEvent_Result_1;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume");
static_assert(sizeof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume) == 0x0000D8, "Wrong size on TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, EntryPoint) == 0x000000, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, CallFunc_TryTriggerFromOverlapEvent_Result) == 0x000024, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::CallFunc_TryTriggerFromOverlapEvent_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume, CallFunc_TryTriggerFromOverlapEvent_Result_1) == 0x0000D0, "Member 'TRIGGER_TauntVolume_C_ExecuteUbergraph_TRIGGER_TauntVolume::CallFunc_TryTriggerFromOverlapEvent_Result_1' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'TRIGGER_TauntVolume_C_BndEvt__TRIGGER_TauntVolume_OverlapBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.UserConstructionScript
// 0x0005 (0x0005 - 0x0000)
struct TRIGGER_TauntVolume_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_UserConstructionScript) == 0x000001, "Wrong alignment on TRIGGER_TauntVolume_C_UserConstructionScript");
static_assert(sizeof(TRIGGER_TauntVolume_C_UserConstructionScript) == 0x000005, "Wrong size on TRIGGER_TauntVolume_C_UserConstructionScript");
static_assert(offsetof(TRIGGER_TauntVolume_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'TRIGGER_TauntVolume_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'TRIGGER_TauntVolume_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'TRIGGER_TauntVolume_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_UserConstructionScript, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000003, "Member 'TRIGGER_TauntVolume_C_UserConstructionScript::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'TRIGGER_TauntVolume_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.TryInteract
// 0x00B0 (0x00B0 - 0x0000)
struct TRIGGER_TauntVolume_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedRequiredQuest_Result;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0080(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryResumeDelayedTaunt_Result;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenTriggered_Result;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_TryInteract) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_TryInteract");
static_assert(sizeof(TRIGGER_TauntVolume_C_TryInteract) == 0x0000B0, "Wrong size on TRIGGER_TauntVolume_C_TryInteract");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, SourceActor) == 0x000000, "Member 'TRIGGER_TauntVolume_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'TRIGGER_TauntVolume_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, InteractionType) == 0x000010, "Member 'TRIGGER_TauntVolume_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, InteractResults) == 0x000018, "Member 'TRIGGER_TauntVolume_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'TRIGGER_TauntVolume_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000058, "Member 'TRIGGER_TauntVolume_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_HasCompletedRequiredQuest_Result) == 0x000078, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_HasCompletedRequiredQuest_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000080, "Member 'TRIGGER_TauntVolume_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_TryResumeDelayedTaunt_Result) == 0x0000A0, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_TryResumeDelayedTaunt_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000A4, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A8, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_HasBeenTriggered_Result) == 0x0000A9, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_HasBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'TRIGGER_TauntVolume_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.HasBeenTriggered
// 0x0002 (0x0002 - 0x0000)
struct TRIGGER_TauntVolume_C_HasBeenTriggered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_HasBeenTriggered) == 0x000001, "Wrong alignment on TRIGGER_TauntVolume_C_HasBeenTriggered");
static_assert(sizeof(TRIGGER_TauntVolume_C_HasBeenTriggered) == 0x000002, "Wrong size on TRIGGER_TauntVolume_C_HasBeenTriggered");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasBeenTriggered, Result) == 0x000000, "Member 'TRIGGER_TauntVolume_C_HasBeenTriggered::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasBeenTriggered, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'TRIGGER_TauntVolume_C_HasBeenTriggered::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.InitializeTauntTrigger
// 0x0030 (0x0030 - 0x0000)
struct TRIGGER_TauntVolume_C_InitializeTauntTrigger final
{
public:
	bool                                          CallFunc_HasBeenTriggered_Result;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0008(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryResumeDelayedTaunt_Result;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_InitializeTauntTrigger) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_InitializeTauntTrigger");
static_assert(sizeof(TRIGGER_TauntVolume_C_InitializeTauntTrigger) == 0x000030, "Wrong size on TRIGGER_TauntVolume_C_InitializeTauntTrigger");
static_assert(offsetof(TRIGGER_TauntVolume_C_InitializeTauntTrigger, CallFunc_HasBeenTriggered_Result) == 0x000000, "Member 'TRIGGER_TauntVolume_C_InitializeTauntTrigger::CallFunc_HasBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_InitializeTauntTrigger, CallFunc_TryInteract_InteractResults) == 0x000008, "Member 'TRIGGER_TauntVolume_C_InitializeTauntTrigger::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_InitializeTauntTrigger, CallFunc_TryResumeDelayedTaunt_Result) == 0x000028, "Member 'TRIGGER_TauntVolume_C_InitializeTauntTrigger::CallFunc_TryResumeDelayedTaunt_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_InitializeTauntTrigger, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'TRIGGER_TauntVolume_C_InitializeTauntTrigger::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_InitializeTauntTrigger, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002A, "Member 'TRIGGER_TauntVolume_C_InitializeTauntTrigger::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.PlayTauntOnPublicAddressSystem
// 0x0018 (0x0018 - 0x0000)
struct TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayPublicAddressMessage_Result;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem");
static_assert(sizeof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem) == 0x000018, "Wrong size on TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem");
static_assert(offsetof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem, CallFunc_TryPlayPublicAddressMessage_Result) == 0x000011, "Member 'TRIGGER_TauntVolume_C_PlayTauntOnPublicAddressSystem::CallFunc_TryPlayPublicAddressMessage_Result' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.TryTriggerFromOverlapEvent
// 0x0058 (0x0058 - 0x0000)
struct TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeginOverlap;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_TriggerCondition                         Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TriggerCondition                         Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0030(0x0020)(HasGetValueTypeHash)
	ENUM_TriggerCondition                         K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent");
static_assert(sizeof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent) == 0x000058, "Wrong size on TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, Actor) == 0x000000, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::Actor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, BeginOverlap) == 0x000008, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::BeginOverlap' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, Result) == 0x000009, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, HackerPawn) == 0x000010, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::HackerPawn' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, Temp_bool_Variable) == 0x000018, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, Temp_byte_Variable) == 0x000029, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, Temp_byte_Variable_1) == 0x00002A, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, CallFunc_TryInteract_InteractResults) == 0x000030, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, K2Node_Select_Default) == 0x000050, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'TRIGGER_TauntVolume_C_TryTriggerFromOverlapEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.TryResumeDelayedTaunt
// 0x0038 (0x0038 - 0x0000)
struct TRIGGER_TauntVolume_C_TryResumeDelayedTaunt final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTimeSinceStart;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_TryResumeDelayedTaunt");
static_assert(sizeof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt) == 0x000038, "Wrong size on TRIGGER_TauntVolume_C_TryResumeDelayedTaunt");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, Result) == 0x000000, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, ElapsedTimeSinceStart) == 0x000004, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::ElapsedTimeSinceStart' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000028, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002A, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00002C, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_TryResumeDelayedTaunt, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'TRIGGER_TauntVolume_C_TryResumeDelayedTaunt::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.IsInteractActivated
// 0x0002 (0x0002 - 0x0000)
struct TRIGGER_TauntVolume_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenTriggered_Result;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_IsInteractActivated) == 0x000001, "Wrong alignment on TRIGGER_TauntVolume_C_IsInteractActivated");
static_assert(sizeof(TRIGGER_TauntVolume_C_IsInteractActivated) == 0x000002, "Wrong size on TRIGGER_TauntVolume_C_IsInteractActivated");
static_assert(offsetof(TRIGGER_TauntVolume_C_IsInteractActivated, Result) == 0x000000, "Member 'TRIGGER_TauntVolume_C_IsInteractActivated::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_IsInteractActivated, CallFunc_HasBeenTriggered_Result) == 0x000001, "Member 'TRIGGER_TauntVolume_C_IsInteractActivated::CallFunc_HasBeenTriggered_Result' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.GetInteractLocked
// 0x0030 (0x0030 - 0x0000)
struct TRIGGER_TauntVolume_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
	bool                                          CallFunc_HasBeenTriggered_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_GetInteractLocked) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_GetInteractLocked");
static_assert(sizeof(TRIGGER_TauntVolume_C_GetInteractLocked) == 0x000030, "Wrong size on TRIGGER_TauntVolume_C_GetInteractLocked");
static_assert(offsetof(TRIGGER_TauntVolume_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'TRIGGER_TauntVolume_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_GetInteractLocked, Result) == 0x000008, "Member 'TRIGGER_TauntVolume_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'TRIGGER_TauntVolume_C_GetInteractLocked::LockMessage' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_GetInteractLocked, CallFunc_HasBeenTriggered_Result) == 0x000028, "Member 'TRIGGER_TauntVolume_C_GetInteractLocked::CallFunc_HasBeenTriggered_Result' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.SetInteractLocked
// 0x0004 (0x0004 - 0x0000)
struct TRIGGER_TauntVolume_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenTriggered_Result;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_SetInteractLocked) == 0x000001, "Wrong alignment on TRIGGER_TauntVolume_C_SetInteractLocked");
static_assert(sizeof(TRIGGER_TauntVolume_C_SetInteractLocked) == 0x000004, "Wrong size on TRIGGER_TauntVolume_C_SetInteractLocked");
static_assert(offsetof(TRIGGER_TauntVolume_C_SetInteractLocked, Locked) == 0x000000, "Member 'TRIGGER_TauntVolume_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_SetInteractLocked, Result) == 0x000001, "Member 'TRIGGER_TauntVolume_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_SetInteractLocked, CallFunc_HasBeenTriggered_Result) == 0x000002, "Member 'TRIGGER_TauntVolume_C_SetInteractLocked::CallFunc_HasBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'TRIGGER_TauntVolume_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TRIGGER_TauntVolume.TRIGGER_TauntVolume_C.HasCompletedRequiredQuest
// 0x0020 (0x0020 - 0x0000)
struct TRIGGER_TauntVolume_C_HasCompletedRequiredQuest final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest) == 0x000008, "Wrong alignment on TRIGGER_TauntVolume_C_HasCompletedRequiredQuest");
static_assert(sizeof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest) == 0x000020, "Wrong size on TRIGGER_TauntVolume_C_HasCompletedRequiredQuest");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, Result) == 0x000000, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_TauntVolume_C_HasCompletedRequiredQuest, CallFunc_HasCompletedStoryQuest_Completed) == 0x000019, "Member 'TRIGGER_TauntVolume_C_HasCompletedRequiredQuest::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PICKUP_Explosive_Base

#include "Basic.hpp"

#include "STRUCT_WeaponMode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.ExecuteUbergraph_PICKUP_Explosive_Base
// 0x0048 (0x0048 - 0x0000)
struct PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  K2Node_ComponentBoundEvent_DamageInstance;         // 0x0018(0x0028)()
	class UObject*                                K2Node_ComponentBoundEvent_UserParams;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base) == 0x000008, "Wrong alignment on PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base");
static_assert(sizeof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base) == 0x000048, "Wrong size on PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, EntryPoint) == 0x000000, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, K2Node_ComponentBoundEvent_DamageInstance) == 0x000018, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::K2Node_ComponentBoundEvent_DamageInstance' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base, K2Node_ComponentBoundEvent_UserParams) == 0x000040, "Member 'PICKUP_Explosive_Base_C_ExecuteUbergraph_PICKUP_Explosive_Base::K2Node_ComponentBoundEvent_UserParams' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000008, "Wrong alignment on PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(sizeof(PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000038, "Wrong size on PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(offsetof(PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, DamageInstance) == 0x000008, "Member 'PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::DamageInstance' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, UserParams) == 0x000030, "Member 'PICKUP_Explosive_Base_C_BndEvt__PICKUP_Explosive_Base_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::UserParams' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.StartExplosiveDetonationTimer
// 0x0030 (0x0030 - 0x0000)
struct PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer final
{
public:
	float                                         DesiredDelayTime;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetonateDelayTime;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer) == 0x000008, "Wrong alignment on PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer");
static_assert(sizeof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer) == 0x000030, "Wrong size on PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, DesiredDelayTime) == 0x000000, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::DesiredDelayTime' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, DetonateDelayTime) == 0x000004, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::DetonateDelayTime' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00001C, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'PICKUP_Explosive_Base_C_StartExplosiveDetonationTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.StartDefaultExplosiveDetonationTimer
// 0x0004 (0x0004 - 0x0000)
struct PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer) == 0x000004, "Wrong alignment on PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer");
static_assert(sizeof(PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer) == 0x000004, "Wrong size on PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer");
static_assert(offsetof(PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'PICKUP_Explosive_Base_C_StartDefaultExplosiveDetonationTimer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.OnDetonateExplosivePickup
// 0x0190 (0x0190 - 0x0000)
struct PICKUP_Explosive_Base_C_OnDetonateExplosivePickup final
{
public:
	class AExplosiveProjectile_Base_C*            ExplosiveProjectile;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UITEM_ExplosiveBase_C>      ExplosiveItemClass;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Explosive_Base;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AExplosiveProjectile_Base_C*            CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup) == 0x000010, "Wrong alignment on PICKUP_Explosive_Base_C_OnDetonateExplosivePickup");
static_assert(sizeof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup) == 0x000190, "Wrong size on PICKUP_Explosive_Base_C_OnDetonateExplosivePickup");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, ExplosiveProjectile) == 0x000000, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::ExplosiveProjectile' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, ExplosiveItemClass) == 0x000008, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::ExplosiveItemClass' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000010, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000118, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetWeaponPropertyValueByType_Value) == 0x00011C, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x000120, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetItemClass_Result) == 0x000128, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetItemClass_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, K2Node_ClassDynamicCast_AsITEM_Explosive_Base) == 0x000130, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::K2Node_ClassDynamicCast_AsITEM_Explosive_Base' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, K2Node_ClassDynamicCast_bSuccess) == 0x000138, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetActorLevel_ReturnValue) == 0x000140, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_GetTransform_ReturnValue) == 0x000150, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_OnDetonateExplosivePickup, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000180, "Member 'PICKUP_Explosive_Base_C_OnDetonateExplosivePickup::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.ShouldGrantDefaultAttributes
// 0x0002 (0x0002 - 0x0000)
struct PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes) == 0x000001, "Wrong alignment on PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes");
static_assert(sizeof(PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes) == 0x000002, "Wrong size on PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes");
static_assert(offsetof(PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes, Result) == 0x000000, "Member 'PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes::Result' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PICKUP_Explosive_Base_C_ShouldGrantDefaultAttributes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PICKUP_Explosive_Base.PICKUP_Explosive_Base_C.CanPickupItem
// 0x0028 (0x0028 - 0x0000)
struct PICKUP_Explosive_Base_C_CanPickupItem final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FailMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PICKUP_Explosive_Base_C_CanPickupItem) == 0x000008, "Wrong alignment on PICKUP_Explosive_Base_C_CanPickupItem");
static_assert(sizeof(PICKUP_Explosive_Base_C_CanPickupItem) == 0x000028, "Wrong size on PICKUP_Explosive_Base_C_CanPickupItem");
static_assert(offsetof(PICKUP_Explosive_Base_C_CanPickupItem, Result) == 0x000000, "Member 'PICKUP_Explosive_Base_C_CanPickupItem::Result' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_CanPickupItem, FailMessage) == 0x000008, "Member 'PICKUP_Explosive_Base_C_CanPickupItem::FailMessage' has a wrong offset!");
static_assert(offsetof(PICKUP_Explosive_Base_C_CanPickupItem, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'PICKUP_Explosive_Base_C_CanPickupItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


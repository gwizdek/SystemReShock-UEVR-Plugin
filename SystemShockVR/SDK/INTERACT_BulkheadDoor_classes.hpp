#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_BulkheadDoor

#include "Basic.hpp"

#include "INTERACT_DoorBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_BulkheadDoor.INTERACT_BulkheadDoor_C
// 0x0060 (0x06B8 - 0x0658)
class AINTERACT_BulkheadDoor_C final : public AINTERACT_DoorBase_C
{
public:
	class UBoxComponent*                          DoorCollision_Right;                               // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorCollision_Left;                                // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    LightFour;                                         // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    LightThree;                                        // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    LightTwo;                                          // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    LightOne;                                          // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileCollision_Right;                               // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileCollision_Left;                                // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileCollision_Upper;                               // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileCollision_Lower;                               // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorCollision_Lower;                               // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorCollision_Upper;                               // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateDoorEmissiveStrength(float Scale, float* Strength);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_BulkheadDoor_C">();
	}
	static class AINTERACT_BulkheadDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_BulkheadDoor_C>();
	}
};
static_assert(alignof(AINTERACT_BulkheadDoor_C) == 0x000008, "Wrong alignment on AINTERACT_BulkheadDoor_C");
static_assert(sizeof(AINTERACT_BulkheadDoor_C) == 0x0006B8, "Wrong size on AINTERACT_BulkheadDoor_C");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, DoorCollision_Right) == 0x000658, "Member 'AINTERACT_BulkheadDoor_C::DoorCollision_Right' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, DoorCollision_Left) == 0x000660, "Member 'AINTERACT_BulkheadDoor_C::DoorCollision_Left' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, LightFour) == 0x000668, "Member 'AINTERACT_BulkheadDoor_C::LightFour' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, LightThree) == 0x000670, "Member 'AINTERACT_BulkheadDoor_C::LightThree' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, LightTwo) == 0x000678, "Member 'AINTERACT_BulkheadDoor_C::LightTwo' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, LightOne) == 0x000680, "Member 'AINTERACT_BulkheadDoor_C::LightOne' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, TileCollision_Right) == 0x000688, "Member 'AINTERACT_BulkheadDoor_C::TileCollision_Right' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, TileCollision_Left) == 0x000690, "Member 'AINTERACT_BulkheadDoor_C::TileCollision_Left' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, TileCollision_Upper) == 0x000698, "Member 'AINTERACT_BulkheadDoor_C::TileCollision_Upper' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, TileCollision_Lower) == 0x0006A0, "Member 'AINTERACT_BulkheadDoor_C::TileCollision_Lower' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, DoorCollision_Lower) == 0x0006A8, "Member 'AINTERACT_BulkheadDoor_C::DoorCollision_Lower' has a wrong offset!");
static_assert(offsetof(AINTERACT_BulkheadDoor_C, DoorCollision_Upper) == 0x0006B0, "Member 'AINTERACT_BulkheadDoor_C::DoorCollision_Upper' has a wrong offset!");

}


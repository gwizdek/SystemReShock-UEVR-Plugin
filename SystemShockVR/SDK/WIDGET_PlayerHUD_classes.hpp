#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_PlayerHUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_InteractResultType_structs.hpp"
#include "STRUCT_QueuedNotification_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_UpgradeResult_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_CursorMode_structs.hpp"
#include "ENUM_CardinalDirection_structs.hpp"
#include "ENUM_HotbarStyle_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_PlayerHUD.WIDGET_PlayerHUD_C
// 0x06A0 (0x0900 - 0x0260)
class UWIDGET_PlayerHUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CriticalTimeRemaining;                             // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FlashTimeRemaining;                                // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInUI;                                          // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutUI;                                         // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionBottomDashboard;                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionMFD;                                     // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_BL;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_BM;                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_BR;                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_LM;                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_RM;                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_TL;                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_TM;                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_DamageIndicator_TR;                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ConsumableHotbarCategory;                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Dashboard;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_DashboardBottom;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ExplosiveHotbarCategory;                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_HazardIcon;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_QuickslotsHotbarCategory;                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ScreenGrid;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_WeaponHotbarCategory;                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_ActiveHazard;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCameraPanelWidget*                     PANEL_Camera;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_CombinedHotbarCategory;                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_DamageIndicators;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_GameHUD;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_Hotbar;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_LeftHardware;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_MultiFunctionDisplay;                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_Notification;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_PartitionedHotbarCategories;                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_RightHardware;                               // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RETAINER_ScreenEffects;                            // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_ConsumableHotbarCategory;                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_CountdownTimer;                               // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_ExplosiveHotbarCategory;                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_HazardLevel;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_HazardType;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_Notification;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_QuickslotsHotbarCategory;                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_ScanDescription;                              // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_WeaponHotbarCategory;                         // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_AutoMap_C*                      WIDGET_AutoMap;                                    // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Biometer_C*                     WIDGET_Biometer;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_BioScanner_C*                   WIDGET_BioScanner;                                 // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_BootupScreen_C*                 WIDGET_BootupScreen;                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Compass_C*                      WIDGET_Compass;                                    // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_CrashScreen_C*                  WIDGET_CrashScreen;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_CrosshairCursor_C*              WIDGET_CrosshairCursor;                            // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_BioScan;                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_EnergyShield;                // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_EnviroPack;                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_NavUnit;                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_Sensaround;                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_TargetIdentifier;            // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_TurboBoots;                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareButton_C*               WIDGET_HardwareButton_VisionUnit;                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HardwareDetails_C*              WIDGET_HardwareDetails;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot0;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot1;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot2;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot3;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot4;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot5;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot6;                                // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot7;                                // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot8;                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   WIDGET_HotbarSlot9;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_InventoryContextMenu_C*         WIDGET_InventoryContextMenu;                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_InventoryDetails_C*             WIDGET_InventoryItemDetails;                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_LootPanel_C*                    WIDGET_LootPanel;                                  // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_InventoryPanel_C*               WIDGET_MainInventoryPanel;                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              WIDGET_MainMenu_InGame;                            // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MediaDisplay_C*                 WIDGET_MediaDisplay;                               // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MediaPanel_C*                   WIDGET_MediaPanel;                                 // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MediaPrompt_C*                  WIDGET_MediaPrompt;                                // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Minimap_C*                      WIDGET_Minimap;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MouseOverDetails_C*             WIDGET_MouseOverToolTip;                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MultiFunctionDisplayTabs_C*     WIDGET_MultiFunctionDisplayTabs;                   // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SimplifiedHotbar_C*             WIDGET_SimplifiedHotbar;                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SoftwarePanel_C*                WIDGET_SoftwarePanel;                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Status_C*                       WIDGET_Status;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Subtitles_C*                    WIDGET_Subtitles;                                  // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_TargetID_Display_C*             WIDGET_TargetID_Display;                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_TutorialMessage_C*              WIDGET_TutorialMessage;                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_UnreadMediaIcon_C*              WIDGET_UnreadMediaIcon;                            // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_VitalBars_C*                    WIDGET_VitalBars;                                  // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextTyper_C*                           ScannerTextTyper;                                  // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CurrentInteractable;                               // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScanDescriptionDelay;                              // 0x0538(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DescriptionMessage;                                // 0x0540(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DescriptionTimestamp;                              // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 Player;                                            // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthRatio;                                       // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyRatio;                                       // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StaminaRatio;                                      // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CurrentPrimitive;                                  // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractResultType                       FeedbackType;                                      // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FeedbackMessage;                                   // 0x0588(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FeedbackTimestamp;                                 // 0x05A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FeedbackDuration;                                  // 0x05A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UElectrocardiogram*                     Electrocardiogram;                                 // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinHeartRate;                                      // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHeartRate;                                      // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CardinalLetters;                                   // 0x05B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UInventoryBag_C*                        GeneralInventoryBag;                               // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   GeneralBagName;                                    // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        GrabBag;                                           // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   GrabBagName;                                       // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UInventoryBag_C*, struct FIntPoint> BagSlotsUnderCursor;                               // 0x05E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UInventoryBag_C*                        BestBagUnderCursor;                                // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              BestBagGridCoordsUnderCursor;                      // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BestBagSlotUnderCursor;                            // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              LastCursorItemGridCoords;                          // 0x064C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      LootInventory;                                     // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBatchedLevelVoxelization*              VoxelizedLevels;                                   // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        WidgetsUnderCursor;                                // 0x0668(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FIntPoint                              CursorItemGridOffset;                              // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpgradeResult                            UpgradeResult;                                     // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HardwareIconTransitionSign;                        // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HardwareIconMoveProgress;                          // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HardwareIconTransitionTime;                        // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HardwarePanelHorizontalOffset;                     // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowFatigueWarning;                               // 0x0694(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FatigueWarningMessage;                             // 0x0698(0x0018)(Edit, BlueprintVisible)
	class FText                                   SecurityLevelMessage;                              // 0x06B0(0x0018)(Edit, BlueprintVisible)
	class FText                                   StoryItemWarningMessage;                           // 0x06C8(0x0018)(Edit, BlueprintVisible)
	class FText                                   NotificationTextMessage;                           // 0x06E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         NotificationTextTyperInterval;                     // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NotificationDuration;                              // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NotificationTimestamp;                             // 0x0700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextTyper_C*                           NotificationTextTyper;                             // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInitializedActiveHazard;                        // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LevelOfBioPoisoningFormatText;                     // 0x0718(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UGridMeshWidget*, class UGridMeshWidget*> WindowTabMeshWidgetMap;                            // 0x0730(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UGridMeshWidget*                        SelectedTabMeshWidget;                             // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        CursorWindowTabMeshWidget;                         // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceHideCrosshairs;                               // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HideCrosshairs;                                    // 0x0791(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_792[0x2];                                      // 0x0792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 DefaultWindowsTabColor;                            // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 HighlightWindowsTabColor;                          // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 SelectedTabWidgetColor;                            // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TabBrightnessValues;                               // 0x07A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCOMP_Hotbar_C*>                 HotbarComponents;                                  // 0x07B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWIDGET_HotbarSlot_C*>           HotbarSlots;                                       // 0x07C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FText                                   UseText;                                           // 0x07D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   EquipText;                                         // 0x07E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UInventoryBag_C*                        CursorItemBag;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorItemSlot;                                    // 0x0808(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CursorItemWasRotated;                              // 0x080C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80D[0x3];                                      // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           HoverItem;                                         // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             HoverItemChanged;                                  // 0x0818(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ENUM_MFDTabCategory                           CurrentMFDTab;                                     // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayingHealOrRechargeSFX;                        // 0x0829(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A[0x2];                                      // 0x082A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealSFXStartTimestamp;                             // 0x082C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHealSoundParamValue;                        // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairTransitionTimestamp;                      // 0x0834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CrosshairTransitionDuration;                       // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CrosshairTransitionSourcePosition;                 // 0x083C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ScreenEffectMaterial;                              // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMFDVisible;                                     // 0x0850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldShowBrackets;                                // 0x0851(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWasMFDVisible;                                    // 0x0852(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMFDDisabled;                                     // 0x0853(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              CursorBracketSize;                                 // 0x0854(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CursorSlottableObject;                             // 0x0860(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UInventoryBagUI_C*                      HoverBagUIParams;                                  // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultMFDPanelSize;                               // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CurrentToolTipWidget;                              // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TIMER_MouseMove;                                   // 0x0888(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ToolTimeDelay;                                     // 0x0890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScannerTextTyperInterval;                          // 0x0894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastScreenGridMousePosition;                       // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameOpacity;                                      // 0x08A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4[0x4];                                      // 0x08A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_QueuedNotification>     QueuedNotifications;                               // 0x08A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                        HealthRegenAudioComponent;                         // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   HighTemperatureFormatText;                         // 0x08C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ControllerHudEnabled;                              // 0x08D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSimplifiedHotbarModalVisible;                    // 0x08D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA[0x6];                                      // 0x08DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CrashTimerHandle;                                  // 0x08E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PreviousMousePosition;                             // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTryingToVaporizeInventory;                       // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x3];                                      // 0x08F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VaporizeInventoryHeldTime;                         // 0x08F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   HotbarSlotUnderCursor;                             // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void HoverItemChanged__DelegateSignature(class UITEM_Base_C* NewItem);
	void ExecuteUbergraph_WIDGET_PlayerHUD(int32 EntryPoint);
	void Destruct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void EVENT_OnScanDataChanged(class UObject* Interactable, class UPrimitiveComponent* Primitive, const class FText& Description);
	void CanDisplayDescription(bool* Result);
	void EVENT_OnHealthChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type);
	void EVENT_OnEnergyChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type);
	void EVENT_OnStaminaChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type);
	void EVENT_OnFeedbackDataChanged(ENUM_InteractResultType Type, const class FText& Message);
	void UpdateCursorState();
	void UpdateScannerMessage();
	void GetAdjacentMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab, bool Previous, ENUM_MFDTabCategory* AdjacentTab);
	void ShowMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab, bool Visible);
	void HideActiveTab();
	void UpdateInputMode(bool IsMenu_Active, bool EnableCursorTransition);
	void InitializeInventoryHUD();
	void GetBagUIParamsFromBag(class UInventoryBag_C* InventoryBag, class UInventoryBagUI_C** BagUI);
	void TakeAllLoot();
	void ShowLootWindow(class UCOMP_Inventory_C* InLootInventory);
	void HideLootWindow(bool ShouldCloseMFD);
	void UpdateLootPanelPosition();
	struct FEventReply PickupItemAtCurrentGridLocation(class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, const struct FVector2D& MouseScreenPosition);
	struct FEventReply OnCameraPanelMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, bool DoubleClick);
	void UpdateTargetBracketsOrDeactivate(const struct FVector2D& CursorScreenPosition);
	struct FEventReply PickupItemAtSlotIndex(class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, int32 SlotIndex, const struct FVector2D& MouseScreenPosition);
	void UpdateCursorItem();
	void TryRotateCursorItem();
	void GetCursorGridCoordinatesForBag(class UInventoryBag_C* Bag, struct FIntPoint* ResultCoords);
	void ShowCrosshairs(bool Visible);
	void IsInventoryVisible(bool* Result);
	void TryPlayPickupAnimFromMFD(class UITEM_Base_C* Item, class UInventoryBag_C* PreferredBag, int32 PreferredSlotIndex, bool* Result);
	void TryPickupItemFromGround(class UITEM_Base_C* Item, bool* Result);
	void TryCompleteItemPickupQuest(class UClass* PickupClass);
	void AutoEquipItem(class UITEM_Base_C* Item);
	void GenerateEquipMessageForItem(class UITEM_Base_C* Item, class FText* Text);
	void BindUpgradeEvent();
	void UnbindUpgradeEvent();
	void EVENT_OnPlayerBagChanged(class UInventoryBag_C* Bag, int32 SlotIndex);
	void EVENT_OnItemUpgraded(class UClass* UpgradeClass, class UClass* DowngradeClass, ENUM_UpgradeResult UpgradeResult_0);
	void ShowHardwareIcons();
	void HideHardwareIcons();
	void UpdateHardwareIcons(float DeltaTime);
	void UpdateHUD(float DeltaTime);
	void UpdateNotification();
	void UpdateScanner();
	void QueueNotification(const class FText& Message, bool IsWarning);
	void IssueSecurityNotification(int32 SecurityLevel);
	void SetForceHideCrosshairs(bool HideState);
	void OnCrosshairVisibilityChanged();
	void IsCursorOverMeshWidget(class UGridMeshWidget* MeshWidget, const struct FVector2D& MouseWindowPosition, bool* Result);
	void GetBestBagUnderCursor(const struct FVector2D& MouseScreenPosition, class UInventoryBag_C** ResultBag);
	void GetCursorSeparationFromBag(class UInventoryBag_C* Bag, const struct FVector2D& MouseScreenPosition, float* ResultDistance);
	void GetCursorSeparationFromMeshWidget(class UGridMeshWidget* MeshWidget, const struct FVector2D& MouseScreenPosition, float* ResultDistance);
	void SelectWindowTab(ENUM_MFDTabCategory NewTabCategory, bool ForceHideOtherTabs);
	void InitializeHotbar(bool OnBeginPlay);
	void EVENT_OnAddedToHotbar(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex);
	void EVENT_OnRemovedFromHotbar(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex);
	void Create_Slottable_Mesh_Widget(class UGridMeshWidget* ContainerMeshWidget, class UTexture* IconTexture, class UITEM_Base_C* Item, class UWIDGET_SlottedItem_C** MeshWidget);
	void CreateSlottableMeshWidgetAtCoords(class UGridMeshWidget* ContainerMeshWidget, const struct FIntPoint& GridCoords, class UTexture2D* IconTexture, class UITEM_Base_C* Item, class UWIDGET_SlottedItem_C** MeshWidget);
	void InitializeHotbarEvents();
	void ResetHotbarQuickslots();
	void ToggleMultiFunctionDisplay(bool* MainDisplayVisible);
	void InitializeHotbarCategories();
	void ItemSelectionRegionMouseMove(const struct FVector2D& CursorScreenPosition, bool ForceUpdate);
	void InitializeHotbarSlots();
	void GetVerticalBoxGridMeshUnderCursor(class UVerticalBox* VerticalBox, const struct FVector2D& MouseScreenPosition, class UGridMeshWidget** GridMeshWidget, class UWidget** ChildWidget, int32* ResultChildIndex);
	void EVENT_OnHotbarQuickSlotChanged(class UCOMP_Hotbar_C* HotbarComponent, int32 NewSlotIndex, int32 OldSlotIndex);
	struct FEventReply EVENT_OnCameraPanelDoubleClick(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnCameraPanelMouseDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent);
	void TryToggleContextMenu(class UWIDGET_InventoryPanel_C* InventoryPanel, const struct FVector2D& MouseScreenPosition);
	void UpdateMouseHoverItem(class UITEM_Base_C* Item, class UInventoryBagUI_C* BagUI, bool* Result);
	void IsMediaDisplayVisible(bool* Result);
	void UpdateHoverItemOutline(bool EnableHighlight);
	void UndoCursorItemMove(bool UpdateItemSelection, const struct FVector2D& MouseScreenPosition, bool* Result);
	void HideContextMenu();
	void HandleItemWorldInteraction(class UITEM_Base_C* Item, bool* Success);
	void HandleVaporizeInventoryInput(bool State);
	void DropAndPushItemFromCursorPosition(class UITEM_Base_C* ItemToDrop, const struct FVector2D& ScreenPosition, bool* Result);
	void DropAndPushItemFromCameraRelativePosition(class UITEM_Base_C* ItemToDrop, const struct FVector2D& RelativePosition, bool* Result);
	void DropAndPushCursorItem(const struct FVector2D& ScreenPosition);
	void IsCursorOverInventoryBag(class UInventoryBag_C* Bag, bool* Result);
	struct FEventReply EVENT_OnCameraPanelMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, bool EventHandledByChild);
	void InitializeAttributes();
	void UpdateHealSFX(bool State, float AttribRatio);
	void UpdateHealthSoundParameters(float AttribRatio);
	void EVENT_OnHealthModApplied(class UAttribMod* AppliedMod);
	void EVENT_OnEnergyModApplied(class UAttribMod* AppliedMod);
	void TryStopHealSFX();
	void UpdateMouseCursor();
	void UpdateCursorTransition();
	void InitializeScreenEffects();
	void ToggleMainMenu();
	void InitializeMultiFunctionDisplay();
	void SetMouseCursorVisibility(bool Visible);
	void ShowTargetBrackets(bool Visible);
	void ShowMultiFunctionDisplay(bool Visible, bool* MainDisplayVisible);
	void DisableMultiFunctionDisplay(bool Disable);
	void UpdateCursorGridCoordinatesForBag(const struct FVector2D& MouseWindowPosition, class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, bool* Result);
	void MoveCursorToItemAtSlotIndex(class UWIDGET_InventoryPanel_C* InventoryPanel, int32 SlotIndex);
	void MoveCursorToInventoryGridLocationAtSlotIndex(class UWIDGET_InventoryPanel_C* InventoryPanel, int32 SlotIndex);
	void MoveCursorOverFirstInventoryItem();
	void OnInventoryBecameVisible();
	void DestroyLootBagUI();
	void GetHotbarSlotWidgetForObject(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, class UWIDGET_HotbarSlot_C** Result);
	void GetCursorItem(class UITEM_Base_C** Result);
	void DropHotbarSlottableObject();
	void UpdateHotbarSlottableCursor();
	void SetHardwareHoverDetails(class UWIDGET_HardwareButton_C* HardwareButton);
	void UpdateMultiFunctionDisplaySize();
	void UpdateHotbarDisplayStyle();
	void GetDeprojectedScreenPoint(const struct FVector2D& ScreenPosition, bool UseViewportSpace, struct FVector2D* DeprojectedScreenPosition);
	void SetToolTipWidget(class UUserWidget* MouseOverWidget, bool MouseOver);
	void EVENT_ShowToolTip();
	void UpdateHotbarVisibility();
	void RequestToolTipUpdate(class UUserWidget* ToolTipWidget_0);
	void UpdateMouseOverTooltipPosition();
	void ToggleMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab);
	void SetPrimaryFrameOpacity(float NewOpacity);
	void GetPrimaryFrameOpacity(float* Opacity);
	void UpdateHotbarSlotFrameOpacity();
	void SetCurrentNotification(const class FText& Message, bool IsWarning);
	void SetHUDScale(float Scale);
	void GetHUDScale(float* Scale);
	void GetSlotNumberFromIndex(int32 SlotIndex, int32* Number);
	void GetSlotIndexFromNumber(int32 SlotNumber, int32* Index_0);
	void CycleMultiFunctionDisplayTab(bool Previous);
	void UpdateHazardLevel(class UAttribMod* HazardMod, int32 HazardLevel, bool IsBioPoisoning);
	void EVENT_OnCrashStart();
	void EVENT_OnBootupFinished();
	void EVENT_BeginCrashSequence();
	void EVENT_OnCrashSequenceFinished();
	void EVENT_OnUsingGamepadChanged(bool IsUsingGamepad);
	void UpdateCountdownTimeRemaining();
	void DisplayCountdownTimerShort();
	void EVENT_OnPeriodicGameCountdownUpdate();
	void MoveCursorToHotbarSlotIndex(int32 NewSlotIndex);
	void SetGameLockedForMenus(bool LockGame, bool* Result);
	void OnCharacterDied(const struct FAttribDamageInstance& DamageInstance, bool* Result);
	void OnCharacterRespawned(bool* Result);
	void GetTutorialWidget(class UWIDGET_TutorialMessage_C** Result);
	void GetMainMenuWidget(class UWIDGET_MainMenu_InGame_C** Result);
	void GetCameraPanelWidget(class UCameraPanelWidget** Result);
	void InvokeNavManager(bool InputState, ENUM_MenuNavigationInput InputType, bool* Result);
	void GetSubtitleWidget(class UWIDGET_Subtitles_C** Result);
	void OnStartedLoadingGame(bool* Result);
	void GetMFDState(bool* IsMFDOpen, ENUM_MFDTabCategory* CurrentMFDTab_0);
	void OnPersistentMapMove(bool* Result);
	void OnFinishedLoadingGame(bool* Result);
	void SetHoldInteractionProgress(float Progress, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_PlayerHUD_C">();
	}
	static class UWIDGET_PlayerHUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_PlayerHUD_C>();
	}
};
static_assert(alignof(UWIDGET_PlayerHUD_C) == 0x000008, "Wrong alignment on UWIDGET_PlayerHUD_C");
static_assert(sizeof(UWIDGET_PlayerHUD_C) == 0x000900, "Wrong size on UWIDGET_PlayerHUD_C");
static_assert(offsetof(UWIDGET_PlayerHUD_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_PlayerHUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CriticalTimeRemaining) == 0x000268, "Member 'UWIDGET_PlayerHUD_C::CriticalTimeRemaining' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FlashTimeRemaining) == 0x000270, "Member 'UWIDGET_PlayerHUD_C::FlashTimeRemaining' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FadeInUI) == 0x000278, "Member 'UWIDGET_PlayerHUD_C::FadeInUI' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FadeOutUI) == 0x000280, "Member 'UWIDGET_PlayerHUD_C::FadeOutUI' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TransitionBottomDashboard) == 0x000288, "Member 'UWIDGET_PlayerHUD_C::TransitionBottomDashboard' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TransitionMFD) == 0x000290, "Member 'UWIDGET_PlayerHUD_C::TransitionMFD' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_BL) == 0x000298, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_BL' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_BM) == 0x0002A0, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_BM' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_BR) == 0x0002A8, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_BR' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_LM) == 0x0002B0, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_LM' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_RM) == 0x0002B8, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_RM' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_TL) == 0x0002C0, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_TL' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_TM) == 0x0002C8, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_TM' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IMAGE_DamageIndicator_TR) == 0x0002D0, "Member 'UWIDGET_PlayerHUD_C::IMAGE_DamageIndicator_TR' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_ConsumableHotbarCategory) == 0x0002D8, "Member 'UWIDGET_PlayerHUD_C::MESH_ConsumableHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_Dashboard) == 0x0002E0, "Member 'UWIDGET_PlayerHUD_C::MESH_Dashboard' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_DashboardBottom) == 0x0002E8, "Member 'UWIDGET_PlayerHUD_C::MESH_DashboardBottom' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_ExplosiveHotbarCategory) == 0x0002F0, "Member 'UWIDGET_PlayerHUD_C::MESH_ExplosiveHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_HazardIcon) == 0x0002F8, "Member 'UWIDGET_PlayerHUD_C::MESH_HazardIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_QuickslotsHotbarCategory) == 0x000300, "Member 'UWIDGET_PlayerHUD_C::MESH_QuickslotsHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_ScreenGrid) == 0x000308, "Member 'UWIDGET_PlayerHUD_C::MESH_ScreenGrid' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MESH_WeaponHotbarCategory) == 0x000310, "Member 'UWIDGET_PlayerHUD_C::MESH_WeaponHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_ActiveHazard) == 0x000318, "Member 'UWIDGET_PlayerHUD_C::PANEL_ActiveHazard' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_Camera) == 0x000320, "Member 'UWIDGET_PlayerHUD_C::PANEL_Camera' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_CombinedHotbarCategory) == 0x000328, "Member 'UWIDGET_PlayerHUD_C::PANEL_CombinedHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_DamageIndicators) == 0x000330, "Member 'UWIDGET_PlayerHUD_C::PANEL_DamageIndicators' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_GameHUD) == 0x000338, "Member 'UWIDGET_PlayerHUD_C::PANEL_GameHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_Hotbar) == 0x000340, "Member 'UWIDGET_PlayerHUD_C::PANEL_Hotbar' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_LeftHardware) == 0x000348, "Member 'UWIDGET_PlayerHUD_C::PANEL_LeftHardware' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, Panel_MultiFunctionDisplay) == 0x000350, "Member 'UWIDGET_PlayerHUD_C::Panel_MultiFunctionDisplay' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_Notification) == 0x000358, "Member 'UWIDGET_PlayerHUD_C::PANEL_Notification' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_PartitionedHotbarCategories) == 0x000360, "Member 'UWIDGET_PlayerHUD_C::PANEL_PartitionedHotbarCategories' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PANEL_RightHardware) == 0x000368, "Member 'UWIDGET_PlayerHUD_C::PANEL_RightHardware' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, RETAINER_ScreenEffects) == 0x000370, "Member 'UWIDGET_PlayerHUD_C::RETAINER_ScreenEffects' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_ConsumableHotbarCategory) == 0x000378, "Member 'UWIDGET_PlayerHUD_C::TEXT_ConsumableHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_CountdownTimer) == 0x000380, "Member 'UWIDGET_PlayerHUD_C::TEXT_CountdownTimer' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_ExplosiveHotbarCategory) == 0x000388, "Member 'UWIDGET_PlayerHUD_C::TEXT_ExplosiveHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_HazardLevel) == 0x000390, "Member 'UWIDGET_PlayerHUD_C::TEXT_HazardLevel' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_HazardType) == 0x000398, "Member 'UWIDGET_PlayerHUD_C::TEXT_HazardType' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_Notification) == 0x0003A0, "Member 'UWIDGET_PlayerHUD_C::TEXT_Notification' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_QuickslotsHotbarCategory) == 0x0003A8, "Member 'UWIDGET_PlayerHUD_C::TEXT_QuickslotsHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_ScanDescription) == 0x0003B0, "Member 'UWIDGET_PlayerHUD_C::TEXT_ScanDescription' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TEXT_WeaponHotbarCategory) == 0x0003B8, "Member 'UWIDGET_PlayerHUD_C::TEXT_WeaponHotbarCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_AutoMap) == 0x0003C0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_AutoMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_Biometer) == 0x0003C8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_Biometer' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_BioScanner) == 0x0003D0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_BioScanner' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_BootupScreen) == 0x0003D8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_BootupScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_Compass) == 0x0003E0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_Compass' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_CrashScreen) == 0x0003E8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_CrashScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_CrosshairCursor) == 0x0003F0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_CrosshairCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_BioScan) == 0x0003F8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_BioScan' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_EnergyShield) == 0x000400, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_EnergyShield' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_EnviroPack) == 0x000408, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_EnviroPack' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_NavUnit) == 0x000410, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_NavUnit' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_Sensaround) == 0x000418, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_Sensaround' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_TargetIdentifier) == 0x000420, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_TargetIdentifier' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_TurboBoots) == 0x000428, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_TurboBoots' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareButton_VisionUnit) == 0x000430, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareButton_VisionUnit' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HardwareDetails) == 0x000438, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HardwareDetails' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot0) == 0x000440, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot0' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot1) == 0x000448, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot1' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot2) == 0x000450, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot2' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot3) == 0x000458, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot3' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot4) == 0x000460, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot4' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot5) == 0x000468, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot5' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot6) == 0x000470, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot6' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot7) == 0x000478, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot7' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot8) == 0x000480, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot8' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_HotbarSlot9) == 0x000488, "Member 'UWIDGET_PlayerHUD_C::WIDGET_HotbarSlot9' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_InventoryContextMenu) == 0x000490, "Member 'UWIDGET_PlayerHUD_C::WIDGET_InventoryContextMenu' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_InventoryItemDetails) == 0x000498, "Member 'UWIDGET_PlayerHUD_C::WIDGET_InventoryItemDetails' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_LootPanel) == 0x0004A0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_LootPanel' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MainInventoryPanel) == 0x0004A8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MainInventoryPanel' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MainMenu_InGame) == 0x0004B0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MainMenu_InGame' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MediaDisplay) == 0x0004B8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MediaDisplay' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MediaPanel) == 0x0004C0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MediaPanel' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MediaPrompt) == 0x0004C8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MediaPrompt' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_Minimap) == 0x0004D0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_Minimap' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MouseOverToolTip) == 0x0004D8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MouseOverToolTip' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_MultiFunctionDisplayTabs) == 0x0004E0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_MultiFunctionDisplayTabs' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_SimplifiedHotbar) == 0x0004E8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_SimplifiedHotbar' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_SoftwarePanel) == 0x0004F0, "Member 'UWIDGET_PlayerHUD_C::WIDGET_SoftwarePanel' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_Status) == 0x0004F8, "Member 'UWIDGET_PlayerHUD_C::WIDGET_Status' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_Subtitles) == 0x000500, "Member 'UWIDGET_PlayerHUD_C::WIDGET_Subtitles' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_TargetID_Display) == 0x000508, "Member 'UWIDGET_PlayerHUD_C::WIDGET_TargetID_Display' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_TutorialMessage) == 0x000510, "Member 'UWIDGET_PlayerHUD_C::WIDGET_TutorialMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_UnreadMediaIcon) == 0x000518, "Member 'UWIDGET_PlayerHUD_C::WIDGET_UnreadMediaIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WIDGET_VitalBars) == 0x000520, "Member 'UWIDGET_PlayerHUD_C::WIDGET_VitalBars' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ScannerTextTyper) == 0x000528, "Member 'UWIDGET_PlayerHUD_C::ScannerTextTyper' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CurrentInteractable) == 0x000530, "Member 'UWIDGET_PlayerHUD_C::CurrentInteractable' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ScanDescriptionDelay) == 0x000538, "Member 'UWIDGET_PlayerHUD_C::ScanDescriptionDelay' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, DescriptionMessage) == 0x000540, "Member 'UWIDGET_PlayerHUD_C::DescriptionMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, DescriptionTimestamp) == 0x000558, "Member 'UWIDGET_PlayerHUD_C::DescriptionTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, Player) == 0x000560, "Member 'UWIDGET_PlayerHUD_C::Player' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HealthRatio) == 0x000568, "Member 'UWIDGET_PlayerHUD_C::HealthRatio' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, EnergyRatio) == 0x00056C, "Member 'UWIDGET_PlayerHUD_C::EnergyRatio' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, StaminaRatio) == 0x000570, "Member 'UWIDGET_PlayerHUD_C::StaminaRatio' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CurrentPrimitive) == 0x000578, "Member 'UWIDGET_PlayerHUD_C::CurrentPrimitive' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FeedbackType) == 0x000580, "Member 'UWIDGET_PlayerHUD_C::FeedbackType' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FeedbackMessage) == 0x000588, "Member 'UWIDGET_PlayerHUD_C::FeedbackMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FeedbackTimestamp) == 0x0005A0, "Member 'UWIDGET_PlayerHUD_C::FeedbackTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FeedbackDuration) == 0x0005A4, "Member 'UWIDGET_PlayerHUD_C::FeedbackDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, Electrocardiogram) == 0x0005A8, "Member 'UWIDGET_PlayerHUD_C::Electrocardiogram' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MinHeartRate) == 0x0005B0, "Member 'UWIDGET_PlayerHUD_C::MinHeartRate' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, MaxHeartRate) == 0x0005B4, "Member 'UWIDGET_PlayerHUD_C::MaxHeartRate' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CardinalLetters) == 0x0005B8, "Member 'UWIDGET_PlayerHUD_C::CardinalLetters' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, GeneralInventoryBag) == 0x0005C8, "Member 'UWIDGET_PlayerHUD_C::GeneralInventoryBag' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, GeneralBagName) == 0x0005D0, "Member 'UWIDGET_PlayerHUD_C::GeneralBagName' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, GrabBag) == 0x0005D8, "Member 'UWIDGET_PlayerHUD_C::GrabBag' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, GrabBagName) == 0x0005E0, "Member 'UWIDGET_PlayerHUD_C::GrabBagName' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, BagSlotsUnderCursor) == 0x0005E8, "Member 'UWIDGET_PlayerHUD_C::BagSlotsUnderCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, BestBagUnderCursor) == 0x000638, "Member 'UWIDGET_PlayerHUD_C::BestBagUnderCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, BestBagGridCoordsUnderCursor) == 0x000640, "Member 'UWIDGET_PlayerHUD_C::BestBagGridCoordsUnderCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, BestBagSlotUnderCursor) == 0x000648, "Member 'UWIDGET_PlayerHUD_C::BestBagSlotUnderCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, LastCursorItemGridCoords) == 0x00064C, "Member 'UWIDGET_PlayerHUD_C::LastCursorItemGridCoords' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, LootInventory) == 0x000658, "Member 'UWIDGET_PlayerHUD_C::LootInventory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, VoxelizedLevels) == 0x000660, "Member 'UWIDGET_PlayerHUD_C::VoxelizedLevels' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WidgetsUnderCursor) == 0x000668, "Member 'UWIDGET_PlayerHUD_C::WidgetsUnderCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorItemGridOffset) == 0x000678, "Member 'UWIDGET_PlayerHUD_C::CursorItemGridOffset' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, UpgradeResult) == 0x000680, "Member 'UWIDGET_PlayerHUD_C::UpgradeResult' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HardwareIconTransitionSign) == 0x000684, "Member 'UWIDGET_PlayerHUD_C::HardwareIconTransitionSign' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HardwareIconMoveProgress) == 0x000688, "Member 'UWIDGET_PlayerHUD_C::HardwareIconMoveProgress' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HardwareIconTransitionTime) == 0x00068C, "Member 'UWIDGET_PlayerHUD_C::HardwareIconTransitionTime' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HardwarePanelHorizontalOffset) == 0x000690, "Member 'UWIDGET_PlayerHUD_C::HardwarePanelHorizontalOffset' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, AllowFatigueWarning) == 0x000694, "Member 'UWIDGET_PlayerHUD_C::AllowFatigueWarning' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FatigueWarningMessage) == 0x000698, "Member 'UWIDGET_PlayerHUD_C::FatigueWarningMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, SecurityLevelMessage) == 0x0006B0, "Member 'UWIDGET_PlayerHUD_C::SecurityLevelMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, StoryItemWarningMessage) == 0x0006C8, "Member 'UWIDGET_PlayerHUD_C::StoryItemWarningMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, NotificationTextMessage) == 0x0006E0, "Member 'UWIDGET_PlayerHUD_C::NotificationTextMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, NotificationTextTyperInterval) == 0x0006F8, "Member 'UWIDGET_PlayerHUD_C::NotificationTextTyperInterval' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, NotificationDuration) == 0x0006FC, "Member 'UWIDGET_PlayerHUD_C::NotificationDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, NotificationTimestamp) == 0x000700, "Member 'UWIDGET_PlayerHUD_C::NotificationTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, NotificationTextTyper) == 0x000708, "Member 'UWIDGET_PlayerHUD_C::NotificationTextTyper' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HasInitializedActiveHazard) == 0x000710, "Member 'UWIDGET_PlayerHUD_C::HasInitializedActiveHazard' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, LevelOfBioPoisoningFormatText) == 0x000718, "Member 'UWIDGET_PlayerHUD_C::LevelOfBioPoisoningFormatText' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, WindowTabMeshWidgetMap) == 0x000730, "Member 'UWIDGET_PlayerHUD_C::WindowTabMeshWidgetMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, SelectedTabMeshWidget) == 0x000780, "Member 'UWIDGET_PlayerHUD_C::SelectedTabMeshWidget' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorWindowTabMeshWidget) == 0x000788, "Member 'UWIDGET_PlayerHUD_C::CursorWindowTabMeshWidget' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ForceHideCrosshairs) == 0x000790, "Member 'UWIDGET_PlayerHUD_C::ForceHideCrosshairs' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HideCrosshairs) == 0x000791, "Member 'UWIDGET_PlayerHUD_C::HideCrosshairs' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, DefaultWindowsTabColor) == 0x000794, "Member 'UWIDGET_PlayerHUD_C::DefaultWindowsTabColor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HighlightWindowsTabColor) == 0x000798, "Member 'UWIDGET_PlayerHUD_C::HighlightWindowsTabColor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, SelectedTabWidgetColor) == 0x00079C, "Member 'UWIDGET_PlayerHUD_C::SelectedTabWidgetColor' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TabBrightnessValues) == 0x0007A0, "Member 'UWIDGET_PlayerHUD_C::TabBrightnessValues' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HotbarComponents) == 0x0007B0, "Member 'UWIDGET_PlayerHUD_C::HotbarComponents' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HotbarSlots) == 0x0007C0, "Member 'UWIDGET_PlayerHUD_C::HotbarSlots' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, UseText) == 0x0007D0, "Member 'UWIDGET_PlayerHUD_C::UseText' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, EquipText) == 0x0007E8, "Member 'UWIDGET_PlayerHUD_C::EquipText' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorItemBag) == 0x000800, "Member 'UWIDGET_PlayerHUD_C::CursorItemBag' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorItemSlot) == 0x000808, "Member 'UWIDGET_PlayerHUD_C::CursorItemSlot' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorItemWasRotated) == 0x00080C, "Member 'UWIDGET_PlayerHUD_C::CursorItemWasRotated' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HoverItem) == 0x000810, "Member 'UWIDGET_PlayerHUD_C::HoverItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HoverItemChanged) == 0x000818, "Member 'UWIDGET_PlayerHUD_C::HoverItemChanged' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CurrentMFDTab) == 0x000828, "Member 'UWIDGET_PlayerHUD_C::CurrentMFDTab' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IsPlayingHealOrRechargeSFX) == 0x000829, "Member 'UWIDGET_PlayerHUD_C::IsPlayingHealOrRechargeSFX' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HealSFXStartTimestamp) == 0x00082C, "Member 'UWIDGET_PlayerHUD_C::HealSFXStartTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CurrentHealSoundParamValue) == 0x000830, "Member 'UWIDGET_PlayerHUD_C::CurrentHealSoundParamValue' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CrosshairTransitionTimestamp) == 0x000834, "Member 'UWIDGET_PlayerHUD_C::CrosshairTransitionTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CrosshairTransitionDuration) == 0x000838, "Member 'UWIDGET_PlayerHUD_C::CrosshairTransitionDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CrosshairTransitionSourcePosition) == 0x00083C, "Member 'UWIDGET_PlayerHUD_C::CrosshairTransitionSourcePosition' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ScreenEffectMaterial) == 0x000848, "Member 'UWIDGET_PlayerHUD_C::ScreenEffectMaterial' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, bIsMFDVisible) == 0x000850, "Member 'UWIDGET_PlayerHUD_C::bIsMFDVisible' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ShouldShowBrackets) == 0x000851, "Member 'UWIDGET_PlayerHUD_C::ShouldShowBrackets' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, bWasMFDVisible) == 0x000852, "Member 'UWIDGET_PlayerHUD_C::bWasMFDVisible' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IsMFDDisabled) == 0x000853, "Member 'UWIDGET_PlayerHUD_C::IsMFDDisabled' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorBracketSize) == 0x000854, "Member 'UWIDGET_PlayerHUD_C::CursorBracketSize' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CursorSlottableObject) == 0x000860, "Member 'UWIDGET_PlayerHUD_C::CursorSlottableObject' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HoverBagUIParams) == 0x000870, "Member 'UWIDGET_PlayerHUD_C::HoverBagUIParams' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, DefaultMFDPanelSize) == 0x000878, "Member 'UWIDGET_PlayerHUD_C::DefaultMFDPanelSize' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CurrentToolTipWidget) == 0x000880, "Member 'UWIDGET_PlayerHUD_C::CurrentToolTipWidget' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, TIMER_MouseMove) == 0x000888, "Member 'UWIDGET_PlayerHUD_C::TIMER_MouseMove' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ToolTimeDelay) == 0x000890, "Member 'UWIDGET_PlayerHUD_C::ToolTimeDelay' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ScannerTextTyperInterval) == 0x000894, "Member 'UWIDGET_PlayerHUD_C::ScannerTextTyperInterval' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, LastScreenGridMousePosition) == 0x000898, "Member 'UWIDGET_PlayerHUD_C::LastScreenGridMousePosition' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, FrameOpacity) == 0x0008A0, "Member 'UWIDGET_PlayerHUD_C::FrameOpacity' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, QueuedNotifications) == 0x0008A8, "Member 'UWIDGET_PlayerHUD_C::QueuedNotifications' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HealthRegenAudioComponent) == 0x0008B8, "Member 'UWIDGET_PlayerHUD_C::HealthRegenAudioComponent' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HighTemperatureFormatText) == 0x0008C0, "Member 'UWIDGET_PlayerHUD_C::HighTemperatureFormatText' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, ControllerHudEnabled) == 0x0008D8, "Member 'UWIDGET_PlayerHUD_C::ControllerHudEnabled' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IsSimplifiedHotbarModalVisible) == 0x0008D9, "Member 'UWIDGET_PlayerHUD_C::IsSimplifiedHotbarModalVisible' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, CrashTimerHandle) == 0x0008E0, "Member 'UWIDGET_PlayerHUD_C::CrashTimerHandle' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, PreviousMousePosition) == 0x0008E8, "Member 'UWIDGET_PlayerHUD_C::PreviousMousePosition' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, IsTryingToVaporizeInventory) == 0x0008F0, "Member 'UWIDGET_PlayerHUD_C::IsTryingToVaporizeInventory' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, VaporizeInventoryHeldTime) == 0x0008F4, "Member 'UWIDGET_PlayerHUD_C::VaporizeInventoryHeldTime' has a wrong offset!");
static_assert(offsetof(UWIDGET_PlayerHUD_C, HotbarSlotUnderCursor) == 0x0008F8, "Member 'UWIDGET_PlayerHUD_C::HotbarSlotUnderCursor' has a wrong offset!");

}


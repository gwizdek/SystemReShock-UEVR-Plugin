#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SERV_Combat_StayNearSkillTarget

#include "Basic.hpp"

#include "SERV_Combat_StayNearSkillTarget_classes.hpp"
#include "SERV_Combat_StayNearSkillTarget_parameters.hpp"


namespace SDK
{

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ExecuteUbergraph_SERV_Combat_StayNearSkillTarget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::ExecuteUbergraph_SERV_Combat_StayNearSkillTarget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "ExecuteUbergraph_SERV_Combat_StayNearSkillTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveDeactivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "ReceiveDeactivationAI");

	Params::SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveActivationAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "ReceiveActivationAI");

	Params::SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "ReceiveTickAI");

	Params::SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetOrCreateMoveDirectionTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetOrCreateMoveDirectionTarget(class UOBJ_EnemyTarget_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetOrCreateMoveDirectionTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetOrCreateManeuverTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetOrCreateManeuverTarget(class UOBJ_EnemyTarget_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetOrCreateManeuverTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.IsMoving
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USERV_Combat_StayNearSkillTarget_C::IsMoving(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "IsMoving");

	Params::SERV_Combat_StayNearSkillTarget_C_IsMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetSkillTargetAgentLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetSkillTargetAgentLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetSkillTargetAgentLocation");

	Params::SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMovingCloser
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::UpdateMovingCloser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "UpdateMovingCloser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMovingAway
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::UpdateMovingAway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "UpdateMovingAway");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateStopping
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::UpdateStopping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "UpdateStopping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMoveSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::UpdateMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "UpdateMoveSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.InitializeMovement
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::InitializeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "InitializeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ShouldMove
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USERV_Combat_StayNearSkillTarget_C::ShouldMove(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "ShouldMove");

	Params::SERV_Combat_StayNearSkillTarget_C_ShouldMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceToSkillTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetDistanceToSkillTarget(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetDistanceToSkillTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceToNavTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetDistanceToNavTarget(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetDistanceToNavTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceFromNavToSkillTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetDistanceFromNavToSkillTarget(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetDistanceFromNavToSkillTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPawnTouchingDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetPawnTouchingDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetPawnTouchingDistance");

	Params::SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPerfectDistance
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetPerfectDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetPerfectDistance");

	Params::SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetWalkDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetWalkDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetWalkDistance");

	Params::SERV_Combat_StayNearSkillTarget_C_GetWalkDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetJogDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetJogDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetJogDistance");

	Params::SERV_Combat_StayNearSkillTarget_C_GetJogDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetSprintDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetSprintDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetSprintDistance");

	Params::SERV_Combat_StayNearSkillTarget_C_GetSprintDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.IsNavigatingDirectlyToSkillTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USERV_Combat_StayNearSkillTarget_C::IsNavigatingDirectlyToSkillTarget(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "IsNavigatingDirectlyToSkillTarget");

	Params::SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateBodyRotation
// (Public, BlueprintCallable, BlueprintEvent)

void USERV_Combat_StayNearSkillTarget_C::UpdateBodyRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "UpdateBodyRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPerfectDistanceBufferRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   BufferRange                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USERV_Combat_StayNearSkillTarget_C::GetPerfectDistanceBufferRange(float* BufferRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SERV_Combat_StayNearSkillTarget_C", "GetPerfectDistanceBufferRange");

	Params::SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BufferRange != nullptr)
		*BufferRange = Parms.BufferRange;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConduitWallHeatsink

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConduitWallHeatsink.BP_ConduitWallHeatsink_C
// 0x0020 (0x0250 - 0x0230)
class ABP_ConduitWallHeatsink_C final : public AStaticMeshActor
{
public:
	class UCOMP_VoxelAudio_C*                     ConduitHeatSink_Loop;                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Descriptor_C*                     COMP_Descriptor;                                   // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Embers;                                            // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseOne;                                          // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PhaseTwo;                                          // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConduitWallHeatsink_C">();
	}
	static class ABP_ConduitWallHeatsink_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ConduitWallHeatsink_C>();
	}
};
static_assert(alignof(ABP_ConduitWallHeatsink_C) == 0x000008, "Wrong alignment on ABP_ConduitWallHeatsink_C");
static_assert(sizeof(ABP_ConduitWallHeatsink_C) == 0x000250, "Wrong size on ABP_ConduitWallHeatsink_C");
static_assert(offsetof(ABP_ConduitWallHeatsink_C, ConduitHeatSink_Loop) == 0x000230, "Member 'ABP_ConduitWallHeatsink_C::ConduitHeatSink_Loop' has a wrong offset!");
static_assert(offsetof(ABP_ConduitWallHeatsink_C, COMP_Descriptor) == 0x000238, "Member 'ABP_ConduitWallHeatsink_C::COMP_Descriptor' has a wrong offset!");
static_assert(offsetof(ABP_ConduitWallHeatsink_C, Embers) == 0x000240, "Member 'ABP_ConduitWallHeatsink_C::Embers' has a wrong offset!");
static_assert(offsetof(ABP_ConduitWallHeatsink_C, PhaseOne) == 0x000248, "Member 'ABP_ConduitWallHeatsink_C::PhaseOne' has a wrong offset!");
static_assert(offsetof(ABP_ConduitWallHeatsink_C, PhaseTwo) == 0x00024C, "Member 'ABP_ConduitWallHeatsink_C::PhaseTwo' has a wrong offset!");

}


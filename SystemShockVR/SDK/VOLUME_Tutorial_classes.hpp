#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VOLUME_Tutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "STRUCT_TutorialVolumeData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass VOLUME_Tutorial.VOLUME_Tutorial_C
// 0x0028 (0x0248 - 0x0220)
class AVOLUME_Tutorial_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSTRUCT_TutorialVolumeData>     Tutorials;                                         // 0x0238(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_VOLUME_Tutorial(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEnterTutorialVolume(class APAWN_Hacker_Simple_C* Player);
	void OnLeaveTutorialVolume(class APAWN_Hacker_Simple_C* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VOLUME_Tutorial_C">();
	}
	static class AVOLUME_Tutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVOLUME_Tutorial_C>();
	}
};
static_assert(alignof(AVOLUME_Tutorial_C) == 0x000008, "Wrong alignment on AVOLUME_Tutorial_C");
static_assert(sizeof(AVOLUME_Tutorial_C) == 0x000248, "Wrong size on AVOLUME_Tutorial_C");
static_assert(offsetof(AVOLUME_Tutorial_C, UberGraphFrame) == 0x000220, "Member 'AVOLUME_Tutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVOLUME_Tutorial_C, Billboard) == 0x000228, "Member 'AVOLUME_Tutorial_C::Billboard' has a wrong offset!");
static_assert(offsetof(AVOLUME_Tutorial_C, Box) == 0x000230, "Member 'AVOLUME_Tutorial_C::Box' has a wrong offset!");
static_assert(offsetof(AVOLUME_Tutorial_C, Tutorials) == 0x000238, "Member 'AVOLUME_Tutorial_C::Tutorials' has a wrong offset!");

}


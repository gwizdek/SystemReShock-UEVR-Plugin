#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_TileDescriptorManager

#include "Basic.hpp"

#include "CoreGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass OBJ_TileDescriptorManager.OBJ_TileDescriptorManager_C
// 0x00F8 (0x0120 - 0x0028)
class UOBJ_TileDescriptorManager_C final : public UWorldObject
{
public:
	class UDataTable*                             MeshDescriptorTable;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftObjectPtr<class UStaticMesh>, class FName> MeshDescriptorMap;                                 // 0x0030(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<TSoftObjectPtr<class UMaterialInterface>, class FName> MaterialDescriptorMap;                             // 0x0080(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<TSoftObjectPtr<class UStaticMesh>>       StaticMeshMaterialDescriptorSet;                   // 0x00D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BuildDescriptorMaps();
	void GetDescriptionFromMaterial(class UMaterialInterface* Material, class FText* DescriptionText);
	void GetDescriptionFromStaticMesh(class UStaticMesh* StaticMesh, class UMaterialInterface* Material, class FText* DescriptionText);
	void GetDescRowNameFromStaticMesh(class UStaticMesh* StaticMesh, bool* Found, class FName* RowName);
	void GetDescRowNameFromMaterial(class UMaterialInterface* Material, bool* Found, class FName* RowName);
	void GetStaticMeshHasMaterialDescriptor(class UStaticMesh* StaticMesh, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OBJ_TileDescriptorManager_C">();
	}
	static class UOBJ_TileDescriptorManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOBJ_TileDescriptorManager_C>();
	}
};
static_assert(alignof(UOBJ_TileDescriptorManager_C) == 0x000008, "Wrong alignment on UOBJ_TileDescriptorManager_C");
static_assert(sizeof(UOBJ_TileDescriptorManager_C) == 0x000120, "Wrong size on UOBJ_TileDescriptorManager_C");
static_assert(offsetof(UOBJ_TileDescriptorManager_C, MeshDescriptorTable) == 0x000028, "Member 'UOBJ_TileDescriptorManager_C::MeshDescriptorTable' has a wrong offset!");
static_assert(offsetof(UOBJ_TileDescriptorManager_C, MeshDescriptorMap) == 0x000030, "Member 'UOBJ_TileDescriptorManager_C::MeshDescriptorMap' has a wrong offset!");
static_assert(offsetof(UOBJ_TileDescriptorManager_C, MaterialDescriptorMap) == 0x000080, "Member 'UOBJ_TileDescriptorManager_C::MaterialDescriptorMap' has a wrong offset!");
static_assert(offsetof(UOBJ_TileDescriptorManager_C, StaticMeshMaterialDescriptorSet) == 0x0000D0, "Member 'UOBJ_TileDescriptorManager_C::StaticMeshMaterialDescriptorSet' has a wrong offset!");

}


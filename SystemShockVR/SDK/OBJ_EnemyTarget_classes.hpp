#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_EnemyTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ENUM_TargetType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass OBJ_EnemyTarget.OBJ_EnemyTarget_C
// 0x0030 (0x0058 - 0x0028)
class UOBJ_EnemyTarget_C final : public UObject
{
public:
	class APAWN_Enemy_C*                          OwnerPawn;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UseDetection;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	ENUM_TargetType                               Type;                                              // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Vector;                                            // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	float                                         Radius;                                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Get_Target_Location(struct FVector* Location);
	void Get_Target_Direction(bool TwoD, struct FVector* Direction);
	void GetTargetTransform(struct FTransform* Result);
	void GetTargetFootLocation(struct FVector* NavigationLocation);
	void GetTargetCharacter(class APAWN_SystemShockCharacter_C** Character);
	void HasRecentlySeenTarget(float TimeThreshold, bool* Result);
	void SetVector(const struct FVector& NewVector);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OBJ_EnemyTarget_C">();
	}
	static class UOBJ_EnemyTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOBJ_EnemyTarget_C>();
	}
};
static_assert(alignof(UOBJ_EnemyTarget_C) == 0x000008, "Wrong alignment on UOBJ_EnemyTarget_C");
static_assert(sizeof(UOBJ_EnemyTarget_C) == 0x000058, "Wrong size on UOBJ_EnemyTarget_C");
static_assert(offsetof(UOBJ_EnemyTarget_C, OwnerPawn) == 0x000028, "Member 'UOBJ_EnemyTarget_C::OwnerPawn' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, DetectionEvent) == 0x000030, "Member 'UOBJ_EnemyTarget_C::DetectionEvent' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, UseDetection) == 0x000038, "Member 'UOBJ_EnemyTarget_C::UseDetection' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, Type) == 0x000039, "Member 'UOBJ_EnemyTarget_C::Type' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, Vector) == 0x00003C, "Member 'UOBJ_EnemyTarget_C::Vector' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, Rotation) == 0x000048, "Member 'UOBJ_EnemyTarget_C::Rotation' has a wrong offset!");
static_assert(offsetof(UOBJ_EnemyTarget_C, Radius) == 0x000054, "Member 'UOBJ_EnemyTarget_C::Radius' has a wrong offset!");

}


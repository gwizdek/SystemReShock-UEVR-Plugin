#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_WeaponModKit_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_ConsumableBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_WeaponModKit_Base.ITEM_WeaponModKit_Base_C
// 0x0058 (0x0238 - 0x01E0)
class UITEM_WeaponModKit_Base_C : public UITEM_ConsumableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ITEM_WeaponModKit_Base_C;           // 0x01E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftClassPtr<class UClass>                   TargetWeaponClass;                                 // 0x01E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   ModificationDetailsText;                           // 0x0210(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    TutorialRowHandle;                                 // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_ITEM_WeaponModKit_Base(int32 EntryPoint);
	void HandleDeferredCursorUpdate(class UWIDGET_PlayerHUD_C* NeuralHUD);
	void CanModifyWeapon(class UITEM_WeaponBase_C* Weapon, bool* Result);
	void TryInstallOnSpecificWeapon(class UITEM_WeaponBase_C* Weapon, bool* Result);
	void TryApplyWeaponModifications(class UITEM_WeaponBase_C* Weapon, bool DuringInitialization, bool* Result);
	void TryModifyPickupAppearance(class APICKUP_Weapon_Base_C* WeaponPickup, bool* Result);
	void TrySetWeaponItemGridSize(class UITEM_WeaponBase_C* Weapon, const struct FIntPoint& NewSize, bool DuringInitialization, bool* Result);
	void GetModifiedWeaponMode(const struct FSTRUCT_WeaponMode& WeaponMode, struct FSTRUCT_WeaponMode* ResultMode);
	void UseConsumable(class APAWN_SystemShockCharacter_C* Character, class UITEM_ConsumableBase_C** ConsumedItem);
	void GetEffects(class FText* EffectsText);
	void GetTargetWeaponClass(class UClass** Result);
	void HasAppearanceChange(bool* Result);
	void GetFirstPersonAttachment(class UStaticMesh** Mesh, struct FTransform* Transform, class FName* SocketName);
	void CanActivate(class APAWN_SystemShockCharacter_C* Character, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_WeaponModKit_Base_C">();
	}
	static class UITEM_WeaponModKit_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_WeaponModKit_Base_C>();
	}
};
static_assert(alignof(UITEM_WeaponModKit_Base_C) == 0x000008, "Wrong alignment on UITEM_WeaponModKit_Base_C");
static_assert(sizeof(UITEM_WeaponModKit_Base_C) == 0x000238, "Wrong size on UITEM_WeaponModKit_Base_C");
static_assert(offsetof(UITEM_WeaponModKit_Base_C, UberGraphFrame_ITEM_WeaponModKit_Base_C) == 0x0001E0, "Member 'UITEM_WeaponModKit_Base_C::UberGraphFrame_ITEM_WeaponModKit_Base_C' has a wrong offset!");
static_assert(offsetof(UITEM_WeaponModKit_Base_C, TargetWeaponClass) == 0x0001E8, "Member 'UITEM_WeaponModKit_Base_C::TargetWeaponClass' has a wrong offset!");
static_assert(offsetof(UITEM_WeaponModKit_Base_C, ModificationDetailsText) == 0x000210, "Member 'UITEM_WeaponModKit_Base_C::ModificationDetailsText' has a wrong offset!");
static_assert(offsetof(UITEM_WeaponModKit_Base_C, TutorialRowHandle) == 0x000228, "Member 'UITEM_WeaponModKit_Base_C::TutorialRowHandle' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_CargoLift

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.ExecuteUbergraph_INTERACT_CargoLift
// 0x000C (0x000C - 0x0000)
struct INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift");
static_assert(sizeof(INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift) == 0x00000C, "Wrong size on INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift");
static_assert(offsetof(INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift, EntryPoint) == 0x000000, "Member 'INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'INTERACT_CargoLift_C_ExecuteUbergraph_INTERACT_CargoLift::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_CargoLift_C_BndEvt__INTERACT_CargoLift_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_CargoLift_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_ReceiveTick");
static_assert(sizeof(INTERACT_CargoLift_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_CargoLift_C_ReceiveTick");
static_assert(offsetof(INTERACT_CargoLift_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_CargoLift_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.InitializeCargoLift
// 0x0034 (0x0034 - 0x0000)
struct INTERACT_CargoLift_C_InitializeCargoLift final
{
public:
	int32                                         LevelDelta;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerLevel;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CargoLevel;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCargoLiftLevelData_PlayerLevel;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCargoLiftLevelData_CargoLevel;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_InitializeCargoLift) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_InitializeCargoLift");
static_assert(sizeof(INTERACT_CargoLift_C_InitializeCargoLift) == 0x000034, "Wrong size on INTERACT_CargoLift_C_InitializeCargoLift");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, LevelDelta) == 0x000000, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::LevelDelta' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, PlayerLevel) == 0x000004, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CargoLevel) == 0x000008, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_GetCargoLiftLevelData_PlayerLevel) == 0x000018, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_GetCargoLiftLevelData_PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_GetCargoLiftLevelData_CargoLevel) == 0x00001C, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_GetCargoLiftLevelData_CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeCargoLift, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_CargoLift_C_InitializeCargoLift::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_CargoLift_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_InitializeAttributes");
static_assert(sizeof(INTERACT_CargoLift_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_CargoLift_C_InitializeAttributes");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_CargoLift_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_CargoLift_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.SyncFromGameInstance
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_CargoLift_C_SyncFromGameInstance final
{
public:
	class UInventoryBag_C*                        LootBag;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_SyncFromGameInstance) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_SyncFromGameInstance");
static_assert(sizeof(INTERACT_CargoLift_C_SyncFromGameInstance) == 0x000040, "Wrong size on INTERACT_CargoLift_C_SyncFromGameInstance");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, LootBag) == 0x000000, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::LootBag' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, GameInstance) == 0x000008, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, CallFunc_GetBagByIndex_Bag) == 0x000010, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncFromGameInstance, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_CargoLift_C_SyncFromGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.EVENT_OnLootBagChanged
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_CargoLift_C_EVENT_OnLootBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_EVENT_OnLootBagChanged) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_EVENT_OnLootBagChanged");
static_assert(sizeof(INTERACT_CargoLift_C_EVENT_OnLootBagChanged) == 0x000004, "Wrong size on INTERACT_CargoLift_C_EVENT_OnLootBagChanged");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnLootBagChanged, SlotIndex) == 0x000000, "Member 'INTERACT_CargoLift_C_EVENT_OnLootBagChanged::SlotIndex' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.SyncToGameInstance
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_CargoLift_C_SyncToGameInstance final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_SyncToGameInstance) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_SyncToGameInstance");
static_assert(sizeof(INTERACT_CargoLift_C_SyncToGameInstance) == 0x000028, "Wrong size on INTERACT_CargoLift_C_SyncToGameInstance");
static_assert(offsetof(INTERACT_CargoLift_C_SyncToGameInstance, GameInstance) == 0x000000, "Member 'INTERACT_CargoLift_C_SyncToGameInstance::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncToGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_CargoLift_C_SyncToGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncToGameInstance, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_CargoLift_C_SyncToGameInstance::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncToGameInstance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_CargoLift_C_SyncToGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_SyncToGameInstance, CallFunc_GetBagByIndex_Bag) == 0x000020, "Member 'INTERACT_CargoLift_C_SyncToGameInstance::CallFunc_GetBagByIndex_Bag' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_CargoLift_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_GetTargetShape");
static_assert(sizeof(INTERACT_CargoLift_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_CargoLift_C_GetTargetShape");
static_assert(offsetof(INTERACT_CargoLift_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_CargoLift_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_CargoLift_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_CargoLift_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_CargoLift_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.TryInteract
// 0x01A0 (0x01A0 - 0x0000)
struct INTERACT_CargoLift_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         LevelDelta;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0048(0x0020)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCargoLiftFunctional_Result;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00A8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00C8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x00E8(0x0020)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0118(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0140(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x0168(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCargoLiftLevelData_PlayerLevel;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCargoLiftLevelData_CargoLevel;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_TryInteract");
static_assert(sizeof(INTERACT_CargoLift_C_TryInteract) == 0x0001A0, "Wrong size on INTERACT_CargoLift_C_TryInteract");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_CargoLift_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_CargoLift_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_CargoLift_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_CargoLift_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, LevelDelta) == 0x000038, "Member 'INTERACT_CargoLift_C_TryInteract::LevelDelta' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000048, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x000068, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_IsCargoLiftFunctional_Result) == 0x000071, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_IsCargoLiftFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000A8, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000C8, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x0000E8, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue) == 0x000108, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000110, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000118, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_BooleanAND_ReturnValue) == 0x000139, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000140, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000160, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x000168, "Member 'INTERACT_CargoLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000188, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_GetCargoLiftLevelData_PlayerLevel) == 0x00018C, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_GetCargoLiftLevelData_PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_GetCargoLiftLevelData_CargoLevel) == 0x000190, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_GetCargoLiftLevelData_CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000194, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_Subtract_IntInt_ReturnValue) == 0x000198, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00019C, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00019D, "Member 'INTERACT_CargoLift_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.TryCompleteTutorial
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_CargoLift_C_TryCompleteTutorial final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_TryCompleteTutorial) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_TryCompleteTutorial");
static_assert(sizeof(INTERACT_CargoLift_C_TryCompleteTutorial) == 0x000018, "Wrong size on INTERACT_CargoLift_C_TryCompleteTutorial");
static_assert(offsetof(INTERACT_CargoLift_C_TryCompleteTutorial, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_CargoLift_C_TryCompleteTutorial::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryCompleteTutorial, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_CargoLift_C_TryCompleteTutorial::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryCompleteTutorial, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_CargoLift_C_TryCompleteTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_TryCompleteTutorial, CallFunc_TryCompleteTutorial_Result) == 0x000011, "Member 'INTERACT_CargoLift_C_TryCompleteTutorial::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateButtonColor
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_CargoLift_C_UpdateButtonColor final
{
public:
	bool                                          NeedsToCall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateButtonColor) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateButtonColor");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateButtonColor) == 0x000028, "Wrong size on INTERACT_CargoLift_C_UpdateButtonColor");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, NeedsToCall) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::NeedsToCall' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, K2Node_Select_Default) == 0x00000C, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateButtonColor, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00001C, "Member 'INTERACT_CargoLift_C_UpdateButtonColor::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateStatusDirection
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_CargoLift_C_UpdateStatusDirection final
{
public:
	int32                                         LevelDelta;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StatusIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateStatusDirection) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateStatusDirection");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateStatusDirection) == 0x000014, "Wrong size on INTERACT_CargoLift_C_UpdateStatusDirection");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusDirection, LevelDelta) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateStatusDirection::LevelDelta' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusDirection, StatusIndex) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateStatusDirection::StatusIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusDirection, CallFunc_SignOfInteger_ReturnValue) == 0x000008, "Member 'INTERACT_CargoLift_C_UpdateStatusDirection::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusDirection, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_CargoLift_C_UpdateStatusDirection::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusDirection, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'INTERACT_CargoLift_C_UpdateStatusDirection::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateStatusLevel
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_CargoLift_C_UpdateStatusLevel final
{
public:
	int32                                         LevelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateStatusLevel) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateStatusLevel");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateStatusLevel) == 0x000008, "Wrong size on INTERACT_CargoLift_C_UpdateStatusLevel");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusLevel, LevelIndex) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateStatusLevel::LevelIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateStatusLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateStatusLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateEmissiveStrength
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_CargoLift_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateEmissiveStrength) == 0x000008, "Wrong size on INTERACT_CargoLift_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateSideLightProgress
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_CargoLift_C_UpdateSideLightProgress final
{
public:
	float                                         SignedProgress;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateSideLightProgress) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateSideLightProgress");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateSideLightProgress) == 0x000004, "Wrong size on INTERACT_CargoLift_C_UpdateSideLightProgress");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateSideLightProgress, SignedProgress) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateSideLightProgress::SignedProgress' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateCargoLiftLight
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_CargoLift_C_UpdateCargoLiftLight final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateCargoLiftLight) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateCargoLiftLight");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateCargoLiftLight) == 0x000008, "Wrong size on INTERACT_CargoLift_C_UpdateCargoLiftLight");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftLight, Visible) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftLight::Visible' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftLight, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftLight::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateCargoLiftVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_CargoLift_C_UpdateCargoLiftVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateCargoLiftVisibility) == 0x000001, "Wrong alignment on INTERACT_CargoLift_C_UpdateCargoLiftVisibility");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateCargoLiftVisibility) == 0x000001, "Wrong size on INTERACT_CargoLift_C_UpdateCargoLiftVisibility");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.ResumeCargoLiftMovement
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_CargoLift_C_ResumeCargoLiftMovement final
{
public:
	bool                                          ShouldFadeIn;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_ResumeCargoLiftMovement) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_ResumeCargoLiftMovement");
static_assert(sizeof(INTERACT_CargoLift_C_ResumeCargoLiftMovement) == 0x000030, "Wrong size on INTERACT_CargoLift_C_ResumeCargoLiftMovement");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, ShouldFadeIn) == 0x000000, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::ShouldFadeIn' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, Temp_float_Variable) == 0x000010, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, Temp_float_Variable_1) == 0x000024, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, Temp_bool_Variable) == 0x000028, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ResumeCargoLiftMovement, K2Node_Select_Default) == 0x00002C, "Member 'INTERACT_CargoLift_C_ResumeCargoLiftMovement::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.UpdateCargoLiftMovement
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_CargoLift_C_UpdateCargoLiftMovement final
{
public:
	float                                         ElapsedArrivalProgress;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveDurationRemaining;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedMoveTime;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActualFloorMoveDuration;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalMoveDuration;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaMoveDuration;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLevel;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelDelta;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CargoLevel;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerLevel;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCargoLiftLevelData_PlayerLevel;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCargoLiftLevelData_CargoLevel;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_UpdateCargoLiftMovement) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_UpdateCargoLiftMovement");
static_assert(sizeof(INTERACT_CargoLift_C_UpdateCargoLiftMovement) == 0x000088, "Wrong size on INTERACT_CargoLift_C_UpdateCargoLiftMovement");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, ElapsedArrivalProgress) == 0x000000, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::ElapsedArrivalProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, MoveDurationRemaining) == 0x000004, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::MoveDurationRemaining' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, ElapsedMoveTime) == 0x000008, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::ElapsedMoveTime' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, ActualFloorMoveDuration) == 0x00000C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::ActualFloorMoveDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, TotalMoveDuration) == 0x000010, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::TotalMoveDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, DeltaMoveDuration) == 0x000014, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::DeltaMoveDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CurrentLevel) == 0x000018, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CurrentLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, LevelDelta) == 0x00001C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::LevelDelta' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CargoLevel) == 0x000020, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, PlayerLevel) == 0x000024, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Abs_Int_ReturnValue) == 0x000040, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000044, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Lerp_ReturnValue_1) == 0x000054, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Ease_ReturnValue) == 0x000068, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_SignOfInteger_ReturnValue) == 0x00006C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000070, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000074, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_GetCargoLiftLevelData_PlayerLevel) == 0x000078, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_GetCargoLiftLevelData_PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_GetCargoLiftLevelData_CargoLevel) == 0x00007C, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_GetCargoLiftLevelData_CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000080, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_UpdateCargoLiftMovement, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000084, "Member 'INTERACT_CargoLift_C_UpdateCargoLiftMovement::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.CallCargoLift
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_CargoLift_C_CallCargoLift final
{
public:
	int32                                         LevelDelta;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_CallCargoLift) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_CallCargoLift");
static_assert(sizeof(INTERACT_CargoLift_C_CallCargoLift) == 0x000008, "Wrong size on INTERACT_CargoLift_C_CallCargoLift");
static_assert(offsetof(INTERACT_CargoLift_C_CallCargoLift, LevelDelta) == 0x000000, "Member 'INTERACT_CargoLift_C_CallCargoLift::LevelDelta' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CallCargoLift, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_CallCargoLift::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.OnCargoLiftArrived
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_CargoLift_C_OnCargoLiftArrived final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCargoLiftFunctional_Result;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithAnyInteractable_Result;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0030(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_OnCargoLiftArrived) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_OnCargoLiftArrived");
static_assert(sizeof(INTERACT_CargoLift_C_OnCargoLiftArrived) == 0x000090, "Wrong size on INTERACT_CargoLift_C_OnCargoLiftArrived");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, HackerPawn) == 0x000000, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_IsCargoLiftFunctional_Result) == 0x000008, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_IsCargoLiftFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_IsChannelingWithAnyInteractable_Result) == 0x000021, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_IsChannelingWithAnyInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_TryInteract_InteractResults) == 0x000030, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000050, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_GetPlayerPawn_ReturnValue) == 0x000058, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000060, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_GetGameInstance_ReturnValue_1) == 0x000070, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000078, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OnCargoLiftArrived, CallFunc_GetCurrentLevelName_Result) == 0x000084, "Member 'INTERACT_CargoLift_C_OnCargoLiftArrived::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.IsCargoLiftFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_CargoLift_C_IsCargoLiftFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_IsCargoLiftFunctional) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_IsCargoLiftFunctional");
static_assert(sizeof(INTERACT_CargoLift_C_IsCargoLiftFunctional) == 0x00000C, "Wrong size on INTERACT_CargoLift_C_IsCargoLiftFunctional");
static_assert(offsetof(INTERACT_CargoLift_C_IsCargoLiftFunctional, Result) == 0x000000, "Member 'INTERACT_CargoLift_C_IsCargoLiftFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_IsCargoLiftFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_CargoLift_C_IsCargoLiftFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_IsCargoLiftFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_CargoLift_C_IsCargoLiftFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.GetCargoLiftLevelData
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_CargoLift_C_GetCargoLiftLevelData final
{
public:
	int32                                         PlayerLevel;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CargoLevel;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           LevelNames;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         PlayerLevelIndex;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetLevelNames_Levels;                     // 0x0030(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentLevelName_Result_1;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSharedStorageLevelName_Result;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSharedStorageLevelName_Result_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_GetCargoLiftLevelData) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_GetCargoLiftLevelData");
static_assert(sizeof(INTERACT_CargoLift_C_GetCargoLiftLevelData) == 0x000090, "Wrong size on INTERACT_CargoLift_C_GetCargoLiftLevelData");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, PlayerLevel) == 0x000000, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::PlayerLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CargoLevel) == 0x000004, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CargoLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, LevelNames) == 0x000008, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::LevelNames' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, PlayerLevelIndex) == 0x000018, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::PlayerLevelIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, GameInstance) == 0x000020, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetLevelNames_Levels) == 0x000030, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetLevelNames_Levels' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetCurrentLevelName_Result) == 0x000040, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetCurrentLevelName_Result_1) == 0x000048, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetCurrentLevelName_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetSharedStorageLevelName_Result) == 0x000050, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetSharedStorageLevelName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_NotEqual_NameName_ReturnValue) == 0x000058, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_Array_Find_ReturnValue) == 0x00005C, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000060, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetGameInstance_ReturnValue) == 0x000068, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_GetSharedStorageLevelName_Result_1) == 0x000070, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_GetSharedStorageLevelName_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, K2Node_DynamicCast_AsGI_Single_Player) == 0x000078, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_Array_Find_ReturnValue_1) == 0x000084, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_GetCargoLiftLevelData, CallFunc_Max_ReturnValue) == 0x000088, "Member 'INTERACT_CargoLift_C_GetCargoLiftLevelData::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.StopChanneling
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_CargoLift_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_StopChanneling) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_StopChanneling");
static_assert(sizeof(INTERACT_CargoLift_C_StopChanneling) == 0x000010, "Wrong size on INTERACT_CargoLift_C_StopChanneling");
static_assert(offsetof(INTERACT_CargoLift_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'INTERACT_CargoLift_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_StopChanneling, Result) == 0x000008, "Member 'INTERACT_CargoLift_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_StopChanneling, CallFunc_StopChanneling_Result) == 0x000009, "Member 'INTERACT_CargoLift_C_StopChanneling::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.OpenDoors
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_CargoLift_C_OpenDoors final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_TrySetLootVisibility_Result;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_CargoLift_C*                    K2Node_DynamicCast_AsANIMBP_Cargo_Lift;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_OpenDoors) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_OpenDoors");
static_assert(sizeof(INTERACT_CargoLift_C_OpenDoors) == 0x000058, "Wrong size on INTERACT_CargoLift_C_OpenDoors");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_CargoLift_C_OpenDoors::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_TrySetLootVisibility_Result) == 0x000010, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_TrySetLootVisibility_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000020, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, K2Node_DynamicCast_AsANIMBP_Cargo_Lift) == 0x000028, "Member 'INTERACT_CargoLift_C_OpenDoors::K2Node_DynamicCast_AsANIMBP_Cargo_Lift' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_CargoLift_C_OpenDoors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, K2Node_DynamicCast_AsAnim_Montage) == 0x000040, "Member 'INTERACT_CargoLift_C_OpenDoors::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'INTERACT_CargoLift_C_OpenDoors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_Montage_Play_ReturnValue) == 0x00004C, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_OpenDoors, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'INTERACT_CargoLift_C_OpenDoors::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.CloseDoors
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_CargoLift_C_CloseDoors final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_CargoLift_C*                    K2Node_DynamicCast_AsANIMBP_Cargo_Lift;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_CloseDoors) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_CloseDoors");
static_assert(sizeof(INTERACT_CargoLift_C_CloseDoors) == 0x000088, "Wrong size on INTERACT_CargoLift_C_CloseDoors");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, StartTime) == 0x000000, "Member 'INTERACT_CargoLift_C_CloseDoors::StartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_CargoLift_C_CloseDoors::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, K2Node_DynamicCast_AsANIMBP_Cargo_Lift) == 0x000020, "Member 'INTERACT_CargoLift_C_CloseDoors::K2Node_DynamicCast_AsANIMBP_Cargo_Lift' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_CargoLift_C_CloseDoors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000030, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, K2Node_DynamicCast_AsAnim_Montage) == 0x000038, "Member 'INTERACT_CargoLift_C_CloseDoors::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_CargoLift_C_CloseDoors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000048, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_Montage_Play_ReturnValue) == 0x000050, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000060, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000068, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000070, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_GetPlayLength_ReturnValue) == 0x000078, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x00007C, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_Montage_GetPosition_ReturnValue) == 0x000080, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_CloseDoors, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000084, "Member 'INTERACT_CargoLift_C_CloseDoors::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.EVENT_OnMontageFinished
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_CargoLift_C_EVENT_OnMontageFinished final
{
public:
	bool                                          CallFunc_IsLootableOpened_Result;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetLootVisibility_Result;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_EVENT_OnMontageFinished) == 0x000001, "Wrong alignment on INTERACT_CargoLift_C_EVENT_OnMontageFinished");
static_assert(sizeof(INTERACT_CargoLift_C_EVENT_OnMontageFinished) == 0x000002, "Wrong size on INTERACT_CargoLift_C_EVENT_OnMontageFinished");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnMontageFinished, CallFunc_IsLootableOpened_Result) == 0x000000, "Member 'INTERACT_CargoLift_C_EVENT_OnMontageFinished::CallFunc_IsLootableOpened_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnMontageFinished, CallFunc_TrySetLootVisibility_Result) == 0x000001, "Member 'INTERACT_CargoLift_C_EVENT_OnMontageFinished::CallFunc_TrySetLootVisibility_Result' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.ShouldSaveActor
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_CargoLift_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          CallFunc_ShouldSaveActor_Params;                   // 0x0028(0x0018)()
	bool                                          CallFunc_ShouldSaveActor_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CargoLift_C_ShouldSaveActor) == 0x000008, "Wrong alignment on INTERACT_CargoLift_C_ShouldSaveActor");
static_assert(sizeof(INTERACT_CargoLift_C_ShouldSaveActor) == 0x000048, "Wrong size on INTERACT_CargoLift_C_ShouldSaveActor");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_GetAttribValue_ReturnValue) == 0x00001C, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000021, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_ShouldSaveActor_Params) == 0x000028, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_ShouldSaveActor_Params' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_ShouldSaveActor_ReturnValue) == 0x000040, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_ShouldSaveActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_ShouldSaveActor, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'INTERACT_CargoLift_C_ShouldSaveActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_CargoLift.INTERACT_CargoLift_C.EVENT_OnDisableAttribChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged) == 0x000010, "Wrong size on INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_CargoLift_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_ShootBullet

#include "Basic.hpp"

#include "SKILL_ShootBullet_classes.hpp"
#include "SKILL_ShootBullet_parameters.hpp"


namespace SDK
{

// Function SKILL_ShootBullet.SKILL_ShootBullet_C.SpawnBullet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABulletProjectile_Base_C*         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootBullet_C::SpawnBullet(class FName SocketName, const struct FVector& Location, const struct FVector& Direction, class ABulletProjectile_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "SpawnBullet");

	Params::SKILL_ShootBullet_C_SpawnBullet Parms{};

	Parms.SocketName = SocketName;
	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_ShootBullet.SKILL_ShootBullet_C.OnActivateSkill
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_ShootBullet_C::OnActivateSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "OnActivateSkill");

	Params::SKILL_ShootBullet_C_OnActivateSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_ShootBullet.SKILL_ShootBullet_C.SpawnBulletWithDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABulletProjectile_Base_C*         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootBullet_C::SpawnBulletWithDamage(class FName SocketName, const struct FVector& Location, const struct FVector& Direction, int32 DamageValue, class ABulletProjectile_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "SpawnBulletWithDamage");

	Params::SKILL_ShootBullet_C_SpawnBulletWithDamage Parms{};

	Parms.SocketName = SocketName;
	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);
	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_ShootBullet.SKILL_ShootBullet_C.SpawnBulletWithWeightedRandomDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABulletProjectile_Base_C*         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootBullet_C::SpawnBulletWithWeightedRandomDamage(class FName SocketName, const struct FVector& Location, const struct FVector& Direction, float DamageValue, class ABulletProjectile_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "SpawnBulletWithWeightedRandomDamage");

	Params::SKILL_ShootBullet_C_SpawnBulletWithWeightedRandomDamage Parms{};

	Parms.SocketName = SocketName;
	Parms.Location = std::move(Location);
	Parms.Direction = std::move(Direction);
	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_ShootBullet.SKILL_ShootBullet_C.GetBulletSpawnParameters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BarrelIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootBullet_C::GetBulletSpawnParameters(int32 BarrelIndex, class FName* SocketName, struct FVector* Location, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "GetBulletSpawnParameters");

	Params::SKILL_ShootBullet_C_GetBulletSpawnParameters Parms{};

	Parms.BarrelIndex = BarrelIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (SocketName != nullptr)
		*SocketName = Parms.SocketName;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function SKILL_ShootBullet.SKILL_ShootBullet_C.GetProjectileSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootBullet_C::GetProjectileSpeed(float* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootBullet_C", "GetProjectileSpeed");

	Params::SKILL_ShootBullet_C_GetProjectileSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DismembermentLimb_Base

#include "Basic.hpp"

#include "DismembermentLimb_Base_classes.hpp"
#include "DismembermentLimb_Base_parameters.hpp"


namespace SDK
{

// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ExecuteUbergraph_DismembermentLimb_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentLimb_Base_C::ExecuteUbergraph_DismembermentLimb_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ExecuteUbergraph_DismembermentLimb_Base");

	Params::DismembermentLimb_Base_C_ExecuteUbergraph_DismembermentLimb_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.BndEvt__DismembermentLimb_Base_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnDynaDamage__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FName                             DynaElementName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::BndEvt__DismembermentLimb_Base_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnDynaDamage__DelegateSignature(class FName DynaElementName, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "BndEvt__DismembermentLimb_Base_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnDynaDamage__DelegateSignature");

	Params::DismembermentLimb_Base_C_BndEvt__DismembermentLimb_Base_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnDynaDamage__DelegateSignature Parms{};

	Parms.DynaElementName = DynaElementName;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentLimb_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ReceiveTick");

	Params::DismembermentLimb_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::DismembermentLimb_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.TryInitializeBindings
// (BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::TryInitializeBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "TryInitializeBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADismembermentLimb_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.InitializeLimbActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    DisplayMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           SourcePoseMesh                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentLimb_Base_C::InitializeLimbActor(class USkeletalMesh* DisplayMesh, class USkeletalMeshComponent* SourcePoseMesh, class UOBJ_ImpactData_C* ImpactData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "InitializeLimbActor");

	Params::DismembermentLimb_Base_C_InitializeLimbActor Parms{};

	Parms.DisplayMesh = DisplayMesh;
	Parms.SourcePoseMesh = SourcePoseMesh;
	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.UpdateVisibility
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::UpdateVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "UpdateVisibility");

	Params::DismembermentLimb_Base_C_UpdateVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.OnDynaDamage
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DynaElement                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::OnDynaDamage(class FName DynaElement, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "OnDynaDamage");

	Params::DismembermentLimb_Base_C_OnDynaDamage Parms{};

	Parms.DynaElement = DynaElement;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.UpdateMeshComponentTicks
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::UpdateMeshComponentTicks(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "UpdateMeshComponentTicks");

	Params::DismembermentLimb_Base_C_UpdateMeshComponentTicks Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.InitDismembermentForce
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentLimb_Base_C::InitDismembermentForce(class UOBJ_ImpactData_C* ImpactData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "InitDismembermentForce");

	Params::DismembermentLimb_Base_C_InitDismembermentForce Parms{};

	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ApplyDismembermentForce
// (Public, BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::ApplyDismembermentForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ApplyDismembermentForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.IsTeleporting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::IsTeleporting(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "IsTeleporting");

	Params::DismembermentLimb_Base_C_IsTeleporting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.CanTeleportLimb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::CanTeleportLimb(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "CanTeleportLimb");

	Params::DismembermentLimb_Base_C_CanTeleportLimb Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.TryTeleportLimb
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   MaterializeDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   TeleportFX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ADismembermentLimb_Base_C::TryTeleportLimb(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* TeleportFX, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "TryTeleportLimb");

	Params::DismembermentLimb_Base_C_TryTeleportLimb Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.MaterializeDuration = MaterializeDuration;
	Parms.SoundCue = SoundCue;
	Parms.TeleportFX = TeleportFX;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.EVENT_OnDamageReceived
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentLimb_Base_C::EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "EVENT_OnDamageReceived");

	Params::DismembermentLimb_Base_C_EVENT_OnDamageReceived Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.EVENT_OnTryStopPhysics
// (Private, BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::EVENT_OnTryStopPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "EVENT_OnTryStopPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.EVENT_OnFinishedMaterializingFromTeleport
// (Private, BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::EVENT_OnFinishedMaterializingFromTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "EVENT_OnFinishedMaterializingFromTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.TryStartPhysicsSleepTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::TryStartPhysicsSleepTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "TryStartPhysicsSleepTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.TryEnablePhysics
// (Protected, BlueprintCallable, BlueprintEvent)

void ADismembermentLimb_Base_C::TryEnablePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "TryEnablePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentLimb_Base_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ShouldSaveActor");

	Params::DismembermentLimb_Base_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentLimb_Base_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ReceivePendingBodyTransforms");

	Params::DismembermentLimb_Base_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DismembermentLimb_Base.DismembermentLimb_Base_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentLimb_Base_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentLimb_Base_C", "ReceivePendingCharacterVelocity");

	Params::DismembermentLimb_Base_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


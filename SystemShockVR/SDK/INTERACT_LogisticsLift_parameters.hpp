#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_LogisticsLift

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_DoorState_structs.hpp"
#include "LevelVoxelization_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.OnCargoSpawned__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature final
{
public:
	class AINTERACT_LogisticsLift_C*              LogisticsLift;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CargoActor_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature");
static_assert(sizeof(INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature) == 0x000010, "Wrong size on INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature");
static_assert(offsetof(INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature, LogisticsLift) == 0x000000, "Member 'INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature::LogisticsLift' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature, CargoActor_0) == 0x000008, "Member 'INTERACT_LogisticsLift_C_OnCargoSpawned__DelegateSignature::CargoActor_0' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.OnCargoDelivered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature final
{
public:
	class AINTERACT_LogisticsLift_C*              LogisticsLift;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CargoActor_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature");
static_assert(sizeof(INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature) == 0x000010, "Wrong size on INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature");
static_assert(offsetof(INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature, LogisticsLift) == 0x000000, "Member 'INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature::LogisticsLift' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature, CargoActor_0) == 0x000008, "Member 'INTERACT_LogisticsLift_C_OnCargoDelivered__DelegateSignature::CargoActor_0' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.ExecuteUbergraph_INTERACT_LogisticsLift
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift");
static_assert(sizeof(INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift) == 0x000008, "Wrong size on INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift");
static_assert(offsetof(INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift, EntryPoint) == 0x000000, "Member 'INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_LogisticsLift_C_ExecuteUbergraph_INTERACT_LogisticsLift::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_LogisticsLift_C_BndEvt__INTERACT_LogisticsLift_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.InitializeLogisticsLift
// 0x002C (0x002C - 0x0000)
struct INTERACT_LogisticsLift_C_InitializeLogisticsLift final
{
public:
	float                                         CallFunc_GetElapsedTimeInState_Result;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeInState_Result_1;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeInState_Result_2;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeInState_Result_3;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_InitializeLogisticsLift) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_InitializeLogisticsLift");
static_assert(sizeof(INTERACT_LogisticsLift_C_InitializeLogisticsLift) == 0x00002C, "Wrong size on INTERACT_LogisticsLift_C_InitializeLogisticsLift");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_GetElapsedTimeInState_Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_GetElapsedTimeInState_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_GetElapsedTimeInState_Result_1) == 0x000004, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_GetElapsedTimeInState_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_GetElapsedTimeInState_Result_2) == 0x000008, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_GetElapsedTimeInState_Result_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_GetElapsedTimeInState_Result_3) == 0x00000C, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_GetElapsedTimeInState_Result_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, CallFunc_FMax_ReturnValue_1) == 0x000024, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeLogisticsLift, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'INTERACT_LogisticsLift_C_InitializeLogisticsLift::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_LogisticsLift_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_InitializeAttributes");
static_assert(sizeof(INTERACT_LogisticsLift_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_LogisticsLift_C_InitializeAttributes");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_LogisticsLift_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.InitializeCompartmentActorStates
// 0x0130 (0x0130 - 0x0000)
struct INTERACT_LogisticsLift_C_InitializeCompartmentActorStates final
{
public:
	class AActor*                                 CompartmentActor;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates) == 0x000010, "Wrong alignment on INTERACT_LogisticsLift_C_InitializeCompartmentActorStates");
static_assert(sizeof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates) == 0x000130, "Wrong size on INTERACT_LogisticsLift_C_InitializeCompartmentActorStates");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CompartmentActor) == 0x000000, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CompartmentActor' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000008, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, Temp_int_Array_Index_Variable) == 0x000014, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_X) == 0x000024, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Y) == 0x000028, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Z) == 0x00002C, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_MakeArray_Array) == 0x000070, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_MakeArray_Array_1) == 0x000080, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_ComponentOverlapActors_OutActors) == 0x000090, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_ComponentOverlapActors_ReturnValue) == 0x0000A0, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Map_Length_ReturnValue) == 0x0000A4, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_X_1) == 0x0000C8, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Y_1) == 0x0000CC, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Z_1) == 0x0000D0, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_AsPICKUP_Base) == 0x0000D8, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_AsDEBRIS_Base) == 0x0000E8, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000F4, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, K2Node_CreateDelegate_OutputDelegate) == 0x000100, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_X_2) == 0x000110, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Y_2) == 0x000114, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_BreakVector_Z_2) == 0x000118, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeCompartmentActorStates, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000120, "Member 'INTERACT_LogisticsLift_C_InitializeCompartmentActorStates::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.InitializeTileDescriptor
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_LogisticsLift_C_InitializeTileDescriptor final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescriptionFromStaticMesh_DescriptionText; // 0x0018(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_InitializeTileDescriptor) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_InitializeTileDescriptor");
static_assert(sizeof(INTERACT_LogisticsLift_C_InitializeTileDescriptor) == 0x000038, "Wrong size on INTERACT_LogisticsLift_C_InitializeTileDescriptor");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeTileDescriptor, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_LogisticsLift_C_InitializeTileDescriptor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeTileDescriptor, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_LogisticsLift_C_InitializeTileDescriptor::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeTileDescriptor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_LogisticsLift_C_InitializeTileDescriptor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeTileDescriptor, CallFunc_GetDescriptionFromStaticMesh_DescriptionText) == 0x000018, "Member 'INTERACT_LogisticsLift_C_InitializeTileDescriptor::CallFunc_GetDescriptionFromStaticMesh_DescriptionText' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_InitializeTileDescriptor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'INTERACT_LogisticsLift_C_InitializeTileDescriptor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.IsLogisticsLiftReady
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_LogisticsLift_C_IsLogisticsLiftReady final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_IsLogisticsLiftReady");
static_assert(sizeof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady) == 0x000030, "Wrong size on INTERACT_LogisticsLift_C_IsLogisticsLiftReady");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, Temp_object_Variable) == 0x000008, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, CallFunc_ComponentOverlapActors_OutActors) == 0x000018, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000028, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftReady, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.IsLogisticsLiftFunctional
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional");
static_assert(sizeof(INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional) == 0x000001, "Wrong size on INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional");
static_assert(offsetof(INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_IsLogisticsLiftFunctional::Result' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.GetLogisticsLiftState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LogisticsLift_C_GetLogisticsLiftState final
{
public:
	ENUM_DoorState                                Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_GetLogisticsLiftState) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_GetLogisticsLiftState");
static_assert(sizeof(INTERACT_LogisticsLift_C_GetLogisticsLiftState) == 0x000001, "Wrong size on INTERACT_LogisticsLift_C_GetLogisticsLiftState");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetLogisticsLiftState, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_GetLogisticsLiftState::Result' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.GetElapsedTimeInState
// 0x000C (0x000C - 0x0000)
struct INTERACT_LogisticsLift_C_GetElapsedTimeInState final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_GetElapsedTimeInState) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_GetElapsedTimeInState");
static_assert(sizeof(INTERACT_LogisticsLift_C_GetElapsedTimeInState) == 0x00000C, "Wrong size on INTERACT_LogisticsLift_C_GetElapsedTimeInState");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetElapsedTimeInState, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_GetElapsedTimeInState::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetElapsedTimeInState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_GetElapsedTimeInState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetElapsedTimeInState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_LogisticsLift_C_GetElapsedTimeInState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.GetSpawnedEnemyName
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_LogisticsLift_C_GetSpawnedEnemyName final
{
public:
	class UClass*                                 EnemyClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnemyName;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_RequestNewSpawnedEnemyName_EnemyName;     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_GetSpawnedEnemyName");
static_assert(sizeof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName) == 0x000030, "Wrong size on INTERACT_LogisticsLift_C_GetSpawnedEnemyName");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, EnemyClass) == 0x000000, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::EnemyClass' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, EnemyName) == 0x000008, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::EnemyName' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_GetSpawnedEnemyName, CallFunc_RequestNewSpawnedEnemyName_EnemyName) == 0x000024, "Member 'INTERACT_LogisticsLift_C_GetSpawnedEnemyName::CallFunc_RequestNewSpawnedEnemyName_EnemyName' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.EnableMeshComponentTicks
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LogisticsLift_C_EnableMeshComponentTicks final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_EnableMeshComponentTicks) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_EnableMeshComponentTicks");
static_assert(sizeof(INTERACT_LogisticsLift_C_EnableMeshComponentTicks) == 0x000010, "Wrong size on INTERACT_LogisticsLift_C_EnableMeshComponentTicks");
static_assert(offsetof(INTERACT_LogisticsLift_C_EnableMeshComponentTicks, State) == 0x000000, "Member 'INTERACT_LogisticsLift_C_EnableMeshComponentTicks::State' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EnableMeshComponentTicks, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_LogisticsLift_C_EnableMeshComponentTicks::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TryMakeCompartmentItemsLost
// 0x01B0 (0x01B0 - 0x0000)
struct INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost final
{
public:
	class APAWN_Enemy_C*                          CurrentEnemy;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGenerateLoot_Result;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0118(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors_1;       // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue_1;     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost) == 0x000010, "Wrong alignment on INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost");
static_assert(sizeof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost) == 0x0001B0, "Wrong size on INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CurrentEnemy) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CurrentEnemy' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, GameInstance) == 0x000008, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, Temp_object_Variable) == 0x000018, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_GetActorBounds_Origin) == 0x000034, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_GetActorBounds_BoxExtent) == 0x000040, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_X) == 0x00004C, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_Y) == 0x000050, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_Z) == 0x000054, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_GetInventoryComponent_Inventory) == 0x000058, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_TryGenerateLoot_Result) == 0x000060, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_TryGenerateLoot_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_X_1) == 0x000070, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B0, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000B8, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_MakeArray_Array) == 0x0000C0, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_ComponentOverlapActors_OutActors) == 0x0000D0, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_ComponentOverlapActors_ReturnValue) == 0x0000E0, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000108, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Less_IntInt_ReturnValue) == 0x000111, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_MakeArray_Array_2) == 0x000118, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000130, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_GetGameInstance_ReturnValue) == 0x000160, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_AsGI_Single_Player) == 0x000168, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_ComponentOverlapActors_OutActors_1) == 0x000178, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_ComponentOverlapActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_ComponentOverlapActors_ReturnValue_1) == 0x000188, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_ComponentOverlapActors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_AsPICKUP_Base) == 0x0001A0, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A9, "Member 'INTERACT_LogisticsLift_C_TryMakeCompartmentItemsLost::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TryBindMontageFinishedEvent
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent final
{
public:
	class UAnimMontage*                           ActiveMontage;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent");
static_assert(sizeof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent) == 0x000048, "Wrong size on INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, ActiveMontage) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::ActiveMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, AnimInstance) == 0x000008, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_Montage_GetPosition_ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_FMax_ReturnValue) == 0x000024, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'INTERACT_LogisticsLift_C_TryBindMontageFinishedEvent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TryStartAutoTransitionTimer
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer");
static_assert(sizeof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer) == 0x000028, "Wrong size on INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer, Delay) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer::Delay' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000020, "Member 'INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'INTERACT_LogisticsLift_C_TryStartAutoTransitionTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TryStartLogisticsLiftTransition
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DoorState                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorState                                Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DoorState                                Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorState                                Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySpawnCargo_Result;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DoorState                                K2Node_Select_Default_1;                           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorState                                K2Node_Select_Default_2;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_3;                           // 0x0048(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition");
static_assert(sizeof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition) == 0x000078, "Wrong size on INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Activate) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Activate' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Result) == 0x000001, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_bool_Variable) == 0x000002, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_bool_Variable_1) == 0x000003, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_byte_Variable) == 0x000004, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_byte_Variable_1) == 0x000005, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_bool_Variable_2) == 0x000006, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_byte_Variable_2) == 0x000007, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_byte_Variable_3) == 0x000008, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_object_Variable) == 0x000010, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_IsVisible_ReturnValue) == 0x000020, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, Temp_bool_Variable_3) == 0x000021, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_TrySpawnCargo_Result) == 0x000022, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_TrySpawnCargo_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, K2Node_Select_Default) == 0x000028, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_ComponentOverlapActors_OutActors) == 0x000030, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000040, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, K2Node_Select_Default_1) == 0x000042, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, K2Node_Select_Default_2) == 0x000043, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000044, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, K2Node_Select_Default_3) == 0x000048, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'INTERACT_LogisticsLift_C_TryStartLogisticsLiftTransition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TrySpawnCargo
// 0x00E0 (0x00E0 - 0x0000)
struct INTERACT_LogisticsLift_C_TrySpawnCargo final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     CargoClassToUse;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsPAWN_Enemy;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpawnedEnemyName_EnemyName;            // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnActorInLevelWithName_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnActorInLevel_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class AActor>                     K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TrySpawnCargo) == 0x000010, "Wrong alignment on INTERACT_LogisticsLift_C_TrySpawnCargo");
static_assert(sizeof(INTERACT_LogisticsLift_C_TrySpawnCargo) == 0x0000E0, "Wrong size on INTERACT_LogisticsLift_C_TrySpawnCargo");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CargoClassToUse) == 0x000008, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CargoClassToUse' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_GetActorLevel_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, Temp_bool_Variable) == 0x000050, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, K2Node_ClassDynamicCast_AsPAWN_Enemy) == 0x000058, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::K2Node_ClassDynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_GetSpawnedEnemyName_EnemyName) == 0x000064, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_GetSpawnedEnemyName_EnemyName' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_SpawnActorInLevelWithName_ReturnValue) == 0x000070, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_SpawnActorInLevelWithName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_IsValidClass_ReturnValue_1) == 0x000079, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_GetActorLevel_ReturnValue_1) == 0x000080, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_GetActorLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000090, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_SpawnActorInLevel_ReturnValue) == 0x0000C8, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, K2Node_Select_Default) == 0x0000D0, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_IsValidClass_ReturnValue_2) == 0x0000D8, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TrySpawnCargo, CallFunc_BooleanOR_ReturnValue) == 0x0000D9, "Member 'INTERACT_LogisticsLift_C_TrySpawnCargo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.SetCargoClassOverride
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_LogisticsLift_C_SetCargoClassOverride final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_SetCargoClassOverride) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_SetCargoClassOverride");
static_assert(sizeof(INTERACT_LogisticsLift_C_SetCargoClassOverride) == 0x000008, "Wrong size on INTERACT_LogisticsLift_C_SetCargoClassOverride");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetCargoClassOverride, Class_0) == 0x000000, "Member 'INTERACT_LogisticsLift_C_SetCargoClassOverride::Class_0' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.HandleCargoSpawned
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_LogisticsLift_C_HandleCargoSpawned final
{
public:
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_HandleCargoSpawned) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_HandleCargoSpawned");
static_assert(sizeof(INTERACT_LogisticsLift_C_HandleCargoSpawned) == 0x000020, "Wrong size on INTERACT_LogisticsLift_C_HandleCargoSpawned");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoSpawned, EnemyPawn) == 0x000000, "Member 'INTERACT_LogisticsLift_C_HandleCargoSpawned::EnemyPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoSpawned, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'INTERACT_LogisticsLift_C_HandleCargoSpawned::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoSpawned, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'INTERACT_LogisticsLift_C_HandleCargoSpawned::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoSpawned, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_LogisticsLift_C_HandleCargoSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.HandleCargoDelivered
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_LogisticsLift_C_HandleCargoDelivered final
{
public:
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUpdateSpawnLocation_Result;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_HandleCargoDelivered) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_HandleCargoDelivered");
static_assert(sizeof(INTERACT_LogisticsLift_C_HandleCargoDelivered) == 0x000020, "Wrong size on INTERACT_LogisticsLift_C_HandleCargoDelivered");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000000, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, CallFunc_TryUpdateSpawnLocation_Result) == 0x000009, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::CallFunc_TryUpdateSpawnLocation_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, CallFunc_GetAttachParentActor_ReturnValue) == 0x000010, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_HandleCargoDelivered, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'INTERACT_LogisticsLift_C_HandleCargoDelivered::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.PlayTransitionMontage
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_LogisticsLift_C_PlayTransitionMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_PlayTransitionMontage) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_PlayTransitionMontage");
static_assert(sizeof(INTERACT_LogisticsLift_C_PlayTransitionMontage) == 0x000060, "Wrong size on INTERACT_LogisticsLift_C_PlayTransitionMontage");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, Montage) == 0x000000, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, StartTime) == 0x000028, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::StartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, MontageToPlay) == 0x000030, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::MontageToPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000040, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_PlayTransitionMontage, CallFunc_Montage_Play_ReturnValue) == 0x000058, "Member 'INTERACT_LogisticsLift_C_PlayTransitionMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.EVENT_OnMontageFinished
// 0x000C (0x000C - 0x0000)
struct INTERACT_LogisticsLift_C_EVENT_OnMontageFinished final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_EVENT_OnMontageFinished");
static_assert(sizeof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished) == 0x00000C, "Wrong size on INTERACT_LogisticsLift_C_EVENT_OnMontageFinished");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'INTERACT_LogisticsLift_C_EVENT_OnMontageFinished::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'INTERACT_LogisticsLift_C_EVENT_OnMontageFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_EVENT_OnMontageFinished::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnMontageFinished, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'INTERACT_LogisticsLift_C_EVENT_OnMontageFinished::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.UpdateNavigationModifier
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_LogisticsLift_C_UpdateNavigationModifier final
{
public:
	EVoxelNavModifierState                        ModifierState;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelNavModifierState                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_UpdateNavigationModifier) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_UpdateNavigationModifier");
static_assert(sizeof(INTERACT_LogisticsLift_C_UpdateNavigationModifier) == 0x000006, "Wrong size on INTERACT_LogisticsLift_C_UpdateNavigationModifier");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, ModifierState) == 0x000000, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::ModifierState' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, Temp_byte_Variable) == 0x000002, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, Temp_byte_Variable_1) == 0x000003, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateNavigationModifier, K2Node_Select_Default) == 0x000005, "Member 'INTERACT_LogisticsLift_C_UpdateNavigationModifier::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.UpdateAnimInstanceState
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_LogisticsLift_C_UpdateAnimInstanceState final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ReinforcementLift_C*            K2Node_DynamicCast_AsAnim_BP_Reinforcement_Lift;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_UpdateAnimInstanceState");
static_assert(sizeof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState) == 0x000020, "Wrong size on INTERACT_LogisticsLift_C_UpdateAnimInstanceState");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState, IsOpen) == 0x000000, "Member 'INTERACT_LogisticsLift_C_UpdateAnimInstanceState::IsOpen' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_LogisticsLift_C_UpdateAnimInstanceState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState, K2Node_DynamicCast_AsAnim_BP_Reinforcement_Lift) == 0x000010, "Member 'INTERACT_LogisticsLift_C_UpdateAnimInstanceState::K2Node_DynamicCast_AsAnim_BP_Reinforcement_Lift' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_LogisticsLift_C_UpdateAnimInstanceState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateAnimInstanceState, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'INTERACT_LogisticsLift_C_UpdateAnimInstanceState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.EVENT_TryStartLiftTransition
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition final
{
public:
	bool                                          CallFunc_TryStartLogisticsLiftTransition_Result;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartLogisticsLiftTransition_Result_1; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition");
static_assert(sizeof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition) == 0x000005, "Wrong size on INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition, CallFunc_TryStartLogisticsLiftTransition_Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition::CallFunc_TryStartLogisticsLiftTransition_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition, CallFunc_TryStartLogisticsLiftTransition_Result_1) == 0x000001, "Member 'INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition::CallFunc_TryStartLogisticsLiftTransition_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'INTERACT_LogisticsLift_C_EVENT_TryStartLiftTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.UpdateEmissiveStrength
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_LogisticsLift_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength) == 0x000014, "Wrong size on INTERACT_LogisticsLift_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_LogisticsLift_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_UpdateEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_LogisticsLift_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateEmissiveStrength, CallFunc_MakeVector2D_ReturnValue) == 0x00000C, "Member 'INTERACT_LogisticsLift_C_UpdateEmissiveStrength::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.UpdateLogisticsLiftVisibility
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility");
static_assert(sizeof(INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility) == 0x000003, "Wrong size on INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'INTERACT_LogisticsLift_C_UpdateLogisticsLiftVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.EVENT_RestoreCompartmentActorLocations
// 0x02C0 (0x02C0 - 0x0000)
struct INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations final
{
public:
	float                                         NewLocalVar_0;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CompartmentActor;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_1;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Map_Find_Value_2;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base_1;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0298(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations");
static_assert(sizeof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations) == 0x0002C0, "Wrong size on INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, NewLocalVar_0) == 0x000000, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, PickupActor) == 0x000008, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::PickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, Character) == 0x000010, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CompartmentActor) == 0x000018, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CompartmentActor' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, Temp_int_Array_Index_Variable) == 0x000028, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_Value) == 0x00003C, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000050, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_X) == 0x00005C, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Y) == 0x000060, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Z) == 0x000064, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000074, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000FC, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_Value_1) == 0x000108, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_ReturnValue_1) == 0x00010C, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_X_1) == 0x000110, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Y_1) == 0x000114, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Z_1) == 0x000118, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_MakeVector_ReturnValue_2) == 0x00011C, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000128, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_Value_2) == 0x0001B0, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Find_ReturnValue_2) == 0x0001B4, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_X_2) == 0x0001C4, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Y_2) == 0x0001C8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_BreakVector_Z_2) == 0x0001CC, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_AsPICKUP_Base) == 0x0001D0, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_MakeVector_ReturnValue_3) == 0x0001DC, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001E8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000270, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_AsDEBRIS_Base_1) == 0x000278, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_AsDEBRIS_Base_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_bSuccess_2) == 0x000280, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000288, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, K2Node_DynamicCast_bSuccess_3) == 0x000290, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Map_Keys_Keys) == 0x000298, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Array_Length_ReturnValue) == 0x0002A8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations, CallFunc_Less_IntInt_ReturnValue) == 0x0002B8, "Member 'INTERACT_LogisticsLift_C_EVENT_RestoreCompartmentActorLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.EVENT_OnDisableAttribChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged) == 0x000010, "Wrong size on INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_LogisticsLift_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.TryInteract
// 0x00B0 (0x00B0 - 0x0000)
struct INTERACT_LogisticsLift_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0060(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0080(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartLogisticsLiftTransition_Result;   // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_TryInteract");
static_assert(sizeof(INTERACT_LogisticsLift_C_TryInteract) == 0x0000B0, "Wrong size on INTERACT_LogisticsLift_C_TryInteract");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_LogisticsLift_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_LogisticsLift_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_LogisticsLift_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_LogisticsLift_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_LogisticsLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000060, "Member 'INTERACT_LogisticsLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000080, "Member 'INTERACT_LogisticsLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000A4, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000AA, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_TryInteract, CallFunc_TryStartLogisticsLiftTransition_Result) == 0x0000AB, "Member 'INTERACT_LogisticsLift_C_TryInteract::CallFunc_TryStartLogisticsLiftTransition_Result' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.ShouldSaveActor
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_LogisticsLift_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0028(0x0018)()
};
static_assert(alignof(INTERACT_LogisticsLift_C_ShouldSaveActor) == 0x000008, "Wrong alignment on INTERACT_LogisticsLift_C_ShouldSaveActor");
static_assert(sizeof(INTERACT_LogisticsLift_C_ShouldSaveActor) == 0x000040, "Wrong size on INTERACT_LogisticsLift_C_ShouldSaveActor");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, CallFunc_GetAttribValue_ReturnValue) == 0x00001C, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000021, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000028, "Member 'INTERACT_LogisticsLift_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LogisticsLift_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_LogisticsLift_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_LogisticsLift_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_LogisticsLift_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_LogisticsLift_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_LogisticsLift_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function INTERACT_LogisticsLift.INTERACT_LogisticsLift_C.SetInteractPowered
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LogisticsLift_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LogisticsLift_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_LogisticsLift_C_SetInteractPowered");
static_assert(sizeof(INTERACT_LogisticsLift_C_SetInteractPowered) == 0x000010, "Wrong size on INTERACT_LogisticsLift_C_SetInteractPowered");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_LogisticsLift_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_LogisticsLift_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_LogisticsLift_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_LogisticsLift_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LogisticsLift_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'INTERACT_LogisticsLift_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}


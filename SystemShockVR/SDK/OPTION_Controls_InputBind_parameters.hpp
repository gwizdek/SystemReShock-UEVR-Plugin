#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Controls_InputBind

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "ENUM_PrimarySecondary_structs.hpp"
#include "UMG_structs.hpp"
#include "STRUCT_BoundInputActionPair_structs.hpp"


namespace SDK::Params
{

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ExecuteUbergraph_OPTION_Controls_InputBind
// 0x0008 (0x0008 - 0x0000)
struct OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind) == 0x000004, "Wrong alignment on OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind");
static_assert(sizeof(OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind) == 0x000008, "Wrong size on OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind");
static_assert(offsetof(OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind, EntryPoint) == 0x000000, "Member 'OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind::EntryPoint' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind, K2Node_Event_IsDesignTime) == 0x000004, "Member 'OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OPTION_Controls_InputBind_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_PreConstruct) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_PreConstruct");
static_assert(sizeof(OPTION_Controls_InputBind_C_PreConstruct) == 0x000001, "Wrong size on OPTION_Controls_InputBind_C_PreConstruct");
static_assert(offsetof(OPTION_Controls_InputBind_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OPTION_Controls_InputBind_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SetIsHighlighted
// 0x0002 (0x0002 - 0x0000)
struct OPTION_Controls_InputBind_C_SetIsHighlighted final
{
public:
	bool                                          NewHighlightedState;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceInstant;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_SetIsHighlighted) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_SetIsHighlighted");
static_assert(sizeof(OPTION_Controls_InputBind_C_SetIsHighlighted) == 0x000002, "Wrong size on OPTION_Controls_InputBind_C_SetIsHighlighted");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetIsHighlighted, NewHighlightedState) == 0x000000, "Member 'OPTION_Controls_InputBind_C_SetIsHighlighted::NewHighlightedState' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetIsHighlighted, ForceInstant) == 0x000001, "Member 'OPTION_Controls_InputBind_C_SetIsHighlighted::ForceInstant' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseDownPrimary
// 0x0230 (0x0230 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetMouseButtonFromPointerEvent_Result;    // 0x0160(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0178(0x00B8)()
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary) == 0x000230, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary, MouseEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary::MouseEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary, ReturnValue) == 0x0000A8, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary::ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary, CallFunc_GetMouseButtonFromPointerEvent_Result) == 0x000160, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary::CallFunc_GetMouseButtonFromPointerEvent_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary, CallFunc_Handled_ReturnValue) == 0x000178, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseDownSecondary
// 0x0230 (0x0230 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetMouseButtonFromPointerEvent_Result;    // 0x0160(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0178(0x00B8)()
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary) == 0x000230, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary, MouseEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary::MouseEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary, ReturnValue) == 0x0000A8, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary::ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary, CallFunc_GetMouseButtonFromPointerEvent_Result) == 0x000160, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary::CallFunc_GetMouseButtonFromPointerEvent_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary, CallFunc_Handled_ReturnValue) == 0x000178, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnterPrimary
// 0x00A8 (0x00A8 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary) == 0x0000A8, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary, MouseEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExitPrimary
// 0x0070 (0x0070 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary) == 0x000070, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary, MouseEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnterSecondary
// 0x00A8 (0x00A8 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary) == 0x0000A8, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary, MouseEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExitSecondary
// 0x0070 (0x0070 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary) == 0x000070, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary, MouseEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct OPTION_Controls_InputBind_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidKeyToBind_Result;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0200(0x00B8)()
};
static_assert(alignof(OPTION_Controls_InputBind_C_OnKeyDown) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_OnKeyDown");
static_assert(sizeof(OPTION_Controls_InputBind_C_OnKeyDown) == 0x0002B8, "Wrong size on OPTION_Controls_InputBind_C_OnKeyDown");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E0, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, CallFunc_IsValidKeyToBind_Result) == 0x0001F8, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::CallFunc_IsValidKeyToBind_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_OnKeyDown, CallFunc_Handled_ReturnValue_1) == 0x000200, "Member 'OPTION_Controls_InputBind_C_OnKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnter_Background
// 0x00A8 (0x00A8 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background) == 0x0000A8, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background, MyGeometry) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background::MyGeometry' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background, MouseEvent) == 0x000038, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExit_Background
// 0x0070 (0x0070 - 0x0000)
struct OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background");
static_assert(sizeof(OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background) == 0x000070, "Wrong size on OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background");
static_assert(offsetof(OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background, MouseEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background::MouseEvent' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SetOptionListeningForInput
// 0x0028 (0x0028 - 0x0000)
struct OPTION_Controls_InputBind_C_SetOptionListeningForInput final
{
public:
	bool                                          IsListening;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWIDGET_MenuListItemBase_C*>     ParentChildItems;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_SetOptionListeningForInput) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_SetOptionListeningForInput");
static_assert(sizeof(OPTION_Controls_InputBind_C_SetOptionListeningForInput) == 0x000028, "Wrong size on OPTION_Controls_InputBind_C_SetOptionListeningForInput");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetOptionListeningForInput, IsListening) == 0x000000, "Member 'OPTION_Controls_InputBind_C_SetOptionListeningForInput::IsListening' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetOptionListeningForInput, ParentChildItems) == 0x000008, "Member 'OPTION_Controls_InputBind_C_SetOptionListeningForInput::ParentChildItems' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetOptionListeningForInput, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000018, "Member 'OPTION_Controls_InputBind_C_SetOptionListeningForInput::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SetOptionListeningForInput, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'OPTION_Controls_InputBind_C_SetOptionListeningForInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.CycleButtonHighlightLeft
// 0x0150 (0x0150 - 0x0000)
struct OPTION_Controls_InputBind_C_CycleButtonHighlightLeft final
{
public:
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent;                    // 0x0000(0x0070)()
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0070(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x00A8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent_1;                  // 0x00E0(0x0070)()
};
static_assert(alignof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_CycleButtonHighlightLeft");
static_assert(sizeof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft) == 0x000150, "Wrong size on OPTION_Controls_InputBind_C_CycleButtonHighlightLeft");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft, K2Node_MakeStruct_PointerEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightLeft::K2Node_MakeStruct_PointerEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft, CallFunc_GetCachedGeometry_ReturnValue) == 0x000070, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightLeft::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x0000A8, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightLeft::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightLeft, K2Node_MakeStruct_PointerEvent_1) == 0x0000E0, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightLeft::K2Node_MakeStruct_PointerEvent_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.CycleButtonHighlightRight
// 0x0150 (0x0150 - 0x0000)
struct OPTION_Controls_InputBind_C_CycleButtonHighlightRight final
{
public:
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent;                    // 0x0000(0x0070)()
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0070(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x00A8(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent_1;                  // 0x00E0(0x0070)()
};
static_assert(alignof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_CycleButtonHighlightRight");
static_assert(sizeof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight) == 0x000150, "Wrong size on OPTION_Controls_InputBind_C_CycleButtonHighlightRight");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight, K2Node_MakeStruct_PointerEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightRight::K2Node_MakeStruct_PointerEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight, CallFunc_GetCachedGeometry_ReturnValue) == 0x000070, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightRight::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x0000A8, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightRight::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_CycleButtonHighlightRight, K2Node_MakeStruct_PointerEvent_1) == 0x0000E0, "Member 'OPTION_Controls_InputBind_C_CycleButtonHighlightRight::K2Node_MakeStruct_PointerEvent_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.TryStopListeningForInput
// 0x0001 (0x0001 - 0x0000)
struct OPTION_Controls_InputBind_C_TryStopListeningForInput final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_TryStopListeningForInput) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_TryStopListeningForInput");
static_assert(sizeof(OPTION_Controls_InputBind_C_TryStopListeningForInput) == 0x000001, "Wrong size on OPTION_Controls_InputBind_C_TryStopListeningForInput");
static_assert(offsetof(OPTION_Controls_InputBind_C_TryStopListeningForInput, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'OPTION_Controls_InputBind_C_TryStopListeningForInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsKeyInCorrectBindScope
// 0x0030 (0x0030 - 0x0000)
struct OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadBindsList_Result;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope");
static_assert(sizeof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope) == 0x000030, "Wrong size on OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, Key) == 0x000000, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::Key' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, Result) == 0x000018, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000019, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000020, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, CallFunc_IsGamepadBindsList_Result) == 0x000029, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::CallFunc_IsGamepadBindsList_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00002A, "Member 'OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.UpdateVisuals
// 0x0050 (0x0050 - 0x0000)
struct OPTION_Controls_InputBind_C_UpdateVisuals final
{
public:
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetStashedKeyForAction_Result;            // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetStashedKeyForAction_Result_1;          // 0x0038(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Controls_InputBind_C_UpdateVisuals) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_UpdateVisuals");
static_assert(sizeof(OPTION_Controls_InputBind_C_UpdateVisuals) == 0x000050, "Wrong size on OPTION_Controls_InputBind_C_UpdateVisuals");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, CallFunc_Conv_StringToName_ReturnValue) == 0x000000, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000008, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000010, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, CallFunc_GetStashedKeyForAction_Result) == 0x000020, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::CallFunc_GetStashedKeyForAction_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateVisuals, CallFunc_GetStashedKeyForAction_Result_1) == 0x000038, "Member 'OPTION_Controls_InputBind_C_UpdateVisuals::CallFunc_GetStashedKeyForAction_Result_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SelectDefaultValue
// 0x00B0 (0x00B0 - 0x0000)
struct OPTION_Controls_InputBind_C_SelectDefaultValue final
{
public:
	struct FSTRUCT_BoundInputActionPair           DefaultBindPair;                                   // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadInputAction_Result;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_BoundInputActionPair           CallFunc_GetDefaultBindPairForCategory_Result;     // 0x0080(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Controls_InputBind_C_SelectDefaultValue) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_SelectDefaultValue");
static_assert(sizeof(OPTION_Controls_InputBind_C_SelectDefaultValue) == 0x0000B0, "Wrong size on OPTION_Controls_InputBind_C_SelectDefaultValue");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, DefaultBindPair) == 0x000000, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::DefaultBindPair' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_IsGamepadInputAction_Result) == 0x000038, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_IsGamepadInputAction_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00003C, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000048, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000054, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1) == 0x000060, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_Conv_StringToName_ReturnValue_3) == 0x00006C, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000078, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_SelectDefaultValue, CallFunc_GetDefaultBindPairForCategory_Result) == 0x000080, "Member 'OPTION_Controls_InputBind_C_SelectDefaultValue::CallFunc_GetDefaultBindPairForCategory_Result' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavLeft
// 0x0005 (0x0005 - 0x0000)
struct OPTION_Controls_InputBind_C_ReceiveNavLeft final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_ReceiveNavLeft) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_ReceiveNavLeft");
static_assert(sizeof(OPTION_Controls_InputBind_C_ReceiveNavLeft) == 0x000005, "Wrong size on OPTION_Controls_InputBind_C_ReceiveNavLeft");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavLeft, InputState) == 0x000000, "Member 'OPTION_Controls_InputBind_C_ReceiveNavLeft::InputState' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavLeft, Result) == 0x000001, "Member 'OPTION_Controls_InputBind_C_ReceiveNavLeft::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'OPTION_Controls_InputBind_C_ReceiveNavLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavLeft, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'OPTION_Controls_InputBind_C_ReceiveNavLeft::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavLeft, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'OPTION_Controls_InputBind_C_ReceiveNavLeft::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.UpdateCurrentVisuals
// 0x00F8 (0x00F8 - 0x0000)
struct OPTION_Controls_InputBind_C_UpdateCurrentVisuals final
{
public:
	class FText                                   PressKeyText_Gamepad_Switch;                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   PressKeyText_Gamepad_PlayStation;                  // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   PressKeyText_Gamepad_Xbox;                         // 0x0030(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue_1;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker_1;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result_1;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnythingHighlightedOrListening_Result;  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnythingHighlightedOrListening_Result_1; // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_UpdateCurrentVisuals");
static_assert(sizeof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals) == 0x0000F8, "Wrong size on OPTION_Controls_InputBind_C_UpdateCurrentVisuals");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, PressKeyText_Gamepad_Switch) == 0x000000, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::PressKeyText_Gamepad_Switch' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, PressKeyText_Gamepad_PlayStation) == 0x000018, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::PressKeyText_Gamepad_PlayStation' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, PressKeyText_Gamepad_Xbox) == 0x000030, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::PressKeyText_Gamepad_Xbox' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_bool_Variable) == 0x000048, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable) == 0x000049, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_1) == 0x00004A, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_bool_Variable_1) == 0x00004B, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_GetPlatformName_ReturnValue) == 0x000050, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_GetPlatformName_ReturnValue_1) == 0x000060, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_GetPlatformName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_SwitchString_CmpSuccess) == 0x000070, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_SwitchString_CmpSuccess_1) == 0x000071, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_2) == 0x000072, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_3) == 0x000073, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_bool_Variable_2) == 0x000074, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_4) == 0x000075, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_5) == 0x000076, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_bool_Variable_3) == 0x000080, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_DynamicCast_AsCON_Hacker) == 0x000088, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_6) == 0x000091, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_IsUsingGamepad_Result) == 0x000092, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_7) == 0x000093, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_bool_Variable_4) == 0x000094, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_8) == 0x000095, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_GetPlayerController_ReturnValue_1) == 0x000098, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_DynamicCast_AsCON_Hacker_1) == 0x0000A0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_DynamicCast_AsCON_Hacker_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_IsUsingGamepad_Result_1) == 0x0000A9, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_IsUsingGamepad_Result_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_Select_Default) == 0x0000AA, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x0000AB, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanOR_ReturnValue) == 0x0000AC, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanAND_ReturnValue) == 0x0000AD, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AE, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanOR_ReturnValue_1) == 0x0000AF, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B1, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_SelectFloat_ReturnValue) == 0x0000B4, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanOR_ReturnValue_2) == 0x0000B8, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B9, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000BA, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_IsAnythingHighlightedOrListening_Result) == 0x0000BB, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_IsAnythingHighlightedOrListening_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_IsAnythingHighlightedOrListening_Result_1) == 0x0000BC, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_IsAnythingHighlightedOrListening_Result_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_SelectFloat_ReturnValue_1) == 0x0000C0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, Temp_byte_Variable_9) == 0x0000C4, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_Select_Default_1) == 0x0000C5, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_Select_Default_2) == 0x0000C6, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_Select_Default_3) == 0x0000C7, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, K2Node_Select_Default_4) == 0x0000C8, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x0000D0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanOR_ReturnValue_3) == 0x0000D8, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x0000E0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_BooleanAND_ReturnValue_3) == 0x0000E8, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_SelectFloat_ReturnValue_2) == 0x0000EC, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_UpdateCurrentVisuals, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x0000F0, "Member 'OPTION_Controls_InputBind_C_UpdateCurrentVisuals::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.TryUnhighlightOption
// 0x0002 (0x0002 - 0x0000)
struct OPTION_Controls_InputBind_C_TryUnhighlightOption final
{
public:
	bool                                          CallFunc_IsAnythingHovered_Result;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_TryUnhighlightOption) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_TryUnhighlightOption");
static_assert(sizeof(OPTION_Controls_InputBind_C_TryUnhighlightOption) == 0x000002, "Wrong size on OPTION_Controls_InputBind_C_TryUnhighlightOption");
static_assert(offsetof(OPTION_Controls_InputBind_C_TryUnhighlightOption, CallFunc_IsAnythingHovered_Result) == 0x000000, "Member 'OPTION_Controls_InputBind_C_TryUnhighlightOption::CallFunc_IsAnythingHovered_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_TryUnhighlightOption, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'OPTION_Controls_InputBind_C_TryUnhighlightOption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnyOptionListeningForInput
// 0x0028 (0x0028 - 0x0000)
struct OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWIDGET_MenuListItemBase_C*>     ParentChildItems;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsOptionListeningForInput_Result;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput");
static_assert(sizeof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput) == 0x000028, "Wrong size on OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput, Result) == 0x000000, "Member 'OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput, ParentChildItems) == 0x000008, "Member 'OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput::ParentChildItems' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000018, "Member 'OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput, CallFunc_GetIsOptionListeningForInput_Result) == 0x000021, "Member 'OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput::CallFunc_GetIsOptionListeningForInput_Result' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnythingHighlightedOrListening
// 0x0005 (0x0005 - 0x0000)
struct OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening");
static_assert(sizeof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening) == 0x000005, "Wrong size on OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening, Result) == 0x000000, "Member 'OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening, CallFunc_BooleanOR_ReturnValue_3) == 0x000004, "Member 'OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.StartListeningForInput
// 0x0010 (0x0010 - 0x0000)
struct OPTION_Controls_InputBind_C_StartListeningForInput final
{
public:
	ENUM_PrimarySecondary                         Rank;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Controls_InputBind_C_StartListeningForInput) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_StartListeningForInput");
static_assert(sizeof(OPTION_Controls_InputBind_C_StartListeningForInput) == 0x000010, "Wrong size on OPTION_Controls_InputBind_C_StartListeningForInput");
static_assert(offsetof(OPTION_Controls_InputBind_C_StartListeningForInput, Rank) == 0x000000, "Member 'OPTION_Controls_InputBind_C_StartListeningForInput::Rank' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StartListeningForInput, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'OPTION_Controls_InputBind_C_StartListeningForInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StartListeningForInput, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'OPTION_Controls_InputBind_C_StartListeningForInput::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.StashInputBind
// 0x0050 (0x0050 - 0x0000)
struct OPTION_Controls_InputBind_C_StashInputBind final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyInCorrectBindScope_Result;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInCorrectBindScope_Result_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Controls_BindsList_C* K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_StashInputBind) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_StashInputBind");
static_assert(sizeof(OPTION_Controls_InputBind_C_StashInputBind) == 0x000050, "Wrong size on OPTION_Controls_InputBind_C_StashInputBind");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, Key) == 0x000000, "Member 'OPTION_Controls_InputBind_C_StashInputBind::Key' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, CallFunc_IsKeyInCorrectBindScope_Result) == 0x000018, "Member 'OPTION_Controls_InputBind_C_StashInputBind::CallFunc_IsKeyInCorrectBindScope_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, CallFunc_IsKeyInCorrectBindScope_Result_1) == 0x000019, "Member 'OPTION_Controls_InputBind_C_StashInputBind::CallFunc_IsKeyInCorrectBindScope_Result_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'OPTION_Controls_InputBind_C_StashInputBind::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List) == 0x000028, "Member 'OPTION_Controls_InputBind_C_StashInputBind::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'OPTION_Controls_InputBind_C_StashInputBind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000034, "Member 'OPTION_Controls_InputBind_C_StashInputBind::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1) == 0x000040, "Member 'OPTION_Controls_InputBind_C_StashInputBind::K2Node_DynamicCast_AsWIDGET_Options_Menu_Controls_Binds_List_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_StashInputBind, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'OPTION_Controls_InputBind_C_StashInputBind::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.GetMouseButtonFromPointerEvent
// 0x0090 (0x0090 - 0x0000)
struct OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKey                                   Result;                                            // 0x0070(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_2; // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_3; // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_4; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent) == 0x000008, "Wrong alignment on OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent");
static_assert(sizeof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent) == 0x000090, "Wrong size on OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, PointerEvent) == 0x000000, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::PointerEvent' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, Result) == 0x000070, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000088, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1) == 0x000089, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_2) == 0x00008A, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_3) == 0x00008B, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_4) == 0x00008C, "Member 'OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_4' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnythingHovered
// 0x0006 (0x0006 - 0x0000)
struct OPTION_Controls_InputBind_C_IsAnythingHovered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_IsAnythingHovered) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_IsAnythingHovered");
static_assert(sizeof(OPTION_Controls_InputBind_C_IsAnythingHovered) == 0x000006, "Wrong size on OPTION_Controls_InputBind_C_IsAnythingHovered");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, Result) == 0x000000, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, CallFunc_IsHovered_ReturnValue_1) == 0x000002, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, CallFunc_IsHovered_ReturnValue_2) == 0x000003, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::CallFunc_IsHovered_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_IsAnythingHovered, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'OPTION_Controls_InputBind_C_IsAnythingHovered::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavRight
// 0x0005 (0x0005 - 0x0000)
struct OPTION_Controls_InputBind_C_ReceiveNavRight final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_ReceiveNavRight) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_ReceiveNavRight");
static_assert(sizeof(OPTION_Controls_InputBind_C_ReceiveNavRight) == 0x000005, "Wrong size on OPTION_Controls_InputBind_C_ReceiveNavRight");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavRight, InputState) == 0x000000, "Member 'OPTION_Controls_InputBind_C_ReceiveNavRight::InputState' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavRight, Result) == 0x000001, "Member 'OPTION_Controls_InputBind_C_ReceiveNavRight::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavRight, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'OPTION_Controls_InputBind_C_ReceiveNavRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavRight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'OPTION_Controls_InputBind_C_ReceiveNavRight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavRight, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'OPTION_Controls_InputBind_C_ReceiveNavRight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavAccept
// 0x0002 (0x0002 - 0x0000)
struct OPTION_Controls_InputBind_C_ReceiveNavAccept final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Controls_InputBind_C_ReceiveNavAccept) == 0x000001, "Wrong alignment on OPTION_Controls_InputBind_C_ReceiveNavAccept");
static_assert(sizeof(OPTION_Controls_InputBind_C_ReceiveNavAccept) == 0x000002, "Wrong size on OPTION_Controls_InputBind_C_ReceiveNavAccept");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavAccept, InputState) == 0x000000, "Member 'OPTION_Controls_InputBind_C_ReceiveNavAccept::InputState' has a wrong offset!");
static_assert(offsetof(OPTION_Controls_InputBind_C_ReceiveNavAccept, Result) == 0x000001, "Member 'OPTION_Controls_InputBind_C_ReceiveNavAccept::Result' has a wrong offset!");

}


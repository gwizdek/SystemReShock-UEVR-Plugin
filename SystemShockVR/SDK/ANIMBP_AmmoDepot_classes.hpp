#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_AmmoDepot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_AmmoDepot.ANIMBP_AmmoDepot_C
// 0x06D0 (0x0990 - 0x02C0)
class UANIMBP_AmmoDepot_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x02F8(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0398(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0438(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x04D8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0558(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05D8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0658(0x0080)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x06D8(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x06F0(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x07B0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0830(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x08B0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x08F8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0940(0x0048)()
	bool                                          BigPanelOpen;                                      // 0x0988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LeftAmmoPanelOpen;                                 // 0x0989(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RightAmmoPanelOpen;                                // 0x098A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ANIMBP_AmmoDepot(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_AmmoDepot_C">();
	}
	static class UANIMBP_AmmoDepot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_AmmoDepot_C>();
	}
};
static_assert(alignof(UANIMBP_AmmoDepot_C) == 0x000010, "Wrong alignment on UANIMBP_AmmoDepot_C");
static_assert(sizeof(UANIMBP_AmmoDepot_C) == 0x000990, "Wrong size on UANIMBP_AmmoDepot_C");
static_assert(offsetof(UANIMBP_AmmoDepot_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_AmmoDepot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_BlendListByBool_2) == 0x0002F8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_BlendListByBool_1) == 0x000398, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_BlendListByBool) == 0x000438, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer_5) == 0x0004D8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer_4) == 0x000558, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer_3) == 0x0005D8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer_2) == 0x000658, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_LocalRefPose) == 0x0006D8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_LayeredBoneBlend) == 0x0006F0, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer_1) == 0x0007B0, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_SequencePlayer) == 0x000830, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_Slot_2) == 0x0008B0, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_Slot_1) == 0x0008F8, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, AnimGraphNode_Slot) == 0x000940, "Member 'UANIMBP_AmmoDepot_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, BigPanelOpen) == 0x000988, "Member 'UANIMBP_AmmoDepot_C::BigPanelOpen' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, LeftAmmoPanelOpen) == 0x000989, "Member 'UANIMBP_AmmoDepot_C::LeftAmmoPanelOpen' has a wrong offset!");
static_assert(offsetof(UANIMBP_AmmoDepot_C, RightAmmoPanelOpen) == 0x00098A, "Member 'UANIMBP_AmmoDepot_C::RightAmmoPanelOpen' has a wrong offset!");

}


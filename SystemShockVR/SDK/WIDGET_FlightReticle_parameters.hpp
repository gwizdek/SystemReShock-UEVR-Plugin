#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_FlightReticle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_FlightReticle.WIDGET_FlightReticle_C.RotateUpward
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_FlightReticle_C_RotateUpward final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_FlightReticle_C_RotateUpward) == 0x000008, "Wrong alignment on WIDGET_FlightReticle_C_RotateUpward");
static_assert(sizeof(WIDGET_FlightReticle_C_RotateUpward) == 0x000028, "Wrong size on WIDGET_FlightReticle_C_RotateUpward");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_FlightReticle_C_RotateUpward, CallFunc_Lerp_ReturnValue) == 0x000024, "Member 'WIDGET_FlightReticle_C_RotateUpward::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}


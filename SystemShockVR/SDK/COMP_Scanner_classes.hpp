#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_Scanner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_InteractResultType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass COMP_Scanner.COMP_Scanner_C
// 0x00E8 (0x0198 - 0x00B0)
class UCOMP_Scanner_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       CameraComponent;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraPanelWidget*                     CameraPanelWidget;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                LastCursorInteractable;                            // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    LastCursorPrimitive;                               // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     LastCursorMaterial;                                // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastCursorHitDistance;                             // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxScanRadius;                                     // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               InteractTraceChannel;                              // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnScanDataChanged;                                 // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CachedScanDistance;                                // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LastDescription;                                   // 0x0108(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	ENUM_InteractResultType                       FeedbackType;                                      // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FeedbackMessage;                                   // 0x0128(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnFeedbackDataChanged;                             // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   LastDescriptorRowName;                             // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           LastFeedbackMessages;                              // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UShuffler*                              FeedbackShuffler;                                  // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           FeedbackMessageHistory;                            // 0x0170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnScannerUpdated;                                  // 0x0180(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsScannerEnabled;                                  // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnScanDataChanged__DelegateSignature(class UObject* Interactable, class UPrimitiveComponent* Primitive, const class FText& Description);
	void OnFeedbackDataChanged__DelegateSignature(ENUM_InteractResultType FeedbackType_0, const class FText& FeedbackMessage_0);
	void OnScannerUpdated__DelegateSignature(class UPrimitiveComponent* ScannedPrimitive, float Distance);
	void ExecuteUbergraph_COMP_Scanner(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void HasCursorObjectChanged(class UPrimitiveComponent* CursorPrimitive, class UMaterialInterface* CursorMaterial, bool* Result);
	class UMaterialInterface* GetMaterialFromHitComponent(class UObject* Object, int32 FaceIndex);
	void GetLastCursorActor(class AActor** Actor);
	void GetDescriptorUnderCursor(TScriptInterface<class IINTERF_Descriptor_C>* Descriptor);
	void InitializeScanner(class UCameraComponent* Camera, class UCameraPanelWidget* CameraPanel);
	void InitializeScannerAttributes();
	void UpdateCursorInformation(class UPrimitiveComponent* CursorPrimitive, class UMaterialInterface* CursorMaterial, float Distance);
	void UpdateInteractionFeedback(const struct FSTRUCT_InteractResults& InteractResults);
	void UpdateScanner();
	void UpdateFeedbackHistory();
	void GetBestTraceResult(const struct FVector& SourceLocation, const struct FVector& TraceDirection, bool* HitSomething, struct FHitResult* Hit);
	void EVENT_OnScanRangeChanged(float CurrValue, float LastValue);
	void IsScannerDisabled(bool* Result);
	void SetScannerEnabled(bool State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"COMP_Scanner_C">();
	}
	static class UCOMP_Scanner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCOMP_Scanner_C>();
	}
};
static_assert(alignof(UCOMP_Scanner_C) == 0x000008, "Wrong alignment on UCOMP_Scanner_C");
static_assert(sizeof(UCOMP_Scanner_C) == 0x000198, "Wrong size on UCOMP_Scanner_C");
static_assert(offsetof(UCOMP_Scanner_C, UberGraphFrame) == 0x0000B0, "Member 'UCOMP_Scanner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, CameraComponent) == 0x0000B8, "Member 'UCOMP_Scanner_C::CameraComponent' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, CameraPanelWidget) == 0x0000C0, "Member 'UCOMP_Scanner_C::CameraPanelWidget' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastCursorInteractable) == 0x0000C8, "Member 'UCOMP_Scanner_C::LastCursorInteractable' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastCursorPrimitive) == 0x0000D0, "Member 'UCOMP_Scanner_C::LastCursorPrimitive' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastCursorMaterial) == 0x0000D8, "Member 'UCOMP_Scanner_C::LastCursorMaterial' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastCursorHitDistance) == 0x0000E0, "Member 'UCOMP_Scanner_C::LastCursorHitDistance' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, MaxScanRadius) == 0x0000E4, "Member 'UCOMP_Scanner_C::MaxScanRadius' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, InteractTraceChannel) == 0x0000E8, "Member 'UCOMP_Scanner_C::InteractTraceChannel' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, OnScanDataChanged) == 0x0000F0, "Member 'UCOMP_Scanner_C::OnScanDataChanged' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, CachedScanDistance) == 0x000100, "Member 'UCOMP_Scanner_C::CachedScanDistance' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastDescription) == 0x000108, "Member 'UCOMP_Scanner_C::LastDescription' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, FeedbackType) == 0x000120, "Member 'UCOMP_Scanner_C::FeedbackType' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, FeedbackMessage) == 0x000128, "Member 'UCOMP_Scanner_C::FeedbackMessage' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, OnFeedbackDataChanged) == 0x000140, "Member 'UCOMP_Scanner_C::OnFeedbackDataChanged' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastDescriptorRowName) == 0x000150, "Member 'UCOMP_Scanner_C::LastDescriptorRowName' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, LastFeedbackMessages) == 0x000158, "Member 'UCOMP_Scanner_C::LastFeedbackMessages' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, FeedbackShuffler) == 0x000168, "Member 'UCOMP_Scanner_C::FeedbackShuffler' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, FeedbackMessageHistory) == 0x000170, "Member 'UCOMP_Scanner_C::FeedbackMessageHistory' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, OnScannerUpdated) == 0x000180, "Member 'UCOMP_Scanner_C::OnScannerUpdated' has a wrong offset!");
static_assert(offsetof(UCOMP_Scanner_C, IsScannerEnabled) == 0x000190, "Member 'UCOMP_Scanner_C::IsScannerEnabled' has a wrong offset!");

}


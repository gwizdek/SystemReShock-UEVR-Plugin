#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SplashScreen_Title

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_TitleScreenSubScreens_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_SplashScreen_Title.WIDGET_SplashScreen_Title_C
// 0x0158 (0x03B8 - 0x0260)
class UWIDGET_SplashScreen_Title_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_StartNewGame;                                 // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DarkenBackground;                                  // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HidePressAnyKey;                                   // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RevealMainMenu;                                    // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PressAnyKeyPulse;                                  // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Main;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Black;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Darkener;                                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_SystemShock;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_SystemShock_Shadow;                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LogoContainer;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_BuildName;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_PressButtonPrompt;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_ProfileName;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_CrosshairCursor_C*              WIDGET_CrosshairCursor;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_DifficultyConfigScreen_C*       WIDGET_DifficultyConfigScreen;                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MainMenu_SplashScreenList_C*    WIDGET_MainMenu_SplashScreenList;                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_OptionsScreen_C*                WIDGET_OptionsScreen;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SaveLoadMenu_C*                 WIDGET_SaveLoadMenu;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SubMenu_Header_C*               WIDGET_SubMenu_Header;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ENUM_TitleScreenSubScreens                    TitleScreenMenuState;                              // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MainMenuSelectedIndex;                             // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecretCodeIndex;                                   // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         SecretCodeSequence;                                // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         AnyKeyTimer;                                       // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnyKeyPressed;                                     // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastKeyPressed;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          SecretKeyPressed;                                  // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MainMenuItemCount;                                 // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             StartNewGame;                                      // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             LoadGame;                                          // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsTransitionComplete;                              // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                OpenedSubScreen;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ContinueSaveFileName;                              // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UStreamingSaveGameProfile*              ContinueSaveGameProfile;                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ButtonPromptMessage;                               // 0x0390(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ACON_Hacker_C*                          CON_Hacker_Ref;                                    // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PreviousMousePosition;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void StartNewGame__DelegateSignature();
	void LoadGame__DelegateSignature();
	void ExecuteUbergraph_WIDGET_SplashScreen_Title(int32 EntryPoint);
	void OnStartNewGameAnimationFinish();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnInitialized();
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_DifficultyConfigScreen_K2Node_ComponentBoundEvent_11_OnMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_DifficultyConfigScreen_K2Node_ComponentBoundEvent_10_OnMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_9_OnSubMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* SubMenu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_8_OnSubMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* SubMenu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_1_OnMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_MainMenu_SplashScreenList_K2Node_ComponentBoundEvent_6_OnMenuAction__DelegateSignature(const class FString& Message);
	void WidgetAnimationEvt_RevealMainMenu_K2Node_WidgetAnimationEvent_0();
	void BndEvt__WIDGET_SplashScreen_Title_WIDGET_DifficultyConfigScreen_K2Node_ComponentBoundEvent_5_NewGameConfigured__DelegateSignature();
	void InvokeNavManager(ENUM_MenuNavigationInput InputType, bool InputState);
	void SetSelectedItem(int32 SelectedIndex);
	void PlayPressAnyKeyAnimation();
	void ShowMainMenu();
	void TryAnyKey(const class FString& InputKey);
	void ToggleCursor(bool CursorEnabled);
	void TriggerMainMenuNavUp();
	void TriggerMainMenuNavDown();
	void ShowSubscreen();
	void ReturnFromSubScreen();
	void ShowDifficultyConfigScreen();
	void Show_Save_Load_Screen();
	void SetPressKeyPromptText();
	void RefreshContinueAutosave();
	void ShowOptionsScreen();
	void EVENT_OnUsingGamepadChanged(bool IsUsingGamepad);
	void ShowPlayerUsername();
	void GetFadeOutDuration(float* Duration);
	void GetSplashDuration(float* Duration);
	void GetFadeInDuration(float* Duration);
	void CanSkipSplash(bool* Result);
	void CanSkipFadeIn(bool* Result);
	void UpdateFadeIn(float Progress, bool* Result);
	void UpdateSplash(float Progress, bool* Result);
	void UpdateFadeOut(float Progress, bool* Result);
	void SetPreGameScreen(class UWIDGET_PreGameScreen_C* PreGameScreen, bool* Result);
	void OnSplashVisible(bool* Result);
	void OnSplashHidden(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_SplashScreen_Title_C">();
	}
	static class UWIDGET_SplashScreen_Title_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_SplashScreen_Title_C>();
	}
};
static_assert(alignof(UWIDGET_SplashScreen_Title_C) == 0x000008, "Wrong alignment on UWIDGET_SplashScreen_Title_C");
static_assert(sizeof(UWIDGET_SplashScreen_Title_C) == 0x0003B8, "Wrong size on UWIDGET_SplashScreen_Title_C");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_SplashScreen_Title_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, ANIM_StartNewGame) == 0x000268, "Member 'UWIDGET_SplashScreen_Title_C::ANIM_StartNewGame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, DarkenBackground) == 0x000270, "Member 'UWIDGET_SplashScreen_Title_C::DarkenBackground' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, HidePressAnyKey) == 0x000278, "Member 'UWIDGET_SplashScreen_Title_C::HidePressAnyKey' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, RevealMainMenu) == 0x000280, "Member 'UWIDGET_SplashScreen_Title_C::RevealMainMenu' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, PressAnyKeyPulse) == 0x000288, "Member 'UWIDGET_SplashScreen_Title_C::PressAnyKeyPulse' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, Canvas_Main) == 0x000290, "Member 'UWIDGET_SplashScreen_Title_C::Canvas_Main' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, IMG_Black) == 0x000298, "Member 'UWIDGET_SplashScreen_Title_C::IMG_Black' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, IMG_Darkener) == 0x0002A0, "Member 'UWIDGET_SplashScreen_Title_C::IMG_Darkener' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, IMG_SystemShock) == 0x0002A8, "Member 'UWIDGET_SplashScreen_Title_C::IMG_SystemShock' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, IMG_SystemShock_Shadow) == 0x0002B0, "Member 'UWIDGET_SplashScreen_Title_C::IMG_SystemShock_Shadow' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, LogoContainer) == 0x0002B8, "Member 'UWIDGET_SplashScreen_Title_C::LogoContainer' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, TEXT_BuildName) == 0x0002C0, "Member 'UWIDGET_SplashScreen_Title_C::TEXT_BuildName' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, TEXT_PressButtonPrompt) == 0x0002C8, "Member 'UWIDGET_SplashScreen_Title_C::TEXT_PressButtonPrompt' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, TEXT_ProfileName) == 0x0002D0, "Member 'UWIDGET_SplashScreen_Title_C::TEXT_ProfileName' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_CrosshairCursor) == 0x0002D8, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_CrosshairCursor' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_DifficultyConfigScreen) == 0x0002E0, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_DifficultyConfigScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_MainMenu_SplashScreenList) == 0x0002E8, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_MainMenu_SplashScreenList' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_OptionsScreen) == 0x0002F0, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_OptionsScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_SaveLoadMenu) == 0x0002F8, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_SaveLoadMenu' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, WIDGET_SubMenu_Header) == 0x000300, "Member 'UWIDGET_SplashScreen_Title_C::WIDGET_SubMenu_Header' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, TitleScreenMenuState) == 0x000308, "Member 'UWIDGET_SplashScreen_Title_C::TitleScreenMenuState' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, MainMenuSelectedIndex) == 0x00030C, "Member 'UWIDGET_SplashScreen_Title_C::MainMenuSelectedIndex' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, SecretCodeIndex) == 0x000310, "Member 'UWIDGET_SplashScreen_Title_C::SecretCodeIndex' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, SecretCodeSequence) == 0x000318, "Member 'UWIDGET_SplashScreen_Title_C::SecretCodeSequence' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, AnyKeyTimer) == 0x000328, "Member 'UWIDGET_SplashScreen_Title_C::AnyKeyTimer' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, AnyKeyPressed) == 0x00032C, "Member 'UWIDGET_SplashScreen_Title_C::AnyKeyPressed' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, LastKeyPressed) == 0x000330, "Member 'UWIDGET_SplashScreen_Title_C::LastKeyPressed' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, SecretKeyPressed) == 0x000340, "Member 'UWIDGET_SplashScreen_Title_C::SecretKeyPressed' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, MainMenuItemCount) == 0x000344, "Member 'UWIDGET_SplashScreen_Title_C::MainMenuItemCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, StartNewGame) == 0x000348, "Member 'UWIDGET_SplashScreen_Title_C::StartNewGame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, LoadGame) == 0x000358, "Member 'UWIDGET_SplashScreen_Title_C::LoadGame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, IsTransitionComplete) == 0x000368, "Member 'UWIDGET_SplashScreen_Title_C::IsTransitionComplete' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, OpenedSubScreen) == 0x000370, "Member 'UWIDGET_SplashScreen_Title_C::OpenedSubScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, ContinueSaveFileName) == 0x000378, "Member 'UWIDGET_SplashScreen_Title_C::ContinueSaveFileName' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, ContinueSaveGameProfile) == 0x000388, "Member 'UWIDGET_SplashScreen_Title_C::ContinueSaveGameProfile' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, ButtonPromptMessage) == 0x000390, "Member 'UWIDGET_SplashScreen_Title_C::ButtonPromptMessage' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, CON_Hacker_Ref) == 0x0003A8, "Member 'UWIDGET_SplashScreen_Title_C::CON_Hacker_Ref' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Title_C, PreviousMousePosition) == 0x0003B0, "Member 'UWIDGET_SplashScreen_Title_C::PreviousMousePosition' has a wrong offset!");

}


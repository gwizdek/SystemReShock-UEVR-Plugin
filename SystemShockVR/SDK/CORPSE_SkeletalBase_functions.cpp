#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CORPSE_SkeletalBase

#include "Basic.hpp"

#include "CORPSE_SkeletalBase_classes.hpp"
#include "CORPSE_SkeletalBase_parameters.hpp"


namespace SDK
{

// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.ExecuteUbergraph_CORPSE_SkeletalBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACORPSE_SkeletalBase_C::ExecuteUbergraph_CORPSE_SkeletalBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "ExecuteUbergraph_CORPSE_SkeletalBase");

	Params::CORPSE_SkeletalBase_C_ExecuteUbergraph_CORPSE_SkeletalBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACORPSE_SkeletalBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "ReceiveTick");

	Params::CORPSE_SkeletalBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::CORPSE_SkeletalBase_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACORPSE_SkeletalBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.InitializeCorpse
// (Protected, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::InitializeCorpse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "InitializeCorpse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.TryInitializeBindings
// (Protected, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::TryInitializeBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "TryInitializeBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.TryReattachCullableComponent
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::TryReattachCullableComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "TryReattachCullableComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.UpdateCorpseVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::UpdateCorpseVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "UpdateCorpseVisibility");

	Params::CORPSE_SkeletalBase_C_UpdateCorpseVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.OnLimbDismembered
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Limb                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_DismemberableLimb        LimbData                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class ADismembermentLimb_Base_C*        LimbActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::OnLimbDismembered(class FName Limb, const struct FSTRUCT_DismemberableLimb& LimbData, class ADismembermentLimb_Base_C* LimbActor, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "OnLimbDismembered");

	Params::CORPSE_SkeletalBase_C_OnLimbDismembered Parms{};

	Parms.Limb = Limb;
	Parms.LimbData = std::move(LimbData);
	Parms.LimbActor = LimbActor;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.OnDynaDamage
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             DynaElement                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::OnDynaDamage(class FName DynaElement, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "OnDynaDamage");

	Params::CORPSE_SkeletalBase_C_OnDynaDamage Parms{};

	Parms.DynaElement = DynaElement;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.EVENT_OnDamageReceived
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACORPSE_SkeletalBase_C::EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "EVENT_OnDamageReceived");

	Params::CORPSE_SkeletalBase_C_EVENT_OnDamageReceived Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.GetScanShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UShapeComponent*                  Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACORPSE_SkeletalBase_C::GetScanShape(class UShapeComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "GetScanShape");

	Params::CORPSE_SkeletalBase_C_GetScanShape Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.SetDamageEnablesPhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::SetDamageEnablesPhysics(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "SetDamageEnablesPhysics");

	Params::CORPSE_SkeletalBase_C_SetDamageEnablesPhysics Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.EVENT_TryStopPhysics
// (Private, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::EVENT_TryStopPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "EVENT_TryStopPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.TryEnableSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::TryEnableSimulatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "TryEnableSimulatePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.TryStartPhysicsSleepTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACORPSE_SkeletalBase_C::TryStartPhysicsSleepTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "TryStartPhysicsSleepTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.EVENT_OnLinkedDebrisHit
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACORPSE_SkeletalBase_C::EVENT_OnLinkedDebrisHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "EVENT_OnLinkedDebrisHit");

	Params::CORPSE_SkeletalBase_C_EVENT_OnLinkedDebrisHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.TryApplyPendingBoneTransforms
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::TryApplyPendingBoneTransforms(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "TryApplyPendingBoneTransforms");

	Params::CORPSE_SkeletalBase_C_TryApplyPendingBoneTransforms Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.HasHighPriorityTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACORPSE_SkeletalBase_C::HasHighPriorityTargetShape(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "HasHighPriorityTargetShape");

	Params::CORPSE_SkeletalBase_C_HasHighPriorityTargetShape Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function CORPSE_SkeletalBase.CORPSE_SkeletalBase_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ACORPSE_SkeletalBase_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CORPSE_SkeletalBase_C", "ReceivePendingBodyTransforms");

	Params::CORPSE_SkeletalBase_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


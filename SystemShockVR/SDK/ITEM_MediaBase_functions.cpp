#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_MediaBase

#include "Basic.hpp"

#include "ITEM_MediaBase_classes.hpp"
#include "ITEM_MediaBase_parameters.hpp"


namespace SDK
{

// Function ITEM_MediaBase.ITEM_MediaBase_C.ExecuteUbergraph_ITEM_MediaBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_MediaBase_C::ExecuteUbergraph_ITEM_MediaBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "ExecuteUbergraph_ITEM_MediaBase");

	Params::ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.GetOverrideMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic*         Material                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_MediaBase_C::GetOverrideMaterial(class UMaterialInstanceDynamic** Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "GetOverrideMaterial");

	Params::ITEM_MediaBase_C_GetOverrideMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Material != nullptr)
		*Material = Parms.Material;
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.PlayMedia
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_MediaBase_C::PlayMedia(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "PlayMedia");

	Params::ITEM_MediaBase_C_PlayMedia Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.ReceiveMediaAnimationMessage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_MediaBase_C::ReceiveMediaAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "ReceiveMediaAnimationMessage");

	Params::ITEM_MediaBase_C_ReceiveMediaAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.OnFinishedDownloadingMedia
// (Private, BlueprintCallable, BlueprintEvent)

void UITEM_MediaBase_C::OnFinishedDownloadingMedia()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "OnFinishedDownloadingMedia");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.ReceiveAnimationMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_MediaBase_C::ReceiveAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "ReceiveAnimationMessage");

	Params::ITEM_MediaBase_C_ReceiveAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.GetDisplayProperties
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AnimInstanceClass                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_MediaBase_C::GetDisplayProperties(class USkeletalMesh** SkeletalMesh, class UClass** AnimInstanceClass, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "GetDisplayProperties");

	Params::ITEM_MediaBase_C_GetDisplayProperties Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkeletalMesh != nullptr)
		*SkeletalMesh = Parms.SkeletalMesh;

	if (AnimInstanceClass != nullptr)
		*AnimInstanceClass = Parms.AnimInstanceClass;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;
}


// Function ITEM_MediaBase.ITEM_MediaBase_C.OnAddedToInventory
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_MediaBase_C::OnAddedToInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_MediaBase_C", "OnAddedToInventory");

	UObject::ProcessEvent(Func, nullptr);
}

}


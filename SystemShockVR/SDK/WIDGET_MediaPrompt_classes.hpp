#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaPrompt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_MediaPrompt.WIDGET_MediaPrompt_C
// 0x01A8 (0x0408 - 0x0260)
class UWIDGET_MediaPrompt_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridMeshWidget*                        MESH_Background;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_HoldKeyToPlay;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_HoldKeyToPlay;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_Title;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_TypeReceived;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FColor                                 Color_Highlight_Low;                               // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_MediaBase_C*                      PromptMediaItem;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_MediaBase_C*                      QueuedMediaItem;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PlayMediaTimer;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ClosePromptTimer;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         KeyPressToPlayDuration;                            // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmailPromptDuration;                               // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NotePromptDuration;                                // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AudioLogPromptDuration;                            // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnterStateTimestamp;                               // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateDuration;                                     // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartHoldingKeyTimestamp;                          // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               KeyHighlightMaterial;                              // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BackgroundMateral;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecomingVisible;                                   // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BecomingInvisible;                                 // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingKey;                                      // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3[0x1];                                      // 0x02F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 Color_Highlight_High;                              // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Highlight_Max;                               // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_TypeReceived;                                // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Title;                                       // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Hold;                                        // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Key;                                         // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DataStickAddedText;                                // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AudioLogReceivedText;                              // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   IncomingEmailText;                                 // 0x0340(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSTRUCT_MediaObject                    MediaDataHandle;                                   // 0x0358(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   HoldKeyToPlayText;                                 // 0x03D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   HoldKeyToReadText;                                 // 0x03F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WIDGET_MediaPrompt(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void InitializeMediaPrompt(class UWIDGET_PlayerHUD_C* PlayerHUD_0);
	void EnableMediaPrompt(class UITEM_MediaBase_C* MediaItem);
	void ResumeMediaPrompt(class UITEM_MediaBase_C* MediaItem, float Timestamp, bool* Success);
	void DisableMediaPrompt(bool Immediate);
	void ReceiveMediaKey(bool Down);
	void EVENT_AutoCloseAudioLogPrompt();
	void EVENT_TryPromptQueuedMedia();
	void UpdateMediaPromptVisibility();
	void EVENT_CloseAndPlayMedia();
	void ForceQueueMediaItem(class UITEM_MediaBase_C* MediaItem);
	void TryQueueMediaItem(class UITEM_MediaBase_C* MediaItem);
	void TryCancelQueuedMediaItem();
	void CanHoldKeyToPlayLog(bool* Result);
	void GetPulsingColorValue(struct FColor* Color);
	void GetHoldingButtonColorValue(struct FColor* Color);
	void MultiplyColorAlpha(const struct FColor& InitialColor, float AlphaMultiplier, struct FColor* ModifiedColor);
	void CanShowPromptForNewMedia(class UITEM_MediaBase_C* MediaItem, bool* Result);
	void GetMediaPriority(class UITEM_MediaBase_C* MediaItem, int32* Priority_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_MediaPrompt_C">();
	}
	static class UWIDGET_MediaPrompt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_MediaPrompt_C>();
	}
};
static_assert(alignof(UWIDGET_MediaPrompt_C) == 0x000008, "Wrong alignment on UWIDGET_MediaPrompt_C");
static_assert(sizeof(UWIDGET_MediaPrompt_C) == 0x000408, "Wrong size on UWIDGET_MediaPrompt_C");
static_assert(offsetof(UWIDGET_MediaPrompt_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_MediaPrompt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, MESH_Background) == 0x000268, "Member 'UWIDGET_MediaPrompt_C::MESH_Background' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, PANEL_HoldKeyToPlay) == 0x000270, "Member 'UWIDGET_MediaPrompt_C::PANEL_HoldKeyToPlay' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, TEXT_HoldKeyToPlay) == 0x000278, "Member 'UWIDGET_MediaPrompt_C::TEXT_HoldKeyToPlay' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, TEXT_Title) == 0x000280, "Member 'UWIDGET_MediaPrompt_C::TEXT_Title' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, TEXT_TypeReceived) == 0x000288, "Member 'UWIDGET_MediaPrompt_C::TEXT_TypeReceived' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Highlight_Low) == 0x000290, "Member 'UWIDGET_MediaPrompt_C::Color_Highlight_Low' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, PromptMediaItem) == 0x000298, "Member 'UWIDGET_MediaPrompt_C::PromptMediaItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, QueuedMediaItem) == 0x0002A0, "Member 'UWIDGET_MediaPrompt_C::QueuedMediaItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, PlayerHUD) == 0x0002A8, "Member 'UWIDGET_MediaPrompt_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, PlayMediaTimer) == 0x0002B0, "Member 'UWIDGET_MediaPrompt_C::PlayMediaTimer' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, ClosePromptTimer) == 0x0002B8, "Member 'UWIDGET_MediaPrompt_C::ClosePromptTimer' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, KeyPressToPlayDuration) == 0x0002C0, "Member 'UWIDGET_MediaPrompt_C::KeyPressToPlayDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, EmailPromptDuration) == 0x0002C4, "Member 'UWIDGET_MediaPrompt_C::EmailPromptDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, NotePromptDuration) == 0x0002C8, "Member 'UWIDGET_MediaPrompt_C::NotePromptDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, AudioLogPromptDuration) == 0x0002CC, "Member 'UWIDGET_MediaPrompt_C::AudioLogPromptDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, EnterStateTimestamp) == 0x0002D0, "Member 'UWIDGET_MediaPrompt_C::EnterStateTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, StateDuration) == 0x0002D4, "Member 'UWIDGET_MediaPrompt_C::StateDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, StartHoldingKeyTimestamp) == 0x0002D8, "Member 'UWIDGET_MediaPrompt_C::StartHoldingKeyTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, KeyHighlightMaterial) == 0x0002E0, "Member 'UWIDGET_MediaPrompt_C::KeyHighlightMaterial' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, BackgroundMateral) == 0x0002E8, "Member 'UWIDGET_MediaPrompt_C::BackgroundMateral' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, BecomingVisible) == 0x0002F0, "Member 'UWIDGET_MediaPrompt_C::BecomingVisible' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, BecomingInvisible) == 0x0002F1, "Member 'UWIDGET_MediaPrompt_C::BecomingInvisible' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, IsHoldingKey) == 0x0002F2, "Member 'UWIDGET_MediaPrompt_C::IsHoldingKey' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Highlight_High) == 0x0002F4, "Member 'UWIDGET_MediaPrompt_C::Color_Highlight_High' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Highlight_Max) == 0x0002F8, "Member 'UWIDGET_MediaPrompt_C::Color_Highlight_Max' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_TypeReceived) == 0x0002FC, "Member 'UWIDGET_MediaPrompt_C::Color_TypeReceived' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Title) == 0x000300, "Member 'UWIDGET_MediaPrompt_C::Color_Title' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Hold) == 0x000304, "Member 'UWIDGET_MediaPrompt_C::Color_Hold' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, Color_Key) == 0x000308, "Member 'UWIDGET_MediaPrompt_C::Color_Key' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, DataStickAddedText) == 0x000310, "Member 'UWIDGET_MediaPrompt_C::DataStickAddedText' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, AudioLogReceivedText) == 0x000328, "Member 'UWIDGET_MediaPrompt_C::AudioLogReceivedText' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, IncomingEmailText) == 0x000340, "Member 'UWIDGET_MediaPrompt_C::IncomingEmailText' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, MediaDataHandle) == 0x000358, "Member 'UWIDGET_MediaPrompt_C::MediaDataHandle' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, HoldKeyToPlayText) == 0x0003D8, "Member 'UWIDGET_MediaPrompt_C::HoldKeyToPlayText' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaPrompt_C, HoldKeyToReadText) == 0x0003F0, "Member 'UWIDGET_MediaPrompt_C::HoldKeyToReadText' has a wrong offset!");

}


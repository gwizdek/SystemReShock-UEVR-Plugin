#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROJECTILE_AvatarPulse

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PROJECTILE_Cyberspace_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PROJECTILE_AvatarPulse.PROJECTILE_AvatarPulse_C
// 0x0020 (0x03B8 - 0x0398)
class APROJECTILE_AvatarPulse_C final : public APROJECTILE_Cyberspace_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PROJECTILE_AvatarPulse_C;           // 0x0398(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   DistanceField;                                     // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PulserMesh;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ReverseRotation;                                   // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRate;                                      // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PROJECTILE_AvatarPulse(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UpdateRotation(float DeltaTime);
	void DestroyProjectile(const struct FVector& ImpactNormal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PROJECTILE_AvatarPulse_C">();
	}
	static class APROJECTILE_AvatarPulse_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APROJECTILE_AvatarPulse_C>();
	}
};
static_assert(alignof(APROJECTILE_AvatarPulse_C) == 0x000008, "Wrong alignment on APROJECTILE_AvatarPulse_C");
static_assert(sizeof(APROJECTILE_AvatarPulse_C) == 0x0003B8, "Wrong size on APROJECTILE_AvatarPulse_C");
static_assert(offsetof(APROJECTILE_AvatarPulse_C, UberGraphFrame_PROJECTILE_AvatarPulse_C) == 0x000398, "Member 'APROJECTILE_AvatarPulse_C::UberGraphFrame_PROJECTILE_AvatarPulse_C' has a wrong offset!");
static_assert(offsetof(APROJECTILE_AvatarPulse_C, DistanceField) == 0x0003A0, "Member 'APROJECTILE_AvatarPulse_C::DistanceField' has a wrong offset!");
static_assert(offsetof(APROJECTILE_AvatarPulse_C, PulserMesh) == 0x0003A8, "Member 'APROJECTILE_AvatarPulse_C::PulserMesh' has a wrong offset!");
static_assert(offsetof(APROJECTILE_AvatarPulse_C, ReverseRotation) == 0x0003B0, "Member 'APROJECTILE_AvatarPulse_C::ReverseRotation' has a wrong offset!");
static_assert(offsetof(APROJECTILE_AvatarPulse_C, RotationRate) == 0x0003B4, "Member 'APROJECTILE_AvatarPulse_C::RotationRate' has a wrong offset!");

}


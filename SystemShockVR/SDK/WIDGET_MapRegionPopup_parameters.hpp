#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MapRegionPopup

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MapRegionPopup.WIDGET_MapRegionPopup_C.ExecuteUbergraph_WIDGET_MapRegionPopup
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextTyper_C*                           CallFunc_SpawnObject_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup) == 0x000008, "Wrong alignment on WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup");
static_assert(sizeof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup) == 0x000048, "Wrong size on WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup");
static_assert(offsetof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup, EntryPoint) == 0x000000, "Member 'WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup, CallFunc_SpawnObject_ReturnValue) == 0x000040, "Member 'WIDGET_MapRegionPopup_C_ExecuteUbergraph_WIDGET_MapRegionPopup::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function WIDGET_MapRegionPopup.WIDGET_MapRegionPopup_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_MapRegionPopup_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MapRegionPopup_C_Tick) == 0x000004, "Wrong alignment on WIDGET_MapRegionPopup_C_Tick");
static_assert(sizeof(WIDGET_MapRegionPopup_C_Tick) == 0x00003C, "Wrong size on WIDGET_MapRegionPopup_C_Tick");
static_assert(offsetof(WIDGET_MapRegionPopup_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_MapRegionPopup_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_MapRegionPopup_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_MapRegionPopup.WIDGET_MapRegionPopup_C.SetRegionName
// 0x0090 (0x0090 - 0x0000)
struct WIDGET_MapRegionPopup_C_SetRegionName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              SourceDimensions;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Conv_Vector2DToIntPoint_ReturnValue;      // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTextMessage_Result;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDimensionsForText_Dimensions;          // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MapRegionPopup_C_SetRegionName) == 0x000008, "Wrong alignment on WIDGET_MapRegionPopup_C_SetRegionName");
static_assert(sizeof(WIDGET_MapRegionPopup_C_SetRegionName) == 0x000090, "Wrong size on WIDGET_MapRegionPopup_C_SetRegionName");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, Name_0) == 0x000000, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::Name_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, SourceDimensions) == 0x000018, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::SourceDimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, Temp_bool_Variable) == 0x000020, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, Temp_byte_Variable) == 0x000021, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, Temp_byte_Variable_1) == 0x000022, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, K2Node_Select_Default) == 0x000023, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_Conv_Vector2DToIntPoint_ReturnValue) == 0x000024, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_Conv_Vector2DToIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_GetEmptyText_ReturnValue) == 0x000030, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_Len_ReturnValue) == 0x000058, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00005C, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_SetTextMessage_Result) == 0x000061, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_SetTextMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_GetDimensionsForText_Dimensions) == 0x000064, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_GetDimensionsForText_Dimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, K2Node_MakeStruct_IntPoint) == 0x00006C, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_BreakVector2D_X) == 0x000074, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_SetRegionName, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000088, "Member 'WIDGET_MapRegionPopup_C_SetRegionName::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WIDGET_MapRegionPopup.WIDGET_MapRegionPopup_C.UpdateTextTransition
// 0x0140 (0x0140 - 0x0000)
struct WIDGET_MapRegionPopup_C_UpdateTextTransition final
{
public:
	struct FVector2D                              CurrentWidgetDimensions;                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentTextDimensions;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NextMessage;                                       // 0x0010(0x0018)(Edit, BlueprintVisible)
	class FText                                   CurrMessage;                                       // 0x0028(0x0018)(Edit, BlueprintVisible)
	int32                                         TargetCharCount;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextCharCount;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrCharCount;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Conv_Vector2DToIntPoint_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDimensionsForText_Dimensions;          // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDimensionsForText_Dimensions_1;        // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDimensionsForText_Dimensions_2;        // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetMessageWithCharacterCount_Message;     // 0x00A0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMessageWithCharacterCount_Message_1;   // 0x00C0(0x0018)()
	class FText                                   CallFunc_GetTargetMessage_Message;                 // 0x00D8(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ElapsedSeconds;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentCharacterCount_Result;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MapRegionPopup_C_UpdateTextTransition) == 0x000008, "Wrong alignment on WIDGET_MapRegionPopup_C_UpdateTextTransition");
static_assert(sizeof(WIDGET_MapRegionPopup_C_UpdateTextTransition) == 0x000140, "Wrong size on WIDGET_MapRegionPopup_C_UpdateTextTransition");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CurrentWidgetDimensions) == 0x000000, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CurrentWidgetDimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CurrentTextDimensions) == 0x000008, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CurrentTextDimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, NextMessage) == 0x000010, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::NextMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CurrMessage) == 0x000028, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CurrMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, TargetCharCount) == 0x000040, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::TargetCharCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, NextCharCount) == 0x000044, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::NextCharCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CurrCharCount) == 0x000048, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CurrCharCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, Progress) == 0x00004C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Conv_Vector2DToIntPoint_ReturnValue) == 0x000050, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Conv_Vector2DToIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000058, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetDimensionsForText_Dimensions) == 0x000064, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetDimensionsForText_Dimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetDimensionsForText_Dimensions_1) == 0x00006C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetDimensionsForText_Dimensions_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000074, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_VLerp_ReturnValue) == 0x000080, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x00008C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetDimensionsForText_Dimensions_2) == 0x000094, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetDimensionsForText_Dimensions_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetMessageWithCharacterCount_Message) == 0x0000A0, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetMessageWithCharacterCount_Message' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000BC, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetMessageWithCharacterCount_Message_1) == 0x0000C0, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetMessageWithCharacterCount_Message_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetTargetMessage_Message) == 0x0000D8, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetTargetMessage_Message' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Min_ReturnValue) == 0x000108, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Len_ReturnValue) == 0x00010C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000110, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000118, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetElapsedTime_ElapsedSeconds) == 0x00011C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetElapsedTime_ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000120, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000124, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000128, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_FMin_ReturnValue) == 0x00012C, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, CallFunc_GetCurrentCharacterCount_Result) == 0x000130, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::CallFunc_GetCurrentCharacterCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_UpdateTextTransition, K2Node_MakeStruct_IntPoint) == 0x000134, "Member 'WIDGET_MapRegionPopup_C_UpdateTextTransition::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function WIDGET_MapRegionPopup.WIDGET_MapRegionPopup_C.GetDimensionsForText
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_MapRegionPopup_C_GetDimensionsForText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              Dimensions;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDimensionsForNewText_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ToRounded2D_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MapRegionPopup_C_GetDimensionsForText) == 0x000008, "Wrong alignment on WIDGET_MapRegionPopup_C_GetDimensionsForText");
static_assert(sizeof(WIDGET_MapRegionPopup_C_GetDimensionsForText) == 0x000040, "Wrong size on WIDGET_MapRegionPopup_C_GetDimensionsForText");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, Text) == 0x000000, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::Text' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, Dimensions) == 0x000018, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::Dimensions' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, CallFunc_GetDimensionsForNewText_ReturnValue) == 0x000020, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::CallFunc_GetDimensionsForNewText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MapRegionPopup_C_GetDimensionsForText, CallFunc_ToRounded2D_ReturnValue) == 0x000038, "Member 'WIDGET_MapRegionPopup_C_GetDimensionsForText::CallFunc_ToRounded2D_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_CyberDash

#include "Basic.hpp"

#include "ITEM_Software_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_CyberDash.ITEM_CyberDash_C
// 0x0020 (0x0200 - 0x01E0)
class UITEM_CyberDash_C final : public UITEM_Software_Base_C
{
public:
	bool                                          IsDashing;                                         // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastDashTimestamp;                                 // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashDuration;                                      // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashRegenDelayTime;                                // 0x01EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashSpeedScaleMin;                                 // 0x01F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashSpeedScaleMax;                                 // 0x01F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DashPowerRemaining;                                // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateDashPower(float DeltaTime, bool IsMoving, float* SpeedScale);
	void GetOwnerPawn(class APAWN_Avatar_C** Pawn);
	void GetCurrentDashPowerRatio(float* Result);
	void GetIsActivated(bool* Result);
	void Activate(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	void Deactivate(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_CyberDash_C">();
	}
	static class UITEM_CyberDash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_CyberDash_C>();
	}
};
static_assert(alignof(UITEM_CyberDash_C) == 0x000008, "Wrong alignment on UITEM_CyberDash_C");
static_assert(sizeof(UITEM_CyberDash_C) == 0x000200, "Wrong size on UITEM_CyberDash_C");
static_assert(offsetof(UITEM_CyberDash_C, IsDashing) == 0x0001E0, "Member 'UITEM_CyberDash_C::IsDashing' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, LastDashTimestamp) == 0x0001E4, "Member 'UITEM_CyberDash_C::LastDashTimestamp' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, DashDuration) == 0x0001E8, "Member 'UITEM_CyberDash_C::DashDuration' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, DashRegenDelayTime) == 0x0001EC, "Member 'UITEM_CyberDash_C::DashRegenDelayTime' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, DashSpeedScaleMin) == 0x0001F0, "Member 'UITEM_CyberDash_C::DashSpeedScaleMin' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, DashSpeedScaleMax) == 0x0001F4, "Member 'UITEM_CyberDash_C::DashSpeedScaleMax' has a wrong offset!");
static_assert(offsetof(UITEM_CyberDash_C, DashPowerRemaining) == 0x0001F8, "Member 'UITEM_CyberDash_C::DashPowerRemaining' has a wrong offset!");

}


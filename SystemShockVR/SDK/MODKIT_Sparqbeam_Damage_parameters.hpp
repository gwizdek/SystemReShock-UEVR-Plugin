#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MODKIT_Sparqbeam_Damage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "STRUCT_WeaponPropertyValue_structs.hpp"


namespace SDK::Params
{

// Function MODKIT_Sparqbeam_Damage.MODKIT_Sparqbeam_Damage_C.TryApplyWeaponModifications
// 0x0018 (0x0018 - 0x0000)
struct MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringInitialization;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetWeaponItemGridSize_Result;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications) == 0x000008, "Wrong alignment on MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications");
static_assert(sizeof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications) == 0x000018, "Wrong size on MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, Weapon) == 0x000000, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::Weapon' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, DuringInitialization) == 0x000008, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::DuringInitialization' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, Result) == 0x000009, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::Result' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, K2Node_MakeStruct_IntPoint) == 0x00000C, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, CallFunc_TryApplyWeaponModifications_Result) == 0x000014, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications, CallFunc_TrySetWeaponItemGridSize_Result) == 0x000015, "Member 'MODKIT_Sparqbeam_Damage_C_TryApplyWeaponModifications::CallFunc_TrySetWeaponItemGridSize_Result' has a wrong offset!");

// Function MODKIT_Sparqbeam_Damage.MODKIT_Sparqbeam_Damage_C.GetModifiedWeaponMode
// 0x0360 (0x0360 - 0x0000)
struct MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode final
{
public:
	struct FSTRUCT_WeaponMode                     WeaponMode;                                        // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     ResultMode;                                        // 0x0100(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     ModifiedMode;                                      // 0x0200(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         DamageScale;                                       // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CostScale;                                         // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpreadPropertyIndex;                               // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecoilPropertyIndex;                               // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSTRUCT_WeaponPropertyValue>    WeaponProperties;                                  // 0x0310(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyIndexByType_ArrayIndex;  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponPropertyValue            K2Node_MakeStruct_STRUCT_WeaponPropertyValue;      // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponPropertyValue            K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1;    // 0x0344(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode) == 0x000008, "Wrong alignment on MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode");
static_assert(sizeof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode) == 0x000360, "Wrong size on MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, WeaponMode) == 0x000000, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::WeaponMode' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, ResultMode) == 0x000100, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::ResultMode' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, ModifiedMode) == 0x000200, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::ModifiedMode' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, DamageScale) == 0x000300, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::DamageScale' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CostScale) == 0x000304, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CostScale' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, SpreadPropertyIndex) == 0x000308, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::SpreadPropertyIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, RecoilPropertyIndex) == 0x00030C, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::RecoilPropertyIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, WeaponProperties) == 0x000310, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::WeaponProperties' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000320, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyIndexByType_ArrayIndex) == 0x000324, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyIndexByType_ArrayIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000328, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Round_ReturnValue) == 0x00032C, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, K2Node_MakeStruct_STRUCT_WeaponPropertyValue) == 0x000330, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::K2Node_MakeStruct_STRUCT_WeaponPropertyValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1) == 0x000338, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00033C, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Round_ReturnValue_1) == 0x000340, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1) == 0x000344, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Add_IntInt_ReturnValue) == 0x00034C, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000350, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000354, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Round_ReturnValue_2) == 0x000358, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode, CallFunc_Round_ReturnValue_3) == 0x00035C, "Member 'MODKIT_Sparqbeam_Damage_C_GetModifiedWeaponMode::CallFunc_Round_ReturnValue_3' has a wrong offset!");

// Function MODKIT_Sparqbeam_Damage.MODKIT_Sparqbeam_Damage_C.HasAppearanceChange
// 0x0001 (0x0001 - 0x0000)
struct MODKIT_Sparqbeam_Damage_C_HasAppearanceChange final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_Sparqbeam_Damage_C_HasAppearanceChange) == 0x000001, "Wrong alignment on MODKIT_Sparqbeam_Damage_C_HasAppearanceChange");
static_assert(sizeof(MODKIT_Sparqbeam_Damage_C_HasAppearanceChange) == 0x000001, "Wrong size on MODKIT_Sparqbeam_Damage_C_HasAppearanceChange");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_HasAppearanceChange, Result) == 0x000000, "Member 'MODKIT_Sparqbeam_Damage_C_HasAppearanceChange::Result' has a wrong offset!");

// Function MODKIT_Sparqbeam_Damage.MODKIT_Sparqbeam_Damage_C.TryModifyPickupAppearance
// 0x0050 (0x0050 - 0x0000)
struct MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance final
{
public:
	class APICKUP_Weapon_Base_C*                  WeaponPickup;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class APICKUP_SparqBeam_C*                    K2Node_DynamicCast_AsPICKUP_Sparq_Beam;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance) == 0x000010, "Wrong alignment on MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance");
static_assert(sizeof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance) == 0x000050, "Wrong size on MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance, WeaponPickup) == 0x000000, "Member 'MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance::WeaponPickup' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance, Result) == 0x000008, "Member 'MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance::Result' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance, K2Node_DynamicCast_AsPICKUP_Sparq_Beam) == 0x000040, "Member 'MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance::K2Node_DynamicCast_AsPICKUP_Sparq_Beam' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'MODKIT_Sparqbeam_Damage_C_TryModifyPickupAppearance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MODKIT_Sparqbeam_Damage.MODKIT_Sparqbeam_Damage_C.GetFirstPersonAttachment
// 0x0080 (0x0080 - 0x0000)
struct MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	class FName                                   SocketName;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment) == 0x000010, "Wrong alignment on MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment");
static_assert(sizeof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment) == 0x000080, "Wrong size on MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment, Mesh) == 0x000000, "Member 'MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment::Mesh' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment, Transform) == 0x000010, "Member 'MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment::Transform' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment, SocketName) == 0x000040, "Member 'MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment::SocketName' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'MODKIT_Sparqbeam_Damage_C_GetFirstPersonAttachment::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FUNCLIB_IntVector

#include "Basic.hpp"

#include "ENUM_Axis_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FUNCLIB_IntVector.FUNCLIB_IntVector_C.IsEqual
// 0x0028 (0x0028 - 0x0000)
struct FUNCLIB_IntVector_C_IsEqual final
{
public:
	struct FIntVector                             A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equal;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_IntVector_C_IsEqual) == 0x000008, "Wrong alignment on FUNCLIB_IntVector_C_IsEqual");
static_assert(sizeof(FUNCLIB_IntVector_C_IsEqual) == 0x000028, "Wrong size on FUNCLIB_IntVector_C_IsEqual");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, A) == 0x000000, "Member 'FUNCLIB_IntVector_C_IsEqual::A' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, B) == 0x00000C, "Member 'FUNCLIB_IntVector_C_IsEqual::B' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, __WorldContext) == 0x000018, "Member 'FUNCLIB_IntVector_C_IsEqual::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, Equal) == 0x000020, "Member 'FUNCLIB_IntVector_C_IsEqual::Equal' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'FUNCLIB_IntVector_C_IsEqual::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000022, "Member 'FUNCLIB_IntVector_C_IsEqual::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000023, "Member 'FUNCLIB_IntVector_C_IsEqual::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'FUNCLIB_IntVector_C_IsEqual::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsEqual, CallFunc_BooleanAND_ReturnValue_1) == 0x000025, "Member 'FUNCLIB_IntVector_C_IsEqual::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function FUNCLIB_IntVector.FUNCLIB_IntVector_C.IsNotEqual
// 0x0028 (0x0028 - 0x0000)
struct FUNCLIB_IntVector_C_IsNotEqual final
{
public:
	struct FIntVector                             A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue_1;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_IntVector_C_IsNotEqual) == 0x000008, "Wrong alignment on FUNCLIB_IntVector_C_IsNotEqual");
static_assert(sizeof(FUNCLIB_IntVector_C_IsNotEqual) == 0x000028, "Wrong size on FUNCLIB_IntVector_C_IsNotEqual");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, A) == 0x000000, "Member 'FUNCLIB_IntVector_C_IsNotEqual::A' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, B) == 0x00000C, "Member 'FUNCLIB_IntVector_C_IsNotEqual::B' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, __WorldContext) == 0x000018, "Member 'FUNCLIB_IntVector_C_IsNotEqual::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, Result) == 0x000020, "Member 'FUNCLIB_IntVector_C_IsNotEqual::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'FUNCLIB_IntVector_C_IsNotEqual::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000022, "Member 'FUNCLIB_IntVector_C_IsNotEqual::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000023, "Member 'FUNCLIB_IntVector_C_IsNotEqual::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, CallFunc_BooleanNAND_ReturnValue) == 0x000024, "Member 'FUNCLIB_IntVector_C_IsNotEqual::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_IsNotEqual, CallFunc_BooleanNAND_ReturnValue_1) == 0x000025, "Member 'FUNCLIB_IntVector_C_IsNotEqual::CallFunc_BooleanNAND_ReturnValue_1' has a wrong offset!");

// Function FUNCLIB_IntVector.FUNCLIB_IntVector_C.AddIntVectors
// 0x0048 (0x0048 - 0x0000)
struct FUNCLIB_IntVector_C_AddIntVectors final
{
public:
	struct FIntVector                             A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             Result;                                            // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_IntVector_C_AddIntVectors) == 0x000008, "Wrong alignment on FUNCLIB_IntVector_C_AddIntVectors");
static_assert(sizeof(FUNCLIB_IntVector_C_AddIntVectors) == 0x000048, "Wrong size on FUNCLIB_IntVector_C_AddIntVectors");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, A) == 0x000000, "Member 'FUNCLIB_IntVector_C_AddIntVectors::A' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, B) == 0x00000C, "Member 'FUNCLIB_IntVector_C_AddIntVectors::B' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, __WorldContext) == 0x000018, "Member 'FUNCLIB_IntVector_C_AddIntVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, Result) == 0x000020, "Member 'FUNCLIB_IntVector_C_AddIntVectors::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'FUNCLIB_IntVector_C_AddIntVectors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'FUNCLIB_IntVector_C_AddIntVectors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'FUNCLIB_IntVector_C_AddIntVectors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_AddIntVectors, K2Node_MakeStruct_IntVector) == 0x000038, "Member 'FUNCLIB_IntVector_C_AddIntVectors::K2Node_MakeStruct_IntVector' has a wrong offset!");

// Function FUNCLIB_IntVector.FUNCLIB_IntVector_C.SubtractIntVectors
// 0x0048 (0x0048 - 0x0000)
struct FUNCLIB_IntVector_C_SubtractIntVectors final
{
public:
	struct FIntVector                             A;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             B;                                                 // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             Result;                                            // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_IntVector_C_SubtractIntVectors) == 0x000008, "Wrong alignment on FUNCLIB_IntVector_C_SubtractIntVectors");
static_assert(sizeof(FUNCLIB_IntVector_C_SubtractIntVectors) == 0x000048, "Wrong size on FUNCLIB_IntVector_C_SubtractIntVectors");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, A) == 0x000000, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::A' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, B) == 0x00000C, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::B' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, __WorldContext) == 0x000018, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, Result) == 0x000020, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000034, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_SubtractIntVectors, K2Node_MakeStruct_IntVector) == 0x000038, "Member 'FUNCLIB_IntVector_C_SubtractIntVectors::K2Node_MakeStruct_IntVector' has a wrong offset!");

// Function FUNCLIB_IntVector.FUNCLIB_IntVector_C.GetUnitIntVectorFromVectorAxis
// 0x0088 (0x0088 - 0x0000)
struct FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     Axis;                                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             Result;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_1;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_2;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis) == 0x000008, "Wrong alignment on FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis");
static_assert(sizeof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis) == 0x000088, "Wrong size on FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, Vector) == 0x000000, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::Vector' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, Axis) == 0x00000C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::Axis' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, __WorldContext) == 0x000010, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, Result) == 0x000018, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_X) == 0x000028, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Y) == 0x00002C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Z) == 0x000030, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_SignOfFloat_ReturnValue) == 0x000034, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_X_1) == 0x000038, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_FTrunc_ReturnValue) == 0x000044, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_SignOfFloat_ReturnValue_1) == 0x000048, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, K2Node_MakeStruct_IntVector) == 0x00004C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::K2Node_MakeStruct_IntVector' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_FTrunc_ReturnValue_1) == 0x000058, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, K2Node_MakeStruct_IntVector_1) == 0x00005C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::K2Node_MakeStruct_IntVector_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_X_2) == 0x000068, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Y_2) == 0x00006C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_BreakVector_Z_2) == 0x000070, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_SignOfFloat_ReturnValue_2) == 0x000074, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, CallFunc_FTrunc_ReturnValue_2) == 0x000078, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis, K2Node_MakeStruct_IntVector_2) == 0x00007C, "Member 'FUNCLIB_IntVector_C_GetUnitIntVectorFromVectorAxis::K2Node_MakeStruct_IntVector_2' has a wrong offset!");

}


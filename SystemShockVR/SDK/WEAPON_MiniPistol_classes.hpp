#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_MiniPistol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_ProjectileWeapon_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WEAPON_MiniPistol.WEAPON_MiniPistol_C
// 0x0048 (0x0598 - 0x0550)
class UWEAPON_MiniPistol_C final : public UITEM_ProjectileWeapon_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WEAPON_MiniPistol_C;                // 0x0550(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          HasBarrelExtension;                                // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFireModeReverted;                                // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55A[0x6];                                      // 0x055A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      DryIdle;                                           // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CooldownSFXTimer;                                  // 0x0568(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CooldownSoundCue;                                  // 0x0570(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WEAPON_MiniPistol(int32 EntryPoint);
	void AsyncPlayCooldownSFX();
	void OnLoaded_2CC67EA24D4297D5895AF4B7131E9430(class UObject* Loaded);
	void ConsumeAmmo();
	void RefillMagazine();
	void OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately);
	void SetHasBarrelExtension(bool State);
	void UpdateDryIdleSequence();
	void FireProjectile(class AActor** FiredProjectile, struct FVector* Direction);
	void GetProjectileClass(class UClass** Result);
	void OnBecomeUnactivatable(bool* Result);
	void HasBurstFireOption(bool* Result);
	void IsUsingBurstFire(bool* Result);
	void GetWeaponModeDefaults(int32 Index_0, struct FSTRUCT_WeaponMode* Mode);
	void SetUsingBurstFire(bool State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WEAPON_MiniPistol_C">();
	}
	static class UWEAPON_MiniPistol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWEAPON_MiniPistol_C>();
	}
};
static_assert(alignof(UWEAPON_MiniPistol_C) == 0x000008, "Wrong alignment on UWEAPON_MiniPistol_C");
static_assert(sizeof(UWEAPON_MiniPistol_C) == 0x000598, "Wrong size on UWEAPON_MiniPistol_C");
static_assert(offsetof(UWEAPON_MiniPistol_C, UberGraphFrame_WEAPON_MiniPistol_C) == 0x000550, "Member 'UWEAPON_MiniPistol_C::UberGraphFrame_WEAPON_MiniPistol_C' has a wrong offset!");
static_assert(offsetof(UWEAPON_MiniPistol_C, HasBarrelExtension) == 0x000558, "Member 'UWEAPON_MiniPistol_C::HasBarrelExtension' has a wrong offset!");
static_assert(offsetof(UWEAPON_MiniPistol_C, IsFireModeReverted) == 0x000559, "Member 'UWEAPON_MiniPistol_C::IsFireModeReverted' has a wrong offset!");
static_assert(offsetof(UWEAPON_MiniPistol_C, DryIdle) == 0x000560, "Member 'UWEAPON_MiniPistol_C::DryIdle' has a wrong offset!");
static_assert(offsetof(UWEAPON_MiniPistol_C, CooldownSFXTimer) == 0x000568, "Member 'UWEAPON_MiniPistol_C::CooldownSFXTimer' has a wrong offset!");
static_assert(offsetof(UWEAPON_MiniPistol_C, CooldownSoundCue) == 0x000570, "Member 'UWEAPON_MiniPistol_C::CooldownSoundCue' has a wrong offset!");

}


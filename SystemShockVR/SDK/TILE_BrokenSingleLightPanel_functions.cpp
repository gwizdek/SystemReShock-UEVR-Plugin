#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TILE_BrokenSingleLightPanel

#include "Basic.hpp"

#include "TILE_BrokenSingleLightPanel_classes.hpp"
#include "TILE_BrokenSingleLightPanel_parameters.hpp"


namespace SDK
{

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ExecuteUbergraph_TILE_BrokenSingleLightPanel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATILE_BrokenSingleLightPanel_C::ExecuteUbergraph_TILE_BrokenSingleLightPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "ExecuteUbergraph_TILE_BrokenSingleLightPanel");

	Params::TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATILE_BrokenSingleLightPanel_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATILE_BrokenSingleLightPanel_C::BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.PlayBreakEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATILE_BrokenSingleLightPanel_C::PlayBreakEffects(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "PlayBreakEffects");

	Params::TILE_BrokenSingleLightPanel_C_PlayBreakEffects Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.UpdateBrokenLightPanelVisibility
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATILE_BrokenSingleLightPanel_C::UpdateBrokenLightPanelVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "UpdateBrokenLightPanelVisibility");

	Params::TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.SetThemeColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector4                         Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATILE_BrokenSingleLightPanel_C::SetThemeColor(const struct FVector4& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "SetThemeColor");

	Params::TILE_BrokenSingleLightPanel_C_SetThemeColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.UpdateThemeColor
// (Protected, BlueprintCallable, BlueprintEvent)

void ATILE_BrokenSingleLightPanel_C::UpdateThemeColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "UpdateThemeColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATILE_BrokenSingleLightPanel_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "ShouldSaveActor");

	Params::TILE_BrokenSingleLightPanel_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATILE_BrokenSingleLightPanel_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "ReceivePendingBodyTransforms");

	Params::TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATILE_BrokenSingleLightPanel_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TILE_BrokenSingleLightPanel_C", "ReceivePendingCharacterVelocity");

	Params::TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


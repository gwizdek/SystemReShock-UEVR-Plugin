#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_EnergyWeapon_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_ActionPriority_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "CoreGame_structs.hpp"


namespace SDK::Params
{

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ExecuteUbergraph_ITEM_EnergyWeapon_Base
// 0x0038 (0x0038 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base) == 0x000038, "Wrong size on ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, EntryPoint) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, Temp_object_Variable) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnLoaded_7C46D5834BE1E67FCA70F5A801834542
// 0x0008 (0x0008 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542) == 0x000008, "Wrong size on ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542, Loaded) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542::Loaded' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.HasEnoughEnergyToActivate
// 0x0118 (0x0118 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOwnerEnergy_CurrentEnergy;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOwnerEnergy_MaxEnergy;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0010(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate) == 0x000118, "Wrong size on ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate, CallFunc_GetOwnerEnergy_CurrentEnergy) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate::CallFunc_GetOwnerEnergy_CurrentEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate, CallFunc_GetOwnerEnergy_MaxEnergy) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate::CallFunc_GetOwnerEnergy_MaxEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate, CallFunc_GetCurrentMode_Mode) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000110, "Member 'ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetOwnerEnergy
// 0x0058 (0x0058 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetOwnerEnergy final
{
public:
	int32                                         CurrentEnergy;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxEnergy;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  AttribManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultAttribValue_ReturnValue;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetOwnerEnergy");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy) == 0x000058, "Wrong size on ITEM_EnergyWeapon_Base_C_GetOwnerEnergy");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CurrentEnergy) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, MaxEnergy) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::MaxEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, AttribManager) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::AttribManager' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, EnergyAttribInstance) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetDefaultAttribValue_ReturnValue) == 0x00001C, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetDefaultAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetAttribInstance_ReturnValue) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetMaxValue_ReturnValue) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_FTrunc_ReturnValue_1) == 0x000034, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetValue_ReturnValue) == 0x000038, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetOwnerCharacter_Character) == 0x000048, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetOwnerEnergy, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'ITEM_EnergyWeapon_Base_C_GetOwnerEnergy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetDischargeMontage
// 0x0008 (0x0008 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetDischargeMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetDischargeMontage) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetDischargeMontage");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetDischargeMontage) == 0x000008, "Wrong size on ITEM_EnergyWeapon_Base_C_GetDischargeMontage");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetDischargeMontage, Montage) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetDischargeMontage::Montage' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.InitializeEnergyWeaponState
// 0x0001 (0x0001 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState final
{
public:
	bool                                          CallFunc_IsOverheated_Result;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState) == 0x000001, "Wrong alignment on ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState) == 0x000001, "Wrong size on ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState, CallFunc_IsOverheated_Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_InitializeEnergyWeaponState::CallFunc_IsOverheated_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryActivateWithPriority
// 0x0070 (0x0070 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_TryActivateWithPriority final
{
public:
	ENUM_ActionPriority                           Priority;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QueueTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_ActionManager_C*                  ActionManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FLatentEventHandle                     CallFunc_CreateEventHandle_ReturnValue;            // 0x0028(0x0010)(ContainsInstancedReference)
	class UAnimMontage*                           CallFunc_GetDischargeMontage_Montage;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasEnoughEnergyToActivate_Result;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverheated_Result;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_TryActivateWithPriority");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority) == 0x000070, "Wrong size on ITEM_EnergyWeapon_Base_C_TryActivateWithPriority");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, Priority) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::Priority' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, QueueTime) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::QueueTime' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, ActionManager) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::ActionManager' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_CreateEventHandle_ReturnValue) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_CreateEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_GetDischargeMontage_Montage) == 0x000038, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_GetDischargeMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_GetInventory_Inventory) == 0x000040, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000050, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_ForceBeginAction_Action) == 0x000060, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_CanBeginAction_Result) == 0x000069, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_HasEnoughEnergyToActivate_Result) == 0x00006A, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_HasEnoughEnergyToActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_IsOverheated_Result) == 0x00006B, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_IsOverheated_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryActivateWithPriority, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'ITEM_EnergyWeapon_Base_C_TryActivateWithPriority::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ConsumeEnergyForCurrentMode
// 0x01A8 (0x01A8 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode final
{
public:
	struct FAttribModApplyData                    EnergyDrainMod;                                    // 0x0000(0x00A0)(Edit, BlueprintVisible)
	float                                         EnergyCost;                                        // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewEnergyValue;                                    // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x00A8(0x0100)(HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode) == 0x0001A8, "Wrong size on ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode, EnergyDrainMod) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode::EnergyDrainMod' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode, EnergyCost) == 0x0000A0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode::EnergyCost' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode, NewEnergyValue) == 0x0000A4, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode::NewEnergyValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode, CallFunc_GetCurrentMode_Mode) == 0x0000A8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergyForCurrentMode::CallFunc_GetCurrentMode_Mode' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ConsumeEnergy
// 0x00F8 (0x00F8 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_ConsumeEnergy final
{
public:
	int32                                         EnergyValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    EnergyDrainMod;                                    // 0x0008(0x00A0)(Edit, BlueprintVisible)
	int32                                         EnergyCost;                                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOwnerEnergy_CurrentEnergy;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOwnerEnergy_MaxEnergy;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_ConsumeEnergy");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy) == 0x0000F8, "Wrong size on ITEM_EnergyWeapon_Base_C_ConsumeEnergy");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, EnergyValue) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::EnergyValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, EnergyDrainMod) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::EnergyDrainMod' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, EnergyCost) == 0x0000A8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::EnergyCost' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetOwnerEnergy_CurrentEnergy) == 0x0000AC, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetOwnerEnergy_CurrentEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetOwnerEnergy_MaxEnergy) == 0x0000B0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetOwnerEnergy_MaxEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetInventory_Inventory) == 0x0000B8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000C8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D4, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetOwnerCharacter_Character) == 0x0000D8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_ApplyMod_ReturnValue) == 0x0000E8, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ConsumeEnergy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'ITEM_EnergyWeapon_Base_C_ConsumeEnergy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateHeat
// 0x002C (0x002C - 0x0000)
struct ITEM_EnergyWeapon_Base_C_UpdateHeat final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTimestamp;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCoolingRate_Result;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_UpdateHeat) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_UpdateHeat");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_UpdateHeat) == 0x00002C, "Wrong size on ITEM_EnergyWeapon_Base_C_UpdateHeat");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, ElapsedTime) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CurrentTimestamp) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CurrentTimestamp' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_GetCoolingRate_Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_GetCoolingRate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000016, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000017, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateHeat, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000029, "Member 'ITEM_EnergyWeapon_Base_C_UpdateHeat::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.IsOverheated
// 0x0001 (0x0001 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_IsOverheated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_IsOverheated) == 0x000001, "Wrong alignment on ITEM_EnergyWeapon_Base_C_IsOverheated");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_IsOverheated) == 0x000001, "Wrong size on ITEM_EnergyWeapon_Base_C_IsOverheated");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_IsOverheated, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_IsOverheated::Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetHeat
// 0x0004 (0x0004 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetHeat final
{
public:
	float                                         HeatPercentage;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetHeat) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetHeat");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetHeat) == 0x000004, "Wrong size on ITEM_EnergyWeapon_Base_C_GetHeat");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetHeat, HeatPercentage) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetHeat::HeatPercentage' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.AddHeat
// 0x0038 (0x0038 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_AddHeat final
{
public:
	float                                         HeatPercentage;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_AddHeat) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_AddHeat");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_AddHeat) == 0x000038, "Wrong size on ITEM_EnergyWeapon_Base_C_AddHeat");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, HeatPercentage) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::HeatPercentage' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, Temp_bool_Variable) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, Temp_float_Variable) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, Temp_float_Variable_1) == 0x00000C, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000014, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00001C, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000029, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, K2Node_Select_Default) == 0x00002C, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_AddHeat, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000034, "Member 'ITEM_EnergyWeapon_Base_C_AddHeat::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ResetHeat
// 0x0004 (0x0004 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_ResetHeat final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_ResetHeat) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_ResetHeat");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_ResetHeat) == 0x000004, "Wrong size on ITEM_EnergyWeapon_Base_C_ResetHeat");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ResetHeat, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_ResetHeat::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryStartHeatTimer
// 0x0028 (0x0028 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_TryStartHeatTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_TryStartHeatTimer");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer) == 0x000028, "Wrong size on ITEM_EnergyWeapon_Base_C_TryStartHeatTimer");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_TryStartHeatTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_TryStartHeatTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_TryStartHeatTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_TryStartHeatTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryStartHeatTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'ITEM_EnergyWeapon_Base_C_TryStartHeatTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnUpdateHeat
// 0x0001 (0x0001 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_OnUpdateHeat final
{
public:
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_OnUpdateHeat) == 0x000001, "Wrong alignment on ITEM_EnergyWeapon_Base_C_OnUpdateHeat");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_OnUpdateHeat) == 0x000001, "Wrong size on ITEM_EnergyWeapon_Base_C_OnUpdateHeat");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnUpdateHeat, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_OnUpdateHeat::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualHeatState
// 0x0050 (0x0050 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState final
{
public:
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastHeatPercentage_Result;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_1;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_EnergyWeapon_C> K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHeatPercentage_Result;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState) == 0x000050, "Wrong size on ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_GetWeaponMeshComponent_Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_GetLastHeatPercentage_Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_GetLastHeatPercentage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_GetWeaponMeshComponent_Result_1) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_GetWeaponMeshComponent_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon) == 0x000038, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState, CallFunc_SetHeatPercentage_Result) == 0x000049, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualHeatState::CallFunc_SetHeatPercentage_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualOverheatedState
// 0x0018 (0x0018 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState) == 0x000018, "Wrong size on ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState, State) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState::State' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualModeState
// 0x0010 (0x0010 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_UpdateVisualModeState final
{
public:
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_UpdateVisualModeState) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_UpdateVisualModeState");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_UpdateVisualModeState) == 0x000010, "Wrong size on ITEM_EnergyWeapon_Base_C_UpdateVisualModeState");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualModeState, CallFunc_GetWeaponMeshComponent_Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualModeState::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualModeState, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualModeState::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_UpdateVisualModeState, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ITEM_EnergyWeapon_Base_C_UpdateVisualModeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnDischargeMontageStarted
// 0x0260 (0x0260 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted final
{
public:
	float                                         FireRate;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0010(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_1;                    // 0x0148(0x0100)(HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0248(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted) == 0x000260, "Wrong size on ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, FireRate) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::FireRate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000110, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000111, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Not_PreBool_ReturnValue) == 0x000112, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetTimeSeconds_ReturnValue) == 0x000114, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000130, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, K2Node_CreateDelegate_OutputDelegate_1) == 0x000134, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode_1) == 0x000148, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000248, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000250, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000254, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted, CallFunc_SafeDivide_ReturnValue) == 0x000258, "Member 'ITEM_EnergyWeapon_Base_C_OnDischargeMontageStarted::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.EVENT_OnAllowRefire
// 0x0040 (0x0040 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetDischargeMontage_Montage;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ActionPriority                           CallFunc_GetPriority_Result;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire) == 0x000040, "Wrong size on ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, Montage) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CurrentAction) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetDischargeMontage_Montage) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetDischargeMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetPriority_Result) == 0x000019, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetPriority_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetMontage_Result) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetOwnerCharacter_Character) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetCurrentAction_CurrentAction) == 0x000038, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetLastHeatPercentage
// 0x0004 (0x0004 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage) == 0x000004, "Wrong size on ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage::Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetCoolingRate
// 0x0004 (0x0004 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetCoolingRate final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetCoolingRate) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetCoolingRate");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetCoolingRate) == 0x000004, "Wrong size on ITEM_EnergyWeapon_Base_C_GetCoolingRate");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetCoolingRate, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetCoolingRate::Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.EVENT_OnAllowAutomaticRefire
// 0x0018 (0x0018 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire final
{
public:
	bool                                          CallFunc_IsWeaponObstructed_Result;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateWithPriority_Result;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire) == 0x000018, "Wrong size on ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire, CallFunc_IsWeaponObstructed_Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire::CallFunc_IsWeaponObstructed_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire, CallFunc_TryActivateWithPriority_Result) == 0x000002, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire::CallFunc_TryActivateWithPriority_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire, CallFunc_CanActivate_Result) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_EVENT_OnAllowAutomaticRefire::CallFunc_CanActivate_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ShouldReloadWithBattery
// 0x0018 (0x0018 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReloadCanUseBatteries_Result;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery) == 0x000018, "Wrong size on ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery, CallFunc_GetReloadCanUseBatteries_Result) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery::CallFunc_GetReloadCanUseBatteries_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnWeaponBecameActivatable
// 0x0010 (0x0010 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable) == 0x000010, "Wrong size on ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetWeaponModeDisplayName
// 0x00C0 (0x00C0 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShortName;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0090(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00A8(0x0018)()
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName) == 0x0000C0, "Wrong size on ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, ModeIndex) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::ModeIndex' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, ShortName) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::ShortName' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_bool_Variable) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_text_Variable) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_text_Variable_1) == 0x000040, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_int_Variable) == 0x000058, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, K2Node_Select_Default) == 0x000060, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_text_Variable_2) == 0x000078, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, Temp_text_Variable_3) == 0x000090, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName, K2Node_Select_Default_1) == 0x0000A8, "Member 'ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName::K2Node_Select_Default_1' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.SetCurrentMode
// 0x0008 (0x0008 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_SetCurrentMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_SetCurrentMode) == 0x000004, "Wrong alignment on ITEM_EnergyWeapon_Base_C_SetCurrentMode");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_SetCurrentMode) == 0x000008, "Wrong size on ITEM_EnergyWeapon_Base_C_SetCurrentMode");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_SetCurrentMode, Mode) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_SetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_SetCurrentMode, Result) == 0x000004, "Member 'ITEM_EnergyWeapon_Base_C_SetCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_SetCurrentMode, CallFunc_SetCurrentMode_Result) == 0x000005, "Member 'ITEM_EnergyWeapon_Base_C_SetCurrentMode::CallFunc_SetCurrentMode_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryBeginReloading
// 0x00F8 (0x00F8 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_TryBeginReloading final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           ItemToActivate;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReloadWithBattery_Result;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOwnerEnergy_CurrentEnergy;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOwnerEnergy_MaxEnergy;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBestBatteryClassForEnergyLevel_IsValid; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetBestBatteryClassForEnergyLevel_BestClass; // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass; // 0x0080(0x0028)(HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItemBySoftClass_FoundItem;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_TryBeginReloading) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_TryBeginReloading");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_TryBeginReloading) == 0x0000F8, "Wrong size on ITEM_EnergyWeapon_Base_C_TryBeginReloading");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, ItemToActivate) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::ItemToActivate' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CharacterOwner) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_ShouldReloadWithBattery_Result) == 0x000020, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_ShouldReloadWithBattery_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_Activate_Result) == 0x000021, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetInventoryComponent_Inventory) == 0x000028, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_IsEquipped_Result) == 0x000044, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetOwnerEnergy_CurrentEnergy) == 0x000048, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetOwnerEnergy_CurrentEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetOwnerEnergy_MaxEnergy) == 0x00004C, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetOwnerEnergy_MaxEnergy' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_IsValid) == 0x000050, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_IsValid' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_BestClass) == 0x000058, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_BestClass' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass) == 0x000080, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, K2Node_MakeArray_Array) == 0x0000A8, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_FindItemBySoftClass_FoundItem) == 0x0000E8, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_FindItemBySoftClass_FoundItem' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_TryBeginReloading, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'ITEM_EnergyWeapon_Base_C_TryBeginReloading::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnBecomeUnactivatable
// 0x0002 (0x0002 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable) == 0x000002, "Wrong size on ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000001, "Member 'ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.Activate
// 0x0020 (0x0020 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_ActionManager_C*                  ActionManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateWithPriority_Result;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_EnergyWeapon_Base_C_Activate");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_Activate) == 0x000020, "Wrong size on ITEM_EnergyWeapon_Base_C_Activate");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_EnergyWeapon_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Activate, ActionManager) == 0x000010, "Member 'ITEM_EnergyWeapon_Base_C_Activate::ActionManager' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Activate, CallFunc_Activate_Result) == 0x000018, "Member 'ITEM_EnergyWeapon_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Activate, CallFunc_TryActivateWithPriority_Result) == 0x000019, "Member 'ITEM_EnergyWeapon_Base_C_Activate::CallFunc_TryActivateWithPriority_Result' has a wrong offset!");

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.Deactivate
// 0x0002 (0x0002 - 0x0000)
struct ITEM_EnergyWeapon_Base_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_EnergyWeapon_Base_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_EnergyWeapon_Base_C_Deactivate");
static_assert(sizeof(ITEM_EnergyWeapon_Base_C_Deactivate) == 0x000002, "Wrong size on ITEM_EnergyWeapon_Base_C_Deactivate");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Deactivate, Result) == 0x000000, "Member 'ITEM_EnergyWeapon_Base_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_EnergyWeapon_Base_C_Deactivate, CallFunc_Deactivate_Result) == 0x000001, "Member 'ITEM_EnergyWeapon_Base_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIREPUZZLE_WirePlug

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_WirePlugState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractResultType_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C
// 0x01E8 (0x04F0 - 0x0308)
class AWIREPUZZLE_WirePlug_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WIREPUZZLE_WirePlug_C;              // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProceduralMeshComponent*               ProceduralMesh;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TargetBox;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       DisconnectingSpline;                               // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       RetractingSpline;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       ConnectingSpline;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       RetractedSpline;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       ConnectedSpline;                                   // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       ExtendedSpline;                                    // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PlugMesh;                                          // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RetractingTimeline_Alpha_70B97E0A41469A2A6C6086A873F23F60; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RetractingTimeline__Direction_70B97E0A41469A2A6C6086A873F23F60; // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RetractingTimeline;                                // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DisconnectingTimeline_Alpha_02D70FA2427C87EA5F12A183618CF256; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DisconnectingTimeline__Direction_02D70FA2427C87EA5F12A183618CF256; // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DisconnectingTimeline;                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConnectingTimeline_Alpha_1FCDC73942B410219A6C9A9974794301; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ConnectingTimeline__Direction_1FCDC73942B410219A6C9A9974794301; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ConnectingTimeline;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetractedTimeline_Alpha_F65DB507491E3E9B6CC6FA89C3BCCEE4; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            RetractedTimeline__Direction_F65DB507491E3E9B6CC6FA89C3BCCEE4; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RetractedTimeline;                                 // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExtendedTimeline_Alpha_5765A3464B17E96B318074AC059C04B4; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ExtendedTimeline__Direction_5765A3464B17E96B318074AC059C04B4; // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ExtendedTimeline;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConnectedTimeline_Alpha_8FEAD9924BF54CF6FF284696069C258E; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ConnectedTimeline__Direction_8FEAD9924BF54CF6FF284696069C258E; // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ConnectedTimeline;                                 // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     WireMaterial;                                      // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WireRadius;                                        // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WireSegmentLength;                                 // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RingVertexCount;                                   // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Vertices;                                          // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Triangles;                                         // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Normals;                                           // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      TexCoords;                                         // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TransitionDuration;                                // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionStartTimestamp;                          // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ExtensionOffset;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TargetExtensionOffset;                             // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ConnectionOffset;                                  // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConnectDepthOffset;                                // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_WirePlugState                            WireState;                                         // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviousVertexCount;                               // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ENUM_WirePlugState>                    TargetStates;                                      // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinExtensionInterpSpeed;                           // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxExtensionInterpSpeed;                           // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlendAlongTarget;                                  // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShortestPathRotation;                              // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnConnected;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDisconnected;                                    // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCOMP_WirePuzzle_Cell_Base_C*           WireStart;                                         // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnExtended;                                        // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class USoundCue>               PlugInCue;                                         // 0x04A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               UnplugCue;                                         // 0x04C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnConnected__DelegateSignature();
	void OnDisconnected__DelegateSignature();
	void OnExtended__DelegateSignature();
	void ExecuteUbergraph_WIREPUZZLE_WirePlug(int32 EntryPoint);
	void OnTransitionStateChanged(float DeltaTimeOffset);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RetractingTimeline__UpdateFunc();
	void RetractingTimeline__FinishedFunc();
	void DisconnectingTimeline__UpdateFunc();
	void DisconnectingTimeline__FinishedFunc();
	void ConnectingTimeline__UpdateFunc();
	void ConnectingTimeline__FinishedFunc();
	void RetractedTimeline__UpdateFunc();
	void RetractedTimeline__FinishedFunc();
	void ExtendedTimeline__UpdateFunc();
	void ExtendedTimeline__FinishedFunc();
	void ConnectedTimeline__UpdateFunc();
	void ConnectedTimeline__FinishedFunc();
	void UserConstructionScript();
	void UpdateWireMesh();
	void UpdateWirePlugTransform();
	void UpdateWirePlug(float InterpAlpha);
	void SetInitiallyConnected();
	void SetTargetWirePlugState(ENUM_WirePlugState NewState, bool* Success);
	void GetSplineForState(ENUM_WirePlugState State, class USplineComponent** Result);
	void UpdateSpline(float InterpAlpha);
	void SetConnectionOffset(const struct FVector2D& Offset);
	void GetLocalOffsetForSplinePoint(ENUM_WirePlugState State, int32 PointIndex, struct FVector* Result);
	void SetTargetExtensionOffset(const struct FVector2D& Offset);
	void InitializeSplines();
	void OnFinishedSplineUpdate();
	void GetTransitionDurationForState(ENUM_WirePlugState State, float* Result);
	void UpdateExtensionOffset(float DeltaTime);
	void GetTimelineForState(ENUM_WirePlugState State, class UTimelineComponent** Result);
	void GetProgressInCurrentState(float* Progress);
	void GetShouldBlendAlongTargetForState(ENUM_WirePlugState State, bool* Result);
	void GetShouldUseShortestPathRotationForState(ENUM_WirePlugState State, bool* Result);
	void SetConnectionDepthOffset(float DepthOffset);
	void IsTransitioning(bool* Result);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void EnableWirePlugCollision(bool Enable);
	void FillTargetStatePath(ENUM_WirePlugState FinalState, float* DeltaTimeOffset);
	void GetNextTransitionState(ENUM_WirePlugState* State);
	void BeginTransitioningToNewState(float DeltaTimeOffset);
	void CanImmediatelyTransitionToState(ENUM_WirePlugState State, bool* Result);
	void UpdateWirePlugOffset();
	void UpdateInteractionOverride();
	void GetConnectionDepthOffset(float* Result);
	void InitializeWirePlug();
	void SetWirePlugPowerTypeDescription(const class FText& PowerTypeText);
	void GetFinalTransitionState(ENUM_WirePlugState* State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIREPUZZLE_WirePlug_C">();
	}
	static class AWIREPUZZLE_WirePlug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWIREPUZZLE_WirePlug_C>();
	}
};
static_assert(alignof(AWIREPUZZLE_WirePlug_C) == 0x000008, "Wrong alignment on AWIREPUZZLE_WirePlug_C");
static_assert(sizeof(AWIREPUZZLE_WirePlug_C) == 0x0004F0, "Wrong size on AWIREPUZZLE_WirePlug_C");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, UberGraphFrame_WIREPUZZLE_WirePlug_C) == 0x000308, "Member 'AWIREPUZZLE_WirePlug_C::UberGraphFrame_WIREPUZZLE_WirePlug_C' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ProceduralMesh) == 0x000310, "Member 'AWIREPUZZLE_WirePlug_C::ProceduralMesh' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TargetBox) == 0x000318, "Member 'AWIREPUZZLE_WirePlug_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, DisconnectingSpline) == 0x000320, "Member 'AWIREPUZZLE_WirePlug_C::DisconnectingSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractingSpline) == 0x000328, "Member 'AWIREPUZZLE_WirePlug_C::RetractingSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectingSpline) == 0x000330, "Member 'AWIREPUZZLE_WirePlug_C::ConnectingSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractedSpline) == 0x000338, "Member 'AWIREPUZZLE_WirePlug_C::RetractedSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectedSpline) == 0x000340, "Member 'AWIREPUZZLE_WirePlug_C::ConnectedSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ExtendedSpline) == 0x000348, "Member 'AWIREPUZZLE_WirePlug_C::ExtendedSpline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, PlugMesh) == 0x000350, "Member 'AWIREPUZZLE_WirePlug_C::PlugMesh' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, Spline) == 0x000358, "Member 'AWIREPUZZLE_WirePlug_C::Spline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractingTimeline_Alpha_70B97E0A41469A2A6C6086A873F23F60) == 0x000360, "Member 'AWIREPUZZLE_WirePlug_C::RetractingTimeline_Alpha_70B97E0A41469A2A6C6086A873F23F60' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractingTimeline__Direction_70B97E0A41469A2A6C6086A873F23F60) == 0x000364, "Member 'AWIREPUZZLE_WirePlug_C::RetractingTimeline__Direction_70B97E0A41469A2A6C6086A873F23F60' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractingTimeline) == 0x000368, "Member 'AWIREPUZZLE_WirePlug_C::RetractingTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, DisconnectingTimeline_Alpha_02D70FA2427C87EA5F12A183618CF256) == 0x000370, "Member 'AWIREPUZZLE_WirePlug_C::DisconnectingTimeline_Alpha_02D70FA2427C87EA5F12A183618CF256' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, DisconnectingTimeline__Direction_02D70FA2427C87EA5F12A183618CF256) == 0x000374, "Member 'AWIREPUZZLE_WirePlug_C::DisconnectingTimeline__Direction_02D70FA2427C87EA5F12A183618CF256' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, DisconnectingTimeline) == 0x000378, "Member 'AWIREPUZZLE_WirePlug_C::DisconnectingTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectingTimeline_Alpha_1FCDC73942B410219A6C9A9974794301) == 0x000380, "Member 'AWIREPUZZLE_WirePlug_C::ConnectingTimeline_Alpha_1FCDC73942B410219A6C9A9974794301' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectingTimeline__Direction_1FCDC73942B410219A6C9A9974794301) == 0x000384, "Member 'AWIREPUZZLE_WirePlug_C::ConnectingTimeline__Direction_1FCDC73942B410219A6C9A9974794301' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectingTimeline) == 0x000388, "Member 'AWIREPUZZLE_WirePlug_C::ConnectingTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractedTimeline_Alpha_F65DB507491E3E9B6CC6FA89C3BCCEE4) == 0x000390, "Member 'AWIREPUZZLE_WirePlug_C::RetractedTimeline_Alpha_F65DB507491E3E9B6CC6FA89C3BCCEE4' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractedTimeline__Direction_F65DB507491E3E9B6CC6FA89C3BCCEE4) == 0x000394, "Member 'AWIREPUZZLE_WirePlug_C::RetractedTimeline__Direction_F65DB507491E3E9B6CC6FA89C3BCCEE4' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RetractedTimeline) == 0x000398, "Member 'AWIREPUZZLE_WirePlug_C::RetractedTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ExtendedTimeline_Alpha_5765A3464B17E96B318074AC059C04B4) == 0x0003A0, "Member 'AWIREPUZZLE_WirePlug_C::ExtendedTimeline_Alpha_5765A3464B17E96B318074AC059C04B4' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ExtendedTimeline__Direction_5765A3464B17E96B318074AC059C04B4) == 0x0003A4, "Member 'AWIREPUZZLE_WirePlug_C::ExtendedTimeline__Direction_5765A3464B17E96B318074AC059C04B4' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ExtendedTimeline) == 0x0003A8, "Member 'AWIREPUZZLE_WirePlug_C::ExtendedTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectedTimeline_Alpha_8FEAD9924BF54CF6FF284696069C258E) == 0x0003B0, "Member 'AWIREPUZZLE_WirePlug_C::ConnectedTimeline_Alpha_8FEAD9924BF54CF6FF284696069C258E' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectedTimeline__Direction_8FEAD9924BF54CF6FF284696069C258E) == 0x0003B4, "Member 'AWIREPUZZLE_WirePlug_C::ConnectedTimeline__Direction_8FEAD9924BF54CF6FF284696069C258E' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectedTimeline) == 0x0003B8, "Member 'AWIREPUZZLE_WirePlug_C::ConnectedTimeline' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, WireMaterial) == 0x0003C0, "Member 'AWIREPUZZLE_WirePlug_C::WireMaterial' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, WireRadius) == 0x0003C8, "Member 'AWIREPUZZLE_WirePlug_C::WireRadius' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, WireSegmentLength) == 0x0003CC, "Member 'AWIREPUZZLE_WirePlug_C::WireSegmentLength' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, RingVertexCount) == 0x0003D0, "Member 'AWIREPUZZLE_WirePlug_C::RingVertexCount' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, Vertices) == 0x0003D8, "Member 'AWIREPUZZLE_WirePlug_C::Vertices' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, Triangles) == 0x0003E8, "Member 'AWIREPUZZLE_WirePlug_C::Triangles' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, Normals) == 0x0003F8, "Member 'AWIREPUZZLE_WirePlug_C::Normals' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TexCoords) == 0x000408, "Member 'AWIREPUZZLE_WirePlug_C::TexCoords' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TransitionDuration) == 0x000418, "Member 'AWIREPUZZLE_WirePlug_C::TransitionDuration' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TransitionStartTimestamp) == 0x00041C, "Member 'AWIREPUZZLE_WirePlug_C::TransitionStartTimestamp' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ExtensionOffset) == 0x000420, "Member 'AWIREPUZZLE_WirePlug_C::ExtensionOffset' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TargetExtensionOffset) == 0x000428, "Member 'AWIREPUZZLE_WirePlug_C::TargetExtensionOffset' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectionOffset) == 0x000430, "Member 'AWIREPUZZLE_WirePlug_C::ConnectionOffset' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ConnectDepthOffset) == 0x000438, "Member 'AWIREPUZZLE_WirePlug_C::ConnectDepthOffset' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, WireState) == 0x00043C, "Member 'AWIREPUZZLE_WirePlug_C::WireState' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, PreviousVertexCount) == 0x000440, "Member 'AWIREPUZZLE_WirePlug_C::PreviousVertexCount' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, TargetStates) == 0x000448, "Member 'AWIREPUZZLE_WirePlug_C::TargetStates' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, MinExtensionInterpSpeed) == 0x000458, "Member 'AWIREPUZZLE_WirePlug_C::MinExtensionInterpSpeed' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, MaxExtensionInterpSpeed) == 0x00045C, "Member 'AWIREPUZZLE_WirePlug_C::MaxExtensionInterpSpeed' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, BlendAlongTarget) == 0x000460, "Member 'AWIREPUZZLE_WirePlug_C::BlendAlongTarget' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, ShortestPathRotation) == 0x000461, "Member 'AWIREPUZZLE_WirePlug_C::ShortestPathRotation' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, OnConnected) == 0x000468, "Member 'AWIREPUZZLE_WirePlug_C::OnConnected' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, OnDisconnected) == 0x000478, "Member 'AWIREPUZZLE_WirePlug_C::OnDisconnected' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, WireStart) == 0x000488, "Member 'AWIREPUZZLE_WirePlug_C::WireStart' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, OnExtended) == 0x000490, "Member 'AWIREPUZZLE_WirePlug_C::OnExtended' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, PlugInCue) == 0x0004A0, "Member 'AWIREPUZZLE_WirePlug_C::PlugInCue' has a wrong offset!");
static_assert(offsetof(AWIREPUZZLE_WirePlug_C, UnplugCue) == 0x0004C8, "Member 'AWIREPUZZLE_WirePlug_C::UnplugCue' has a wrong offset!");

}


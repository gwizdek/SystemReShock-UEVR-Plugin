#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SoftwareListItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ENUM_ItemType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.ExecuteUbergraph_WIDGET_SoftwareListItem
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0028(0x0018)()
};
static_assert(alignof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem");
static_assert(sizeof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem) == 0x000040, "Wrong size on WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem");
static_assert(offsetof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem, EntryPoint) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000028, "Member 'WIDGET_SoftwareListItem_C_ExecuteUbergraph_WIDGET_SoftwareListItem::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SoftwareListItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_SoftwareListItem_C_PreConstruct");
static_assert(sizeof(WIDGET_SoftwareListItem_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_SoftwareListItem_C_PreConstruct");
static_assert(offsetof(WIDGET_SoftwareListItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.InitializeSoftwareListItem
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_SoftwareListItem_C_InitializeSoftwareListItem final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_FindBag_Bag;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_InitializeSoftwareListItem) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_InitializeSoftwareListItem");
static_assert(sizeof(WIDGET_SoftwareListItem_C_InitializeSoftwareListItem) == 0x000020, "Wrong size on WIDGET_SoftwareListItem_C_InitializeSoftwareListItem");
static_assert(offsetof(WIDGET_SoftwareListItem_C_InitializeSoftwareListItem, HUD) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_InitializeSoftwareListItem::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_InitializeSoftwareListItem, CallFunc_FindBag_Bag) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_InitializeSoftwareListItem::CallFunc_FindBag_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_InitializeSoftwareListItem, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WIDGET_SoftwareListItem_C_InitializeSoftwareListItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.EVENT_OnCountChanged
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_SoftwareListItem_C_EVENT_OnCountChanged final
{
public:
	class UITEM_Base_C*                           Item_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_EVENT_OnCountChanged) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_EVENT_OnCountChanged");
static_assert(sizeof(WIDGET_SoftwareListItem_C_EVENT_OnCountChanged) == 0x000010, "Wrong size on WIDGET_SoftwareListItem_C_EVENT_OnCountChanged");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnCountChanged, Item_0) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnCountChanged::Item_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnCountChanged, Count) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnCountChanged::Count' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.EVENT_OnBagChanged
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_SoftwareListItem_C_EVENT_OnBagChanged final
{
public:
	int32                                         Slot_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           SlotItem;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_FindBag_Bag;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_EVENT_OnBagChanged");
static_assert(sizeof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged) == 0x000038, "Wrong size on WIDGET_SoftwareListItem_C_EVENT_OnBagChanged");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, Slot_0) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::Slot_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, SlotItem) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::SlotItem' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, CallFunc_FindBag_Bag) == 0x000020, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::CallFunc_FindBag_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, CallFunc_ClassIsChildOf_ReturnValue) == 0x000028, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnBagChanged, CallFunc_GetSlotItem_Item) == 0x000030, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.FindBag
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SoftwareListItem_C_FindBag final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ItemType                                 Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ItemType                                 Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ItemType                                 K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_FindBag) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_FindBag");
static_assert(sizeof(WIDGET_SoftwareListItem_C_FindBag) == 0x000018, "Wrong size on WIDGET_SoftwareListItem_C_FindBag");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, Bag) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_FindBag::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, Temp_bool_Variable) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_FindBag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, Temp_byte_Variable) == 0x000009, "Member 'WIDGET_SoftwareListItem_C_FindBag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, Temp_byte_Variable_1) == 0x00000A, "Member 'WIDGET_SoftwareListItem_C_FindBag::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, CallFunc_ClassIsChildOf_ReturnValue) == 0x00000B, "Member 'WIDGET_SoftwareListItem_C_FindBag::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, K2Node_Select_Default) == 0x00000C, "Member 'WIDGET_SoftwareListItem_C_FindBag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindBag, CallFunc_GetBagByType_Bag) == 0x000010, "Member 'WIDGET_SoftwareListItem_C_FindBag::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.RefreshItemText
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_SoftwareListItem_C_RefreshItemText final
{
public:
	class UITEM_Base_C*                           FoundItem;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UITEM_Base_C* Item, int32 Count)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class UITEM_UpgradeBase_C*                    K2Node_DynamicCast_AsITEM_Upgrade_Base;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVersionNumber_Version;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	int32                                         CallFunc_GetCount_Result;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UITEM_Base_C* Item, int32 Count)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_Item;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_RefreshItemText) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_RefreshItemText");
static_assert(sizeof(WIDGET_SoftwareListItem_C_RefreshItemText) == 0x0000F8, "Wrong size on WIDGET_SoftwareListItem_C_RefreshItemText");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, FoundItem) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_DynamicCast_AsITEM_Upgrade_Base) == 0x000030, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_DynamicCast_AsITEM_Upgrade_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_GetVersionNumber_Version) == 0x00003C, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_GetVersionNumber_Version' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_MakeArray_Array) == 0x000088, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_GetCount_Result) == 0x0000B0, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B8, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_Not_PreBool_ReturnValue) == 0x0000D2, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D4, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_FindItem_Item) == 0x0000E8, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_FindItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000F0, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_RefreshItemText, CallFunc_BooleanOR_ReturnValue) == 0x0000F1, "Member 'WIDGET_SoftwareListItem_C_RefreshItemText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.FindItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SoftwareListItem_C_FindItem final
{
public:
	class UITEM_Base_C*                           Item_0;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_FindBag_Bag;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_FindItem) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_FindItem");
static_assert(sizeof(WIDGET_SoftwareListItem_C_FindItem) == 0x000018, "Wrong size on WIDGET_SoftwareListItem_C_FindItem");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindItem, Item_0) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_FindItem::Item_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindItem, CallFunc_FindBag_Bag) == 0x000008, "Member 'WIDGET_SoftwareListItem_C_FindItem::CallFunc_FindBag_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_FindItem, CallFunc_FindItem_FoundItem) == 0x000010, "Member 'WIDGET_SoftwareListItem_C_FindItem::CallFunc_FindItem_FoundItem' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.EVENT_OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter) == 0x0000A8, "Wrong size on WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WIDGET_SoftwareListItem.WIDGET_SoftwareListItem_C.EVENT_OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave) == 0x000070, "Wrong size on WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_SoftwareListItem_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_LaunchProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SKILL_Projectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SKILL_LaunchProjectile.SKILL_LaunchProjectile_C
// 0x0060 (0x0110 - 0x00B0)
class USKILL_LaunchProjectile_C : public USKILL_Projectile_Base_C
{
public:
	class UClass*                                 ExplosiveProjectileClass;                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            ExplosiveProjectile;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaunchSpeed;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlastRadius;                                       // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlastImpulse;                                      // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastBarrelIndex;                                   // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorstAccuracyHalfExtents;                          // 0x00D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BestAccuracyHalfExtents;                           // 0x00DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SpawnProjectileMessage;                            // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LaunchProjectileMessage;                           // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         ArmorPenetration;                                  // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFixedLaunchDirection;                           // 0x010C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SpawnProjectile();
	void LaunchProjectile();
	void GetProjectileSpeed(float* Speed);
	void OnProjectileLaunched();
	void OnActivateSkill(bool* Result);
	void OnCycleBarrel();
	void OnAttachProjectileToBarrel(class FName BarrelSocketName);
	void DropProjectile();
	void ComputeLaunchVelocity(struct FVector* Result);
	void GetLastBarrelIndex(int32* Index_0);
	void GetLastBarrelSocketName(class FName* Result);
	void GetProjectileSpawnRotation(const struct FRotator& BarrelRotation, struct FRotator* Result);
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void IsMontageOptional(bool* Result);
	void IsSkillActivated(bool* Result);
	void OnDeactivateSkill(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SKILL_LaunchProjectile_C">();
	}
	static class USKILL_LaunchProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USKILL_LaunchProjectile_C>();
	}
};
static_assert(alignof(USKILL_LaunchProjectile_C) == 0x000008, "Wrong alignment on USKILL_LaunchProjectile_C");
static_assert(sizeof(USKILL_LaunchProjectile_C) == 0x000110, "Wrong size on USKILL_LaunchProjectile_C");
static_assert(offsetof(USKILL_LaunchProjectile_C, ExplosiveProjectileClass) == 0x0000B0, "Member 'USKILL_LaunchProjectile_C::ExplosiveProjectileClass' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, ExplosiveProjectile) == 0x0000B8, "Member 'USKILL_LaunchProjectile_C::ExplosiveProjectile' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, LaunchSpeed) == 0x0000C0, "Member 'USKILL_LaunchProjectile_C::LaunchSpeed' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, BlastRadius) == 0x0000C4, "Member 'USKILL_LaunchProjectile_C::BlastRadius' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, BlastImpulse) == 0x0000C8, "Member 'USKILL_LaunchProjectile_C::BlastImpulse' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, LastBarrelIndex) == 0x0000CC, "Member 'USKILL_LaunchProjectile_C::LastBarrelIndex' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, WorstAccuracyHalfExtents) == 0x0000D0, "Member 'USKILL_LaunchProjectile_C::WorstAccuracyHalfExtents' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, BestAccuracyHalfExtents) == 0x0000DC, "Member 'USKILL_LaunchProjectile_C::BestAccuracyHalfExtents' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, SpawnProjectileMessage) == 0x0000E8, "Member 'USKILL_LaunchProjectile_C::SpawnProjectileMessage' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, LaunchProjectileMessage) == 0x0000F8, "Member 'USKILL_LaunchProjectile_C::LaunchProjectileMessage' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, ArmorPenetration) == 0x000108, "Member 'USKILL_LaunchProjectile_C::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(USKILL_LaunchProjectile_C, HasFixedLaunchDirection) == 0x00010C, "Member 'USKILL_LaunchProjectile_C::HasFixedLaunchDirection' has a wrong offset!");

}


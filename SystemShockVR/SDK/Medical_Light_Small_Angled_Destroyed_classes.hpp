#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Medical_Light_Small_Angled_Destroyed

#include "Basic.hpp"

#include "TILE_BrokenSingleLightPanel_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Medical_Light_Small_Angled_Destroyed.Medical_Light_Small_Angled_Destroyed_C
// 0x0030 (0x02E0 - 0x02B0)
class AMedical_Light_Small_Angled_Destroyed_C final : public ATILE_BrokenSingleLightPanel_C
{
public:
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_10;                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_37;                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_03;                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_14;                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_010;                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BrokenGlass;                                       // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Medical_Light_Small_Angled_Destroyed_C">();
	}
	static class AMedical_Light_Small_Angled_Destroyed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMedical_Light_Small_Angled_Destroyed_C>();
	}
};
static_assert(alignof(AMedical_Light_Small_Angled_Destroyed_C) == 0x000010, "Wrong alignment on AMedical_Light_Small_Angled_Destroyed_C");
static_assert(sizeof(AMedical_Light_Small_Angled_Destroyed_C) == 0x0002E0, "Wrong size on AMedical_Light_Small_Angled_Destroyed_C");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, SK_BrokenGlass_Piece_10) == 0x0002B0, "Member 'AMedical_Light_Small_Angled_Destroyed_C::SK_BrokenGlass_Piece_10' has a wrong offset!");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, SK_BrokenGlass_Piece_37) == 0x0002B8, "Member 'AMedical_Light_Small_Angled_Destroyed_C::SK_BrokenGlass_Piece_37' has a wrong offset!");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, SK_BrokenGlass_Piece_03) == 0x0002C0, "Member 'AMedical_Light_Small_Angled_Destroyed_C::SK_BrokenGlass_Piece_03' has a wrong offset!");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, SK_BrokenGlass_Piece_14) == 0x0002C8, "Member 'AMedical_Light_Small_Angled_Destroyed_C::SK_BrokenGlass_Piece_14' has a wrong offset!");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, SK_BrokenGlass_Piece_010) == 0x0002D0, "Member 'AMedical_Light_Small_Angled_Destroyed_C::SK_BrokenGlass_Piece_010' has a wrong offset!");
static_assert(offsetof(AMedical_Light_Small_Angled_Destroyed_C, BrokenGlass) == 0x0002D8, "Member 'AMedical_Light_Small_Angled_Destroyed_C::BrokenGlass' has a wrong offset!");

}


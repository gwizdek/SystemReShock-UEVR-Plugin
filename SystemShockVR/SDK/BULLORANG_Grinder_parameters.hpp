#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BULLORANG_Grinder

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BULLORANG_Grinder.BULLORANG_Grinder_C.ExecuteUbergraph_BULLORANG_Grinder
// 0x000C (0x000C - 0x0000)
struct BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder) == 0x000004, "Wrong alignment on BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder");
static_assert(sizeof(BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder) == 0x00000C, "Wrong size on BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder");
static_assert(offsetof(BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder, EntryPoint) == 0x000000, "Member 'BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder::EntryPoint' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder, CallFunc_RandomBool_ReturnValue) == 0x000004, "Member 'BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'BULLORANG_Grinder_C_ExecuteUbergraph_BULLORANG_Grinder::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BULLORANG_Grinder.BULLORANG_Grinder_C.UpdateBullorangMovement
// 0x0210 (0x0210 - 0x0000)
struct BULLORANG_Grinder_C_UpdateBullorangMovement final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrameMoveVector;                                   // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrameTargetLocation;                               // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_CyberBully_C*                     K2Node_DynamicCast_AsPAWN_Cyber_Bully;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_BullorangDamageTrace_Hit;                 // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDoAnotherCycle_Result;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Grinder_C_UpdateBullorangMovement) == 0x000008, "Wrong alignment on BULLORANG_Grinder_C_UpdateBullorangMovement");
static_assert(sizeof(BULLORANG_Grinder_C_UpdateBullorangMovement) == 0x000210, "Wrong size on BULLORANG_Grinder_C_UpdateBullorangMovement");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, FrameMoveVector) == 0x000004, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::FrameMoveVector' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, FrameTargetLocation) == 0x000010, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::FrameTargetLocation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, Progress) == 0x00001C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::Progress' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, K2Node_DynamicCast_AsPAWN_Cyber_Bully) == 0x000020, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::K2Node_DynamicCast_AsPAWN_Cyber_Bully' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000029, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x00002C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000B8, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BullorangDamageTrace_Hit) == 0x0000C4, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BullorangDamageTrace_Hit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GetSocketRotation_ReturnValue) == 0x00014C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000158, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_ShouldDoAnotherCycle_Result) == 0x000159, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_ShouldDoAnotherCycle_Result' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GetVectorValue_ReturnValue) == 0x00015C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_X) == 0x000168, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_Y) == 0x00016C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_Z) == 0x000170, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_SelectFloat_ReturnValue) == 0x000174, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Lerp_ReturnValue) == 0x000178, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_MakeVector_ReturnValue) == 0x00017C, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001A0, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A4, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0001A8, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001AC, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_GetVectorValue_ReturnValue_1) == 0x0001B0, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001BC, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_X_1) == 0x0001C0, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_Y_1) == 0x0001C4, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_BreakVector_Z_1) == 0x0001C8, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_FClamp_ReturnValue) == 0x0001CC, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001D4, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001D8, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001DC, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001E8, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F4, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_UpdateBullorangMovement, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000200, "Member 'BULLORANG_Grinder_C_UpdateBullorangMovement::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BULLORANG_Grinder.BULLORANG_Grinder_C.StartBullorangCycle
// 0x00A0 (0x00A0 - 0x0000)
struct BULLORANG_Grinder_C_StartBullorangCycle final
{
public:
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Grinder_C_StartBullorangCycle) == 0x000008, "Wrong alignment on BULLORANG_Grinder_C_StartBullorangCycle");
static_assert(sizeof(BULLORANG_Grinder_C_StartBullorangCycle) == 0x0000A0, "Wrong size on BULLORANG_Grinder_C_StartBullorangCycle");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000000, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_GetTarget_Target) == 0x000020, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_GetUpVector_ReturnValue) == 0x000028, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Get_Target_Location_Location) == 0x000034, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Vector_Distance_ReturnValue) == 0x000040, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, Temp_int_Variable) == 0x000060, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000064, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000080, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_Vector_Distance_ReturnValue_1) == 0x00008C, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_StartBullorangCycle, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00009C, "Member 'BULLORANG_Grinder_C_StartBullorangCycle::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BULLORANG_Grinder.BULLORANG_Grinder_C.ShouldDoAnotherCycle
// 0x0060 (0x0060 - 0x0000)
struct BULLORANG_Grinder_C_ShouldDoAnotherCycle final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy_1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Grinder_C_ShouldDoAnotherCycle) == 0x000008, "Wrong alignment on BULLORANG_Grinder_C_ShouldDoAnotherCycle");
static_assert(sizeof(BULLORANG_Grinder_C_ShouldDoAnotherCycle) == 0x000060, "Wrong size on BULLORANG_Grinder_C_ShouldDoAnotherCycle");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, Result) == 0x000000, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::Result' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000008, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, K2Node_DynamicCast_AsPAWN_Enemy_1) == 0x000018, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::K2Node_DynamicCast_AsPAWN_Enemy_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_GetTarget_Target) == 0x000028, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_GetTarget_Target_1) == 0x000030, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_Get_Target_Location_Location) == 0x000038, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_Vector_Distance_ReturnValue) == 0x000054, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_Less_FloatFloat_ReturnValue) == 0x000059, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_BooleanOR_ReturnValue) == 0x00005A, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Grinder_C_ShouldDoAnotherCycle, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'BULLORANG_Grinder_C_ShouldDoAnotherCycle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


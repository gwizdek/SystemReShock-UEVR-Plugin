#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_HardwareButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_HardwareButton.WIDGET_HardwareButton_C
// 0x0060 (0x02C0 - 0x0260)
class UWIDGET_HardwareButton_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       TransitionMouseOver;                               // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionActive;                                  // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionHasItem;                                 // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_HardwareButton;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Input;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_Hotkey;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 HardwareItemClass;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InputActionName;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   HardwareItem;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance_HardwareSlot;                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasActivated;                                      // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void EVENT_OnHardwareBagChanged(int32 SlotIndex);
	void InitializeHardwareButton(class UWIDGET_PlayerHUD_C* PlayerHUD_0);
	void OnHardwareActivated();
	void OnHardwareDeactivated();
	void EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnHardwareStateChanged(bool State);
	void SetHardwareItem(class UITEM_HardwareBase_C* Item, bool Instant);
	void FindHardwareItem(class UITEM_HardwareBase_C** HardwareItem_0);
	void SetMouseOver(bool MouseOver, bool Instant);
	void SetActivated(bool Activated, bool Instant);
	void EVENT_OnHardwareStateChanged(bool Activated, bool MagLocked);
	void FindHardwareBag(class UInventoryBag_C** Bag);
	void ToggleHardware();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_HardwareButton_C">();
	}
	static class UWIDGET_HardwareButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_HardwareButton_C>();
	}
};
static_assert(alignof(UWIDGET_HardwareButton_C) == 0x000008, "Wrong alignment on UWIDGET_HardwareButton_C");
static_assert(sizeof(UWIDGET_HardwareButton_C) == 0x0002C0, "Wrong size on UWIDGET_HardwareButton_C");
static_assert(offsetof(UWIDGET_HardwareButton_C, TransitionMouseOver) == 0x000260, "Member 'UWIDGET_HardwareButton_C::TransitionMouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, TransitionActive) == 0x000268, "Member 'UWIDGET_HardwareButton_C::TransitionActive' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, TransitionHasItem) == 0x000270, "Member 'UWIDGET_HardwareButton_C::TransitionHasItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, MESH_HardwareButton) == 0x000278, "Member 'UWIDGET_HardwareButton_C::MESH_HardwareButton' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, MESH_Input) == 0x000280, "Member 'UWIDGET_HardwareButton_C::MESH_Input' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, TEXT_Hotkey) == 0x000288, "Member 'UWIDGET_HardwareButton_C::TEXT_Hotkey' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, HardwareItemClass) == 0x000290, "Member 'UWIDGET_HardwareButton_C::HardwareItemClass' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, InputActionName) == 0x000298, "Member 'UWIDGET_HardwareButton_C::InputActionName' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, PlayerHUD) == 0x0002A0, "Member 'UWIDGET_HardwareButton_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, HardwareItem) == 0x0002A8, "Member 'UWIDGET_HardwareButton_C::HardwareItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, MaterialInstance_HardwareSlot) == 0x0002B0, "Member 'UWIDGET_HardwareButton_C::MaterialInstance_HardwareSlot' has a wrong offset!");
static_assert(offsetof(UWIDGET_HardwareButton_C, WasActivated) == 0x0002B8, "Member 'UWIDGET_HardwareButton_C::WasActivated' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_GrenadeLauncher

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.ExecuteUbergraph_WEAPON_GrenadeLauncher
// 0x0198 (0x0198 - 0x0000)
struct WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Explosive_Base;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0098(0x0100)(HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher) == 0x000198, "Wrong size on WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, EntryPoint) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CustomEvent_Loaded_2) == 0x000028, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, Temp_object_Variable) == 0x000030, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_DynamicCast_AsAnim_Montage) == 0x000038, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CustomEvent_Loaded_1) == 0x000048, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, Temp_object_Variable_1) == 0x000050, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000058, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CustomEvent_Loaded) == 0x000068, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, Temp_class_Variable) == 0x000070, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_ClassDynamicCast_AsITEM_Explosive_Base) == 0x000078, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_ClassDynamicCast_AsITEM_Explosive_Base' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_ClassDynamicCast_bSuccess) == 0x000080, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, K2Node_CreateDelegate_OutputDelegate_2) == 0x000084, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher, CallFunc_GetCurrentMode_Mode) == 0x000098, "Member 'WEAPON_GrenadeLauncher_C_ExecuteUbergraph_WEAPON_GrenadeLauncher::CallFunc_GetCurrentMode_Mode' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.OnLoaded_70EA00D24F1C36AA168656913D7F6686
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686, Loaded) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_OnLoaded_70EA00D24F1C36AA168656913D7F6686::Loaded' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.OnLoaded_85606C184D68C3CDCB63C6AD216B097D
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D, Loaded) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_OnLoaded_85606C184D68C3CDCB63C6AD216B097D::Loaded' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.OnLoaded_3E72C7BC4FF60342E027CE9D949945DF
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF, Loaded) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_OnLoaded_3E72C7BC4FF60342E027CE9D949945DF::Loaded' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.FireProjectile
// 0x0188 (0x0188 - 0x0000)
struct WEAPON_GrenadeLauncher_C_FireProjectile final
{
public:
	class AActor*                                 FiredProjectile;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrenadeDirection;                                  // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeProjectile_Base_C*              Grenade;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FireProjectile_FiredProjectile;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FireProjectile_Direction;                 // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrenadeProjectile_Base_C*              K2Node_DynamicCast_AsGrenade_Projectile_Base;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_FireProjectile) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_FireProjectile");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_FireProjectile) == 0x000188, "Wrong size on WEAPON_GrenadeLauncher_C_FireProjectile");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, FiredProjectile) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, Direction) == 0x000008, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, GrenadeDirection) == 0x000014, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::GrenadeDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, Grenade) == 0x000020, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::Grenade' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000028, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000138, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00013C, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000140, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x000144, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000148, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000158, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_FireProjectile_FiredProjectile) == 0x000160, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_FireProjectile_FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, CallFunc_FireProjectile_Direction) == 0x000168, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::CallFunc_FireProjectile_Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, K2Node_DynamicCast_AsGrenade_Projectile_Base) == 0x000178, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::K2Node_DynamicCast_AsGrenade_Projectile_Base' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_FireProjectile, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'WEAPON_GrenadeLauncher_C_FireProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.OnWeaponBecameActivatable
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable) == 0x000018, "Wrong size on WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable, CallFunc_GetAmmoInMagazine_Ammo) == 0x00000C, "Member 'WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WEAPON_GrenadeLauncher_C_OnWeaponBecameActivatable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.OnBecomeUnactivatable
// 0x0002 (0x0002 - 0x0000)
struct WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable) == 0x000002, "Wrong size on WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000001, "Member 'WEAPON_GrenadeLauncher_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.CreateGrenadeMeshComponent
// 0x00A0 (0x00A0 - 0x0000)
struct WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent final
{
public:
	class USkeletalMeshComponent*                 CharacterMesh;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDesiredModeSwitchIndex_Result;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCustomPrimitiveDataFloat_ReturnValue;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddStaticMeshComponent_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent) == 0x000010, "Wrong alignment on WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent) == 0x0000A0, "Wrong size on WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CharacterMesh) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CharacterMesh' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, Temp_bool_Variable) == 0x000008, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, Temp_int_Variable) == 0x00000C, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, Temp_object_Variable) == 0x000010, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, Temp_object_Variable_1) == 0x000018, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, Temp_object_Variable_2) == 0x000020, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_GetDesiredModeSwitchIndex_Result) == 0x000028, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_GetDesiredModeSwitchIndex_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_GetCustomPrimitiveDataFloat_ReturnValue) == 0x000030, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_GetCustomPrimitiveDataFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, K2Node_Select_Default) == 0x000040, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, K2Node_Select_Default_1) == 0x000080, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_AddStaticMeshComponent_ReturnValue) == 0x000090, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_AddStaticMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'WEAPON_GrenadeLauncher_C_CreateGrenadeMeshComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.DestroyGrenadeMeshComponent
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent) == 0x000001, "Wrong alignment on WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent) == 0x000001, "Wrong size on WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_DestroyGrenadeMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTryingToRefillMagazine_Result;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, CallFunc_IsTryingToRefillMagazine_Result) == 0x000011, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::CallFunc_IsTryingToRefillMagazine_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000012, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000013, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000014, "Member 'WEAPON_GrenadeLauncher_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.QueueReloading
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_GrenadeLauncher_C_QueueReloading final
{
public:
	bool                                          CallFunc_IsTryingToRefillMagazine_Result;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_QueueReloading) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_QueueReloading");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_QueueReloading) == 0x000010, "Wrong size on WEAPON_GrenadeLauncher_C_QueueReloading");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueReloading, CallFunc_IsTryingToRefillMagazine_Result) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_QueueReloading::CallFunc_IsTryingToRefillMagazine_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueReloading, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'WEAPON_GrenadeLauncher_C_QueueReloading::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.QueueModeSwitch
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_QueueModeSwitch final
{
public:
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_QueueModeSwitch) == 0x000004, "Wrong alignment on WEAPON_GrenadeLauncher_C_QueueModeSwitch");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_QueueModeSwitch) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_QueueModeSwitch");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueModeSwitch, CallFunc_GetAmmoInMagazine_Ammo) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_QueueModeSwitch::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueModeSwitch, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WEAPON_GrenadeLauncher_C_QueueModeSwitch::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueModeSwitch, CallFunc_ReceiveAnimationMessage_Result) == 0x000005, "Member 'WEAPON_GrenadeLauncher_C_QueueModeSwitch::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.QueueReloadingFromUnload
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload final
{
public:
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload, CallFunc_GetOwnerCharacter_Character) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_QueueReloadingFromUnload::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.GetProjectileClass
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_GetProjectileClass final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_GetProjectileClass) == 0x000008, "Wrong alignment on WEAPON_GrenadeLauncher_C_GetProjectileClass");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_GetProjectileClass) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_GetProjectileClass");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_GetProjectileClass, Result) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_GetProjectileClass::Result' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.ShouldAutoReload
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_GrenadeLauncher_C_ShouldAutoReload final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_ShouldAutoReload) == 0x000001, "Wrong alignment on WEAPON_GrenadeLauncher_C_ShouldAutoReload");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_ShouldAutoReload) == 0x000001, "Wrong size on WEAPON_GrenadeLauncher_C_ShouldAutoReload");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_ShouldAutoReload, Result) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_ShouldAutoReload::Result' has a wrong offset!");

// Function WEAPON_GrenadeLauncher.WEAPON_GrenadeLauncher_C.SetGrenadeLaunchProperties
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties final
{
public:
	int32                                         ContactDamage;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LaunchSpeed;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties) == 0x000004, "Wrong alignment on WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties");
static_assert(sizeof(WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties) == 0x000008, "Wrong size on WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties, ContactDamage) == 0x000000, "Member 'WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties::ContactDamage' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties, LaunchSpeed) == 0x000004, "Member 'WEAPON_GrenadeLauncher_C_SetGrenadeLaunchProperties::LaunchSpeed' has a wrong offset!");

}


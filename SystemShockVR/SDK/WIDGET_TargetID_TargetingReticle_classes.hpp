#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TargetID_TargetingReticle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C
// 0x0058 (0x02B8 - 0x0260)
class UWIDGET_TargetID_TargetingReticle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_DismissTarget;                                // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_DismissCursorAligned;                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_CursorAligned;                                // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_LockOnTarget;                                 // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_WeakspotTargetReticle;                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          TargetEnemy;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCursorAligned;                                   // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NextWeakspotTickTimestamp;                         // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastWeakspotBoneName;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastWeakspotWorldLocation;                         // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_TargetID_TargetingReticle(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnAcquireTarget(class APAWN_Enemy_C* Enemy);
	void OnCursorAligned(bool IsAligned);
	void TryUpdateCursorOver(bool State);
	void UpdateWeakspotLocation();
	void EVENT_OnDismissAnimationFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_TargetID_TargetingReticle_C">();
	}
	static class UWIDGET_TargetID_TargetingReticle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_TargetID_TargetingReticle_C>();
	}
};
static_assert(alignof(UWIDGET_TargetID_TargetingReticle_C) == 0x000008, "Wrong alignment on UWIDGET_TargetID_TargetingReticle_C");
static_assert(sizeof(UWIDGET_TargetID_TargetingReticle_C) == 0x0002B8, "Wrong size on UWIDGET_TargetID_TargetingReticle_C");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_TargetID_TargetingReticle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, ANIM_DismissTarget) == 0x000268, "Member 'UWIDGET_TargetID_TargetingReticle_C::ANIM_DismissTarget' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, ANIM_DismissCursorAligned) == 0x000270, "Member 'UWIDGET_TargetID_TargetingReticle_C::ANIM_DismissCursorAligned' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, ANIM_CursorAligned) == 0x000278, "Member 'UWIDGET_TargetID_TargetingReticle_C::ANIM_CursorAligned' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, ANIM_LockOnTarget) == 0x000280, "Member 'UWIDGET_TargetID_TargetingReticle_C::ANIM_LockOnTarget' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, MESH_WeakspotTargetReticle) == 0x000288, "Member 'UWIDGET_TargetID_TargetingReticle_C::MESH_WeakspotTargetReticle' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, TargetEnemy) == 0x000290, "Member 'UWIDGET_TargetID_TargetingReticle_C::TargetEnemy' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, IsCursorAligned) == 0x000298, "Member 'UWIDGET_TargetID_TargetingReticle_C::IsCursorAligned' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, NextWeakspotTickTimestamp) == 0x00029C, "Member 'UWIDGET_TargetID_TargetingReticle_C::NextWeakspotTickTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, LastWeakspotBoneName) == 0x0002A0, "Member 'UWIDGET_TargetID_TargetingReticle_C::LastWeakspotBoneName' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetingReticle_C, LastWeakspotWorldLocation) == 0x0002A8, "Member 'UWIDGET_TargetID_TargetingReticle_C::LastWeakspotWorldLocation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayCue

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayCue.PlayCue_C
// 0x0020 (0x0058 - 0x0038)
class UPlayCue_C final : public UAnimNotify
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Follow;                                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Mute;                                              // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VolumeMultiplier;                                  // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ComponentTag;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayCue_C">();
	}
	static class UPlayCue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayCue_C>();
	}
};
static_assert(alignof(UPlayCue_C) == 0x000008, "Wrong alignment on UPlayCue_C");
static_assert(sizeof(UPlayCue_C) == 0x000058, "Wrong size on UPlayCue_C");
static_assert(offsetof(UPlayCue_C, SoundCue) == 0x000038, "Member 'UPlayCue_C::SoundCue' has a wrong offset!");
static_assert(offsetof(UPlayCue_C, Follow) == 0x000040, "Member 'UPlayCue_C::Follow' has a wrong offset!");
static_assert(offsetof(UPlayCue_C, Mute) == 0x000041, "Member 'UPlayCue_C::Mute' has a wrong offset!");
static_assert(offsetof(UPlayCue_C, VolumeMultiplier) == 0x000044, "Member 'UPlayCue_C::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(UPlayCue_C, SocketName) == 0x000048, "Member 'UPlayCue_C::SocketName' has a wrong offset!");
static_assert(offsetof(UPlayCue_C, ComponentTag) == 0x000050, "Member 'UPlayCue_C::ComponentTag' has a wrong offset!");

}


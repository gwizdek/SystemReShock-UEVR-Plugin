#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Slider

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Slider.WIDGET_Slider_C.OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Slider_C_OnValueChanged__DelegateSignature final
{
public:
	float                                         NewSliderValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewAbsoluteValue;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_Slider_C_OnValueChanged__DelegateSignature");
static_assert(sizeof(WIDGET_Slider_C_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on WIDGET_Slider_C_OnValueChanged__DelegateSignature");
static_assert(offsetof(WIDGET_Slider_C_OnValueChanged__DelegateSignature, NewSliderValue) == 0x000000, "Member 'WIDGET_Slider_C_OnValueChanged__DelegateSignature::NewSliderValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnValueChanged__DelegateSignature, NewAbsoluteValue) == 0x000004, "Member 'WIDGET_Slider_C_OnValueChanged__DelegateSignature::NewAbsoluteValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.ExecuteUbergraph_WIDGET_Slider
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider) == 0x000004, "Wrong alignment on WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider");
static_assert(sizeof(WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider) == 0x000004, "Wrong size on WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider");
static_assert(offsetof(WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider, EntryPoint) == 0x000000, "Member 'WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider::EntryPoint' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseDown
// 0x0230 (0x0230 - 0x0000)
struct WIDGET_Slider_C_EVENT_OnMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_NormalizedToReal_RealValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderValueFromMousePosition_SliderValue; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSliderValue_RealValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_EVENT_OnMouseDown) == 0x000008, "Wrong alignment on WIDGET_Slider_C_EVENT_OnMouseDown");
static_assert(sizeof(WIDGET_Slider_C_EVENT_OnMouseDown) == 0x000230, "Wrong size on WIDGET_Slider_C_EVENT_OnMouseDown");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, CallFunc_NormalizedToReal_RealValue) == 0x000160, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::CallFunc_NormalizedToReal_RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, CallFunc_GetSliderValueFromMousePosition_SliderValue) == 0x000164, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::CallFunc_GetSliderValueFromMousePosition_SliderValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, CallFunc_SetSliderValue_RealValue) == 0x000168, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::CallFunc_SetSliderValue_RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000228, "Member 'WIDGET_Slider_C_EVENT_OnMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseMove
// 0x02E8 (0x02E8 - 0x0000)
struct WIDGET_Slider_C_EVENT_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizedToReal_RealValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	float                                         CallFunc_GetSliderValueFromMousePosition_SliderValue; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSliderValue_RealValue;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0230(0x00B8)()
};
static_assert(alignof(WIDGET_Slider_C_EVENT_OnMouseMove) == 0x000008, "Wrong alignment on WIDGET_Slider_C_EVENT_OnMouseMove");
static_assert(sizeof(WIDGET_Slider_C_EVENT_OnMouseMove) == 0x0002E8, "Wrong size on WIDGET_Slider_C_EVENT_OnMouseMove");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, MyGeometry) == 0x000000, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, MouseEvent) == 0x000038, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, ReturnValue) == 0x0000A8, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000160, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_NormalizedToReal_RealValue) == 0x000168, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_NormalizedToReal_RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_GetSliderValueFromMousePosition_SliderValue) == 0x000228, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_GetSliderValueFromMousePosition_SliderValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_SetSliderValue_RealValue) == 0x00022C, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_SetSliderValue_RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseMove, CallFunc_Handled_ReturnValue_1) == 0x000230, "Member 'WIDGET_Slider_C_EVENT_OnMouseMove::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseUp
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_Slider_C_EVENT_OnMouseUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_Slider_C_EVENT_OnMouseUp) == 0x000008, "Wrong alignment on WIDGET_Slider_C_EVENT_OnMouseUp");
static_assert(sizeof(WIDGET_Slider_C_EVENT_OnMouseUp) == 0x000218, "Wrong size on WIDGET_Slider_C_EVENT_OnMouseUp");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseUp, MyGeometry) == 0x000000, "Member 'WIDGET_Slider_C_EVENT_OnMouseUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseUp, MouseEvent) == 0x000038, "Member 'WIDGET_Slider_C_EVENT_OnMouseUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseUp, ReturnValue) == 0x0000A8, "Member 'WIDGET_Slider_C_EVENT_OnMouseUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_Slider_C_EVENT_OnMouseUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WIDGET_Slider_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_Slider_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_Slider_C_EVENT_OnMouseEnter) == 0x0000B0, "Wrong size on WIDGET_Slider_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_Slider_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_Slider_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WIDGET_Slider_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseExit
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_Slider_C_EVENT_OnMouseExit final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_Slider_C_EVENT_OnMouseExit) == 0x000008, "Wrong alignment on WIDGET_Slider_C_EVENT_OnMouseExit");
static_assert(sizeof(WIDGET_Slider_C_EVENT_OnMouseExit) == 0x000070, "Wrong size on WIDGET_Slider_C_EVENT_OnMouseExit");
static_assert(offsetof(WIDGET_Slider_C_EVENT_OnMouseExit, MouseEvent) == 0x000000, "Member 'WIDGET_Slider_C_EVENT_OnMouseExit::MouseEvent' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.SetSliderValue
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_Slider_C_SetSliderValue final
{
public:
	float                                         NormalizedValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RealValue;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscreteValue;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSliderTextToDisplay_Text;              // 0x0010(0x0018)()
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_SetSliderValue) == 0x000008, "Wrong alignment on WIDGET_Slider_C_SetSliderValue");
static_assert(sizeof(WIDGET_Slider_C_SetSliderValue) == 0x000058, "Wrong size on WIDGET_Slider_C_SetSliderValue");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, NormalizedValue) == 0x000000, "Member 'WIDGET_Slider_C_SetSliderValue::NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, RealValue) == 0x000004, "Member 'WIDGET_Slider_C_SetSliderValue::RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, DiscreteValue) == 0x000008, "Member 'WIDGET_Slider_C_SetSliderValue::DiscreteValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, Value) == 0x00000C, "Member 'WIDGET_Slider_C_SetSliderValue::Value' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_GetSliderTextToDisplay_Text) == 0x000010, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_GetSliderTextToDisplay_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_GetSliderLength_Length) == 0x00002C, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_GetSliderLength_Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_GetSliderLength_Length_1) == 0x000034, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_GetSliderLength_Length_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderValue, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'WIDGET_Slider_C_SetSliderValue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.SetSliderRealValue
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_Slider_C_SetSliderRealValue final
{
public:
	float                                         RealValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DiscreteValue;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSliderTextToDisplay_Text;              // 0x0010(0x0018)()
	float                                         CallFunc_RealToNormalized_NormalizedValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizedToDiscrete_DiscreteValue;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_SetSliderRealValue) == 0x000008, "Wrong alignment on WIDGET_Slider_C_SetSliderRealValue");
static_assert(sizeof(WIDGET_Slider_C_SetSliderRealValue) == 0x000060, "Wrong size on WIDGET_Slider_C_SetSliderRealValue");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, RealValue) == 0x000000, "Member 'WIDGET_Slider_C_SetSliderRealValue::RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, DiscreteValue) == 0x000004, "Member 'WIDGET_Slider_C_SetSliderRealValue::DiscreteValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, Value) == 0x000008, "Member 'WIDGET_Slider_C_SetSliderRealValue::Value' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_GetSliderTextToDisplay_Text) == 0x000010, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_GetSliderTextToDisplay_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_RealToNormalized_NormalizedValue) == 0x000028, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_RealToNormalized_NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_NormalizedToDiscrete_DiscreteValue) == 0x00002C, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_NormalizedToDiscrete_DiscreteValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_GetSliderLength_Length) == 0x000030, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_GetSliderLength_Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_GetSliderLength_Length_1) == 0x000038, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_GetSliderLength_Length_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetSliderRealValue, CallFunc_MakeVector2D_ReturnValue) == 0x000054, "Member 'WIDGET_Slider_C_SetSliderRealValue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderValueFromMousePosition
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Slider_C_GetSliderValueFromMousePosition final
{
public:
	float                                         SliderValue_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length_1;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWidgetOffsetFromWindowPoint_WidgetOffset; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWidgetOffsetFromWindowPoint_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_GetSliderValueFromMousePosition) == 0x000004, "Wrong alignment on WIDGET_Slider_C_GetSliderValueFromMousePosition");
static_assert(sizeof(WIDGET_Slider_C_GetSliderValueFromMousePosition) == 0x000030, "Wrong size on WIDGET_Slider_C_GetSliderValueFromMousePosition");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, SliderValue_0) == 0x000000, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::SliderValue_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_GetSliderLength_Length) == 0x000004, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_GetSliderLength_Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_GetSliderLength_Length_1) == 0x000008, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_GetSliderLength_Length_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x000010, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_GetWidgetOffsetFromWindowPoint_WidgetOffset) == 0x000018, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_GetWidgetOffsetFromWindowPoint_WidgetOffset' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_GetWidgetOffsetFromWindowPoint_ReturnValue) == 0x000020, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_GetWidgetOffsetFromWindowPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValueFromMousePosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_Slider_C_GetSliderValueFromMousePosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderValue
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_Slider_C_GetSliderValue final
{
public:
	float                                         NormalizedValue;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_GetSliderValue) == 0x000004, "Wrong alignment on WIDGET_Slider_C_GetSliderValue");
static_assert(sizeof(WIDGET_Slider_C_GetSliderValue) == 0x000004, "Wrong size on WIDGET_Slider_C_GetSliderValue");
static_assert(offsetof(WIDGET_Slider_C_GetSliderValue, NormalizedValue) == 0x000000, "Member 'WIDGET_Slider_C_GetSliderValue::NormalizedValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetRealValue
// 0x000C (0x000C - 0x0000)
struct WIDGET_Slider_C_GetRealValue final
{
public:
	float                                         RealValue;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderValue_NormalizedValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizedToReal_RealValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_GetRealValue) == 0x000004, "Wrong alignment on WIDGET_Slider_C_GetRealValue");
static_assert(sizeof(WIDGET_Slider_C_GetRealValue) == 0x00000C, "Wrong size on WIDGET_Slider_C_GetRealValue");
static_assert(offsetof(WIDGET_Slider_C_GetRealValue, RealValue) == 0x000000, "Member 'WIDGET_Slider_C_GetRealValue::RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetRealValue, CallFunc_GetSliderValue_NormalizedValue) == 0x000004, "Member 'WIDGET_Slider_C_GetRealValue::CallFunc_GetSliderValue_NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetRealValue, CallFunc_NormalizedToReal_RealValue) == 0x000008, "Member 'WIDGET_Slider_C_GetRealValue::CallFunc_NormalizedToReal_RealValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderPositionFromValue
// 0x002C (0x002C - 0x0000)
struct WIDGET_Slider_C_GetSliderPositionFromValue final
{
public:
	float                                         SliderValue_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewParam;                                          // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_GetSliderPositionFromValue) == 0x000004, "Wrong alignment on WIDGET_Slider_C_GetSliderPositionFromValue");
static_assert(sizeof(WIDGET_Slider_C_GetSliderPositionFromValue) == 0x00002C, "Wrong size on WIDGET_Slider_C_GetSliderPositionFromValue");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, SliderValue_0) == 0x000000, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::SliderValue_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, NewParam) == 0x000004, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::NewParam' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_GetSliderLength_Length) == 0x00000C, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_GetSliderLength_Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_GetSliderLength_Length_1) == 0x000010, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_GetSliderLength_Length_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00001C, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderPositionFromValue, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'WIDGET_Slider_C_GetSliderPositionFromValue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.RealToNormalized
// 0x000C (0x000C - 0x0000)
struct WIDGET_Slider_C_RealToNormalized final
{
public:
	float                                         RealValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedValue;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_RealToNormalized) == 0x000004, "Wrong alignment on WIDGET_Slider_C_RealToNormalized");
static_assert(sizeof(WIDGET_Slider_C_RealToNormalized) == 0x00000C, "Wrong size on WIDGET_Slider_C_RealToNormalized");
static_assert(offsetof(WIDGET_Slider_C_RealToNormalized, RealValue) == 0x000000, "Member 'WIDGET_Slider_C_RealToNormalized::RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_RealToNormalized, NormalizedValue) == 0x000004, "Member 'WIDGET_Slider_C_RealToNormalized::NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_RealToNormalized, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'WIDGET_Slider_C_RealToNormalized::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.Set Instanced Values
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Slider_C_Set_Instanced_Values final
{
public:
	int32                                         DiscreteValues_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialValues;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueMin_0;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueMax_0;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Postfix_0;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         FractionalDigits_0;                                // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_Set_Instanced_Values) == 0x000008, "Wrong alignment on WIDGET_Slider_C_Set_Instanced_Values");
static_assert(sizeof(WIDGET_Slider_C_Set_Instanced_Values) == 0x000030, "Wrong size on WIDGET_Slider_C_Set_Instanced_Values");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, DiscreteValues_0) == 0x000000, "Member 'WIDGET_Slider_C_Set_Instanced_Values::DiscreteValues_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, InitialValues) == 0x000004, "Member 'WIDGET_Slider_C_Set_Instanced_Values::InitialValues' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, ValueMin_0) == 0x000008, "Member 'WIDGET_Slider_C_Set_Instanced_Values::ValueMin_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, ValueMax_0) == 0x00000C, "Member 'WIDGET_Slider_C_Set_Instanced_Values::ValueMax_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, Postfix_0) == 0x000010, "Member 'WIDGET_Slider_C_Set_Instanced_Values::Postfix_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_Set_Instanced_Values, FractionalDigits_0) == 0x000028, "Member 'WIDGET_Slider_C_Set_Instanced_Values::FractionalDigits_0' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.InitializeSlider
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Slider_C_InitializeSlider final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_InitializeSlider) == 0x000008, "Wrong alignment on WIDGET_Slider_C_InitializeSlider");
static_assert(sizeof(WIDGET_Slider_C_InitializeSlider) == 0x000008, "Wrong size on WIDGET_Slider_C_InitializeSlider");
static_assert(offsetof(WIDGET_Slider_C_InitializeSlider, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_Slider_C_InitializeSlider::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.UpdateBackgroundFill
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Slider_C_UpdateBackgroundFill final
{
public:
	float                                         CallFunc_GetSliderValue_NormalizedValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Slider_C_UpdateBackgroundFill) == 0x000004, "Wrong alignment on WIDGET_Slider_C_UpdateBackgroundFill");
static_assert(sizeof(WIDGET_Slider_C_UpdateBackgroundFill) == 0x000008, "Wrong size on WIDGET_Slider_C_UpdateBackgroundFill");
static_assert(offsetof(WIDGET_Slider_C_UpdateBackgroundFill, CallFunc_GetSliderValue_NormalizedValue) == 0x000000, "Member 'WIDGET_Slider_C_UpdateBackgroundFill::CallFunc_GetSliderValue_NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_UpdateBackgroundFill, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WIDGET_Slider_C_UpdateBackgroundFill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.SetIsHighlighted
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Slider_C_SetIsHighlighted final
{
public:
	bool                                          IsHighlighted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_SetIsHighlighted) == 0x000008, "Wrong alignment on WIDGET_Slider_C_SetIsHighlighted");
static_assert(sizeof(WIDGET_Slider_C_SetIsHighlighted) == 0x000028, "Wrong size on WIDGET_Slider_C_SetIsHighlighted");
static_assert(offsetof(WIDGET_Slider_C_SetIsHighlighted, IsHighlighted) == 0x000000, "Member 'WIDGET_Slider_C_SetIsHighlighted::IsHighlighted' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetIsHighlighted, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_Slider_C_SetIsHighlighted::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetIsHighlighted, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000010, "Member 'WIDGET_Slider_C_SetIsHighlighted::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetIsHighlighted, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'WIDGET_Slider_C_SetIsHighlighted::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_SetIsHighlighted, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'WIDGET_Slider_C_SetIsHighlighted::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderLength
// 0x004C (0x004C - 0x0000)
struct WIDGET_Slider_C_GetSliderLength final
{
public:
	float                                         Length;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0004(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_GetSliderLength) == 0x000004, "Wrong alignment on WIDGET_Slider_C_GetSliderLength");
static_assert(sizeof(WIDGET_Slider_C_GetSliderLength) == 0x00004C, "Wrong size on WIDGET_Slider_C_GetSliderLength");
static_assert(offsetof(WIDGET_Slider_C_GetSliderLength, Length) == 0x000000, "Member 'WIDGET_Slider_C_GetSliderLength::Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderLength, CallFunc_GetCachedGeometry_ReturnValue) == 0x000004, "Member 'WIDGET_Slider_C_GetSliderLength::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderLength, CallFunc_GetLocalSize_ReturnValue) == 0x00003C, "Member 'WIDGET_Slider_C_GetSliderLength::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderLength, CallFunc_BreakVector2D_X) == 0x000044, "Member 'WIDGET_Slider_C_GetSliderLength::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderLength, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WIDGET_Slider_C_GetSliderLength::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.OnPaint
// 0x0088 (0x0088 - 0x0000)
struct WIDGET_Slider_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         Value;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSliderTextToDisplay_Text;              // 0x0038(0x0018)()
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizedToDiscrete_DiscreteValue;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSliderLength_Length_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_OnPaint) == 0x000008, "Wrong alignment on WIDGET_Slider_C_OnPaint");
static_assert(sizeof(WIDGET_Slider_C_OnPaint) == 0x000088, "Wrong size on WIDGET_Slider_C_OnPaint");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, Context) == 0x000000, "Member 'WIDGET_Slider_C_OnPaint::Context' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, Value) == 0x000030, "Member 'WIDGET_Slider_C_OnPaint::Value' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_GetSliderTextToDisplay_Text) == 0x000038, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_GetSliderTextToDisplay_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_NormalizedToDiscrete_DiscreteValue) == 0x000054, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_NormalizedToDiscrete_DiscreteValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_GetSliderLength_Length) == 0x000058, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_GetSliderLength_Length' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_GetSliderLength_Length_1) == 0x000060, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_GetSliderLength_Length_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000074, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_Add_FloatFloat_ReturnValue) == 0x000078, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_OnPaint, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WIDGET_Slider_C_OnPaint::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderTextToDisplay
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_Slider_C_GetSliderTextToDisplay final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_NormalizedToReal_RealValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
};
static_assert(alignof(WIDGET_Slider_C_GetSliderTextToDisplay) == 0x000008, "Wrong alignment on WIDGET_Slider_C_GetSliderTextToDisplay");
static_assert(sizeof(WIDGET_Slider_C_GetSliderTextToDisplay) == 0x0000F8, "Wrong size on WIDGET_Slider_C_GetSliderTextToDisplay");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, Text) == 0x000000, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::Text' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, CallFunc_NormalizedToReal_RealValue) == 0x000070, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::CallFunc_NormalizedToReal_RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, CallFunc_Conv_FloatToText_ReturnValue) == 0x000078, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, K2Node_MakeArray_Array) == 0x0000D0, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_GetSliderTextToDisplay, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'WIDGET_Slider_C_GetSliderTextToDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.NormalizedToReal
// 0x000C (0x000C - 0x0000)
struct WIDGET_Slider_C_NormalizedToReal final
{
public:
	float                                         SliderValue_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RealValue;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_NormalizedToReal) == 0x000004, "Wrong alignment on WIDGET_Slider_C_NormalizedToReal");
static_assert(sizeof(WIDGET_Slider_C_NormalizedToReal) == 0x00000C, "Wrong size on WIDGET_Slider_C_NormalizedToReal");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToReal, SliderValue_0) == 0x000000, "Member 'WIDGET_Slider_C_NormalizedToReal::SliderValue_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToReal, RealValue) == 0x000004, "Member 'WIDGET_Slider_C_NormalizedToReal::RealValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToReal, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'WIDGET_Slider_C_NormalizedToReal::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function WIDGET_Slider.WIDGET_Slider_C.NormalizedToDiscrete
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Slider_C_NormalizedToDiscrete final
{
public:
	float                                         NormalizedValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DiscreteValue;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Slider_C_NormalizedToDiscrete) == 0x000004, "Wrong alignment on WIDGET_Slider_C_NormalizedToDiscrete");
static_assert(sizeof(WIDGET_Slider_C_NormalizedToDiscrete) == 0x000028, "Wrong size on WIDGET_Slider_C_NormalizedToDiscrete");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, NormalizedValue) == 0x000000, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::NormalizedValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, DiscreteValue) == 0x000004, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::DiscreteValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000014, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000018, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Slider_C_NormalizedToDiscrete, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'WIDGET_Slider_C_NormalizedToDiscrete::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_LaunchProjectile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.SpawnProjectile
// 0x00E0 (0x00E0 - 0x0000)
struct SKILL_LaunchProjectile_C_SpawnProjectile final
{
public:
	class FName                                   BarrelSocketName;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBarrelTransform_Transform;             // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetProjectileSpawnRotation_Result;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledEnemyDamage_DamageValue;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_SpawnProjectile) == 0x000010, "Wrong alignment on SKILL_LaunchProjectile_C_SpawnProjectile");
static_assert(sizeof(SKILL_LaunchProjectile_C_SpawnProjectile) == 0x0000E0, "Wrong size on SKILL_LaunchProjectile_C_SpawnProjectile");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, BarrelSocketName) == 0x000000, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::BarrelSocketName' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_GetBarrelTransform_Transform) == 0x000010, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_GetBarrelTransform_Transform' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_BreakTransform_Location) == 0x000040, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_GetProjectileSpawnRotation_Result) == 0x000064, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_GetProjectileSpawnRotation_Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_Array_Get_Item) == 0x000070, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_GetSkillPawn_SkillPawn) == 0x0000B0, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_GetScaledEnemyDamage_DamageValue) == 0x0000B8, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_GetScaledEnemyDamage_DamageValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_GetSkillPawn_SkillPawn_1) == 0x0000C0, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C8, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_SpawnProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'SKILL_LaunchProjectile_C_SpawnProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.LaunchProjectile
// 0x0028 (0x0028 - 0x0000)
struct SKILL_LaunchProjectile_C_LaunchProjectile final
{
public:
	struct FVector                                LaunchVelocity;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeLaunchVelocity_Result;             // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_LaunchProjectile) == 0x000008, "Wrong alignment on SKILL_LaunchProjectile_C_LaunchProjectile");
static_assert(sizeof(SKILL_LaunchProjectile_C_LaunchProjectile) == 0x000028, "Wrong size on SKILL_LaunchProjectile_C_LaunchProjectile");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, LaunchVelocity) == 0x000000, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::LaunchVelocity' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, CallFunc_ComputeLaunchVelocity_Result) == 0x00000C, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::CallFunc_ComputeLaunchVelocity_Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000018, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_LaunchProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'SKILL_LaunchProjectile_C_LaunchProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetProjectileSpeed
// 0x0004 (0x0004 - 0x0000)
struct SKILL_LaunchProjectile_C_GetProjectileSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_GetProjectileSpeed) == 0x000004, "Wrong alignment on SKILL_LaunchProjectile_C_GetProjectileSpeed");
static_assert(sizeof(SKILL_LaunchProjectile_C_GetProjectileSpeed) == 0x000004, "Wrong size on SKILL_LaunchProjectile_C_GetProjectileSpeed");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetProjectileSpeed, Speed) == 0x000000, "Member 'SKILL_LaunchProjectile_C_GetProjectileSpeed::Speed' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnActivateSkill
// 0x0002 (0x0002 - 0x0000)
struct SKILL_LaunchProjectile_C_OnActivateSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_OnActivateSkill) == 0x000001, "Wrong alignment on SKILL_LaunchProjectile_C_OnActivateSkill");
static_assert(sizeof(SKILL_LaunchProjectile_C_OnActivateSkill) == 0x000002, "Wrong size on SKILL_LaunchProjectile_C_OnActivateSkill");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnActivateSkill, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_OnActivateSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnActivateSkill, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SKILL_LaunchProjectile_C_OnActivateSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnCycleBarrel
// 0x000C (0x000C - 0x0000)
struct SKILL_LaunchProjectile_C_OnCycleBarrel final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_OnCycleBarrel) == 0x000004, "Wrong alignment on SKILL_LaunchProjectile_C_OnCycleBarrel");
static_assert(sizeof(SKILL_LaunchProjectile_C_OnCycleBarrel) == 0x00000C, "Wrong size on SKILL_LaunchProjectile_C_OnCycleBarrel");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnCycleBarrel, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'SKILL_LaunchProjectile_C_OnCycleBarrel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnCycleBarrel, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'SKILL_LaunchProjectile_C_OnCycleBarrel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnCycleBarrel, CallFunc_WrapIntUpperbound_ReturnValue) == 0x000008, "Member 'SKILL_LaunchProjectile_C_OnCycleBarrel::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnAttachProjectileToBarrel
// 0x0030 (0x0030 - 0x0000)
struct SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel final
{
public:
	class FName                                   BarrelSocketName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel) == 0x000008, "Wrong alignment on SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel");
static_assert(sizeof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel) == 0x000030, "Wrong size on SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, BarrelSocketName) == 0x000000, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::BarrelSocketName' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, CallFunc_GetSkillPawn_SkillPawn) == 0x000008, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000010, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000018, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000020, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2) == 0x000028, "Member 'SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.DropProjectile
// 0x0018 (0x0018 - 0x0000)
struct SKILL_LaunchProjectile_C_DropProjectile final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_DropProjectile) == 0x000008, "Wrong alignment on SKILL_LaunchProjectile_C_DropProjectile");
static_assert(sizeof(SKILL_LaunchProjectile_C_DropProjectile) == 0x000018, "Wrong size on SKILL_LaunchProjectile_C_DropProjectile");
static_assert(offsetof(SKILL_LaunchProjectile_C_DropProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000000, "Member 'SKILL_LaunchProjectile_C_DropProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_DropProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000008, "Member 'SKILL_LaunchProjectile_C_DropProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_DropProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2) == 0x000010, "Member 'SKILL_LaunchProjectile_C_DropProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.ComputeLaunchVelocity
// 0x0170 (0x0170 - 0x0000)
struct SKILL_LaunchProjectile_C_ComputeLaunchVelocity final
{
public:
	struct FVector                                Result;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelDirection;                                   // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorToTarget;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpreadLocation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BarrelTransform;                                   // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRequiredMuzzleSpeedForBullet_Result;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLaunchVelocityForProjectile_Veclocity; // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBarrelTransform_Transform;             // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAccuracyRatio_Ratio;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPredictedLocationToShoot_PredictedLocation; // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity) == 0x000010, "Wrong alignment on SKILL_LaunchProjectile_C_ComputeLaunchVelocity");
static_assert(sizeof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity) == 0x000170, "Wrong size on SKILL_LaunchProjectile_C_ComputeLaunchVelocity");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, BarrelDirection) == 0x00000C, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::BarrelDirection' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, VectorToTarget) == 0x000018, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::VectorToTarget' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, SpreadLocation) == 0x000024, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::SpreadLocation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, TargetLocation) == 0x000030, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::TargetLocation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, SourceLocation) == 0x00003C, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::SourceLocation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, BarrelTransform) == 0x000050, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::BarrelTransform' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetRequiredMuzzleSpeedForBullet_Result) == 0x000080, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetRequiredMuzzleSpeedForBullet_Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_FMin_ReturnValue) == 0x000084, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Location) == 0x000094, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Scale) == 0x0000AC, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetForwardVector_ReturnValue) == 0x0000B8, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C4, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetLaunchVelocityForProjectile_Veclocity) == 0x0000D0, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetLaunchVelocityForProjectile_Veclocity' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Location_1) == 0x0000DC, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Rotation_1) == 0x0000E8, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_BreakTransform_Scale_1) == 0x0000F4, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_Array_Get_Item) == 0x000100, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetBarrelTransform_Transform) == 0x000110, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetBarrelTransform_Transform' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetAccuracyRatio_Ratio) == 0x000140, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetAccuracyRatio_Ratio' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_GetPredictedLocationToShoot_PredictedLocation) == 0x000144, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_GetPredictedLocationToShoot_PredictedLocation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_VLerp_ReturnValue) == 0x000150, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ComputeLaunchVelocity, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x00015C, "Member 'SKILL_LaunchProjectile_C_ComputeLaunchVelocity::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetLastBarrelIndex
// 0x0004 (0x0004 - 0x0000)
struct SKILL_LaunchProjectile_C_GetLastBarrelIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_GetLastBarrelIndex) == 0x000004, "Wrong alignment on SKILL_LaunchProjectile_C_GetLastBarrelIndex");
static_assert(sizeof(SKILL_LaunchProjectile_C_GetLastBarrelIndex) == 0x000004, "Wrong size on SKILL_LaunchProjectile_C_GetLastBarrelIndex");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetLastBarrelIndex, Index_0) == 0x000000, "Member 'SKILL_LaunchProjectile_C_GetLastBarrelIndex::Index_0' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetLastBarrelSocketName
// 0x0010 (0x0010 - 0x0000)
struct SKILL_LaunchProjectile_C_GetLastBarrelSocketName final
{
public:
	class FName                                   Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_LaunchProjectile_C_GetLastBarrelSocketName) == 0x000004, "Wrong alignment on SKILL_LaunchProjectile_C_GetLastBarrelSocketName");
static_assert(sizeof(SKILL_LaunchProjectile_C_GetLastBarrelSocketName) == 0x000010, "Wrong size on SKILL_LaunchProjectile_C_GetLastBarrelSocketName");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetLastBarrelSocketName, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_GetLastBarrelSocketName::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetLastBarrelSocketName, CallFunc_Array_Get_Item) == 0x000008, "Member 'SKILL_LaunchProjectile_C_GetLastBarrelSocketName::CallFunc_Array_Get_Item' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetProjectileSpawnRotation
// 0x0018 (0x0018 - 0x0000)
struct SKILL_LaunchProjectile_C_GetProjectileSpawnRotation final
{
public:
	struct FRotator                               BarrelRotation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Result;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_GetProjectileSpawnRotation) == 0x000004, "Wrong alignment on SKILL_LaunchProjectile_C_GetProjectileSpawnRotation");
static_assert(sizeof(SKILL_LaunchProjectile_C_GetProjectileSpawnRotation) == 0x000018, "Wrong size on SKILL_LaunchProjectile_C_GetProjectileSpawnRotation");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetProjectileSpawnRotation, BarrelRotation) == 0x000000, "Member 'SKILL_LaunchProjectile_C_GetProjectileSpawnRotation::BarrelRotation' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_GetProjectileSpawnRotation, Result) == 0x00000C, "Member 'SKILL_LaunchProjectile_C_GetProjectileSpawnRotation::Result' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct SKILL_LaunchProjectile_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on SKILL_LaunchProjectile_C_ReceiveAnimationMessage");
static_assert(sizeof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on SKILL_LaunchProjectile_C_ReceiveAnimationMessage");
static_assert(offsetof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'SKILL_LaunchProjectile_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'SKILL_LaunchProjectile_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'SKILL_LaunchProjectile_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue) == 0x000012, "Member 'SKILL_LaunchProjectile_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue_1) == 0x000013, "Member 'SKILL_LaunchProjectile_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.IsMontageOptional
// 0x0001 (0x0001 - 0x0000)
struct SKILL_LaunchProjectile_C_IsMontageOptional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_IsMontageOptional) == 0x000001, "Wrong alignment on SKILL_LaunchProjectile_C_IsMontageOptional");
static_assert(sizeof(SKILL_LaunchProjectile_C_IsMontageOptional) == 0x000001, "Wrong size on SKILL_LaunchProjectile_C_IsMontageOptional");
static_assert(offsetof(SKILL_LaunchProjectile_C_IsMontageOptional, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_IsMontageOptional::Result' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.IsSkillActivated
// 0x0002 (0x0002 - 0x0000)
struct SKILL_LaunchProjectile_C_IsSkillActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_IsSkillActivated) == 0x000001, "Wrong alignment on SKILL_LaunchProjectile_C_IsSkillActivated");
static_assert(sizeof(SKILL_LaunchProjectile_C_IsSkillActivated) == 0x000002, "Wrong size on SKILL_LaunchProjectile_C_IsSkillActivated");
static_assert(offsetof(SKILL_LaunchProjectile_C_IsSkillActivated, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_IsSkillActivated::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_IsSkillActivated, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SKILL_LaunchProjectile_C_IsSkillActivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnDeactivateSkill
// 0x0002 (0x0002 - 0x0000)
struct SKILL_LaunchProjectile_C_OnDeactivateSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_LaunchProjectile_C_OnDeactivateSkill) == 0x000001, "Wrong alignment on SKILL_LaunchProjectile_C_OnDeactivateSkill");
static_assert(sizeof(SKILL_LaunchProjectile_C_OnDeactivateSkill) == 0x000002, "Wrong size on SKILL_LaunchProjectile_C_OnDeactivateSkill");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnDeactivateSkill, Result) == 0x000000, "Member 'SKILL_LaunchProjectile_C_OnDeactivateSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_LaunchProjectile_C_OnDeactivateSkill, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SKILL_LaunchProjectile_C_OnDeactivateSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


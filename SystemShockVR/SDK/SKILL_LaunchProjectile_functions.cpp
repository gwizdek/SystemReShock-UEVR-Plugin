#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_LaunchProjectile

#include "Basic.hpp"

#include "SKILL_LaunchProjectile_classes.hpp"
#include "SKILL_LaunchProjectile_parameters.hpp"


namespace SDK
{

// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.SpawnProjectile
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void USKILL_LaunchProjectile_C::SpawnProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "SpawnProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.LaunchProjectile
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_LaunchProjectile_C::LaunchProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "LaunchProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetProjectileSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_LaunchProjectile_C::GetProjectileSpeed(float* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "GetProjectileSpeed");

	Params::SKILL_LaunchProjectile_C_GetProjectileSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnProjectileLaunched
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_LaunchProjectile_C::OnProjectileLaunched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "OnProjectileLaunched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnActivateSkill
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::OnActivateSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "OnActivateSkill");

	Params::SKILL_LaunchProjectile_C_OnActivateSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnCycleBarrel
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_LaunchProjectile_C::OnCycleBarrel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "OnCycleBarrel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnAttachProjectileToBarrel
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BarrelSocketName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_LaunchProjectile_C::OnAttachProjectileToBarrel(class FName BarrelSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "OnAttachProjectileToBarrel");

	Params::SKILL_LaunchProjectile_C_OnAttachProjectileToBarrel Parms{};

	Parms.BarrelSocketName = BarrelSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.DropProjectile
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_LaunchProjectile_C::DropProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "DropProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.ComputeLaunchVelocity
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_LaunchProjectile_C::ComputeLaunchVelocity(struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "ComputeLaunchVelocity");

	Params::SKILL_LaunchProjectile_C_ComputeLaunchVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetLastBarrelIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_LaunchProjectile_C::GetLastBarrelIndex(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "GetLastBarrelIndex");

	Params::SKILL_LaunchProjectile_C_GetLastBarrelIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetLastBarrelSocketName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_LaunchProjectile_C::GetLastBarrelSocketName(class FName* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "GetLastBarrelSocketName");

	Params::SKILL_LaunchProjectile_C_GetLastBarrelSocketName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.GetProjectileSpawnRotation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         BarrelRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::GetProjectileSpawnRotation(const struct FRotator& BarrelRotation, struct FRotator* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "GetProjectileSpawnRotation");

	Params::SKILL_LaunchProjectile_C_GetProjectileSpawnRotation Parms{};

	Parms.BarrelRotation = std::move(BarrelRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.ReceiveAnimationMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::ReceiveAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "ReceiveAnimationMessage");

	Params::SKILL_LaunchProjectile_C_ReceiveAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.IsMontageOptional
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::IsMontageOptional(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "IsMontageOptional");

	Params::SKILL_LaunchProjectile_C_IsMontageOptional Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.IsSkillActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::IsSkillActivated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "IsSkillActivated");

	Params::SKILL_LaunchProjectile_C_IsSkillActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_LaunchProjectile.SKILL_LaunchProjectile_C.OnDeactivateSkill
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_LaunchProjectile_C::OnDeactivateSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_LaunchProjectile_C", "OnDeactivateSkill");

	Params::SKILL_LaunchProjectile_C_OnDeactivateSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


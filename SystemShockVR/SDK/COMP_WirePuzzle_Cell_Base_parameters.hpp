#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_WirePuzzle_Cell_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_WirePlugState_structs.hpp"
#include "STRUCT_WirePuzzle_CellData_structs.hpp"
#include "ENUM_CardinalDirection_structs.hpp"
#include "STRUCT_TraceInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.ExecuteUbergraph_COMP_WirePuzzle_Cell_Base
// 0x0008 (0x0008 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base) == 0x000008, "Wrong size on COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base, EntryPoint) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_ExecuteUbergraph_COMP_WirePuzzle_Cell_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_ReceiveTick");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_ReceiveTick) == 0x000004, "Wrong size on COMP_WirePuzzle_Cell_Base_C_ReceiveTick");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.InitializeCell
// 0x0238 (0x0238 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_InitializeCell final
{
public:
	struct FSTRUCT_WirePuzzle_CellData            InitialCellData;                                   // 0x0000(0x0068)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_3;                            // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	TDelegate<void(int32 TotalPowerLevel)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	struct FSTRUCT_WirePuzzle_CellData            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0128(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x2];                                      // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default_2;                           // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x01B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_InitializeCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_InitializeCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_InitializeCell) == 0x000238, "Wrong size on COMP_WirePuzzle_Cell_Base_C_InitializeCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, InitialCellData) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::InitialCellData' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_bool_Variable) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_int_Variable) == 0x00006C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_struct_Variable) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_struct_Variable_1) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_struct_Variable_2) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_struct_Variable_3) == 0x000094, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_MakeArray_Array) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_GetWirePlug_Plug) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_Select_Default) == 0x0000D8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000F0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_int_Variable_1) == 0x0000F8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000FC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000101, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_SetStaticMesh_ReturnValue) == 0x000102, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_GetDataTableRowFromName_OutRow) == 0x000128, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, Temp_bool_Variable_1) == 0x000191, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_Select_Default_1) == 0x000194, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_SelectVector_ReturnValue) == 0x000198, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, K2Node_Select_Default_2) == 0x0001A4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeCell, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0001B0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeCell::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.InitializeSocketsAndTraces
// 0x0208 (0x0208 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces final
{
public:
	struct FSTRUCT_WirePuzzle_CellData            InitialCellData;                                   // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      TracesFromTraceInfo;                               // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TraceInfo                      CallFunc_Array_Get_Item;                           // 0x00D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_2;                         // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_MirrorTrace_MirroredTrace;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TraceInfo                      CallFunc_Array_Get_Item_3;                         // 0x0114(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_RotateTrace_RotatedTrace;                 // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_4;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_7;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_MirrorTrace_MirroredTrace_1;              // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_9;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result_1;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_10;                        // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result_2;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_RotateTrace_RotatedTrace_1;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket_1;             // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_11;                        // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket_2;             // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces) == 0x000208, "Wrong size on COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, InitialCellData) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::InitialCellData' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, TracesFromTraceInfo) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::TracesFromTraceInfo' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_2) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_3) == 0x00009C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_4) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_5) == 0x0000A4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_3) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000AC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_6) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_4) == 0x0000B4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_5) == 0x0000B8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000BC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_7) == 0x0000C4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_8) == 0x0000C8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_6) == 0x0000CC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_9) == 0x0000D4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_2) == 0x0000FC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_MirrorTrace_MirroredTrace) == 0x000108, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_MirrorTrace_MirroredTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_3) == 0x000114, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_3) == 0x000124, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_RotateTrace_RotatedTrace) == 0x00012C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_RotateTrace_RotatedTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_7) == 0x000134, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_7) == 0x000138, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_4) == 0x00013C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_5) == 0x000140, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000144, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_4) == 0x000148, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_6) == 0x000150, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_2) == 0x000154, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_5) == 0x000158, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_7) == 0x00015C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_3) == 0x000160, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_6) == 0x000164, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_8) == 0x000168, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_4) == 0x00016C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_7) == 0x000170, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_9) == 0x000178, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_MirrorTrace_MirroredTrace_1) == 0x00017C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_MirrorTrace_MirroredTrace_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_5) == 0x000184, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_8) == 0x000188, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_10) == 0x00018C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_MirrorSlot_Result) == 0x000190, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_MirrorSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_6) == 0x000194, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_9) == 0x000198, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Length_ReturnValue_11) == 0x00019C, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_MirrorSlot_Result_1) == 0x0001A0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_MirrorSlot_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_7) == 0x0001A4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_8) == 0x0001A8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_8) == 0x0001AC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001B0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_9) == 0x0001B4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_10) == 0x0001B8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_10) == 0x0001BC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_MirrorSlot_Result_2) == 0x0001C0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_MirrorSlot_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_9) == 0x0001C4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_9) == 0x0001C8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_10) == 0x0001CC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_RotateSocket_RotatedSocket) == 0x0001D0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_RotateSocket_RotatedSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_10) == 0x0001D4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_10) == 0x0001D8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Loop_Counter_Variable_11) == 0x0001DC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_RotateTrace_RotatedTrace_1) == 0x0001E0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_RotateTrace_RotatedTrace_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Less_IntInt_ReturnValue_11) == 0x0001E8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Add_IntInt_ReturnValue_11) == 0x0001EC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_RotateSocket_RotatedSocket_1) == 0x0001F0, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_RotateSocket_RotatedSocket_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, Temp_int_Array_Index_Variable_11) == 0x0001F4, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Array_Get_Item_11) == 0x0001F8, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_RotateSocket_RotatedSocket_2) == 0x0001FC, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_RotateSocket_RotatedSocket_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces, CallFunc_Greater_IntInt_ReturnValue) == 0x000200, "Member 'COMP_WirePuzzle_Cell_Base_C_InitializeSocketsAndTraces::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.MirrorSlot
// 0x000C (0x000C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_MirrorSlot final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_MirrorSlot) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_MirrorSlot");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_MirrorSlot) == 0x00000C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_MirrorSlot");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorSlot, Slot) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorSlot::Slot' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorSlot, Result) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorSlot, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorSlot::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.InteractWithCell
// 0x00D0 (0x00D0 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_InteractWithCell final
{
public:
	struct FVector2D                              ProgressParameters;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CurrentTrace;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           CellToPower;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSocket;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 NewEnabledOutputSockets;                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 AllAdjustedOutputSockets;                          // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetModifiedCellParameters_Param;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalInputPowerLevel_PowerLevel;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets; // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWirePuzzleSwitch_C*                    K2Node_DynamicCast_AsWire_Puzzle_Switch;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWirePuzzleDial_C*                      K2Node_DynamicCast_AsWire_Puzzle_Dial;             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PropagatePowerState_Result;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget;        // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_InteractWithCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell) == 0x0000D0, "Wrong size on COMP_WirePuzzle_Cell_Base_C_InteractWithCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, ProgressParameters) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::ProgressParameters' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CurrentTrace) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CurrentTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CellToPower) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CellToPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CurrentSocket) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CurrentSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, NewEnabledOutputSockets) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::NewEnabledOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, AllAdjustedOutputSockets) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::AllAdjustedOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, Temp_int_Array_Index_Variable) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_GetModifiedCellParameters_Param) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_GetModifiedCellParameters_Param' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_GetTotalInputPowerLevel_PowerLevel) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_GetTotalInputPowerLevel_PowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Array_Find_ReturnValue) == 0x00004C, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_SetTargetPower_Result) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Conv_IntToByte_ReturnValue) == 0x000051, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Array_Get_Item) == 0x00006C, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, Temp_int_Variable) == 0x000074, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_DynamicCast_AsWire_Puzzle_Switch) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_DynamicCast_AsWire_Puzzle_Switch' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_DynamicCast_AsWire_Puzzle_Dial) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_DynamicCast_AsWire_Puzzle_Dial' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_PropagatePowerState_Result) == 0x000099, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_PropagatePowerState_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_GetTraceProgress_CurrentAndTarget) == 0x00009C, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_GetTraceProgress_CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_BreakVector2D_X) == 0x0000A4, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_MakeVector2D_ReturnValue) == 0x0000AC, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, K2Node_MakeStruct_IntPoint) == 0x0000B4, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, Temp_int_Variable_1) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithCell, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithCell::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetTargetPower
// 0x0278 (0x0278 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetTargetPower final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IncomingPowerLevel;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSocket;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FIntPoint, int32>                 OriginalTracePower;                                // 0x0010(0x0050)(Edit, BlueprintVisible)
	int32                                         OutputPowerLevel;                                  // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 EnabledOutputSockets;                              // 0x0068(0x0010)(Edit, BlueprintVisible)
	int32                                         NextSocket;                                        // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      TracesWithNewTargetPower;                          // 0x0080(0x0010)(Edit, BlueprintVisible)
	struct FIntPoint                              CurrentTrace;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAllInputsPowered_Result;               // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_3;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_5;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTripleDoubleSourceSocket_InputSocket;  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_2;                      // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_6;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_3;                      // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalInputPowerLevel_PowerLevel;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_7;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget_1;      // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTraceFade_CurrentAndTarget;            // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget_2;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE[0x2];                                      // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets; // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_2;                         // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PropagatePowerState_Result;               // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesAnyThroughputContainSocket_Result;    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213[0x1];                                      // 0x0213(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item_4;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget_3;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_4;                      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetTargetPower");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower) == 0x000278, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetTargetPower");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, IncomingPowerLevel) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::IncomingPowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CurrentSocket) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CurrentSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, OriginalTracePower) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::OriginalTracePower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, OutputPowerLevel) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::OutputPowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, EnabledOutputSockets) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::EnabledOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, NextSocket) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::NextSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, TracesWithNewTargetPower) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::TracesWithNewTargetPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CurrentTrace) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CurrentTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Array_Index_Variable) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Array_Index_Variable_2) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_AreAllInputsPowered_Result) == 0x0000AC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_AreAllInputsPowered_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue) == 0x0000B4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_1) == 0x0000B8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_1) == 0x0000BC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_2) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_2) == 0x0000C4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_3) == 0x0000C8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_3) == 0x0000CC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_4) == 0x0000D4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_4) == 0x0000D8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Loop_Counter_Variable_2) == 0x0000E0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_5) == 0x0000E8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_5) == 0x0000EC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_MakeStruct_IntPoint) == 0x0000F0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTripleDoubleSourceSocket_InputSocket) == 0x0000F8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTripleDoubleSourceSocket_InputSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_MakeStruct_IntPoint_1) == 0x0000FC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_MakeStruct_IntPoint_2) == 0x000104, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_MakeStruct_IntPoint_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_6) == 0x00010C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_6) == 0x000110, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_MakeStruct_IntPoint_3) == 0x000114, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_MakeStruct_IntPoint_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Greater_IntInt_ReturnValue) == 0x000120, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTotalInputPowerLevel_PowerLevel) == 0x000124, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTotalInputPowerLevel_PowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_Value_7) == 0x000128, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Map_Find_ReturnValue_7) == 0x00012C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00012D, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTraceProgress_CurrentAndTarget) == 0x000130, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTraceProgress_CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SelectFloat_ReturnValue) == 0x000138, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_X) == 0x00013C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_Y) == 0x000140, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTraceProgress_CurrentAndTarget_1) == 0x000144, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTraceProgress_CurrentAndTarget_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTraceFade_CurrentAndTarget) == 0x00014C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTraceFade_CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_X_1) == 0x000154, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_Y_1) == 0x000158, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_X_2) == 0x00015C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_Y_2) == 0x000160, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000164, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SelectFloat_ReturnValue_1) == 0x000168, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00016C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_MakeVector2D_ReturnValue) == 0x000170, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000178, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SetTargetPower_Result) == 0x000179, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Loop_Counter_Variable_3) == 0x00017C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTraceProgress_CurrentAndTarget_2) == 0x000180, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTraceProgress_CurrentAndTarget_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Add_IntInt_ReturnValue_3) == 0x000188, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_X_3) == 0x00018C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_Y_3) == 0x000190, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000194, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Loop_Counter_Variable_4) == 0x000198, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00019C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0001A4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SelectFloat_ReturnValue_2) == 0x0001A8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001AC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BooleanOR_ReturnValue) == 0x0001AD, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_1) == 0x0001B0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Less_IntInt_ReturnValue) == 0x0001B4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Add_ReturnValue) == 0x0001B8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Array_Index_Variable_3) == 0x0001BC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_2) == 0x0001C4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets) == 0x0001D0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetEnabledOutputSockets_InitialEnabledOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_3) == 0x0001E4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_SwitchEnum_CmpSuccess) == 0x0001E9, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Get_Item_2) == 0x0001EC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_4) == 0x0001F4, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001F8, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Array_Index_Variable_4) == 0x0001FC, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Get_Item_3) == 0x000200, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_PropagatePowerState_Result) == 0x000204, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_PropagatePowerState_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000205, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000206, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SelectInt_ReturnValue) == 0x000208, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Add_ReturnValue_1) == 0x00020C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_DoesAnyThroughputContainSocket_Result) == 0x000210, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_DoesAnyThroughputContainSocket_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000211, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Contains_ReturnValue) == 0x000212, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Add_ReturnValue_2) == 0x000214, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BooleanOR_ReturnValue_1) == 0x000218, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_int_Variable) == 0x00021C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BooleanOR_ReturnValue_2) == 0x000220, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Add_ReturnValue_3) == 0x000224, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Get_Item_4) == 0x000228, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_5) == 0x000230, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Less_IntInt_ReturnValue_4) == 0x000234, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Length_ReturnValue_6) == 0x000238, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Greater_IntInt_ReturnValue_4) == 0x00023C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Add_ReturnValue_4) == 0x000240, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000244, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000245, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, Temp_bool_Variable) == 0x000246, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BooleanOR_ReturnValue_3) == 0x000247, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_Select_Default) == 0x000248, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Contains_ReturnValue_1) == 0x00024C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_GetTraceProgress_CurrentAndTarget_3) == 0x000250, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_GetTraceProgress_CurrentAndTarget_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_X_4) == 0x000258, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_BreakVector2D_Y_4) == 0x00025C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, K2Node_MakeStruct_IntPoint_4) == 0x000260, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::K2Node_MakeStruct_IntPoint_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_SelectFloat_ReturnValue_3) == 0x000268, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_MakeVector2D_ReturnValue_1) == 0x00026C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_Array_Contains_ReturnValue_2) == 0x000274, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTargetPower, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000275, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTargetPower::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.UpdateCellPower
// 0x00D8 (0x00D8 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_UpdateCellPower final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TraceFade;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFinished;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentPoweredSocket;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPower;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetPower;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CurrentTrace;                                      // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys;                            // 0x0088(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys_1;                          // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_UpdateTraceProgress_IsFinished;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_1;                         // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_UpdateCellPower");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower) == 0x0000D8, "Wrong size on COMP_WirePuzzle_Cell_Base_C_UpdateCellPower");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, DeltaSeconds) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, TraceFade) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::TraceFade' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, IsFinished) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::IsFinished' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CurrentPoweredSocket) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CurrentPoweredSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CurrentPower) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CurrentPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, TargetPower) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::TargetPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CurrentTrace) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CurrentTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, Temp_int_Array_Index_Variable) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_X) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_Y_1) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_X_2) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_Y_2) == 0x00004C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_X_3) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_Y_3) == 0x000054, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_X_4) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_BreakVector2D_Y_4) == 0x00005C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000064, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Find_Value) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Keys_Keys) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Array_Get_Item) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Find_Value_1) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Find_ReturnValue_1) == 0x0000AC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Map_Keys_Keys_1) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_UpdateTraceProgress_IsFinished) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_UpdateTraceProgress_IsFinished' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Array_Get_Item_1) == 0x0000C4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Not_PreBool_ReturnValue) == 0x0000CC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateCellPower, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateCellPower::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.MirrorTrace
// 0x0020 (0x0020 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_MirrorTrace final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              MirroredTrace;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result_1;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_MirrorTrace");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace) == 0x000020, "Wrong size on COMP_WirePuzzle_Cell_Base_C_MirrorTrace");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorTrace::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace, MirroredTrace) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorTrace::MirroredTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace, CallFunc_MirrorSlot_Result) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorTrace::CallFunc_MirrorSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace, CallFunc_MirrorSlot_Result_1) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorTrace::CallFunc_MirrorSlot_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_MirrorTrace, K2Node_MakeStruct_IntPoint) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_MirrorTrace::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.RotateSocket
// 0x0040 (0x0040 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_RotateSocket final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rotations;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RotatedSocket;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_RotateSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_RotateSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_RotateSocket) == 0x000040, "Wrong size on COMP_WirePuzzle_Cell_Base_C_RotateSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, Rotations) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::Rotations' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, RotatedSocket) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::RotatedSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Multiply_IntInt_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_WrapIntLowerbound_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_WrapIntLowerbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_WrapIntUpperbound_ReturnValue) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateSocket, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateSocket::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.RotateTrace
// 0x0024 (0x0024 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_RotateTrace final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rotations;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              RotatedTrace;                                      // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_RotateTrace) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_RotateTrace");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_RotateTrace) == 0x000024, "Wrong size on COMP_WirePuzzle_Cell_Base_C_RotateTrace");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, Rotations) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::Rotations' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, RotatedTrace) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::RotatedTrace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, CallFunc_RotateSocket_RotatedSocket) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::CallFunc_RotateSocket_RotatedSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, CallFunc_RotateSocket_RotatedSocket_1) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::CallFunc_RotateSocket_RotatedSocket_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_RotateTrace, K2Node_MakeStruct_IntPoint) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_RotateTrace::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetSocketDirection
// 0x001C (0x001C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetSocketDirection final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Direction;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_5;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_6;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_7;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_8;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_9;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_10;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_11;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable_12;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetSocketDirection");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection) == 0x00001C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetSocketDirection");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Direction) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Direction' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_int_Variable) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_1) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_2) == 0x00000E, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_3) == 0x00000F, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_4) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_5) == 0x000011, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_6) == 0x000012, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_7) == 0x000013, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_8) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_9) == 0x000015, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_10) == 0x000016, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_11) == 0x000017, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, Temp_byte_Variable_12) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetSocketDirection, K2Node_Select_Default) == 0x000019, "Member 'COMP_WirePuzzle_Cell_Base_C_GetSocketDirection::K2Node_Select_Default' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetOppositeSocket
// 0x0044 (0x0044 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket final
{
public:
	int32                                         Source;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Opposite;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket) == 0x000044, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Source) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Source' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Opposite) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Opposite' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_1) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_2) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_3) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_4) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_5) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_6) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_7) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_8) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_9) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_10) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_11) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_12) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, Temp_int_Variable_13) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket, K2Node_Select_Default) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_GetOppositeSocket::K2Node_Select_Default' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.UpdateTraceProgress
// 0x0168 (0x0168 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress final
{
public:
	int32                                         SourceSocket;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Trace;                                             // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFinished;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CellToPower;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TrackLength;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeU;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              IntervalU;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForward;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UVCellIndex;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetSocket;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetProgress;                                    // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentProgress;                                   // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_Get_UVBounds_from_Cell_Index_Bounds;      // 0x00B8(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetIsTraceForward_Result;                 // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStaticMeshTrackProperties_OutTrackLength; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetStaticMeshTrackProperties_OutUCoordInterval; // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStaticMeshTrackProperties_ReturnValue; // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUVCellIndexByTrace_Index;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTraceProgress_CurrentAndTarget;        // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOppositeSocket_Opposite;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesAnyThroughputContainSocket_Result;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOppositeSocket_Opposite_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOppositeSocket_Opposite_2;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CardinalDirection                        CallFunc_GetSocketDirection_Direction;             // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FIntPoint                              CallFunc_GetCellInDirection_TargetPosition;        // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PuzzleCell_Base_C*                CallFunc_GetCellAtLocation_Cell;                   // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base;   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress) == 0x000168, "Wrong size on COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, SourceSocket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::SourceSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Trace) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, DeltaSeconds) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, IsFinished) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::IsFinished' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CellToPower) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CellToPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, TrackLength) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::TrackLength' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, SizeU) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::SizeU' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, IntervalU) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::IntervalU' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, IsForward) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::IsForward' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, UVCellIndex) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::UVCellIndex' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, TargetSocket) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::TargetSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, TargetProgress) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::TargetProgress' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CurrentProgress) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CurrentProgress' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Temp_bool_Variable) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Temp_int_Array_Index_Variable) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Map_Find_Value) == 0x00004C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Temp_bool_Variable_1) == 0x000051, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Temp_bool_Variable_2) == 0x000052, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000053, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Map_Find_Value_1) == 0x000054, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Map_Find_ReturnValue_1) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_X) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Add_FloatFloat_ReturnValue) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_X_1) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_Y_1) == 0x000084, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, K2Node_Select_Default) == 0x00008C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_X_2) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_Y_2) == 0x000094, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00009C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, K2Node_Select_Default_1) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000B4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Get_UVBounds_from_Cell_Index_Bounds) == 0x0000B8, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Get_UVBounds_from_Cell_Index_Bounds' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetIsTraceForward_Result) == 0x0000CC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetIsTraceForward_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetStaticMeshTrackProperties_OutTrackLength) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetStaticMeshTrackProperties_OutTrackLength' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetStaticMeshTrackProperties_OutUCoordInterval) == 0x0000D4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetStaticMeshTrackProperties_OutUCoordInterval' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetStaticMeshTrackProperties_ReturnValue) == 0x0000DC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetStaticMeshTrackProperties_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetUVCellIndexByTrace_Index) == 0x0000E0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetUVCellIndexByTrace_Index' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetTraceProgress_CurrentAndTarget) == 0x0000F4, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetTraceProgress_CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FC, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_X_3) == 0x000100, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BreakVector2D_Y_3) == 0x000104, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000108, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Not_PreBool_ReturnValue_2) == 0x000109, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00010A, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Array_Get_Item) == 0x00010C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Conv_IntToString_ReturnValue) == 0x000118, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetOppositeSocket_Opposite) == 0x00012C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetOppositeSocket_Opposite' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_DoesAnyThroughputContainSocket_Result) == 0x000130, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_DoesAnyThroughputContainSocket_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetOppositeSocket_Opposite_1) == 0x000134, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetOppositeSocket_Opposite_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_Array_Contains_ReturnValue) == 0x000138, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BooleanOR_ReturnValue) == 0x000139, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetOppositeSocket_Opposite_2) == 0x00013C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetOppositeSocket_Opposite_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_BooleanOR_ReturnValue_1) == 0x000140, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_SetTargetPower_Result) == 0x000141, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetSocketDirection_Direction) == 0x000142, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetSocketDirection_Direction' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000143, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetCellInDirection_TargetPosition) == 0x000144, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetCellInDirection_TargetPosition' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, K2Node_Select_Default_2) == 0x00014C, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_GetCellAtLocation_Cell) == 0x000150, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_GetCellAtLocation_Cell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base) == 0x000158, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000161, "Member 'COMP_WirePuzzle_Cell_Base_C_UpdateTraceProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.DoesAnyThroughputContainSocket
// 0x0024 (0x0024 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket) == 0x000024, "Wrong size on COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, Result) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, Temp_int_Array_Index_Variable) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_Array_Get_Item) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000022, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'COMP_WirePuzzle_Cell_Base_C_DoesAnyThroughputContainSocket::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetThroughputContainingSocket
// 0x0030 (0x0030 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Trace;                                             // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket) == 0x000030, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, Trace) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, K2Node_MakeStruct_IntPoint) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002D, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002E, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'COMP_WirePuzzle_Cell_Base_C_GetThroughputContainingSocket::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.CreateInteractiveParts
// 0x0100 (0x0100 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWirePuzzleSwitch_C*                    CallFunc_AddComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWirePuzzleDial_C*                      CallFunc_AddComponentByClass_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts) == 0x000010, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts) == 0x000100, "Wrong size on COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_ComposeTransforms_ReturnValue) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_AddComponentByClass_ReturnValue) == 0x0000E8, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts, CallFunc_AddComponentByClass_ReturnValue_1) == 0x0000F0, "Member 'COMP_WirePuzzle_Cell_Base_C_CreateInteractiveParts::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetDirectionToSocket
// 0x0008 (0x0008 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Direction;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket) == 0x000008, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket, Direction) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket::Direction' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'COMP_WirePuzzle_Cell_Base_C_GetDirectionToSocket::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.PropagatePowerState
// 0x0058 (0x0058 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_PropagatePowerState final
{
public:
	int32                                         Socket;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PowerLevel;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CellToPower;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOppositeSocket_Opposite;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOppositeSocket_Opposite_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOppositeSocket_Opposite_2;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CardinalDirection                        CallFunc_GetSocketDirection_Direction;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetCellInDirection_TargetPosition;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PuzzleCell_Base_C*                CallFunc_GetCellAtLocation_Cell;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesAnyThroughputContainSocket_Result;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base;   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_PropagatePowerState");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState) == 0x000058, "Wrong size on COMP_WirePuzzle_Cell_Base_C_PropagatePowerState");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, Socket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::Socket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, PowerLevel) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::PowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CellToPower) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CellToPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetOppositeSocket_Opposite) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetOppositeSocket_Opposite' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetOppositeSocket_Opposite_1) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetOppositeSocket_Opposite_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetOppositeSocket_Opposite_2) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetOppositeSocket_Opposite_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_Array_Contains_ReturnValue) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetSocketDirection_Direction) == 0x00002D, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetSocketDirection_Direction' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_SetTargetPower_Result) == 0x00002E, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetCellInDirection_TargetPosition) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetCellInDirection_TargetPosition' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_GetCellAtLocation_Cell) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_GetCellAtLocation_Cell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_DoesAnyThroughputContainSocket_Result) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_DoesAnyThroughputContainSocket_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_PropagatePowerState, CallFunc_BooleanOR_ReturnValue_1) == 0x000052, "Member 'COMP_WirePuzzle_Cell_Base_C_PropagatePowerState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetTotalInputPowerLevel
// 0x0048 (0x0048 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel final
{
public:
	int32                                         PowerLevel;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Power;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel) == 0x000048, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, PowerLevel) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::PowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, Power) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::Power' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, Temp_int_Array_Index_Variable) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Array_Get_Item) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Map_Find_Value) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_Array_Contains_ReturnValue_1) == 0x000041, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTotalInputPowerLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.EVENT_OnPowerLevelChanged
// 0x0060 (0x0060 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged final
{
public:
	int32                                         TotalPowerLevel;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalMaxPower;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalMinPower;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastBatteryIndex;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexIntoBatteryMap;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCOMP_WirePuzzle_Cell_Base_C*>   CallFunc_GetBatteryCells_Cells;                    // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged) == 0x000060, "Wrong size on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, TotalPowerLevel) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::TotalPowerLevel' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, LocalMaxPower) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::LocalMaxPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, LocalMinPower) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::LocalMinPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, LastBatteryIndex) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::LastBatteryIndex' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, IndexIntoBatteryMap) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::IndexIntoBatteryMap' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001D, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Add_IntInt_ReturnValue_4) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_GetBatteryCells_Cells) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_GetBatteryCells_Cells' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Array_Find_ReturnValue) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged, CallFunc_Array_LastIndex_ReturnValue) == 0x00005C, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPowerLevelChanged::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetPrimitiveDataPowerLevel
// 0x005C (0x005C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel final
{
public:
	int32                                         LocalPower;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_10;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel) == 0x00005C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, LocalPower) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::LocalPower' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000007, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_2) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_3) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_4) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_5) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_6) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_BooleanXOR_ReturnValue) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00003D, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_7) == 0x00003E, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_7) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_8) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_9) == 0x00004C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_9) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_Greater_IntInt_ReturnValue_10) == 0x000054, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_Greater_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel, CallFunc_SelectFloat_ReturnValue_10) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_SetPrimitiveDataPowerLevel::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetEnabledOutputSockets
// 0x0048 (0x0048 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets final
{
public:
	bool                                          AlternateValue;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 InitialEnabledOutputSockets_0;                     // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 EnabledOutputSockets;                              // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets) == 0x000048, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, AlternateValue) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::AlternateValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, InitialEnabledOutputSockets_0) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::InitialEnabledOutputSockets_0' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, EnabledOutputSockets) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::EnabledOutputSockets' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, Temp_int_Array_Index_Variable) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Array_Get_Item) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Array_Contains_ReturnValue) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'COMP_WirePuzzle_Cell_Base_C_GetEnabledOutputSockets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetUVCellIndexByTrace
// 0x0014 (0x0014 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace) == 0x000014, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace, Index_0) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace, CallFunc_Map_Find_Value) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetUVCellIndexByTrace::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.Get UVBounds from Cell Index
// 0x0060 (0x0060 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index final
{
public:
	int32                                         CellIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 Bounds;                                            // 0x0004(0x0014)(Parm, OutParm, ZeroConstructor, NoDestructor)
	struct FVector2D                              MinCoords;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_MakeBox2D_ReturnValue;                    // 0x002C(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index) == 0x000060, "Wrong size on COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CellIndex) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CellIndex' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, Bounds) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::Bounds' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, MinCoords) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::MinCoords' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_MakeBox2D_ReturnValue) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_MakeBox2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Percent_IntInt_ReturnValue) == 0x000044, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, K2Node_MakeStruct_IntPoint) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_Get_UVBounds_from_Cell_Index::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetIsTraceForward
// 0x0014 (0x0014 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PoweredSocket;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsForward;                                         // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward) == 0x000014, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, PoweredSocket) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::PoweredSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, Result) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, IsForward) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::IsForward' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, CallFunc_Array_Contains_ReturnValue) == 0x00000F, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, CallFunc_Map_Find_Value) == 0x000011, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward, CallFunc_Map_Find_ReturnValue) == 0x000012, "Member 'COMP_WirePuzzle_Cell_Base_C_GetIsTraceForward::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.InteractWithWireSource
// 0x00F0 (0x00F0 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource final
{
public:
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_1;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTransitioning_Result;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_2;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_3;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitioning_Result_1;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_4;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_5;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_6;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitioning_Result_2;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTargetWirePlugState_Success_2;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_7;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTargetWirePlugState_Success_3;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_8;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell;   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_9;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ENUM_WirePlugState                            CallFunc_GetFinalTransitionState_State;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisconnectFromCell_Result;             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisconnectFromCell_Result_1;           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_1; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryClearQueuedConnectedCell_Result;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_10;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success_4;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_2; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_3; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource) == 0x0000F0, "Wrong size on COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_1) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_SetTargetWirePlugState_Success) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_SetTargetWirePlugState_Success' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsTransitioning_Result) == 0x000011, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsTransitioning_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_2) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_3) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsTransitioning_Result_1) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsTransitioning_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_4) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_SetTargetWirePlugState_Success_1) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_SetTargetWirePlugState_Success_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_5) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_6) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_6' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsTransitioning_Result_2) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsTransitioning_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_SetTargetWirePlugState_Success_2) == 0x000059, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_SetTargetWirePlugState_Success_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005A, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_7) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_7' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_SetTargetWirePlugState_Success_3) == 0x000069, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_SetTargetWirePlugState_Success_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_8) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_8' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetSelectedWireSourceCell_SelectedCell) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetSelectedWireSourceCell_SelectedCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_9) == 0x0000A0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_9' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetFinalTransitionState_State) == 0x0000A8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetFinalTransitionState_State' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A9, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_TryDisconnectFromCell_Result) == 0x0000AA, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_TryDisconnectFromCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_TryDisconnectFromCell_Result_1) == 0x0000AB, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_TryDisconnectFromCell_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetSelectedWireSourceCell_SelectedCell_1) == 0x0000B0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetSelectedWireSourceCell_SelectedCell_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_TryClearQueuedConnectedCell_Result) == 0x0000B8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_TryClearQueuedConnectedCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetWirePlug_Plug_10) == 0x0000C0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetWirePlug_Plug_10' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_SetTargetWirePlugState_Success_4) == 0x0000C8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_SetTargetWirePlugState_Success_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetSelectedWireSourceCell_SelectedCell_2) == 0x0000D0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetSelectedWireSourceCell_SelectedCell_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_GetSelectedWireSourceCell_SelectedCell_3) == 0x0000E0, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_GetSelectedWireSourceCell_SelectedCell_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireSource::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.InteractWithWireTarget
// 0x0040 (0x0040 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySetQueuedConnectedCell_Result;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisconnectFromCell_Result;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_2; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitioning_Result;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryConnectToCell_Result;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell_3; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget) == 0x000040, "Wrong size on COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_GetSelectedWireSourceCell_SelectedCell) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_GetSelectedWireSourceCell_SelectedCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_TrySetQueuedConnectedCell_Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_TrySetQueuedConnectedCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_TryDisconnectFromCell_Result) == 0x00000A, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_TryDisconnectFromCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_GetSelectedWireSourceCell_SelectedCell_1) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_GetSelectedWireSourceCell_SelectedCell_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_GetWirePlug_Plug) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_GetSelectedWireSourceCell_SelectedCell_2) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_GetSelectedWireSourceCell_SelectedCell_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_IsTransitioning_Result) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_IsTransitioning_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_TryConnectToCell_Result) == 0x000029, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_TryConnectToCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_GetSelectedWireSourceCell_SelectedCell_3) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_GetSelectedWireSourceCell_SelectedCell_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_InteractWithWireTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.TryConnectToCell
// 0x0098 (0x0098 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_TryConnectToCell final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           CellToConnect;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitialization;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryClearQueuedConnectedCell_Result;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetConnectedCell_Cell;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_3;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetConnectedCell_Cell_1;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryDisconnectFromCell_Result;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetConnectedCell_Cell_2;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ComputeConnectionOffset_Result;           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_4;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_ReserveWireDepthOffset_Offset;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_TryConnectToCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell) == 0x000098, "Wrong size on COMP_WirePuzzle_Cell_Base_C_TryConnectToCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CellToConnect) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CellToConnect' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, IsInitialization) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::IsInitialization' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, Result) == 0x000009, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_IsValid_ReturnValue_2) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_TryClearQueuedConnectedCell_Result) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_TryClearQueuedConnectedCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetConnectedCell_Cell) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetConnectedCell_Cell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_SelectInt_ReturnValue) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_SetTargetPower_Result) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetWirePlug_Plug) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetWirePlug_Plug_1) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetWirePlug_Plug_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetWirePlug_Plug_2) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetWirePlug_Plug_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_SetTargetWirePlugState_Success) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_SetTargetWirePlugState_Success' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetWirePlug_Plug_3) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetWirePlug_Plug_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetConnectedCell_Cell_1) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetConnectedCell_Cell_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_TryDisconnectFromCell_Result) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_TryDisconnectFromCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetConnectedCell_Cell_2) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetConnectedCell_Cell_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_Not_PreBool_ReturnValue_1) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_IsValid_ReturnValue_3) == 0x000069, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_ComputeConnectionOffset_Result) == 0x00006C, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_ComputeConnectionOffset_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_GetWirePlug_Plug_4) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_GetWirePlug_Plug_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, CallFunc_ReserveWireDepthOffset_Offset) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::CallFunc_ReserveWireDepthOffset_Offset' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryConnectToCell, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'COMP_WirePuzzle_Cell_Base_C_TryConnectToCell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.TryDisconnectFromCell
// 0x0068 (0x0068 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           DisconnecteeCell;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryClearQueuedConnectedCell_Result;       // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTargetPower_Result;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_SetTargetWirePlugState_Success_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisconnectFromCell_Result;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug_3;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           CallFunc_GetSelectedWireSourceCell_SelectedCell;   // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell) == 0x000068, "Wrong size on COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, DisconnecteeCell) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::DisconnecteeCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue_2) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000F, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000011, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue_3) == 0x000012, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_TryClearQueuedConnectedCell_Result) == 0x000013, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_TryClearQueuedConnectedCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_SetTargetPower_Result) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_SetTargetPower_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_GetWirePlug_Plug) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_GetWirePlug_Plug_1) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_GetWirePlug_Plug_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_SetTargetWirePlugState_Success) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_SetTargetWirePlugState_Success' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_GetWirePlug_Plug_2) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_GetWirePlug_Plug_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_SetTargetWirePlugState_Success_1) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_SetTargetWirePlugState_Success_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_TryDisconnectFromCell_Result) == 0x00003A, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_TryDisconnectFromCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue_4) == 0x00003B, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_GetWirePlug_Plug_3) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_GetWirePlug_Plug_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_GetSelectedWireSourceCell_SelectedCell) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_GetSelectedWireSourceCell_SelectedCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_IsValid_ReturnValue_5) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell, CallFunc_Not_PreBool_ReturnValue_2) == 0x000061, "Member 'COMP_WirePuzzle_Cell_Base_C_TryDisconnectFromCell::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetConnectedCell
// 0x0008 (0x0008 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetConnectedCell final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           Cell;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetConnectedCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetConnectedCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetConnectedCell) == 0x000008, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetConnectedCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetConnectedCell, Cell) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetConnectedCell::Cell' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetWirePlug
// 0x0028 (0x0028 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetWirePlug final
{
public:
	class AWIREPUZZLE_WirePlug_C*                 Plug;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetWirePlug");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug) == 0x000028, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetWirePlug");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug, Plug) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetWirePlug::Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetWirePlug::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetWirePlug::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug, K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetWirePlug::K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetWirePlug, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_GetWirePlug::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.EVENT_OnPlugFinishedExtending
// 0x0030 (0x0030 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           ConnectWithCell;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryClearQueuedConnectedCell_Result;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending) == 0x000030, "Wrong size on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending, ConnectWithCell) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending::ConnectWithCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending, CallFunc_TryClearQueuedConnectedCell_Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending::CallFunc_TryClearQueuedConnectedCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending, CallFunc_GetWirePlug_Plug) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedExtending::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.ComputeConnectionOffset
// 0x00A0 (0x00A0 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset final
{
public:
	struct FVector2D                              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset) == 0x000010, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset) == 0x0000A0, "Wrong size on COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, Result) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_GetWirePlug_Plug) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_TransformLocation_ReturnValue) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_InverseTransformLocation_ReturnValue) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_BreakVector_X) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_BreakVector_Y) == 0x00008C, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_BreakVector_Z) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'COMP_WirePuzzle_Cell_Base_C_ComputeConnectionOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.EVENT_OnPlugFinishedConnecting
// 0x0020 (0x0020 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting final
{
public:
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_TryConnectToCell_Result;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting) == 0x000020, "Wrong size on COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting, CallFunc_GetWirePlug_Plug) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting, CallFunc_TryConnectToCell_Result) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_EVENT_OnPlugFinishedConnecting::CallFunc_TryConnectToCell_Result' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetPowerMaterialGroupIndex
// 0x0010 (0x0010 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex final
{
public:
	int32                                         TrackMaterialIndex;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex) == 0x000010, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, TrackMaterialIndex) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::TrackMaterialIndex' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, Index_0) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000009, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00000A, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00000B, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_GetPowerMaterialGroupIndex::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetTraceProgress
// 0x001C (0x001C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetTraceProgress final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentAndTarget;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetTraceProgress");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress) == 0x00001C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetTraceProgress");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceProgress::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress, CurrentAndTarget) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceProgress::CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress, CallFunc_Map_Find_Value) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceProgress, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetTraceProgress
// 0x0010 (0x0010 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetTraceProgress final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentAndTarget;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetTraceProgress) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetTraceProgress");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetTraceProgress) == 0x000010, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetTraceProgress");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTraceProgress, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTraceProgress::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTraceProgress, CurrentAndTarget) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTraceProgress::CurrentAndTarget' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetTraceFade
// 0x001C (0x001C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetTraceFade final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentAndTarget;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetTraceFade");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade) == 0x00001C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetTraceFade");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceFade::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade, CurrentAndTarget) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceFade::CurrentAndTarget' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade, CallFunc_Map_Find_Value) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceFade::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTraceFade, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTraceFade::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetTraceFade
// 0x0010 (0x0010 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetTraceFade final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentAndTarget;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetTraceFade) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetTraceFade");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetTraceFade) == 0x000010, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetTraceFade");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTraceFade, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTraceFade::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTraceFade, CurrentAndTarget) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTraceFade::CurrentAndTarget' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetTracePowerMaterialValue
// 0x0014 (0x0014 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue final
{
public:
	struct FIntPoint                              Trace;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Power;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUVCellIndexByTrace_Index;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPowerMaterialGroupIndex_Index;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue) == 0x000014, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue, Trace) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue::Trace' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue, Power) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue::Power' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue, CallFunc_GetUVCellIndexByTrace_Index) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue::CallFunc_GetUVCellIndexByTrace_Index' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue, CallFunc_GetPowerMaterialGroupIndex_Index) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_SetTracePowerMaterialValue::CallFunc_GetPowerMaterialGroupIndex_Index' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetTripleDoubleSourceSocket
// 0x0034 (0x0034 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket final
{
public:
	int32                                         OutputSocket;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InputSocket;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OriginalOutputSocket;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OriginalInputSocket;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MirrorSlot_Result;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RotateSocket_RotatedSocket_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MirrorSlot_Result_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket) == 0x000034, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, OutputSocket) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::OutputSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, InputSocket) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::InputSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, OriginalOutputSocket) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::OriginalOutputSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, OriginalInputSocket) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::OriginalInputSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, Temp_bool_Variable) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, Temp_bool_Variable_1) == 0x000011, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, CallFunc_MirrorSlot_Result) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::CallFunc_MirrorSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, K2Node_Select_Default) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, CallFunc_RotateSocket_RotatedSocket) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::CallFunc_RotateSocket_RotatedSocket' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, CallFunc_RotateSocket_RotatedSocket_1) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::CallFunc_RotateSocket_RotatedSocket_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, CallFunc_MirrorSlot_Result_1) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::CallFunc_MirrorSlot_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket, K2Node_Select_Default_1) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_GetTripleDoubleSourceSocket::K2Node_Select_Default_1' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetModifiedCellParameters
// 0x0098 (0x0098 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters final
{
public:
	uint8                                         Params_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConnectedCellIndex;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetModifiedCellParameters_Result;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_WirePuzzle_Cell_Base_C*           K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryConnectToCell_Result;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftRight_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_WirePuzzle_Cell_Base_C*           K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base_1; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWIREPUZZLE_WirePlug_C*                 CallFunc_GetWirePlug_Plug;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_TryConnectToCell_Result_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWirePuzzleSwitch_C*                    K2Node_DynamicCast_AsWire_Puzzle_Switch;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWirePuzzleDial_C*                      K2Node_DynamicCast_AsWire_Puzzle_Dial;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftRight_ReturnValue_1;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters) == 0x000098, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, Params_0) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, Result) == 0x000001, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, ConnectedCellIndex) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::ConnectedCellIndex' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_SetModifiedCellParameters_Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_SetModifiedCellParameters_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Array_Get_Item) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_TryConnectToCell_Result) == 0x000029, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_TryConnectToCell_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_BitShiftRight_ReturnValue) == 0x000030, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_BitShiftRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base_1) == 0x000040, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_AsCOMP_Wire_Puzzle_Cell_Base_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_GetWirePlug_Plug) == 0x000050, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_GetWirePlug_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_TryConnectToCell_Result_1) == 0x000058, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_TryConnectToCell_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_AsWire_Puzzle_Switch) == 0x000060, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_AsWire_Puzzle_Switch' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_AsWire_Puzzle_Dial) == 0x000070, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_AsWire_Puzzle_Dial' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000079, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00007C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_BitShiftRight_ReturnValue_1) == 0x000080, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_BitShiftRight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000088, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_And_IntInt_ReturnValue) == 0x00008C, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000090, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters, K2Node_SwitchEnum_CmpSuccess) == 0x000091, "Member 'COMP_WirePuzzle_Cell_Base_C_SetModifiedCellParameters::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.GetModifiedCellParameters
// 0x0024 (0x0024 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters final
{
public:
	uint8                                         Param;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConnectedCellBits;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters) == 0x000024, "Wrong size on COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, Param) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::Param' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, ConnectedCellBits) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::ConnectedCellBits' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_Or_IntInt_ReturnValue) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_BitShiftLeft_ReturnValue) == 0x00001C, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_GetModifiedCellParameters::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetCellVisibility
// 0x0020 (0x0020 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetCellVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCellVisibility_Result;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWIREPUZZLE_WirePlug_C*                 K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetCellVisibility");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility) == 0x000020, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetCellVisibility");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, IsVisible_0) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, Result) == 0x000001, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, CallFunc_SetCellVisibility_Result) == 0x000002, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::CallFunc_SetCellVisibility_Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::K2Node_DynamicCast_AsWIREPUZZLE_Wire_Plug' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellVisibility, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.SetCellFullyConnected
// 0x000C (0x000C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected final
{
public:
	bool                                          IsConnected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetModifiedCellParameters_Param;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected) == 0x00000C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected, IsConnected) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected::IsConnected' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected, CallFunc_GetModifiedCellParameters_Param) == 0x000001, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected::CallFunc_GetModifiedCellParameters_Param' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_SetCellFullyConnected::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.AreAllInputsPowered
// 0x002C (0x002C - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered) == 0x000004, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered) == 0x00002C, "Wrong size on COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, Result) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, Temp_int_Array_Index_Variable) == 0x000004, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Array_Get_Item) == 0x000010, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, K2Node_MakeStruct_IntPoint) == 0x000018, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Map_Find_Value) == 0x000024, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000029, "Member 'COMP_WirePuzzle_Cell_Base_C_AreAllInputsPowered::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.IsCellFocusable
// 0x0002 (0x0002 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_IsCellFocusable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_IsCellFocusable) == 0x000001, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_IsCellFocusable");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_IsCellFocusable) == 0x000002, "Wrong size on COMP_WirePuzzle_Cell_Base_C_IsCellFocusable");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_IsCellFocusable, Result) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_IsCellFocusable::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_IsCellFocusable, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'COMP_WirePuzzle_Cell_Base_C_IsCellFocusable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.TrySetQueuedConnectedCell
// 0x0010 (0x0010 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell final
{
public:
	class UCOMP_WirePuzzle_Cell_Base_C*           ConnectToCell;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell) == 0x000008, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell) == 0x000010, "Wrong size on COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, ConnectToCell) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::ConnectToCell' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, Result) == 0x000008, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'COMP_WirePuzzle_Cell_Base_C_TrySetQueuedConnectedCell::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function COMP_WirePuzzle_Cell_Base.COMP_WirePuzzle_Cell_Base_C.TryClearQueuedConnectedCell
// 0x0002 (0x0002 - 0x0000)
struct COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell) == 0x000001, "Wrong alignment on COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell");
static_assert(sizeof(COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell) == 0x000002, "Wrong size on COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell, Result) == 0x000000, "Member 'COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell::Result' has a wrong offset!");
static_assert(offsetof(COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'COMP_WirePuzzle_Cell_Base_C_TryClearQueuedConnectedCell::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


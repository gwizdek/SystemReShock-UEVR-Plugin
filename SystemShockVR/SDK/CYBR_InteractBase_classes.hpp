#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CYBR_InteractBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CYBR_InteractBase.CYBR_InteractBase_C
// 0x0018 (0x0238 - 0x0220)
class ACYBR_InteractBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          LowFiBehaviorState;                                // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldSaveInteractActor;                           // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CYBR_InteractBase(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnCursorLeave(class UPrimitiveComponent* Cursor_Primitive);
	void OnCursorEnter(class UPrimitiveComponent* Cursor_Primitive);
	void GetSquareDistanceToPawn(class APAWN_SystemShockCharacter_C* Pawn, float* Result);
	void SetLowFiBehavior(bool NewLowFiState);
	void OnLowFiBehaviorChanged();
	void GetInteractBroken(bool* Result, class FText* BrokenMessage);
	void GetInteractLocked(class AActor* SourceActor, bool* Result, class FText* LockMessage);
	void GetInteractBusy(bool* Result, class FText* BusyMessage);
	void SetInteractLocked(bool Locked, bool* Result);
	void StopChanneling(class AActor* NewChannelingInteract, bool* Result);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void TryReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void IsHiddenInteractablePrimitive(class APAWN_SystemShockCharacter_C* Character, class UPrimitiveComponent* CursorPrimitive, bool* Result);
	void ShouldIgnoreInteractRange(bool* Result);
	void IsInteractActivated(bool* Result);
	void CanReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void TryDetachInteract(bool SimulatePhysics, bool* Result);
	void SetInteractPowered(bool State, bool* Result);
	void GetInteractDestroyed(bool* Result);
	void CanInteractBeDestroyed(bool* Result);
	void CanModifyInteractPower(bool* Result);
	void GetChannelingHoldDuration(float* Result);
	void FinishedChannelingHoldInteraction(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CYBR_InteractBase_C">();
	}
	static class ACYBR_InteractBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACYBR_InteractBase_C>();
	}
};
static_assert(alignof(ACYBR_InteractBase_C) == 0x000008, "Wrong alignment on ACYBR_InteractBase_C");
static_assert(sizeof(ACYBR_InteractBase_C) == 0x000238, "Wrong size on ACYBR_InteractBase_C");
static_assert(offsetof(ACYBR_InteractBase_C, UberGraphFrame) == 0x000220, "Member 'ACYBR_InteractBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACYBR_InteractBase_C, DefaultSceneRoot) == 0x000228, "Member 'ACYBR_InteractBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACYBR_InteractBase_C, LowFiBehaviorState) == 0x000230, "Member 'ACYBR_InteractBase_C::LowFiBehaviorState' has a wrong offset!");
static_assert(offsetof(ACYBR_InteractBase_C, ShouldSaveInteractActor) == 0x000231, "Member 'ACYBR_InteractBase_C::ShouldSaveInteractActor' has a wrong offset!");

}


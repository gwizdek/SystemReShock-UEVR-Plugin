#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_OptionsScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ENUM_OptionCategories_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.ExecuteUbergraph_WIDGET_OptionsScreen
// 0x0220 (0x0220 - 0x0000)
struct WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry_2;             // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent_2;           // 0x0048(0x0070)()
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry_1;             // 0x00B8(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent_1;           // 0x00F0(0x0070)()
	int32                                         K2Node_ComponentBoundEvent_OptionCategoryIndex;    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry;               // 0x0164(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent;             // 0x01A0(0x0070)()
	ENUM_OptionCategories                         K2Node_Select_Default;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_CanApply_5;             // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanApply_4;             // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanApply_3;             // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanApply_2;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanApply_1;             // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanApply;               // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset_5;             // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset_4;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset_3;             // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset_2;             // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset_1;             // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_CanReset;               // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen");
static_assert(sizeof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen) == 0x000220, "Wrong size on WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, EntryPoint) == 0x000000, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_int_Variable) == 0x000004, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable) == 0x000008, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable_1) == 0x000009, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable_2) == 0x00000A, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable_3) == 0x00000B, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable_4) == 0x00000C, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, Temp_byte_Variable_5) == 0x00000D, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_Geometry_2) == 0x000010, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_Geometry_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_InputEvent_2) == 0x000048, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_InputEvent_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_Geometry_1) == 0x0000B8, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_Geometry_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_InputEvent_1) == 0x0000F0, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_InputEvent_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_OptionCategoryIndex) == 0x000160, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_OptionCategoryIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_Geometry) == 0x000164, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_InputEvent) == 0x0001A0, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_InputEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_Select_Default) == 0x000210, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply_5) == 0x000211, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply_5' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply_4) == 0x000212, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply_4' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply_3) == 0x000213, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply_3' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply_2) == 0x000214, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply_1) == 0x000215, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanApply) == 0x000216, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanApply' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset_5) == 0x000217, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset_5' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset_4) == 0x000218, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset_4' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset_3) == 0x000219, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset_3' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset_2) == 0x00021A, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset_1) == 0x00021B, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen, K2Node_ComponentBoundEvent_CanReset) == 0x00021C, "Member 'WIDGET_OptionsScreen_C_ExecuteUbergraph_WIDGET_OptionsScreen::K2Node_ComponentBoundEvent_CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_15_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_14_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_13_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_12_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_11_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_10_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Interface_K2Node_ComponentBoundEvent_9_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Graphics_K2Node_ComponentBoundEvent_8_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Gameplay_K2Node_ComponentBoundEvent_7_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Display_K2Node_ComponentBoundEvent_6_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Controls_K2Node_ComponentBoundEvent_5_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsMenu_Audio_K2Node_ComponentBoundEvent_4_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ResetToDefaults_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature final
{
public:
	int32                                         OptionCategoryIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature) == 0x000004, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature, OptionCategoryIndex) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_OptionsCategoryMenuList_K2Node_ComponentBoundEvent_2_OnOptionCategoryClicked__DelegateSignature::OptionCategoryIndex' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_ApplyButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_OptionsScreen_C_BndEvt__WIDGET_OptionsScreen_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.SetHighlightedListItem
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_OptionsScreen_C_SetHighlightedListItem final
{
public:
	class UWIDGET_MenuListItemBase_C*             ListItemWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0010(0x0018)()
};
static_assert(alignof(WIDGET_OptionsScreen_C_SetHighlightedListItem) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_SetHighlightedListItem");
static_assert(sizeof(WIDGET_OptionsScreen_C_SetHighlightedListItem) == 0x000028, "Wrong size on WIDGET_OptionsScreen_C_SetHighlightedListItem");
static_assert(offsetof(WIDGET_OptionsScreen_C_SetHighlightedListItem, ListItemWidget) == 0x000000, "Member 'WIDGET_OptionsScreen_C_SetHighlightedListItem::ListItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_SetHighlightedListItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_OptionsScreen_C_SetHighlightedListItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_SetHighlightedListItem, CallFunc_TextToUpper_ReturnValue) == 0x000010, "Member 'WIDGET_OptionsScreen_C_SetHighlightedListItem::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.TryUpdateCategoryList
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_OptionsScreen_C_TryUpdateCategoryList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MenuListItemBase_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_OptionCategoryMenuListItem_C*   K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_OptionsScreen_C_TryUpdateCategoryList) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_TryUpdateCategoryList");
static_assert(sizeof(WIDGET_OptionsScreen_C_TryUpdateCategoryList) == 0x000040, "Wrong size on WIDGET_OptionsScreen_C_TryUpdateCategoryList");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_Array_Get_Item) == 0x000010, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item) == 0x000020, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryUpdateCategoryList, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'WIDGET_OptionsScreen_C_TryUpdateCategoryList::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.TryOpenOptionSubMenu
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_OptionsScreen_C_TryOpenOptionSubMenu final
{
public:
	ENUM_OptionCategories                         NewOptionCategory;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayMenuAnimation;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Base_C*             NewSubMenu;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OptionCategories                         Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MenuListItemBase_C*             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_OptionCategoryMenuListItem_C*   K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_SetSelectedItem_CategoryText;             // 0x0080(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_OptionsMenu_Base_C*             K2Node_Select_Default_1;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_TryOpenOptionSubMenu");
static_assert(sizeof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu) == 0x0000A8, "Wrong size on WIDGET_OptionsScreen_C_TryOpenOptionSubMenu");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, NewOptionCategory) == 0x000000, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::NewOptionCategory' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, PlayMenuAnimation) == 0x000001, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::PlayMenuAnimation' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, NewSubMenu) == 0x000008, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::NewSubMenu' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable) == 0x000010, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable_1) == 0x000014, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable_2) == 0x000018, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_byte_Variable) == 0x00001C, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable_3) == 0x000024, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_byte_Variable_1) == 0x000028, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable_4) == 0x00003C, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_Array_Get_Item) == 0x000048, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item) == 0x000050, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_IsValid_ReturnValue_2) == 0x000065, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, Temp_int_Variable_5) == 0x000068, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_PlayAnimation_ReturnValue_1) == 0x000070, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, K2Node_Select_Default) == 0x000078, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_SetSelectedItem_CategoryText) == 0x000080, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_SetSelectedItem_CategoryText' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_IsValid_ReturnValue_3) == 0x000098, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryOpenOptionSubMenu, K2Node_Select_Default_1) == 0x0000A0, "Member 'WIDGET_OptionsScreen_C_TryOpenOptionSubMenu::K2Node_Select_Default_1' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.SetMainMenu
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_OptionsScreen_C_SetMainMenu final
{
public:
	class UUserWidget*                            MainMenuWidget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_OptionsScreen_C_SetMainMenu) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_SetMainMenu");
static_assert(sizeof(WIDGET_OptionsScreen_C_SetMainMenu) == 0x000008, "Wrong size on WIDGET_OptionsScreen_C_SetMainMenu");
static_assert(offsetof(WIDGET_OptionsScreen_C_SetMainMenu, MainMenuWidget) == 0x000000, "Member 'WIDGET_OptionsScreen_C_SetMainMenu::MainMenuWidget' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.TryCloseSubMenu
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_OptionsScreen_C_TryCloseSubMenu final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MenuListItemBase_C*             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_OptionCategoryMenuListItem_C*   K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_TryCloseSubMenu) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_TryCloseSubMenu");
static_assert(sizeof(WIDGET_OptionsScreen_C_TryCloseSubMenu) == 0x000040, "Wrong size on WIDGET_OptionsScreen_C_TryCloseSubMenu");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_Array_Get_Item) == 0x000018, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item) == 0x000028, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::K2Node_DynamicCast_AsWIDGET_Option_Category_Menu_List_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_TryCloseSubMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WIDGET_OptionsScreen_C_TryCloseSubMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.InvokeNavManager
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_OptionsScreen_C_InvokeNavManager final
{
public:
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HadSubMenu;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveShockSettings_Result;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SplashScreen_Title_C*           K2Node_DynamicCast_AsWIDGET_Splash_Screen_Title;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_OptionsScreen_C_InvokeNavManager) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_InvokeNavManager");
static_assert(sizeof(WIDGET_OptionsScreen_C_InvokeNavManager) == 0x000040, "Wrong size on WIDGET_OptionsScreen_C_InvokeNavManager");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, InputType) == 0x000000, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, InputState) == 0x000001, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, HadSubMenu) == 0x000002, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::HadSubMenu' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, CallFunc_SaveShockSettings_Result) == 0x000019, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::CallFunc_SaveShockSettings_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game) == 0x000020, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_AsWIDGET_Splash_Screen_Title) == 0x000030, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_AsWIDGET_Splash_Screen_Title' has a wrong offset!");
static_assert(offsetof(WIDGET_OptionsScreen_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'WIDGET_OptionsScreen_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WIDGET_OptionsScreen.WIDGET_OptionsScreen_C.InitializeMenu
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_OptionsScreen_C_InitializeMenu final
{
public:
	class UWIDGET_MenuBase_C*                     ParentMenuWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_OptionsScreen_C_InitializeMenu) == 0x000008, "Wrong alignment on WIDGET_OptionsScreen_C_InitializeMenu");
static_assert(sizeof(WIDGET_OptionsScreen_C_InitializeMenu) == 0x000008, "Wrong size on WIDGET_OptionsScreen_C_InitializeMenu");
static_assert(offsetof(WIDGET_OptionsScreen_C_InitializeMenu, ParentMenuWidget) == 0x000000, "Member 'WIDGET_OptionsScreen_C_InitializeMenu::ParentMenuWidget' has a wrong offset!");

}


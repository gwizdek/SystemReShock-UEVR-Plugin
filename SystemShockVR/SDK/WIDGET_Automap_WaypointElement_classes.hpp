#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Automap_WaypointElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_Automap_WaypointInteraction_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_Automap_WaypointElement.WIDGET_Automap_WaypointElement_C
// 0x0050 (0x02B0 - 0x0260)
class UWIDGET_Automap_WaypointElement_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ElementMouseLeave;                                 // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ElementMouseEnter;                                 // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ElementToggled;                                    // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Background;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Icon;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_WaypointLabel;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ENUM_Automap_WaypointInteraction              WaypointInteractType;                              // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsElementActive;                                   // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMouseOver;                                       // 0x029A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B[0x5];                                      // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_Automap_Waypoints_C*            WaypointWidget;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_Automap_WaypointElement(int32 EntryPoint);
	void Construct();
	void GetDisplayText(class FText* DisplayName);
	void EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_MouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void UpdateVisualState();
	void GetActiveTextColor(struct FColor* Color);
	void GetInactiveTextColor(struct FColor* Color);
	void GetHighlightedActiveTextColor(struct FColor* Color);
	void GetHighlightedInactiveTextColor(struct FColor* Color);
	void SetTexture();
	void GetDynamicMaterial(class UMaterialInstanceDynamic** DynamicMaterial_0);
	void InitializeWaypointElement(class UWIDGET_Automap_Waypoints_C* WaypointWidget_0);
	void SetElementActive(bool IsActive);
	void ReceiveWaypointInput(const struct FVector& WorldLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_Automap_WaypointElement_C">();
	}
	static class UWIDGET_Automap_WaypointElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_Automap_WaypointElement_C>();
	}
};
static_assert(alignof(UWIDGET_Automap_WaypointElement_C) == 0x000008, "Wrong alignment on UWIDGET_Automap_WaypointElement_C");
static_assert(sizeof(UWIDGET_Automap_WaypointElement_C) == 0x0002B0, "Wrong size on UWIDGET_Automap_WaypointElement_C");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_Automap_WaypointElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, ElementMouseLeave) == 0x000268, "Member 'UWIDGET_Automap_WaypointElement_C::ElementMouseLeave' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, ElementMouseEnter) == 0x000270, "Member 'UWIDGET_Automap_WaypointElement_C::ElementMouseEnter' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, ElementToggled) == 0x000278, "Member 'UWIDGET_Automap_WaypointElement_C::ElementToggled' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, MESH_Background) == 0x000280, "Member 'UWIDGET_Automap_WaypointElement_C::MESH_Background' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, MESH_Icon) == 0x000288, "Member 'UWIDGET_Automap_WaypointElement_C::MESH_Icon' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, TEXT_WaypointLabel) == 0x000290, "Member 'UWIDGET_Automap_WaypointElement_C::TEXT_WaypointLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, WaypointInteractType) == 0x000298, "Member 'UWIDGET_Automap_WaypointElement_C::WaypointInteractType' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, IsElementActive) == 0x000299, "Member 'UWIDGET_Automap_WaypointElement_C::IsElementActive' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, IsMouseOver) == 0x00029A, "Member 'UWIDGET_Automap_WaypointElement_C::IsMouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, DynamicMaterial) == 0x0002A0, "Member 'UWIDGET_Automap_WaypointElement_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWIDGET_Automap_WaypointElement_C, WaypointWidget) == 0x0002A8, "Member 'UWIDGET_Automap_WaypointElement_C::WaypointWidget' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OxygenScrubber_Vent

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OxygenScrubber_Vent.BP_OxygenScrubber_Vent_C
// 0x0030 (0x0250 - 0x0220)
class ABP_OxygenScrubber_Vent_C final : public AActor
{
public:
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio_Data_Loop;                         // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio_Oxygen_Loop;                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Descriptor_C*                     COMP_Descriptor;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Smoke;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OxygenScrubber_Vent_C">();
	}
	static class ABP_OxygenScrubber_Vent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OxygenScrubber_Vent_C>();
	}
};
static_assert(alignof(ABP_OxygenScrubber_Vent_C) == 0x000008, "Wrong alignment on ABP_OxygenScrubber_Vent_C");
static_assert(sizeof(ABP_OxygenScrubber_Vent_C) == 0x000250, "Wrong size on ABP_OxygenScrubber_Vent_C");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, COMP_VoxelAudio_Data_Loop) == 0x000220, "Member 'ABP_OxygenScrubber_Vent_C::COMP_VoxelAudio_Data_Loop' has a wrong offset!");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, COMP_VoxelAudio_Oxygen_Loop) == 0x000228, "Member 'ABP_OxygenScrubber_Vent_C::COMP_VoxelAudio_Oxygen_Loop' has a wrong offset!");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, COMP_Descriptor) == 0x000230, "Member 'ABP_OxygenScrubber_Vent_C::COMP_Descriptor' has a wrong offset!");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, Smoke) == 0x000238, "Member 'ABP_OxygenScrubber_Vent_C::Smoke' has a wrong offset!");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, StaticMesh) == 0x000240, "Member 'ABP_OxygenScrubber_Vent_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_OxygenScrubber_Vent_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_OxygenScrubber_Vent_C::DefaultSceneRoot' has a wrong offset!");

}


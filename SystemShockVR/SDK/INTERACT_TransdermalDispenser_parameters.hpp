#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_TransdermalDispenser

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.ExecuteUbergraph_INTERACT_TransdermalDispenser
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser) == 0x000008, "Wrong size on INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser, EntryPoint) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_ExecuteUbergraph_INTERACT_TransdermalDispenser::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_BndEvt__INTERACT_TransdermalDispenser_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetTargetShape
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CursorShapeComponent;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        K2Node_DynamicCast_AsShape_Component;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetTargetShape");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetTargetShape) == 0x000038, "Wrong size on INTERACT_TransdermalDispenser_C_GetTargetShape");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CursorShapeComponent) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CursorShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, K2Node_DynamicCast_AsShape_Component) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::K2Node_DynamicCast_AsShape_Component' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_Array_Contains_ReturnValue_1) == 0x000022, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000023, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetTargetShape, CallFunc_ShouldFocusOnInteract_Result) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_GetTargetShape::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryInteract
// 0x0298 (0x0298 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RequiredCost;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0048(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0068(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0088(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDispenserFunctional_Result;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00B0(0x0020)(HasGetValueTypeHash)
	uint8                                         CallFunc_GetMinCostIncrement_Result;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue;                         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetBestCostIncrement_Result;              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryPurchasePatch_Result;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TryPurchasePatch_FailedText;              // 0x0100(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0118(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyPatchesInStock_Result;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0140(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0160(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x0180(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F8(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x0210(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_8;        // 0x0230(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryRefundPayment_Result;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryMakePayment_Result;                    // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryBeginFocusInteraction_Result;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_9;        // 0x0278(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryInteract");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryInteract) == 0x000298, "Wrong size on INTERACT_TransdermalDispenser_C_TryInteract");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, Character) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, RequiredCost) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::RequiredCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000068, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000088, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_IsDispenserFunctional_Result) == 0x0000A9, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_IsDispenserFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000B0, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_GetMinCostIncrement_Result) == 0x0000D0, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_GetMinCostIncrement_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_GetInventoryComponent_Inventory) == 0x0000D8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_GetItemCount_Result) == 0x0000E0, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_Min_ReturnValue) == 0x0000E4, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000E8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_BMax_ReturnValue) == 0x0000E9, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_BMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000F0, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_GetBestCostIncrement_Result) == 0x0000F9, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_GetBestCostIncrement_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryPurchasePatch_Result) == 0x0000FA, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryPurchasePatch_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryPurchasePatch_FailedText) == 0x000100, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryPurchasePatch_FailedText' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000118, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_HasAnyPatchesInStock_Result) == 0x000138, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_HasAnyPatchesInStock_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000140, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000160, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x000180, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001A0, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_Greater_ByteByte_ReturnValue) == 0x0001A4, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_FormatArgumentData) == 0x0001A8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeArray_Array) == 0x0001E8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_Format_ReturnValue) == 0x0001F8, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x000210, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_8) == 0x000230, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_8' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryRefundPayment_Result) == 0x000250, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryRefundPayment_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000251, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryMakePayment_Result) == 0x000252, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryMakePayment_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000253, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000258, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_GetController_ReturnValue) == 0x000268, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_TryBeginFocusInteraction_Result) == 0x000270, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_TryBeginFocusInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, CallFunc_ShouldFocusOnInteract_Result) == 0x000271, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_9) == 0x000278, "Member 'INTERACT_TransdermalDispenser_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_9' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.InitializeTransdermalDispenser
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser) == 0x000020, "Wrong size on INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_InitializeTransdermalDispenser::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.InitializeKeypadComponents
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_TransdermalDispenser_C_InitializeKeypadComponents final
{
public:
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_InitializeKeypadComponents) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_InitializeKeypadComponents");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_InitializeKeypadComponents) == 0x000010, "Wrong size on INTERACT_TransdermalDispenser_C_InitializeKeypadComponents");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeKeypadComponents, K2Node_MakeArray_Array) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_InitializeKeypadComponents::K2Node_MakeArray_Array' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_TransdermalDispenser_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_InitializeAttributes");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_TransdermalDispenser_C_InitializeAttributes");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.UpdateEmissiveStrength
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength) == 0x000004, "Wrong size on INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_UpdateEmissiveStrength::Scale' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GenerateInitialStock
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GenerateInitialStock final
{
public:
	TSoftClassPtr<class UClass>                   PatchClass;                                        // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         PatchIndex;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchCount;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetPatchClassAtIndex_Result;              // 0x0050(0x0028)(HasGetValueTypeHash)
	uint8                                         CallFunc_ModifyPatchStock_NewCount;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GenerateInitialStock) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_GenerateInitialStock");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GenerateInitialStock) == 0x000088, "Wrong size on INTERACT_TransdermalDispenser_C_GenerateInitialStock");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, PatchClass) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::PatchClass' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, PatchIndex) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, PatchCount) == 0x00002C, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::PatchCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, Temp_int_Variable) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Map_Find_Value) == 0x000044, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Map_Find_ReturnValue) == 0x000045, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_GetPatchClassAtIndex_Result) == 0x000050, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_GetPatchClassAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_ModifyPatchStock_NewCount) == 0x000078, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_ModifyPatchStock_NewCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Map_Length_ReturnValue) == 0x00007C, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GenerateInitialStock, CallFunc_Min_ReturnValue) == 0x000080, "Member 'INTERACT_TransdermalDispenser_C_GenerateInitialStock::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.OnPaidCost
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_TransdermalDispenser_C_OnPaidCost final
{
public:
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0020(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_OnPaidCost) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_OnPaidCost");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_OnPaidCost) == 0x000068, "Wrong size on INTERACT_TransdermalDispenser_C_OnPaidCost");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, K2Node_MakeArray_Array) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, K2Node_MakeArray_Array_1) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_OnPaidCost, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'INTERACT_TransdermalDispenser_C_OnPaidCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryMakePayment
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryMakePayment final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CostToPay;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CoinCount;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        JunkBag;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveItemCountByClass_RemovedCount;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryMakePayment) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryMakePayment");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryMakePayment) == 0x000048, "Wrong size on INTERACT_TransdermalDispenser_C_TryMakePayment");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, Character) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CostToPay) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CostToPay' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, Result) == 0x000009, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CoinCount) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CoinCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, JunkBag) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::JunkBag' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000024, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_GetInventoryComponent_Inventory) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_GetBagByType_Bag) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_Add_ByteByte_ReturnValue) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_RemoveItemCountByClass_RemovedCount) == 0x00003C, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_RemoveItemCountByClass_RemovedCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_GetItemCount_Result) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryMakePayment, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'INTERACT_TransdermalDispenser_C_TryMakePayment::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryRefundPayment
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryRefundPayment final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0038(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0078(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryRefundPayment) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryRefundPayment");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryRefundPayment) == 0x0000A8, "Wrong size on INTERACT_TransdermalDispenser_C_TryRefundPayment");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, Character) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, Result) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_MakeArray_Array) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_MakeArray_Array_1) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, CallFunc_GetInventoryComponent_Inventory) == 0x000070, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000078, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, CallFunc_GrantItem_Result) == 0x000088, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::CallFunc_GrantItem_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_DynamicCast_AsGI_Single_Player) == 0x000098, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryRefundPayment, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'INTERACT_TransdermalDispenser_C_TryRefundPayment::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.IsDispenserFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_TransdermalDispenser_C_IsDispenserFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_IsDispenserFunctional) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_IsDispenserFunctional");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_IsDispenserFunctional) == 0x00000C, "Wrong size on INTERACT_TransdermalDispenser_C_IsDispenserFunctional");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_IsDispenserFunctional, Result) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_IsDispenserFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_IsDispenserFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_IsDispenserFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_IsDispenserFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_IsDispenserFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.HasAnyPatchesInStock
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock) == 0x000001, "Wrong alignment on INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock) == 0x000002, "Wrong size on INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock, Result) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'INTERACT_TransdermalDispenser_C_HasAnyPatchesInStock::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetPatchStockCountAtIndex
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex final
{
public:
	int32                                         PatchIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteA;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex) == 0x000014, "Wrong size on INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, PatchIndex) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, Result) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, Temp_int_Variable) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, CallFunc_GetBytesFromInt_OutByteA) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::CallFunc_GetBytesFromInt_OutByteA' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, CallFunc_GetBytesFromInt_OutByteB) == 0x00000D, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::CallFunc_GetBytesFromInt_OutByteB' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, CallFunc_GetBytesFromInt_OutByteC) == 0x00000E, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::CallFunc_GetBytesFromInt_OutByteC' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, CallFunc_GetBytesFromInt_OutByteD) == 0x00000F, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::CallFunc_GetBytesFromInt_OutByteD' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex, K2Node_Select_Default) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_GetPatchStockCountAtIndex::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetPatchClassAtIndex
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex final
{
public:
	int32                                         PatchIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Result;                                            // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0048(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex) == 0x000070, "Wrong size on INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex, PatchIndex) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex, Result) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex, CallFunc_Array_Get_Item) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_GetPatchClassAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetBestCostIncrement
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetBestCostIncrement final
{
public:
	uint8                                         MaxSpend;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PatchCost;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         BestCostIncrement;                                 // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchCount;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetPatchStockCountAtIndex_Result;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_2;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_3;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetPatchClassAtIndex_Result;              // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetBestCostIncrement");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement) == 0x000068, "Wrong size on INTERACT_TransdermalDispenser_C_GetBestCostIncrement");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, MaxSpend) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::MaxSpend' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, Result) == 0x000001, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, PatchCost) == 0x000002, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::PatchCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, BestCostIncrement) == 0x000003, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::BestCostIncrement' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, PatchIndex) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, PatchCount) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::PatchCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_GetPatchStockCountAtIndex_Result) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_GetPatchStockCountAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Greater_ByteByte_ReturnValue) == 0x000014, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, Temp_int_Variable) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x000024, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Greater_ByteByte_ReturnValue_2) == 0x000025, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Greater_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000026, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000027, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Greater_ByteByte_ReturnValue_3) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Greater_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_GetPatchClassAtIndex_Result) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_GetPatchClassAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Map_Find_Value) == 0x000059, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Map_Find_ReturnValue) == 0x00005A, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Map_Length_ReturnValue) == 0x00005C, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetBestCostIncrement, CallFunc_Min_ReturnValue) == 0x000060, "Member 'INTERACT_TransdermalDispenser_C_GetBestCostIncrement::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryPurchasePatch
// 0x01F0 (0x01F0 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryPurchasePatch final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FailedText;                                        // 0x0018(0x0018)(Parm, OutParm)
	int32                                         PatchIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PickupClass;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RequiredCost;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   PatchClass;                                        // 0x0048(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryRefundPayment_Result;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetPatchStockCountAtIndex_Result;         // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_ModifyPatchStock_NewCount;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue_1;    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPICKUP_Dermal_Patch_Base; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_DermalPatch_Base_C*             CallFunc_SpawnActorInLevel_ReturnValue;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetPatchClassAtIndex_Result;              // 0x01C0(0x0028)(HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue_1;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryPurchasePatch) == 0x000010, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryPurchasePatch");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryPurchasePatch) == 0x0001F0, "Wrong size on INTERACT_TransdermalDispenser_C_TryPurchasePatch");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, Character) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, PrimitiveComponent) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, Result) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, FailedText) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::FailedText' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, PatchIndex) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, PickupClass) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::PickupClass' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, RequiredCost) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::RequiredCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, PatchClass) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::PatchClass' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GetGameInstance_ReturnValue) == 0x000070, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000078, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008A, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_BooleanAND_ReturnValue) == 0x00008B, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_TryRefundPayment_Result) == 0x00008C, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_TryRefundPayment_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Subtract_ByteByte_ReturnValue) == 0x00008D, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000090, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_MakeArray_Array) == 0x0000D8, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000100, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000104, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GetPatchStockCountAtIndex_Result) == 0x000111, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GetPatchStockCountAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_ModifyPatchStock_NewCount) == 0x000112, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_ModifyPatchStock_NewCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Greater_ByteByte_ReturnValue) == 0x000113, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Array_Find_ReturnValue) == 0x000114, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000120, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000150, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_CreateDelegate_OutputDelegate) == 0x000158, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base) == 0x000168, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_ClassDynamicCast_bSuccess) == 0x000170, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000178, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_LoadClassAsset_Blocking_ReturnValue_1) == 0x000180, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_LoadClassAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_ClassDynamicCast_AsPICKUP_Dermal_Patch_Base) == 0x000188, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_ClassDynamicCast_AsPICKUP_Dermal_Patch_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_ClassDynamicCast_bSuccess_1) == 0x000190, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GetGameInstance_ReturnValue_1) == 0x000198, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0001A0, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GetActorLevel_ReturnValue) == 0x0001B0, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_SpawnActorInLevel_ReturnValue) == 0x0001B8, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_GetPatchClassAtIndex_Result) == 0x0001C0, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_GetPatchClassAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Subtract_ByteByte_ReturnValue_1) == 0x0001E8, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Subtract_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x0001E9, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Map_Find_Value) == 0x0001EA, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryPurchasePatch, CallFunc_Map_Find_ReturnValue) == 0x0001EB, "Member 'INTERACT_TransdermalDispenser_C_TryPurchasePatch::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryCompleteGameEventOnInteract
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract) == 0x000018, "Wrong size on INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract, CallFunc_NotEqual_NameName_ReturnValue) == 0x000011, "Member 'INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'INTERACT_TransdermalDispenser_C_TryCompleteGameEventOnInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.PlayKeypadErrorSound
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound) == 0x000030, "Wrong size on INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound, PrimitiveComponent) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_PlayKeypadErrorSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.ModifyPatchStock
// 0x0034 (0x0034 - 0x0000)
struct INTERACT_TransdermalDispenser_C_ModifyPatchStock final
{
public:
	int32                                         PatchIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StockChange;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCount;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         ModifiedStockCount;                                // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CurrentStockCount;                                 // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetPatchStockCountAtIndex_Result;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetBytesFromInt_OutByteA;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeIntFromBytes_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteA_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC_1;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD_1;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeIntFromBytes_ReturnValue_1;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteA_2;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB_2;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC_2;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD_2;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeIntFromBytes_ReturnValue_2;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteA_3;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB_3;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC_3;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD_3;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeIntFromBytes_ReturnValue_3;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_ModifyPatchStock) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_ModifyPatchStock");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_ModifyPatchStock) == 0x000034, "Wrong size on INTERACT_TransdermalDispenser_C_ModifyPatchStock");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, PatchIndex) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, StockChange) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::StockChange' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, NewCount) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::NewCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, ModifiedStockCount) == 0x000009, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::ModifiedStockCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CurrentStockCount) == 0x00000A, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CurrentStockCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetPatchStockCountAtIndex_Result) == 0x00000B, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetPatchStockCountAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteA) == 0x00000D, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteA' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteB) == 0x00000E, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteB' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteC) == 0x00000F, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteC' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteD) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteD' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_MakeIntFromBytes_ReturnValue) == 0x000014, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_MakeIntFromBytes_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteA_1) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteA_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteB_1) == 0x000019, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteB_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteC_1) == 0x00001A, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteC_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteD_1) == 0x00001B, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteD_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_MakeIntFromBytes_ReturnValue_1) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_MakeIntFromBytes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteA_2) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteA_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteB_2) == 0x000021, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteB_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteC_2) == 0x000022, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteC_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteD_2) == 0x000023, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteD_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_MakeIntFromBytes_ReturnValue_2) == 0x000024, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_MakeIntFromBytes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteA_3) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteA_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteB_3) == 0x000029, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteB_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteC_3) == 0x00002A, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteC_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_GetBytesFromInt_OutByteD_3) == 0x00002B, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_GetBytesFromInt_OutByteD_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_MakeIntFromBytes_ReturnValue_3) == 0x00002C, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_MakeIntFromBytes_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_Conv_IntToByte_ReturnValue) == 0x000031, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_ModifyPatchStock, CallFunc_Add_ByteByte_ReturnValue) == 0x000032, "Member 'INTERACT_TransdermalDispenser_C_ModifyPatchStock::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.UpdatePatchSelectionScreen
// 0x0160 (0x0160 - 0x0000)
struct INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen final
{
public:
	int32                                         PatchIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         StockCount;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IconPhase;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PatchCost;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   PatchClass;                                        // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         IconPrimDataIndex;                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostPrimDataIndex;                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StockPrimDataIndex;                                // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Map_Find_Value_1;                         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetPatchClassAtIndex_Result;              // 0x0130(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen) == 0x000160, "Wrong size on INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, PatchIndex) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, StockCount) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::StockCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, IconPhase) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::IconPhase' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, PatchCost) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::PatchCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, PatchClass) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::PatchClass' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, IconPrimDataIndex) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::IconPrimDataIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CostPrimDataIndex) == 0x00003C, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CostPrimDataIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, StockPrimDataIndex) == 0x000040, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::StockPrimDataIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Map_Find_Value) == 0x000044, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000058, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base) == 0x000060, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::K2Node_ClassDynamicCast_AsITEM_Dermal_Patch_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, K2Node_ClassDynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x0000B0, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B4, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, K2Node_MakeArray_Array) == 0x0000F8, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Format_ReturnValue) == 0x000108, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000124, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000128, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Map_Find_Value_1) == 0x00012C, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Map_Find_ReturnValue_1) == 0x00012D, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_GetPatchClassAtIndex_Result) == 0x000130, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_GetPatchClassAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen, CallFunc_Greater_ByteByte_ReturnValue) == 0x000158, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreen::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.UpdatePatchSelectionScreens
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens final
{
public:
	uint8                                         CallFunc_GetBytesFromInt_OutByteA;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteB;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteC;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBytesFromInt_OutByteD;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens) == 0x000001, "Wrong alignment on INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens) == 0x000004, "Wrong size on INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens, CallFunc_GetBytesFromInt_OutByteA) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens::CallFunc_GetBytesFromInt_OutByteA' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens, CallFunc_GetBytesFromInt_OutByteB) == 0x000001, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens::CallFunc_GetBytesFromInt_OutByteB' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens, CallFunc_GetBytesFromInt_OutByteC) == 0x000002, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens::CallFunc_GetBytesFromInt_OutByteC' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens, CallFunc_GetBytesFromInt_OutByteD) == 0x000003, "Member 'INTERACT_TransdermalDispenser_C_UpdatePatchSelectionScreens::CallFunc_GetBytesFromInt_OutByteD' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetFocusWorldTransform
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetFocusWorldTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetFocusWorldTransform) == 0x000010, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetFocusWorldTransform");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetFocusWorldTransform) == 0x000060, "Wrong size on INTERACT_TransdermalDispenser_C_GetFocusWorldTransform");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetFocusWorldTransform, Transform) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetFocusWorldTransform::Transform' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetFocusWorldTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_GetFocusWorldTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.CycleFocusedPrimitiveComponent
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vertical;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Previous;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent) == 0x000030, "Wrong size on INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CursorPrimitive) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, Vertical) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::Vertical' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, Previous) == 0x000009, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::Previous' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable) == 0x00000A, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000D, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue_3) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00001A, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00001B, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable_1) == 0x00001D, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default_1) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue_4) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000029, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x00002A, "Member 'INTERACT_TransdermalDispenser_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.UpdateCreditsScreen
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_TransdermalDispenser_C_UpdateCreditsScreen final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_UpdateCreditsScreen");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen) == 0x000078, "Wrong size on INTERACT_TransdermalDispenser_C_UpdateCreditsScreen");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, K2Node_MakeArray_Array) == 0x000048, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, CallFunc_Format_ReturnValue) == 0x000058, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000070, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateCreditsScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'INTERACT_TransdermalDispenser_C_UpdateCreditsScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.CanReceiveItem
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_TransdermalDispenser_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyPatchesInStock_Result;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Coin_C*                           K2Node_DynamicCast_AsITEM_Coin;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_CanReceiveItem) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_CanReceiveItem");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_CanReceiveItem) == 0x000020, "Wrong size on INTERACT_TransdermalDispenser_C_CanReceiveItem");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, Item) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, Result) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, CallFunc_HasAnyPatchesInStock_Result) == 0x000009, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::CallFunc_HasAnyPatchesInStock_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, K2Node_DynamicCast_AsITEM_Coin) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::K2Node_DynamicCast_AsITEM_Coin' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_CanReceiveItem, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'INTERACT_TransdermalDispenser_C_CanReceiveItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.TryReceiveItem
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_TransdermalDispenser_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         RequiredCost;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanReceiveItem_Result;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCount_Result;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBestCostIncrement_Result;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result_1;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_TryReceiveItem) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_TryReceiveItem");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_TryReceiveItem) == 0x000040, "Wrong size on INTERACT_TransdermalDispenser_C_TryReceiveItem");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, Item) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, Result) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, RequiredCost) == 0x000009, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::RequiredCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_CanReceiveItem_Result) == 0x00000A, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_CanReceiveItem_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Greater_ByteByte_ReturnValue) == 0x00000B, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_GetCount_Result) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Min_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_GetBestCostIncrement_Result) == 0x000015, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_GetBestCostIncrement_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Add_ByteByte_ReturnValue) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_GetBag_Result) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_RemoveItemCount_RemovedItem) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_GetCount_Result_1) == 0x000034, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_GetCount_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_TryReceiveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_TryReceiveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.EVENT_OnDispensePatch
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch) == 0x000040, "Wrong size on INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDispensePatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.UpdateDispenserVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility) == 0x000001, "Wrong alignment on INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility) == 0x000001, "Wrong size on INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_UpdateDispenserVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.GetMinCostIncrement
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_TransdermalDispenser_C_GetMinCostIncrement final
{
public:
	uint8                                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PatchCost;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         MinCostIncrement;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PatchIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PatchCount;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue_1;              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetPatchClassAtIndex_Result;              // 0x0028(0x0028)(HasGetValueTypeHash)
	uint8                                         CallFunc_Map_Find_Value;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetPatchStockCountAtIndex_Result;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement) == 0x000008, "Wrong alignment on INTERACT_TransdermalDispenser_C_GetMinCostIncrement");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement) == 0x000060, "Wrong size on INTERACT_TransdermalDispenser_C_GetMinCostIncrement");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, Result) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, PatchCost) == 0x000001, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::PatchCost' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, MinCostIncrement) == 0x000002, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::MinCostIncrement' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, PatchIndex) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::PatchIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, PatchCount) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::PatchCount' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, Temp_int_Variable) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Less_ByteByte_ReturnValue) == 0x00001C, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Subtract_ByteByte_ReturnValue) == 0x00001D, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Less_ByteByte_ReturnValue_1) == 0x00001E, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Less_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Greater_ByteByte_ReturnValue) == 0x00001F, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_GetPatchClassAtIndex_Result) == 0x000028, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_GetPatchClassAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Map_Find_Value) == 0x000050, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Map_Find_ReturnValue) == 0x000051, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Map_Length_ReturnValue) == 0x000054, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Min_ReturnValue) == 0x000058, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_GetPatchStockCountAtIndex_Result) == 0x00005C, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_GetPatchStockCountAtIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_GetMinCostIncrement, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x00005D, "Member 'INTERACT_TransdermalDispenser_C_GetMinCostIncrement::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");

// Function INTERACT_TransdermalDispenser.INTERACT_TransdermalDispenser_C.EVENT_OnDisableAttribChanged
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveStrength;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged) == 0x000014, "Wrong size on INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged, EmissiveStrength) == 0x000008, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_TransdermalDispenser_C_EVENT_OnDisableAttribChanged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Cryobed_PlayerStart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.BeginCryobedWakeupSequence
// 0x00C8 (0x00C8 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence final
{
public:
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_1;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Cryobed_C*                 CallFunc_SpawnObject_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence) == 0x0000C8, "Wrong size on INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_GetNeuralHUD_Result) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_GetNeuralHUD_Result_1) == 0x000010, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_GetNeuralHUD_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000020, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000038, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000050, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_SetUseIK_Result) == 0x000058, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_SetUseIK_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1) == 0x000060, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_SetOverrideIdleSequence_Result) == 0x000071, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000084, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_RegisterMoveControl_Result) == 0x0000A4, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_SpawnObject_ReturnValue) == 0x0000A8, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000B0, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x0000B8, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'INTERACT_Cryobed_PlayerStart_C_BeginCryobedWakeupSequence::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.EVENT_OnGameStartedFromCryobed
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowIntroSequence_Result;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SetCompletedStoryQuest_LogString;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed) == 0x000048, "Wrong size on INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, GameInstance) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, CallFunc_ShouldShowIntroSequence_Result) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::CallFunc_ShouldShowIntroSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, CallFunc_SetCompletedStoryQuest_LogString) == 0x000020, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::CallFunc_SetCompletedStoryQuest_LogString' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_OnGameStartedFromCryobed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.EVENT_StartPlayerWakeUp
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp final
{
public:
	class UAnimMontage*                           LoadedWakeMontage;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp) == 0x000078, "Wrong size on INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, LoadedWakeMontage) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::LoadedWakeMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, HackerPawn) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_GetPlayLength_ReturnValue) == 0x000010, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_DynamicCast_AsAnim_Montage) == 0x000020, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_ForceBeginAction_Action) == 0x000030, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000050, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_StartPlayerWakeUp::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.EVENT_WakeUpActionEnd
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd final
{
public:
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd) == 0x000060, "Wrong size on INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, HackerPawn) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, CallFunc_GetNeuralHUD_Result) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000018, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, CallFunc_SetUseIK_Result) == 0x000038, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::CallFunc_SetUseIK_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000050, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_WakeUpActionEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.EVENT_RemoveIdleOverride
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride) == 0x000038, "Wrong size on INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000020, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride, CallFunc_SetOverrideIdleSequence_Result) == 0x000031, "Member 'INTERACT_Cryobed_PlayerStart_C_EVENT_RemoveIdleOverride::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");

// Function INTERACT_Cryobed_PlayerStart.INTERACT_Cryobed_PlayerStart_C.InitializeCryobed
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Cryobed_PlayerStart_C_InitializeCryobed final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed) == 0x000008, "Wrong alignment on INTERACT_Cryobed_PlayerStart_C_InitializeCryobed");
static_assert(sizeof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed) == 0x000030, "Wrong size on INTERACT_Cryobed_PlayerStart_C_InitializeCryobed");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, GameInstance) == 0x000000, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_PlayerStart_C_InitializeCryobed, CallFunc_HasCompletedStoryQuest_Completed) == 0x000029, "Member 'INTERACT_Cryobed_PlayerStart_C_InitializeCryobed::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");

}


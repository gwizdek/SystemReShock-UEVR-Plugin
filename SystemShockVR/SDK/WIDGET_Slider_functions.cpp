#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Slider

#include "Basic.hpp"

#include "WIDGET_Slider_classes.hpp"
#include "WIDGET_Slider_parameters.hpp"


namespace SDK
{

// Function WIDGET_Slider.WIDGET_Slider_C.OnValueChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewSliderValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewAbsoluteValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::OnValueChanged__DelegateSignature(float NewSliderValue, float NewAbsoluteValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "OnValueChanged__DelegateSignature");

	Params::WIDGET_Slider_C_OnValueChanged__DelegateSignature Parms{};

	Parms.NewSliderValue = NewSliderValue;
	Parms.NewAbsoluteValue = NewAbsoluteValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.ExecuteUbergraph_WIDGET_Slider
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::ExecuteUbergraph_WIDGET_Slider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "ExecuteUbergraph_WIDGET_Slider");

	Params::WIDGET_Slider_C_ExecuteUbergraph_WIDGET_Slider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_Slider_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_Slider_C::EVENT_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "EVENT_OnMouseDown");

	Params::WIDGET_Slider_C_EVENT_OnMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseMove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_Slider_C::EVENT_OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "EVENT_OnMouseMove");

	Params::WIDGET_Slider_C_EVENT_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseUp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_Slider_C::EVENT_OnMouseUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "EVENT_OnMouseUp");

	Params::WIDGET_Slider_C_EVENT_OnMouseUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Slider_C::EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "EVENT_OnMouseEnter");

	Params::WIDGET_Slider_C_EVENT_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.EVENT_OnMouseExit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Slider_C::EVENT_OnMouseExit(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "EVENT_OnMouseExit");

	Params::WIDGET_Slider_C_EVENT_OnMouseExit Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.SetSliderValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NormalizedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RealValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::SetSliderValue(float NormalizedValue, float* RealValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "SetSliderValue");

	Params::WIDGET_Slider_C_SetSliderValue Parms{};

	Parms.NormalizedValue = NormalizedValue;

	UObject::ProcessEvent(Func, &Parms);

	if (RealValue != nullptr)
		*RealValue = Parms.RealValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.SetSliderRealValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RealValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::SetSliderRealValue(float RealValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "SetSliderRealValue");

	Params::WIDGET_Slider_C_SetSliderRealValue Parms{};

	Parms.RealValue = RealValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderValueFromMousePosition
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   SliderValue_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::GetSliderValueFromMousePosition(float* SliderValue_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetSliderValueFromMousePosition");

	Params::WIDGET_Slider_C_GetSliderValueFromMousePosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SliderValue_0 != nullptr)
		*SliderValue_0 = Parms.SliderValue_0;
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NormalizedValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::GetSliderValue(float* NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetSliderValue");

	Params::WIDGET_Slider_C_GetSliderValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NormalizedValue != nullptr)
		*NormalizedValue = Parms.NormalizedValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetRealValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   RealValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::GetRealValue(float* RealValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetRealValue");

	Params::WIDGET_Slider_C_GetRealValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RealValue != nullptr)
		*RealValue = Parms.RealValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderPositionFromValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SliderValue_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::GetSliderPositionFromValue(float SliderValue_0, struct FVector2D* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetSliderPositionFromValue");

	Params::WIDGET_Slider_C_GetSliderPositionFromValue Parms{};

	Parms.SliderValue_0 = SliderValue_0;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function WIDGET_Slider.WIDGET_Slider_C.RealToNormalized
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   RealValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NormalizedValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::RealToNormalized(float RealValue, float* NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "RealToNormalized");

	Params::WIDGET_Slider_C_RealToNormalized Parms{};

	Parms.RealValue = RealValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NormalizedValue != nullptr)
		*NormalizedValue = Parms.NormalizedValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.Set Instanced Values
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DiscreteValues_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InitialValues                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ValueMin_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ValueMax_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Postfix_0                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   FractionalDigits_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::Set_Instanced_Values(int32 DiscreteValues_0, float InitialValues, float ValueMin_0, float ValueMax_0, const class FText& Postfix_0, int32 FractionalDigits_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "Set Instanced Values");

	Params::WIDGET_Slider_C_Set_Instanced_Values Parms{};

	Parms.DiscreteValues_0 = DiscreteValues_0;
	Parms.InitialValues = InitialValues;
	Parms.ValueMin_0 = ValueMin_0;
	Parms.ValueMax_0 = ValueMax_0;
	Parms.Postfix_0 = std::move(Postfix_0);
	Parms.FractionalDigits_0 = FractionalDigits_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.InitializeSlider
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Slider_C::InitializeSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "InitializeSlider");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Slider.WIDGET_Slider_C.UpdateBackgroundFill
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Slider_C::UpdateBackgroundFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "UpdateBackgroundFill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Slider.WIDGET_Slider_C.SetIsHighlighted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHighlighted                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Slider_C::SetIsHighlighted(bool IsHighlighted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "SetIsHighlighted");

	Params::WIDGET_Slider_C_SetIsHighlighted Parms{};

	Parms.IsHighlighted = IsHighlighted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderLength
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::GetSliderLength(float* Length) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetSliderLength");

	Params::WIDGET_Slider_C_GetSliderLength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function WIDGET_Slider.WIDGET_Slider_C.OnPaint
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FPaintContext                    Context                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UWIDGET_Slider_C::OnPaint(struct FPaintContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "OnPaint");

	Params::WIDGET_Slider_C_OnPaint Parms{};

	Parms.Context = std::move(Context);

	UObject::ProcessEvent(Func, &Parms);

	Context = std::move(Parms.Context);
}


// Function WIDGET_Slider.WIDGET_Slider_C.GetSliderTextToDisplay
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             Text                                                   (Parm, OutParm)

void UWIDGET_Slider_C::GetSliderTextToDisplay(class FText* Text) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "GetSliderTextToDisplay");

	Params::WIDGET_Slider_C_GetSliderTextToDisplay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WIDGET_Slider.WIDGET_Slider_C.NormalizedToReal
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   SliderValue_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RealValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::NormalizedToReal(float SliderValue_0, float* RealValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "NormalizedToReal");

	Params::WIDGET_Slider_C_NormalizedToReal Parms{};

	Parms.SliderValue_0 = SliderValue_0;

	UObject::ProcessEvent(Func, &Parms);

	if (RealValue != nullptr)
		*RealValue = Parms.RealValue;
}


// Function WIDGET_Slider.WIDGET_Slider_C.NormalizedToDiscrete
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   NormalizedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DiscreteValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Slider_C::NormalizedToDiscrete(float NormalizedValue, float* DiscreteValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Slider_C", "NormalizedToDiscrete");

	Params::WIDGET_Slider_C_NormalizedToDiscrete Parms{};

	Parms.NormalizedValue = NormalizedValue;

	UObject::ProcessEvent(Func, &Parms);

	if (DiscreteValue != nullptr)
		*DiscreteValue = Parms.DiscreteValue;
}

}


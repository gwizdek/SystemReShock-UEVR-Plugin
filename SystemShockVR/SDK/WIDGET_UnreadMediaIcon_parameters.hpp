#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_UnreadMediaIcon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_UnreadMediaIcon.WIDGET_UnreadMediaIcon_C.EVENT_OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter) == 0x0000A8, "Wrong size on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WIDGET_UnreadMediaIcon.WIDGET_UnreadMediaIcon_C.EVENT_OnMouseExit
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit) == 0x000008, "Wrong alignment on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit");
static_assert(sizeof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit) == 0x000070, "Wrong size on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit, MouseEvent) == 0x000000, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseExit::MouseEvent' has a wrong offset!");

// Function WIDGET_UnreadMediaIcon.WIDGET_UnreadMediaIcon_C.EVENT_OnMouseClick
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick) == 0x000008, "Wrong alignment on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick");
static_assert(sizeof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick) == 0x000218, "Wrong size on WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick, MyGeometry) == 0x000000, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick, MouseEvent) == 0x000038, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick, ReturnValue) == 0x0000A8, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick, K2Node_MakeStruct_EventReply) == 0x000160, "Member 'WIDGET_UnreadMediaIcon_C_EVENT_OnMouseClick::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WIDGET_UnreadMediaIcon.WIDGET_UnreadMediaIcon_C.InitializeUnreadMediaIcon
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PageTab_C*                      PageTab_0;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon) == 0x000008, "Wrong alignment on WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon");
static_assert(sizeof(WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon) == 0x000010, "Wrong size on WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon, PlayerHUD_0) == 0x000000, "Member 'WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon, PageTab_0) == 0x000008, "Member 'WIDGET_UnreadMediaIcon_C_InitializeUnreadMediaIcon::PageTab_0' has a wrong offset!");

// Function WIDGET_UnreadMediaIcon.WIDGET_UnreadMediaIcon_C.SetIsUnreadMessage
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage final
{
public:
	bool                                          IsUnreadMessage_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage) == 0x000001, "Wrong alignment on WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage");
static_assert(sizeof(WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage) == 0x000001, "Wrong size on WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage");
static_assert(offsetof(WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage, IsUnreadMessage_0) == 0x000000, "Member 'WIDGET_UnreadMediaIcon_C_SetIsUnreadMessage::IsUnreadMessage_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Channeling_Base

#include "Basic.hpp"

#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_Channeling_Base.INTERACT_Channeling_Base_C
// 0x0048 (0x0350 - 0x0308)
class AINTERACT_Channeling_Base_C : public AINTERACT_Base_C
{
public:
	bool                                          HasChannelingInteractInitialized;                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnChannelingInteractInitialized;                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMOVECONTROL_Base_C*                    ChannelingMoveControl;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            ChannelingMontage;                                 // 0x0328(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnChannelingInteractInitialized__DelegateSignature();
	void HasInitializedChannelingInteract(bool* Result);
	void HasActiveChannelingMoveControl(bool* Result);
	void CanResumeChannelingInteraction(bool* Result);
	void CanPerformChannelingInteraction(class AActor* SourceActor, bool* Result);
	void CanPerformChannelingSequence(class APAWN_Hacker_Simple_C* HackerPawn, bool* Result);
	void InitializeChannelingInteract();
	void ResumeChannelingInteraction(class APAWN_Hacker_Simple_C* HackerPawn);
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void TryBeginChannelingMovement(class APAWN_Hacker_Simple_C* HackerPawn, class UPrimitiveComponent* CursorPrimitive, bool* Result);
	void TryBeginChannelingSequence(class APAWN_Hacker_Simple_C* HackerPawn, class UPrimitiveComponent* CursorPrimitive, bool* Result);
	void ResumeChannelingSequence(class APAWN_Hacker_Simple_C* HackerPawn, bool* IsWaitingToHolster);
	void CreateChannelingMoveControl(class APAWN_Hacker_Simple_C* HackerPawn, class UMOVECONTROL_Base_C** Result);
	void TryPlayChannelingMontage();
	void OnChannelingMontageStarted(class APAWN_Hacker_Simple_C* HackerPawn);
	void OnChannelingMontageFinished();
	void OnRestoreInventoryAfterSequence(class APAWN_Hacker_Simple_C* HackerPawn);
	void GetChannelingMoveControl(class UMOVECONTROL_Base_C** Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_Channeling_Base_C">();
	}
	static class AINTERACT_Channeling_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_Channeling_Base_C>();
	}
};
static_assert(alignof(AINTERACT_Channeling_Base_C) == 0x000008, "Wrong alignment on AINTERACT_Channeling_Base_C");
static_assert(sizeof(AINTERACT_Channeling_Base_C) == 0x000350, "Wrong size on AINTERACT_Channeling_Base_C");
static_assert(offsetof(AINTERACT_Channeling_Base_C, HasChannelingInteractInitialized) == 0x000308, "Member 'AINTERACT_Channeling_Base_C::HasChannelingInteractInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_Channeling_Base_C, OnChannelingInteractInitialized) == 0x000310, "Member 'AINTERACT_Channeling_Base_C::OnChannelingInteractInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_Channeling_Base_C, ChannelingMoveControl) == 0x000320, "Member 'AINTERACT_Channeling_Base_C::ChannelingMoveControl' has a wrong offset!");
static_assert(offsetof(AINTERACT_Channeling_Base_C, ChannelingMontage) == 0x000328, "Member 'AINTERACT_Channeling_Base_C::ChannelingMontage' has a wrong offset!");

}


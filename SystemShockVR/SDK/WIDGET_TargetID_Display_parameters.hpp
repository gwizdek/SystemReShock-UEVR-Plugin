#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TargetID_Display

#include "Basic.hpp"

#include "ENUM_TargetID_TargetStatus_structs.hpp"
#include "STRUCT_EnemyStats_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_EnemyType_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.ExecuteUbergraph_WIDGET_TargetID_Display
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display");
static_assert(sizeof(WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display");
static_assert(offsetof(WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display, EntryPoint) == 0x000000, "Member 'WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_ExecuteUbergraph_WIDGET_TargetID_Display::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TargetID_Display_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_PreConstruct");
static_assert(sizeof(WIDGET_TargetID_Display_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_TargetID_Display_C_PreConstruct");
static_assert(offsetof(WIDGET_TargetID_Display_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_TargetID_Display_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.InitializeTargetDisplay
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_InitializeTargetDisplay final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_InitializeTargetDisplay) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_InitializeTargetDisplay");
static_assert(sizeof(WIDGET_TargetID_Display_C_InitializeTargetDisplay) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_InitializeTargetDisplay");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetDisplay, PlayerHUD_0) == 0x000000, "Member 'WIDGET_TargetID_Display_C_InitializeTargetDisplay::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetDisplay, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_InitializeTargetDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.InitializeTargetHardware
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_TargetID_Display_C_InitializeTargetHardware final
{
public:
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UHARDWARE_TargetIdentifier_Base_C*      K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_InitializeTargetHardware) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_InitializeTargetHardware");
static_assert(sizeof(WIDGET_TargetID_Display_C_InitializeTargetHardware) == 0x000038, "Wrong size on WIDGET_TargetID_Display_C_InitializeTargetHardware");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, CallFunc_FindItem_FoundItem) == 0x000000, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base) == 0x000018, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, CallFunc_GetInventoryComponent_Inventory) == 0x000028, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetHardware, CallFunc_GetBagByType_Bag) == 0x000030, "Member 'WIDGET_TargetID_Display_C_InitializeTargetHardware::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.InitializeTargetStatus
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_TargetID_Display_C_InitializeTargetStatus final
{
public:
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 DetectionComponent;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_EnemyDetection_C*                 CallFunc_GetDetectionComponent_Result;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DetectionState                           CallFunc_GetDetectionState_Result;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  CallFunc_GetDetectionEvent_DetectionEvent;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_InitializeTargetStatus) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_InitializeTargetStatus");
static_assert(sizeof(WIDGET_TargetID_Display_C_InitializeTargetStatus) == 0x000048, "Wrong size on WIDGET_TargetID_Display_C_InitializeTargetStatus");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, DetectionEvent) == 0x000000, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::DetectionEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, DetectionComponent) == 0x000008, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::DetectionComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000010, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, CallFunc_GetDetectionComponent_Result) == 0x000020, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::CallFunc_GetDetectionComponent_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, CallFunc_GetDetectionState_Result) == 0x000029, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::CallFunc_GetDetectionState_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, CallFunc_GetDetectionEvent_DetectionEvent) == 0x000030, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::CallFunc_GetDetectionEvent_DetectionEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000038, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_InitializeTargetStatus, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WIDGET_TargetID_Display_C_InitializeTargetStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.ToggleTargetIDVisibility
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TargetID_Display_C_ToggleTargetIDVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_ToggleTargetIDVisibility) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_ToggleTargetIDVisibility");
static_assert(sizeof(WIDGET_TargetID_Display_C_ToggleTargetIDVisibility) == 0x000001, "Wrong size on WIDGET_TargetID_Display_C_ToggleTargetIDVisibility");
static_assert(offsetof(WIDGET_TargetID_Display_C_ToggleTargetIDVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_ToggleTargetIDVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.UpdateTargetIdentifierVersion
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TargetHealthMaterial;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetVersionNumber_Version;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion");
static_assert(sizeof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion) == 0x000020, "Wrong size on WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, VersionNumber) == 0x000000, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::VersionNumber' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, TargetHealthMaterial) == 0x000008, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::TargetHealthMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_Greater_IntInt_ReturnValue) == 0x000012, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000013, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_GetVersionNumber_Version) == 0x000014, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_GetVersionNumber_Version' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'WIDGET_TargetID_Display_C_UpdateTargetIdentifierVersion::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.SetTargetActor
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_SetTargetActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_SetTargetActor) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_SetTargetActor");
static_assert(sizeof(WIDGET_TargetID_Display_C_SetTargetActor) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_SetTargetActor");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetTargetActor, Actor) == 0x000000, "Member 'WIDGET_TargetID_Display_C_SetTargetActor::Actor' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_SetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.SetTargetStatus
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TargetID_Display_C_SetTargetStatus final
{
public:
	ENUM_TargetID_TargetStatus                    Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_SetTargetStatus) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_SetTargetStatus");
static_assert(sizeof(WIDGET_TargetID_Display_C_SetTargetStatus) == 0x000001, "Wrong size on WIDGET_TargetID_Display_C_SetTargetStatus");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetTargetStatus, Status) == 0x000000, "Member 'WIDGET_TargetID_Display_C_SetTargetStatus::Status' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.UpdateTargetEventBindings
// 0x0128 (0x0128 - 0x0000)
struct WIDGET_TargetID_Display_C_UpdateTargetEventBindings final
{
public:
	class UAttribInstance*                        AlertnessAttribInstance;                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        DisableAttribInstance;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        HealthAttribInstance;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 CurrentDetectionComponent;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  CurrentAttribManager;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_DestructibleBase_C*           CurrentDestructibleActor;                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CurrentEnemyPawn;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 CallFunc_GetDetectionComponent_Result;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_Result;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character, const struct FVector& EventLocation, ENUM_DetectionState NewState, ENUM_DetectionState OldState)> K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_2;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_3;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue_1;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_3;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_UpdateTargetEventBindings");
static_assert(sizeof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings) == 0x000128, "Wrong size on WIDGET_TargetID_Display_C_UpdateTargetEventBindings");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, AlertnessAttribInstance) == 0x000000, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::AlertnessAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, DisableAttribInstance) == 0x000008, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::DisableAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, EnergyAttribInstance) == 0x000010, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, HealthAttribInstance) == 0x000018, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::HealthAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CurrentDetectionComponent) == 0x000020, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CurrentDetectionComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CurrentAttribManager) == 0x000028, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CurrentAttribManager' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CurrentDestructibleActor) == 0x000030, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CurrentDestructibleActor' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CurrentEnemyPawn) == 0x000038, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CurrentEnemyPawn' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetDetectionComponent_Result) == 0x000040, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetDetectionComponent_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_IsAlive_Result) == 0x000048, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_IsAlive_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000060, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_1) == 0x000068, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_2) == 0x000070, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_3) == 0x000078, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000090, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x0000A0, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000AC, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetValue_ReturnValue) == 0x0000BC, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000C0, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetValue_ReturnValue_1) == 0x0000D0, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000D4, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000E4, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F4, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetMaxValue_ReturnValue) == 0x000104, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetValue_ReturnValue_2) == 0x000108, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetMaxValue_ReturnValue_1) == 0x00010C, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetMaxValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, CallFunc_GetValue_ReturnValue_3) == 0x000110, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::CallFunc_GetValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000118, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetEventBindings, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'WIDGET_TargetID_Display_C_UpdateTargetEventBindings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.ClearTargetEventBindings
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_TargetID_Display_C_ClearTargetEventBindings final
{
public:
	class UCOMP_EnemyDetection_C*                 CurrentDetectionComponent;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  CurrentAttribManager;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_DestructibleBase_C*           CurrentDestructibleActor;                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CurrentEnemyPawn;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 CallFunc_GetDetectionComponent_Result;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character, const struct FVector& EventLocation, ENUM_DetectionState NewState, ENUM_DetectionState OldState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_1;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_2;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_3;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAttribHandler_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_ClearTargetEventBindings) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_ClearTargetEventBindings");
static_assert(sizeof(WIDGET_TargetID_Display_C_ClearTargetEventBindings) == 0x0000F8, "Wrong size on WIDGET_TargetID_Display_C_ClearTargetEventBindings");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CurrentDetectionComponent) == 0x000000, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CurrentDetectionComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CurrentAttribManager) == 0x000008, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CurrentAttribManager' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CurrentDestructibleActor) == 0x000010, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CurrentDestructibleActor' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CurrentEnemyPawn) == 0x000018, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CurrentEnemyPawn' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_GetDetectionComponent_Result) == 0x000020, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_GetDetectionComponent_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000050, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_1) == 0x000058, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_2) == 0x000060, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue_3) == 0x000068, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, CallFunc_HasAttribHandler_ReturnValue) == 0x000070, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::CallFunc_HasAttribHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_2) == 0x000074, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000088, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000098, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000A4, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B4, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000C4, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000D4, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_ClearTargetEventBindings, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000E4, "Member 'WIDGET_TargetID_Display_C_ClearTargetEventBindings::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.UpdateTargetName
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_TargetID_Display_C_UpdateTargetName final
{
public:
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0000(0x0018)()
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEnemyDisplayName_Text;                 // 0x0038(0x0018)()
};
static_assert(alignof(WIDGET_TargetID_Display_C_UpdateTargetName) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_UpdateTargetName");
static_assert(sizeof(WIDGET_TargetID_Display_C_UpdateTargetName) == 0x000050, "Wrong size on WIDGET_TargetID_Display_C_UpdateTargetName");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, CallFunc_GetEmptyText_ReturnValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000018, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetName, CallFunc_GetEnemyDisplayName_Text) == 0x000038, "Member 'WIDGET_TargetID_Display_C_UpdateTargetName::CallFunc_GetEnemyDisplayName_Text' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.UpdateTargetCategory
// 0x00A0 (0x00A0 - 0x0000)
struct WIDGET_TargetID_Display_C_UpdateTargetCategory final
{
public:
	int32                                         EnemyCategoryIndex;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_EnemyType                                EnemyType;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_EnemyType                                Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_EnemyType                                CallFunc_GetEnemyTypeForTargeting_Result;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_UpdateTargetCategory) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_UpdateTargetCategory");
static_assert(sizeof(WIDGET_TargetID_Display_C_UpdateTargetCategory) == 0x0000A0, "Wrong size on WIDGET_TargetID_Display_C_UpdateTargetCategory");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, EnemyCategoryIndex) == 0x000000, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::EnemyCategoryIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, EnemyType) == 0x000004, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::EnemyType' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, Temp_object_Variable) == 0x000018, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, Temp_byte_Variable) == 0x000020, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000028, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, CallFunc_GetEnemyTypeForTargeting_Result) == 0x000031, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::CallFunc_GetEnemyTypeForTargeting_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, K2Node_Select_Default) == 0x000038, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000040, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetCategory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'WIDGET_TargetID_Display_C_UpdateTargetCategory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnHardwareBagChanged
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_TargetIdentifier_Base_C*      K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged) == 0x000020, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged, SlotIndex) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged, CallFunc_GetSlotItem_Item) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base) == 0x000010, "Member 'WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_AsHARDWARE_Target_Identifier_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_TargetID_Display_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetCharacterDied
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied, Character) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied::Character' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetCharacterDied::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetActorEndPlay
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay, Actor) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay, EndPlayReason) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay::EndPlayReason' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetActorEndPlay::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetHealthChanged
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 ApplyType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged) == 0x000020, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, CurrValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, LastValue) == 0x000004, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, MaxValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::MaxValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, ApplyType) == 0x00000C, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::ApplyType' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetHealthChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetEnergyChanged
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 ApplyType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged) == 0x000020, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, CurrValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, LastValue) == 0x000004, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, MaxValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::MaxValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, ApplyType) == 0x00000C, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::ApplyType' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetEnergyChanged::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetAlertnessChanged
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             HackMod;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        AlertnessAttribInstance;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  CurrentAttribManager;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSinceCreation_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetHackModCategoryName_Result;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged) == 0x000070, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CurrValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, LastValue) == 0x000004, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, HackMod) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::HackMod' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, AlertnessAttribInstance) == 0x000010, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::AlertnessAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CurrentAttribManager) == 0x000018, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CurrentAttribManager' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_GetAttribInstance_ReturnValue) == 0x000028, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000030, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000038, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_GetTimeSinceCreation_ReturnValue) == 0x000044, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_GetTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_IsValid_ReturnValue_1) == 0x00004A, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_GetHackModCategoryName_Result) == 0x00004C, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_GetHackModCategoryName_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_GetActiveModWithCategory_ReturnValue) == 0x000058, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_GetActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000060, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000069, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetAlertnessChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetDisabledStateChanged
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasMagneticallyDisabled;                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMagneticallyDisabled;                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged) == 0x000004, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, CurrValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, LastValue) == 0x000004, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, WasMagneticallyDisabled) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::WasMagneticallyDisabled' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, IsMagneticallyDisabled) == 0x000009, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::IsMagneticallyDisabled' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000A, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000B, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDisabledStateChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetDetectionStateChanged
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EventLocation;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           NewState;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           OldState;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged) == 0x000018, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged, Character) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged::Character' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged, EventLocation) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged::EventLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged, NewState) == 0x000014, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged, OldState) == 0x000015, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000016, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetDetectionStateChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.UpdateTargetStatusFromDetectionState
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState final
{
public:
	bool                                          CheckScrambling;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState");
static_assert(sizeof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState) == 0x000005, "Wrong size on WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState, CheckScrambling) == 0x000000, "Member 'WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState::CheckScrambling' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WIDGET_TargetID_Display_C_UpdateTargetStatusFromDetectionState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnCandidateUpdate
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHackAcquiredTarget_Result;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate) == 0x000010, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate, Actor) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate::Actor' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate, CallFunc_CanHackAcquiredTarget_Result) == 0x00000A, "Member 'WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate::CallFunc_CanHackAcquiredTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000B, "Member 'WIDGET_TargetID_Display_C_EVENT_OnCandidateUpdate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.SetTargetIDHardwareEventBindings
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings final
{
public:
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Actor)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings) == 0x000004, "Wrong alignment on WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings");
static_assert(sizeof(WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings) == 0x000020, "Wrong size on WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WIDGET_TargetID_Display_C_SetTargetIDHardwareEventBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnTargetUpdate
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate) == 0x000008, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate, Actor) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnTargetUpdate::Actor' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.TryAcquireEnemy
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_TargetID_Display_C_TryAcquireEnemy final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHackAcquiredTarget_Result;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopUploadingHackToCurrentTarget_Result; // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanHackAcquiredTarget_Result_1;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUnacquireTargetActor_Result;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCandidateTargetActor_Result;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartUploadingHackToAcquiredTarget_Result; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUnacquireTargetActor_Result_1;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCandidateTargetActor_Result_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryAcquireCandidateActor_Result;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_TryAcquireEnemy) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_TryAcquireEnemy");
static_assert(sizeof(WIDGET_TargetID_Display_C_TryAcquireEnemy) == 0x000050, "Wrong size on WIDGET_TargetID_Display_C_TryAcquireEnemy");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, InputState) == 0x000000, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000020, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_CanHackAcquiredTarget_Result) == 0x000022, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_CanHackAcquiredTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_TryStopUploadingHackToCurrentTarget_Result) == 0x000023, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_TryStopUploadingHackToCurrentTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_CanHackAcquiredTarget_Result_1) == 0x000024, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_CanHackAcquiredTarget_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_IsValid_ReturnValue_1) == 0x000026, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_Not_PreBool_ReturnValue_1) == 0x000027, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_TryUnacquireTargetActor_Result) == 0x000028, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_TryUnacquireTargetActor_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_GetCandidateTargetActor_Result) == 0x000030, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_GetCandidateTargetActor_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_TryStartUploadingHackToAcquiredTarget_Result) == 0x000038, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_TryStartUploadingHackToAcquiredTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_TryUnacquireTargetActor_Result_1) == 0x000039, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_TryUnacquireTargetActor_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_GetCandidateTargetActor_Result_1) == 0x000040, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_GetCandidateTargetActor_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryAcquireEnemy, CallFunc_TryAcquireCandidateActor_Result) == 0x000049, "Member 'WIDGET_TargetID_Display_C_TryAcquireEnemy::CallFunc_TryAcquireCandidateActor_Result' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.OnTargetActorLost
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TargetID_Display_C_OnTargetActorLost final
{
public:
	bool                                          CallFunc_TryUnacquireTargetActor_Result;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_OnTargetActorLost) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_OnTargetActorLost");
static_assert(sizeof(WIDGET_TargetID_Display_C_OnTargetActorLost) == 0x000001, "Wrong size on WIDGET_TargetID_Display_C_OnTargetActorLost");
static_assert(offsetof(WIDGET_TargetID_Display_C_OnTargetActorLost, CallFunc_TryUnacquireTargetActor_Result) == 0x000000, "Member 'WIDGET_TargetID_Display_C_OnTargetActorLost::CallFunc_TryUnacquireTargetActor_Result' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.SetHackIndicatorVisibility
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TargetID_Display_C_SetHackIndicatorVisibility final
{
public:
	bool                                          HackPossible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_SetHackIndicatorVisibility) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_SetHackIndicatorVisibility");
static_assert(sizeof(WIDGET_TargetID_Display_C_SetHackIndicatorVisibility) == 0x000001, "Wrong size on WIDGET_TargetID_Display_C_SetHackIndicatorVisibility");
static_assert(offsetof(WIDGET_TargetID_Display_C_SetHackIndicatorVisibility, HackPossible) == 0x000000, "Member 'WIDGET_TargetID_Display_C_SetHackIndicatorVisibility::HackPossible' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.TryShowWeakspotReticle
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_TargetID_Display_C_TryShowWeakspotReticle final
{
public:
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMaxHardwareVersion_Result;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle) == 0x000008, "Wrong alignment on WIDGET_TargetID_Display_C_TryShowWeakspotReticle");
static_assert(sizeof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle) == 0x000038, "Wrong size on WIDGET_TargetID_Display_C_TryShowWeakspotReticle");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_GetParent_ReturnValue) == 0x000000, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000018, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_TryShowWeakspotReticle, CallFunc_IsMaxHardwareVersion_Result) == 0x000031, "Member 'WIDGET_TargetID_Display_C_TryShowWeakspotReticle::CallFunc_IsMaxHardwareVersion_Result' has a wrong offset!");

// Function WIDGET_TargetID_Display.WIDGET_TargetID_Display_C.EVENT_OnStartHackDelayFinished
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished final
{
public:
	bool                                          CallFunc_CanHackAcquiredTarget_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartUploadingHackToAcquiredTarget_Result; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished) == 0x000001, "Wrong alignment on WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished");
static_assert(sizeof(WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished) == 0x000002, "Wrong size on WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished, CallFunc_CanHackAcquiredTarget_Result) == 0x000000, "Member 'WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished::CallFunc_CanHackAcquiredTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished, CallFunc_TryStartUploadingHackToAcquiredTarget_Result) == 0x000001, "Member 'WIDGET_TargetID_Display_C_EVENT_OnStartHackDelayFinished::CallFunc_TryStartUploadingHackToAcquiredTarget_Result' has a wrong offset!");

}


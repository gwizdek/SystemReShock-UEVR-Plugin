#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_MedicalDoor

#include "Basic.hpp"


namespace SDK::Params
{

// Function INTERACT_MedicalDoor.INTERACT_MedicalDoor_C.ExecuteUbergraph_INTERACT_MedicalDoor
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor) == 0x000004, "Wrong alignment on INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor");
static_assert(sizeof(INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor) == 0x000004, "Wrong size on INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor");
static_assert(offsetof(INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor, EntryPoint) == 0x000000, "Member 'INTERACT_MedicalDoor_C_ExecuteUbergraph_INTERACT_MedicalDoor::EntryPoint' has a wrong offset!");

// Function INTERACT_MedicalDoor.INTERACT_MedicalDoor_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_MedicalDoor_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_MedicalDoor_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_MedicalDoor_C_GetTargetShape");
static_assert(sizeof(INTERACT_MedicalDoor_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_MedicalDoor_C_GetTargetShape");
static_assert(offsetof(INTERACT_MedicalDoor_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_MedicalDoor_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_MedicalDoor_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_MedicalDoor_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_MedicalDoor_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_MedicalDoor_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_MedicalDoor_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_MedicalDoor_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

}


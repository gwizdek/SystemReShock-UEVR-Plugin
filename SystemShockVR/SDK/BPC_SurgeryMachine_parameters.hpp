#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_SurgeryMachine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_LookControlType_structs.hpp"
#include "ENUM_SurgeryMachineMovementState_structs.hpp"
#include "STRUCT_MoveControlParams_structs.hpp"


namespace SDK::Params
{

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.InitializeMoveControl
// 0x0040 (0x0040 - 0x0000)
struct BPC_SurgeryMachine_C_InitializeMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              InitialControlParams;                              // 0x000C(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LookControlType                          LookControlType;                                   // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeMoveControl_Result;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_InitializeMoveControl) == 0x000008, "Wrong alignment on BPC_SurgeryMachine_C_InitializeMoveControl");
static_assert(sizeof(BPC_SurgeryMachine_C_InitializeMoveControl) == 0x000040, "Wrong size on BPC_SurgeryMachine_C_InitializeMoveControl");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, Player_0) == 0x000000, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::Player_0' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, GameTime) == 0x000008, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::GameTime' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, InitialControlParams) == 0x00000C, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::InitialControlParams' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, Result) == 0x000034, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::Result' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, LookControlType) == 0x000035, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::LookControlType' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, CallFunc_InitializeMoveControl_Result) == 0x000036, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::CallFunc_InitializeMoveControl_Result' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_InitializeMoveControl, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000038, "Member 'BPC_SurgeryMachine_C_InitializeMoveControl::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.UpdateMoveControl
// 0x0070 (0x0070 - 0x0000)
struct BPC_SurgeryMachine_C_UpdateMoveControl final
{
public:
	struct FVector2D                              MoveInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LookInput;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              ControlParams;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ActionInputValues;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         MoveInputScale;                                    // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExpire;                                      // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateExiting_Finished;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPointToLozenge2D_ReturnValue;        // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_SurgeryMachine_C_UpdateMoveControl) == 0x000008, "Wrong alignment on BPC_SurgeryMachine_C_UpdateMoveControl");
static_assert(sizeof(BPC_SurgeryMachine_C_UpdateMoveControl) == 0x000070, "Wrong size on BPC_SurgeryMachine_C_UpdateMoveControl");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, MoveInput) == 0x000000, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::MoveInput' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, LookInput) == 0x000008, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::LookInput' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, ControlParams) == 0x000010, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::ControlParams' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, ActionInputValues) == 0x000038, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::ActionInputValues' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, MoveInputScale) == 0x000048, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::MoveInputScale' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, Delta_Time) == 0x00004C, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::Delta_Time' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, ShouldExpire) == 0x000050, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::ShouldExpire' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, Progress) == 0x000054, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::Progress' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, CallFunc_UpdateExiting_Finished) == 0x000058, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::CallFunc_UpdateExiting_Finished' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00005C, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, CallFunc_ClampPointToLozenge2D_ReturnValue) == 0x000064, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::CallFunc_ClampPointToLozenge2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateMoveControl, K2Node_SwitchEnum_CmpSuccess) == 0x00006C, "Member 'BPC_SurgeryMachine_C_UpdateMoveControl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.SetState
// 0x0008 (0x0008 - 0x0000)
struct BPC_SurgeryMachine_C_SetState final
{
public:
	ENUM_SurgeryMachineMovementState              State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_SetState) == 0x000004, "Wrong alignment on BPC_SurgeryMachine_C_SetState");
static_assert(sizeof(BPC_SurgeryMachine_C_SetState) == 0x000008, "Wrong size on BPC_SurgeryMachine_C_SetState");
static_assert(offsetof(BPC_SurgeryMachine_C_SetState, State) == 0x000000, "Member 'BPC_SurgeryMachine_C_SetState::State' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPC_SurgeryMachine_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_SetState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'BPC_SurgeryMachine_C_SetState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.GetLookVector
// 0x0074 (0x0074 - 0x0000)
struct BPC_SurgeryMachine_C_GetLookVector final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Vec;                                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_GetLookVector) == 0x000004, "Wrong alignment on BPC_SurgeryMachine_C_GetLookVector");
static_assert(sizeof(BPC_SurgeryMachine_C_GetLookVector) == 0x000074, "Wrong size on BPC_SurgeryMachine_C_GetLookVector");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, Rot) == 0x000000, "Member 'BPC_SurgeryMachine_C_GetLookVector::Rot' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, Vec) == 0x00000C, "Member 'BPC_SurgeryMachine_C_GetLookVector::Vec' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Roll_1) == 0x000024, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Pitch_1) == 0x000028, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Yaw_1) == 0x00002C, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakVector2D_X) == 0x00003C, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_MakeRotator_ReturnValue_1) == 0x000044, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_ComposeRotators_ReturnValue) == 0x000050, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Roll_2) == 0x00005C, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Pitch_2) == 0x000060, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_BreakRotator_Yaw_2) == 0x000064, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_GetLookVector, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BPC_SurgeryMachine_C_GetLookVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.UpdateWaitingToEnter
// 0x0060 (0x0060 - 0x0000)
struct BPC_SurgeryMachine_C_UpdateWaitingToEnter final
{
public:
	struct FVector                                LookVector;                                        // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveVector;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookVector_Vec;                        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLookVector_Vec_1;                      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_UpdateWaitingToEnter) == 0x000004, "Wrong alignment on BPC_SurgeryMachine_C_UpdateWaitingToEnter");
static_assert(sizeof(BPC_SurgeryMachine_C_UpdateWaitingToEnter) == 0x000060, "Wrong size on BPC_SurgeryMachine_C_UpdateWaitingToEnter");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, LookVector) == 0x000000, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::LookVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, MoveVector) == 0x00000C, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::MoveVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, Progress) == 0x000018, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::Progress' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_GetLookVector_Vec) == 0x00001C, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_GetLookVector_Vec' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_VEase_ReturnValue) == 0x000028, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_REase_ReturnValue) == 0x000034, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_GetLookVector_Vec_1) == 0x000040, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_GetLookVector_Vec_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00004C, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateWaitingToEnter, CallFunc_FClamp_ReturnValue) == 0x00005C, "Member 'BPC_SurgeryMachine_C_UpdateWaitingToEnter::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.UpdateEntering
// 0x0054 (0x0054 - 0x0000)
struct BPC_SurgeryMachine_C_UpdateEntering final
{
public:
	struct FVector                                LookVector;                                        // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveVector;                                        // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLookVector_Vec;                        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookVector_Vec_1;                      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_UpdateEntering) == 0x000004, "Wrong alignment on BPC_SurgeryMachine_C_UpdateEntering");
static_assert(sizeof(BPC_SurgeryMachine_C_UpdateEntering) == 0x000054, "Wrong size on BPC_SurgeryMachine_C_UpdateEntering");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, LookVector) == 0x000000, "Member 'BPC_SurgeryMachine_C_UpdateEntering::LookVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, MoveVector) == 0x00000C, "Member 'BPC_SurgeryMachine_C_UpdateEntering::MoveVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, Progress) == 0x000018, "Member 'BPC_SurgeryMachine_C_UpdateEntering::Progress' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_REase_ReturnValue) == 0x00001C, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_GetLookVector_Vec) == 0x000028, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_GetLookVector_Vec' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_GetLookVector_Vec_1) == 0x000034, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_GetLookVector_Vec_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000044, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateEntering, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'BPC_SurgeryMachine_C_UpdateEntering::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BPC_SurgeryMachine.BPC_SurgeryMachine_C.UpdateExiting
// 0x0078 (0x0078 - 0x0000)
struct BPC_SurgeryMachine_C_UpdateExiting final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookVector;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveVector;                                        // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookVector_Vec;                        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLookVector_Vec_1;                      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_SurgeryMachine_C_UpdateExiting) == 0x000008, "Wrong alignment on BPC_SurgeryMachine_C_UpdateExiting");
static_assert(sizeof(BPC_SurgeryMachine_C_UpdateExiting) == 0x000078, "Wrong size on BPC_SurgeryMachine_C_UpdateExiting");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, Finished) == 0x000000, "Member 'BPC_SurgeryMachine_C_UpdateExiting::Finished' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, LookVector) == 0x000004, "Member 'BPC_SurgeryMachine_C_UpdateExiting::LookVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, MoveVector) == 0x000010, "Member 'BPC_SurgeryMachine_C_UpdateExiting::MoveVector' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, Progress) == 0x00001C, "Member 'BPC_SurgeryMachine_C_UpdateExiting::Progress' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_GetLookVector_Vec) == 0x000028, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_GetLookVector_Vec' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000034, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_GetLookVector_Vec_1) == 0x000038, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_GetLookVector_Vec_1' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, Temp_bool_Variable) == 0x000044, "Member 'BPC_SurgeryMachine_C_UpdateExiting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_VEase_ReturnValue) == 0x000048, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, K2Node_Select_Default) == 0x000054, "Member 'BPC_SurgeryMachine_C_UpdateExiting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000060, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_SurgeryMachine_C_UpdateExiting, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BPC_SurgeryMachine_C_UpdateExiting::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TILE_Prefab_Pipe_Ceiling_Light

#include "Basic.hpp"

#include "INTERACT_BreakableSharedLightPanel_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TILE_Prefab_Pipe_Ceiling_Light.TILE_Prefab_Pipe_Ceiling_Light_C
// 0x0058 (0x0498 - 0x0440)
class ATILE_Prefab_Pipe_Ceiling_Light_C final : public AINTERACT_BreakableSharedLightPanel_C
{
public:
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_29;                           // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_17;                           // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_35;                           // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_02;                           // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_39;                           // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_010;                          // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_38;                           // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_BrokenGlass_Piece_09;                           // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BrokenGlass;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightGlass1;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TILE_Prefab_Pipe_Ceiling_Light_C">();
	}
	static class ATILE_Prefab_Pipe_Ceiling_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATILE_Prefab_Pipe_Ceiling_Light_C>();
	}
};
static_assert(alignof(ATILE_Prefab_Pipe_Ceiling_Light_C) == 0x000008, "Wrong alignment on ATILE_Prefab_Pipe_Ceiling_Light_C");
static_assert(sizeof(ATILE_Prefab_Pipe_Ceiling_Light_C) == 0x000498, "Wrong size on ATILE_Prefab_Pipe_Ceiling_Light_C");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_29) == 0x000440, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_29' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_17) == 0x000448, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_17' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_35) == 0x000450, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_35' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_02) == 0x000458, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_02' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_39) == 0x000460, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_39' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_010) == 0x000468, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_010' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_38) == 0x000470, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_38' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SK_BrokenGlass_Piece_09) == 0x000478, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SK_BrokenGlass_Piece_09' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, BrokenGlass) == 0x000480, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::BrokenGlass' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, LightGlass1) == 0x000488, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::LightGlass1' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Light_C, SpotLight) == 0x000490, "Member 'ATILE_Prefab_Pipe_Ceiling_Light_C::SpotLight' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROP_Med_SmallWallLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C
// 0x0048 (0x0268 - 0x0220)
class APROP_Med_SmallWallLight_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightFlash_LightStrength_F9E463C9433EE650FA6652BEE58805E7; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightFlash__Direction_F9E463C9433EE650FA6652BEE58805E7; // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightFlash;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveStrengthMin;                               // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightIntensityMax;                                 // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BlinkTimerHandle;                                  // 0x0260(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PROP_Med_SmallWallLight(int32 EntryPoint);
	void StopFlashing();
	void BndEvt__PROP_Med_SmallWallLight_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void StartFlashing();
	void ReceiveBeginPlay();
	void LightFlash__UpdateFunc();
	void LightFlash__FinishedFunc();
	void UserConstructionScript();
	void InitializeWallLight();
	void UpdateWallLightVisibility(bool VisibilityState);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void UpdateEmissiveStrength(float Scale, bool IsFunctional);
	void TryStartBlinkTimer(bool FromVisStateChange);
	void IsWallLightFunctional(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PROP_Med_SmallWallLight_C">();
	}
	static class APROP_Med_SmallWallLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APROP_Med_SmallWallLight_C>();
	}
};
static_assert(alignof(APROP_Med_SmallWallLight_C) == 0x000008, "Wrong alignment on APROP_Med_SmallWallLight_C");
static_assert(sizeof(APROP_Med_SmallWallLight_C) == 0x000268, "Wrong size on APROP_Med_SmallWallLight_C");
static_assert(offsetof(APROP_Med_SmallWallLight_C, UberGraphFrame) == 0x000220, "Member 'APROP_Med_SmallWallLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, COMP_AttribManager) == 0x000228, "Member 'APROP_Med_SmallWallLight_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, COMP_VoxelCullable) == 0x000230, "Member 'APROP_Med_SmallWallLight_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, SpotLight) == 0x000238, "Member 'APROP_Med_SmallWallLight_C::SpotLight' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, StaticMesh) == 0x000240, "Member 'APROP_Med_SmallWallLight_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, LightFlash_LightStrength_F9E463C9433EE650FA6652BEE58805E7) == 0x000248, "Member 'APROP_Med_SmallWallLight_C::LightFlash_LightStrength_F9E463C9433EE650FA6652BEE58805E7' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, LightFlash__Direction_F9E463C9433EE650FA6652BEE58805E7) == 0x00024C, "Member 'APROP_Med_SmallWallLight_C::LightFlash__Direction_F9E463C9433EE650FA6652BEE58805E7' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, LightFlash) == 0x000250, "Member 'APROP_Med_SmallWallLight_C::LightFlash' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, EmissiveStrengthMin) == 0x000258, "Member 'APROP_Med_SmallWallLight_C::EmissiveStrengthMin' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, LightIntensityMax) == 0x00025C, "Member 'APROP_Med_SmallWallLight_C::LightIntensityMax' has a wrong offset!");
static_assert(offsetof(APROP_Med_SmallWallLight_C, BlinkTimerHandle) == 0x000260, "Member 'APROP_Med_SmallWallLight_C::BlinkTimerHandle' has a wrong offset!");

}


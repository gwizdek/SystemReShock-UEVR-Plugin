#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_CheckDetectionEvents

#include "Basic.hpp"

#include "ENUM_TargetAssignmentType_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"


namespace SDK::Params
{

// Function DEC_CheckDetectionEvents.DEC_CheckDetectionEvents_C.PerformConditionCheckAI
// 0x0070 (0x0070 - 0x0000)
struct DEC_CheckDetectionEvents_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CurrentTarget;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyEventsWithStates_Result;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DetectionState                           CallFunc_GetDetectionState_Result;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_TargetAssignmentType                     CallFunc_Array_Get_Item;                           // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on DEC_CheckDetectionEvents_C_PerformConditionCheckAI");
static_assert(sizeof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI) == 0x000070, "Wrong size on DEC_CheckDetectionEvents_C_PerformConditionCheckAI");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CurrentTarget) == 0x000018, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CurrentTarget' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, EnemyPawn) == 0x000020, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::EnemyPawn' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, Temp_int_Array_Index_Variable) == 0x000034, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_HasAnyEventsWithStates_Result) == 0x000041, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_HasAnyEventsWithStates_Result' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_GetDetectionState_Result) == 0x000042, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_GetDetectionState_Result' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Contains_ReturnValue) == 0x000043, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000054, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00005C, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue_1) == 0x00005D, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Get_Item) == 0x00005E, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue_3) == 0x000060, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_PerformConditionCheckAI, CallFunc_GetTarget_Target) == 0x000068, "Member 'DEC_CheckDetectionEvents_C_PerformConditionCheckAI::CallFunc_GetTarget_Target' has a wrong offset!");

// Function DEC_CheckDetectionEvents.DEC_CheckDetectionEvents_C.AllStates
// 0x0014 (0x0014 - 0x0000)
struct DEC_CheckDetectionEvents_C_AllStates final
{
public:
	ENUM_DetectionState                           Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           Temp_byte_Variable_3;                              // 0x0003(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEC_CheckDetectionEvents_C_AllStates) == 0x000004, "Wrong alignment on DEC_CheckDetectionEvents_C_AllStates");
static_assert(sizeof(DEC_CheckDetectionEvents_C_AllStates) == 0x000014, "Wrong size on DEC_CheckDetectionEvents_C_AllStates");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, Temp_byte_Variable) == 0x000000, "Member 'DEC_CheckDetectionEvents_C_AllStates::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, Temp_byte_Variable_1) == 0x000001, "Member 'DEC_CheckDetectionEvents_C_AllStates::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, Temp_byte_Variable_2) == 0x000002, "Member 'DEC_CheckDetectionEvents_C_AllStates::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, Temp_byte_Variable_3) == 0x000003, "Member 'DEC_CheckDetectionEvents_C_AllStates::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'DEC_CheckDetectionEvents_C_AllStates::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, CallFunc_Array_Add_ReturnValue_1) == 0x000008, "Member 'DEC_CheckDetectionEvents_C_AllStates::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, CallFunc_Array_Add_ReturnValue_2) == 0x00000C, "Member 'DEC_CheckDetectionEvents_C_AllStates::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllStates, CallFunc_Array_Add_ReturnValue_3) == 0x000010, "Member 'DEC_CheckDetectionEvents_C_AllStates::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function DEC_CheckDetectionEvents.DEC_CheckDetectionEvents_C.AllTargets
// 0x0014 (0x0014 - 0x0000)
struct DEC_CheckDetectionEvents_C_AllTargets final
{
public:
	ENUM_TargetAssignmentType                     Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TargetAssignmentType                     Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TargetAssignmentType                     Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TargetAssignmentType                     Temp_byte_Variable_3;                              // 0x0003(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEC_CheckDetectionEvents_C_AllTargets) == 0x000004, "Wrong alignment on DEC_CheckDetectionEvents_C_AllTargets");
static_assert(sizeof(DEC_CheckDetectionEvents_C_AllTargets) == 0x000014, "Wrong size on DEC_CheckDetectionEvents_C_AllTargets");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, Temp_byte_Variable) == 0x000000, "Member 'DEC_CheckDetectionEvents_C_AllTargets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, Temp_byte_Variable_1) == 0x000001, "Member 'DEC_CheckDetectionEvents_C_AllTargets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, Temp_byte_Variable_2) == 0x000002, "Member 'DEC_CheckDetectionEvents_C_AllTargets::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, Temp_byte_Variable_3) == 0x000003, "Member 'DEC_CheckDetectionEvents_C_AllTargets::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'DEC_CheckDetectionEvents_C_AllTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, CallFunc_Array_Add_ReturnValue_1) == 0x000008, "Member 'DEC_CheckDetectionEvents_C_AllTargets::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, CallFunc_Array_Add_ReturnValue_2) == 0x00000C, "Member 'DEC_CheckDetectionEvents_C_AllTargets::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDetectionEvents_C_AllTargets, CallFunc_Array_Add_ReturnValue_3) == 0x000010, "Member 'DEC_CheckDetectionEvents_C_AllTargets::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

}


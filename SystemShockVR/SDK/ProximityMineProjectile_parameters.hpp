#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProximityMineProjectile

#include "Basic.hpp"

#include "STRUCT_HardItemParams_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProximityMineProjectile.ProximityMineProjectile_C.ExecuteUbergraph_ProximityMineProjectile
// 0x01E0 (0x01E0 - 0x0000)
struct ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartDetonationCountdown_Result;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive_1;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProxyMineDetonating_Result;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProxyMineDetonating_Result_1;           // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_3; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProxyMineArmed_Result;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProxyMineArmed_Result_1;                // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSKILL_Launch_Projectile; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetScaledEnemyStatsDamage_DamageValue;    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0140(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCharacterTripProximityMine_Result;     // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile");
static_assert(sizeof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile) == 0x0001E0, "Wrong size on ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, EntryPoint) == 0x000000, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_TryStartDetonationCountdown_Result) == 0x000038, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_TryStartDetonationCountdown_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00003C, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_Event_Cursor_Primitive) == 0x000040, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_Event_Cursor_Primitive' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000048, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_Event_Cursor_Primitive_1) == 0x000050, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_Event_Cursor_Primitive_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_FMax_ReturnValue) == 0x000058, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CreateDelegate_OutputDelegate_2) == 0x00005C, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000070, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000078, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000080, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsAnySimulatingPhysics_ReturnValue) == 0x000088, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsAnySimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CreateDelegate_OutputDelegate_3) == 0x00008C, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2) == 0x0000A0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_2' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_Event_DeltaSeconds) == 0x0000A8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsProxyMineDetonating_Result) == 0x0000AC, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsProxyMineDetonating_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x0000AD, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsProxyMineDetonating_Result_1) == 0x0000AE, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsProxyMineDetonating_Result_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B4, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x0000B8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_3) == 0x0000C8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_3' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000D0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsProxyMineArmed_Result) == 0x0000D1, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsProxyMineArmed_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsProxyMineArmed_Result_1) == 0x0000D2, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsProxyMineArmed_Result_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_BooleanAND_ReturnValue) == 0x0000D3, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000D4, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D5, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000D8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, Temp_class_Variable) == 0x0000E8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CustomEvent_Loaded) == 0x0000F0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ClassDynamicCast_AsSKILL_Launch_Projectile) == 0x0000F8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ClassDynamicCast_AsSKILL_Launch_Projectile' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ClassDynamicCast_bSuccess) == 0x000100, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_GetScaledEnemyStatsDamage_DamageValue) == 0x000104, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_GetScaledEnemyStatsDamage_DamageValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_CreateDelegate_OutputDelegate_4) == 0x000108, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000118, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000120, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_OtherActor) == 0x000128, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_OtherComp) == 0x000130, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000138, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_bFromSweep) == 0x00013C, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_ComponentBoundEvent_SweepResult) == 0x000140, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0001D0, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile, CallFunc_CanCharacterTripProximityMine_Result) == 0x0001D9, "Member 'ProximityMineProjectile_C_ExecuteUbergraph_ProximityMineProjectile::CallFunc_CanCharacterTripProximityMine_Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ProximityMineProjectile_C_BndEvt__ProximityMineProjectile_MotionSensor_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ProximityMineProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on ProximityMineProjectile_C_ReceiveTick");
static_assert(sizeof(ProximityMineProjectile_C_ReceiveTick) == 0x000004, "Wrong size on ProximityMineProjectile_C_ReceiveTick");
static_assert(offsetof(ProximityMineProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ProximityMineProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.OnCursorLeave
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_OnCursorLeave final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_OnCursorLeave) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_OnCursorLeave");
static_assert(sizeof(ProximityMineProjectile_C_OnCursorLeave) == 0x000008, "Wrong size on ProximityMineProjectile_C_OnCursorLeave");
static_assert(offsetof(ProximityMineProjectile_C_OnCursorLeave, Cursor_Primitive) == 0x000000, "Member 'ProximityMineProjectile_C_OnCursorLeave::Cursor_Primitive' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.OnCursorEnter
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_OnCursorEnter final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_OnCursorEnter) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_OnCursorEnter");
static_assert(sizeof(ProximityMineProjectile_C_OnCursorEnter) == 0x000008, "Wrong size on ProximityMineProjectile_C_OnCursorEnter");
static_assert(offsetof(ProximityMineProjectile_C_OnCursorEnter, Cursor_Primitive) == 0x000000, "Member 'ProximityMineProjectile_C_OnCursorEnter::Cursor_Primitive' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834");
static_assert(sizeof(ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834) == 0x000008, "Wrong size on ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834");
static_assert(offsetof(ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834, Loaded) == 0x000000, "Member 'ProximityMineProjectile_C_OnLoaded_CBA3A87543E9FAB5CF845EAAF5D9C834::Loaded' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.EVENT_OnArmProximityMine
// 0x0002 (0x0002 - 0x0000)
struct ProximityMineProjectile_C_EVENT_OnArmProximityMine final
{
public:
	bool                                          CallFunc_CanAnyOverlappingActorTripProxyMine_Result; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartDetonationCountdown_Result;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_EVENT_OnArmProximityMine) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_EVENT_OnArmProximityMine");
static_assert(sizeof(ProximityMineProjectile_C_EVENT_OnArmProximityMine) == 0x000002, "Wrong size on ProximityMineProjectile_C_EVENT_OnArmProximityMine");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnArmProximityMine, CallFunc_CanAnyOverlappingActorTripProxyMine_Result) == 0x000000, "Member 'ProximityMineProjectile_C_EVENT_OnArmProximityMine::CallFunc_CanAnyOverlappingActorTripProxyMine_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnArmProximityMine, CallFunc_TryStartDetonationCountdown_Result) == 0x000001, "Member 'ProximityMineProjectile_C_EVENT_OnArmProximityMine::CallFunc_TryStartDetonationCountdown_Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.InitializeProximityMine
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_InitializeProximityMine final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_InitializeProximityMine) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_InitializeProximityMine");
static_assert(sizeof(ProximityMineProjectile_C_InitializeProximityMine) == 0x000008, "Wrong size on ProximityMineProjectile_C_InitializeProximityMine");
static_assert(offsetof(ProximityMineProjectile_C_InitializeProximityMine, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000000, "Member 'ProximityMineProjectile_C_InitializeProximityMine::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.IsProxyMineArmed
// 0x000C (0x000C - 0x0000)
struct ProximityMineProjectile_C_IsProxyMineArmed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_IsProxyMineArmed) == 0x000004, "Wrong alignment on ProximityMineProjectile_C_IsProxyMineArmed");
static_assert(sizeof(ProximityMineProjectile_C_IsProxyMineArmed) == 0x00000C, "Wrong size on ProximityMineProjectile_C_IsProxyMineArmed");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineArmed, Result) == 0x000000, "Member 'ProximityMineProjectile_C_IsProxyMineArmed::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineArmed, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'ProximityMineProjectile_C_IsProxyMineArmed::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineArmed, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'ProximityMineProjectile_C_IsProxyMineArmed::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineArmed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'ProximityMineProjectile_C_IsProxyMineArmed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.IsProxyMineDetonating
// 0x0002 (0x0002 - 0x0000)
struct ProximityMineProjectile_C_IsProxyMineDetonating final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_IsProxyMineDetonating) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_IsProxyMineDetonating");
static_assert(sizeof(ProximityMineProjectile_C_IsProxyMineDetonating) == 0x000002, "Wrong size on ProximityMineProjectile_C_IsProxyMineDetonating");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineDetonating, Result) == 0x000000, "Member 'ProximityMineProjectile_C_IsProxyMineDetonating::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsProxyMineDetonating, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'ProximityMineProjectile_C_IsProxyMineDetonating::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.CanCharacterTripProximityMine
// 0x0010 (0x0010 - 0x0000)
struct ProximityMineProjectile_C_CanCharacterTripProximityMine final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_CanCharacterTripProximityMine) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_CanCharacterTripProximityMine");
static_assert(sizeof(ProximityMineProjectile_C_CanCharacterTripProximityMine) == 0x000010, "Wrong size on ProximityMineProjectile_C_CanCharacterTripProximityMine");
static_assert(offsetof(ProximityMineProjectile_C_CanCharacterTripProximityMine, Character) == 0x000000, "Member 'ProximityMineProjectile_C_CanCharacterTripProximityMine::Character' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanCharacterTripProximityMine, Result) == 0x000008, "Member 'ProximityMineProjectile_C_CanCharacterTripProximityMine::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanCharacterTripProximityMine, CallFunc_IsPlayerControlled_ReturnValue) == 0x000009, "Member 'ProximityMineProjectile_C_CanCharacterTripProximityMine::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanCharacterTripProximityMine, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'ProximityMineProjectile_C_CanCharacterTripProximityMine::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanCharacterTripProximityMine, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'ProximityMineProjectile_C_CanCharacterTripProximityMine::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.CanAnyOverlappingActorTripProxyMine
// 0x0058 (0x0058 - 0x0000)
struct ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCharacterTripProximityMine_Result;     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine");
static_assert(sizeof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine) == 0x000058, "Wrong size on ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, Result) == 0x000000, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, OverlappingActors) == 0x000008, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::OverlappingActors' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, Temp_int_Array_Index_Variable) == 0x000018, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_Array_Get_Item) == 0x000028, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000040, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_CanCharacterTripProximityMine_Result) == 0x000049, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_CanCharacterTripProximityMine_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'ProximityMineProjectile_C_CanAnyOverlappingActorTripProxyMine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.StartBecomingArmed
// 0x0050 (0x0050 - 0x0000)
struct ProximityMineProjectile_C_StartBecomingArmed final
{
public:
	bool                                          OnBeginPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_StartBecomingArmed) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_StartBecomingArmed");
static_assert(sizeof(ProximityMineProjectile_C_StartBecomingArmed) == 0x000050, "Wrong size on ProximityMineProjectile_C_StartBecomingArmed");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, OnBeginPlay) == 0x000000, "Member 'ProximityMineProjectile_C_StartBecomingArmed::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'ProximityMineProjectile_C_StartBecomingArmed::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ProximityMineProjectile_C_StartBecomingArmed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_GetExplosiveLocation_Location) == 0x00001C, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'ProximityMineProjectile_C_StartBecomingArmed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000048, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StartBecomingArmed, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'ProximityMineProjectile_C_StartBecomingArmed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.TryStartDetonationCountdown
// 0x0038 (0x0038 - 0x0000)
struct ProximityMineProjectile_C_TryStartDetonationCountdown final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocalVar_0;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_TryStartDetonationCountdown) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_TryStartDetonationCountdown");
static_assert(sizeof(ProximityMineProjectile_C_TryStartDetonationCountdown) == 0x000038, "Wrong size on ProximityMineProjectile_C_TryStartDetonationCountdown");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, Result) == 0x000000, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, NewLocalVar_0) == 0x000004, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryStartDetonationCountdown, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'ProximityMineProjectile_C_TryStartDetonationCountdown::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.EVENT_ArmedBeep
// 0x0040 (0x0040 - 0x0000)
struct ProximityMineProjectile_C_EVENT_ArmedBeep final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_EVENT_ArmedBeep) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_EVENT_ArmedBeep");
static_assert(sizeof(ProximityMineProjectile_C_EVENT_ArmedBeep) == 0x000040, "Wrong size on ProximityMineProjectile_C_EVENT_ArmedBeep");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, CallFunc_GetExplosiveLocation_Location) == 0x000004, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_ArmedBeep, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'ProximityMineProjectile_C_EVENT_ArmedBeep::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.EVENT_DetonatingBeep
// 0x0040 (0x0040 - 0x0000)
struct ProximityMineProjectile_C_EVENT_DetonatingBeep final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_EVENT_DetonatingBeep) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_EVENT_DetonatingBeep");
static_assert(sizeof(ProximityMineProjectile_C_EVENT_DetonatingBeep) == 0x000040, "Wrong size on ProximityMineProjectile_C_EVENT_DetonatingBeep");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, CallFunc_GetExplosiveLocation_Location) == 0x000004, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_DetonatingBeep, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'ProximityMineProjectile_C_EVENT_DetonatingBeep::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.EVENT_OnProximityMineHit
// 0x03B0 (0x03B0 - 0x0000)
struct ProximityMineProjectile_C_EVENT_OnProximityMineHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    ContactDamageMod;                                  // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	class UAttribManagerComponent*                OtherAttribManager;                                // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  CallFunc_ApplyDamageMod_OutDamageInstance;         // 0x0200(0x0028)()
	class UAttribMod*                             CallFunc_ApplyDamageMod_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0270(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_EVENT_OnProximityMineHit) == 0x000010, "Wrong alignment on ProximityMineProjectile_C_EVENT_OnProximityMineHit");
static_assert(sizeof(ProximityMineProjectile_C_EVENT_OnProximityMineHit) == 0x0003B0, "Wrong size on ProximityMineProjectile_C_EVENT_OnProximityMineHit");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, HitComponent) == 0x000000, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::HitComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, OtherActor) == 0x000008, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::OtherActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, OtherComp) == 0x000010, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::OtherComp' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, NormalImpulse) == 0x000018, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, Hit) == 0x000024, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::Hit' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, ContactDamageMod) == 0x0000B0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::ContactDamageMod' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, OtherAttribManager) == 0x000150, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::OtherAttribManager' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, PhysicsComponent) == 0x000158, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Location) == 0x00016C, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000178, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Normal) == 0x000184, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_TraceStart) == 0x0001CC, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_SpawnObject_ReturnValue) == 0x0001E8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001F0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_GetInstigator_ReturnValue) == 0x0001F8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_ApplyDamageMod_OutDamageInstance) == 0x000200, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_ApplyDamageMod_OutDamageInstance' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_ApplyDamageMod_ReturnValue) == 0x000228, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_ApplyDamageMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_GetComponentByClass_ReturnValue) == 0x000230, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_IsValid_ReturnValue_1) == 0x000238, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_Greater_IntInt_ReturnValue) == 0x000239, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00023A, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000240, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000270, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0002F8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000300, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000308, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000309, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Time_1) == 0x00030C, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Distance_1) == 0x000310, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Location_1) == 0x000314, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000320, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_Normal_1) == 0x00032C, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000338, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_PhysMat_1) == 0x000348, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitActor_1) == 0x000350, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitComponent_1) == 0x000358, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitBoneName_1) == 0x000360, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_HitItem_1) == 0x000368, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_ElementIndex_1) == 0x00036C, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_FaceIndex_1) == 0x000370, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_TraceStart_1) == 0x000374, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BreakHitResult_TraceEnd_1) == 0x000380, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_GetPlayerPawn_ReturnValue) == 0x000390, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000398, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_GetInstigator_ReturnValue_1) == 0x0003A0, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0003A8, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_EVENT_OnProximityMineHit, CallFunc_BooleanAND_ReturnValue) == 0x0003A9, "Member 'ProximityMineProjectile_C_EVENT_OnProximityMineHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.PlayExplosionEffects
// 0x0018 (0x0018 - 0x0000)
struct ProximityMineProjectile_C_PlayExplosionEffects final
{
public:
	class UNiagaraComponent*                      SpawnedFX;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SpawnedSystem;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_PlayExplosionEffects_SpawnedFX;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_PlayExplosionEffects) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_PlayExplosionEffects");
static_assert(sizeof(ProximityMineProjectile_C_PlayExplosionEffects) == 0x000018, "Wrong size on ProximityMineProjectile_C_PlayExplosionEffects");
static_assert(offsetof(ProximityMineProjectile_C_PlayExplosionEffects, SpawnedFX) == 0x000000, "Member 'ProximityMineProjectile_C_PlayExplosionEffects::SpawnedFX' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_PlayExplosionEffects, SpawnedSystem) == 0x000008, "Member 'ProximityMineProjectile_C_PlayExplosionEffects::SpawnedSystem' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_PlayExplosionEffects, CallFunc_PlayExplosionEffects_SpawnedFX) == 0x000010, "Member 'ProximityMineProjectile_C_PlayExplosionEffects::CallFunc_PlayExplosionEffects_SpawnedFX' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.UpdateHoverMotion
// 0x00E8 (0x00E8 - 0x0000)
struct ProximityMineProjectile_C_UpdateHoverMotion final
{
public:
	float                                         HoverAmount;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedFactor;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_UpdateHoverMotion) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_UpdateHoverMotion");
static_assert(sizeof(ProximityMineProjectile_C_UpdateHoverMotion) == 0x0000E8, "Wrong size on ProximityMineProjectile_C_UpdateHoverMotion");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, HoverAmount) == 0x000000, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::HoverAmount' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, SpeedFactor) == 0x000004, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::SpeedFactor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, PhysicsComponent) == 0x000008, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetUpVector_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetComponentVelocity_ReturnValue) == 0x00001C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000028, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_VSize2D_ReturnValue) == 0x00003C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetRightVector_ReturnValue) == 0x000040, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_FMin_ReturnValue) == 0x00005C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetUpVector_ReturnValue_1) == 0x000060, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_BreakVector_X) == 0x00006C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_BreakVector_Y) == 0x000070, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_BreakVector_Z) == 0x000074, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_IsGravityEnabled_ReturnValue) == 0x000078, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Abs_ReturnValue) == 0x00007C, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Ease_ReturnValue) == 0x000084, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000088, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000098, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A0, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A4, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C0, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Ease_ReturnValue_1) == 0x0000CC, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Vector_Up_ReturnValue) == 0x0000D0, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_UpdateHoverMotion, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000DC, "Member 'ProximityMineProjectile_C_UpdateHoverMotion::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.CanReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct ProximityMineProjectile_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_CanReceiveItem) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_CanReceiveItem");
static_assert(sizeof(ProximityMineProjectile_C_CanReceiveItem) == 0x000010, "Wrong size on ProximityMineProjectile_C_CanReceiveItem");
static_assert(offsetof(ProximityMineProjectile_C_CanReceiveItem, Item) == 0x000000, "Member 'ProximityMineProjectile_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_CanReceiveItem, Result) == 0x000008, "Member 'ProximityMineProjectile_C_CanReceiveItem::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.ShouldIgnoreInteractRange
// 0x0001 (0x0001 - 0x0000)
struct ProximityMineProjectile_C_ShouldIgnoreInteractRange final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_ShouldIgnoreInteractRange");
static_assert(sizeof(ProximityMineProjectile_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong size on ProximityMineProjectile_C_ShouldIgnoreInteractRange");
static_assert(offsetof(ProximityMineProjectile_C_ShouldIgnoreInteractRange, Result) == 0x000000, "Member 'ProximityMineProjectile_C_ShouldIgnoreInteractRange::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.IsHiddenInteractablePrimitive
// 0x0018 (0x0018 - 0x0000)
struct ProximityMineProjectile_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(ProximityMineProjectile_C_IsHiddenInteractablePrimitive) == 0x000018, "Wrong size on ProximityMineProjectile_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(ProximityMineProjectile_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'ProximityMineProjectile_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'ProximityMineProjectile_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'ProximityMineProjectile_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct ProximityMineProjectile_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_IsInteractActivated) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_IsInteractActivated");
static_assert(sizeof(ProximityMineProjectile_C_IsInteractActivated) == 0x000001, "Wrong size on ProximityMineProjectile_C_IsInteractActivated");
static_assert(offsetof(ProximityMineProjectile_C_IsInteractActivated, Result) == 0x000000, "Member 'ProximityMineProjectile_C_IsInteractActivated::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct ProximityMineProjectile_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_CanModifyInteractPower");
static_assert(sizeof(ProximityMineProjectile_C_CanModifyInteractPower) == 0x000001, "Wrong size on ProximityMineProjectile_C_CanModifyInteractPower");
static_assert(offsetof(ProximityMineProjectile_C_CanModifyInteractPower, Result) == 0x000000, "Member 'ProximityMineProjectile_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.CanInteractBeDestroyed
// 0x0001 (0x0001 - 0x0000)
struct ProximityMineProjectile_C_CanInteractBeDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_CanInteractBeDestroyed) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_CanInteractBeDestroyed");
static_assert(sizeof(ProximityMineProjectile_C_CanInteractBeDestroyed) == 0x000001, "Wrong size on ProximityMineProjectile_C_CanInteractBeDestroyed");
static_assert(offsetof(ProximityMineProjectile_C_CanInteractBeDestroyed, Result) == 0x000000, "Member 'ProximityMineProjectile_C_CanInteractBeDestroyed::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetInteractDestroyed
// 0x0001 (0x0001 - 0x0000)
struct ProximityMineProjectile_C_GetInteractDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_GetInteractDestroyed) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_GetInteractDestroyed");
static_assert(sizeof(ProximityMineProjectile_C_GetInteractDestroyed) == 0x000001, "Wrong size on ProximityMineProjectile_C_GetInteractDestroyed");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractDestroyed, Result) == 0x000000, "Member 'ProximityMineProjectile_C_GetInteractDestroyed::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetInteractBroken
// 0x0020 (0x0020 - 0x0000)
struct ProximityMineProjectile_C_GetInteractBroken final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BrokenMessage;                                     // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(ProximityMineProjectile_C_GetInteractBroken) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_GetInteractBroken");
static_assert(sizeof(ProximityMineProjectile_C_GetInteractBroken) == 0x000020, "Wrong size on ProximityMineProjectile_C_GetInteractBroken");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractBroken, Result) == 0x000000, "Member 'ProximityMineProjectile_C_GetInteractBroken::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractBroken, BrokenMessage) == 0x000008, "Member 'ProximityMineProjectile_C_GetInteractBroken::BrokenMessage' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetInteractLocked
// 0x0028 (0x0028 - 0x0000)
struct ProximityMineProjectile_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(ProximityMineProjectile_C_GetInteractLocked) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_GetInteractLocked");
static_assert(sizeof(ProximityMineProjectile_C_GetInteractLocked) == 0x000028, "Wrong size on ProximityMineProjectile_C_GetInteractLocked");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'ProximityMineProjectile_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractLocked, Result) == 0x000008, "Member 'ProximityMineProjectile_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'ProximityMineProjectile_C_GetInteractLocked::LockMessage' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetInteractBusy
// 0x0020 (0x0020 - 0x0000)
struct ProximityMineProjectile_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(ProximityMineProjectile_C_GetInteractBusy) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_GetInteractBusy");
static_assert(sizeof(ProximityMineProjectile_C_GetInteractBusy) == 0x000020, "Wrong size on ProximityMineProjectile_C_GetInteractBusy");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractBusy, Result) == 0x000000, "Member 'ProximityMineProjectile_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'ProximityMineProjectile_C_GetInteractBusy::BusyMessage' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.SetInteractPowered
// 0x0002 (0x0002 - 0x0000)
struct ProximityMineProjectile_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_SetInteractPowered) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_SetInteractPowered");
static_assert(sizeof(ProximityMineProjectile_C_SetInteractPowered) == 0x000002, "Wrong size on ProximityMineProjectile_C_SetInteractPowered");
static_assert(offsetof(ProximityMineProjectile_C_SetInteractPowered, State) == 0x000000, "Member 'ProximityMineProjectile_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_SetInteractPowered, Result) == 0x000001, "Member 'ProximityMineProjectile_C_SetInteractPowered::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.SetInteractLocked
// 0x0002 (0x0002 - 0x0000)
struct ProximityMineProjectile_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_SetInteractLocked) == 0x000001, "Wrong alignment on ProximityMineProjectile_C_SetInteractLocked");
static_assert(sizeof(ProximityMineProjectile_C_SetInteractLocked) == 0x000002, "Wrong size on ProximityMineProjectile_C_SetInteractLocked");
static_assert(offsetof(ProximityMineProjectile_C_SetInteractLocked, Locked) == 0x000000, "Member 'ProximityMineProjectile_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_SetInteractLocked, Result) == 0x000001, "Member 'ProximityMineProjectile_C_SetInteractLocked::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.StopChanneling
// 0x0028 (0x0028 - 0x0000)
struct ProximityMineProjectile_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_StopChanneling) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_StopChanneling");
static_assert(sizeof(ProximityMineProjectile_C_StopChanneling) == 0x000028, "Wrong size on ProximityMineProjectile_C_StopChanneling");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'ProximityMineProjectile_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, Result) == 0x000008, "Member 'ProximityMineProjectile_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_StopChanneling::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'ProximityMineProjectile_C_StopChanneling::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ProximityMineProjectile_C_StopChanneling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_StopChanneling, CallFunc_IsChannelingWithInteractable_Result) == 0x000021, "Member 'ProximityMineProjectile_C_StopChanneling::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct ProximityMineProjectile_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_GetTargetShape) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_GetTargetShape");
static_assert(sizeof(ProximityMineProjectile_C_GetTargetShape) == 0x000018, "Wrong size on ProximityMineProjectile_C_GetTargetShape");
static_assert(offsetof(ProximityMineProjectile_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'ProximityMineProjectile_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'ProximityMineProjectile_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetTargetShape, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'ProximityMineProjectile_C_GetTargetShape::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.TryReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct ProximityMineProjectile_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_TryReceiveItem) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_TryReceiveItem");
static_assert(sizeof(ProximityMineProjectile_C_TryReceiveItem) == 0x000010, "Wrong size on ProximityMineProjectile_C_TryReceiveItem");
static_assert(offsetof(ProximityMineProjectile_C_TryReceiveItem, Item) == 0x000000, "Member 'ProximityMineProjectile_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryReceiveItem, Result) == 0x000008, "Member 'ProximityMineProjectile_C_TryReceiveItem::Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.TryInteract
// 0x00D8 (0x00D8 - 0x0000)
struct ProximityMineProjectile_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  InteractingHacker;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0040(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0070(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0090(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00B0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProxyMineArmed_Result;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartDetonationCountdown_Result;       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_TryInteract) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_TryInteract");
static_assert(sizeof(ProximityMineProjectile_C_TryInteract) == 0x0000D8, "Wrong size on ProximityMineProjectile_C_TryInteract");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, SourceActor) == 0x000000, "Member 'ProximityMineProjectile_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'ProximityMineProjectile_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, InteractionType) == 0x000010, "Member 'ProximityMineProjectile_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, InteractResults) == 0x000018, "Member 'ProximityMineProjectile_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, InteractingHacker) == 0x000038, "Member 'ProximityMineProjectile_C_TryInteract::InteractingHacker' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000040, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000060, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000070, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000090, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000B0, "Member 'ProximityMineProjectile_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CallFunc_IsProxyMineArmed_Result) == 0x0000D0, "Member 'ProximityMineProjectile_C_TryInteract::CallFunc_IsProxyMineArmed_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CallFunc_TryStartDetonationCountdown_Result) == 0x0000D1, "Member 'ProximityMineProjectile_C_TryInteract::CallFunc_TryStartDetonationCountdown_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CallFunc_IsChannelingWithInteractable_Result) == 0x0000D2, "Member 'ProximityMineProjectile_C_TryInteract::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D3, "Member 'ProximityMineProjectile_C_TryInteract::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'ProximityMineProjectile_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetChannelingHoldDuration
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_GetChannelingHoldDuration final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_GetChannelingHoldDuration) == 0x000004, "Wrong alignment on ProximityMineProjectile_C_GetChannelingHoldDuration");
static_assert(sizeof(ProximityMineProjectile_C_GetChannelingHoldDuration) == 0x000008, "Wrong size on ProximityMineProjectile_C_GetChannelingHoldDuration");
static_assert(offsetof(ProximityMineProjectile_C_GetChannelingHoldDuration, Result) == 0x000000, "Member 'ProximityMineProjectile_C_GetChannelingHoldDuration::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_GetChannelingHoldDuration, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'ProximityMineProjectile_C_GetChannelingHoldDuration::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.FinishedChannelingHoldInteraction
// 0x0060 (0x0060 - 0x0000)
struct ProximityMineProjectile_C_FinishedChannelingHoldInteraction final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  InteractingHacker;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_FinishedChannelingHoldInteraction");
static_assert(sizeof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction) == 0x000060, "Wrong size on ProximityMineProjectile_C_FinishedChannelingHoldInteraction");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, Character) == 0x000000, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::Character' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, Result) == 0x000008, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, InteractingHacker) == 0x000010, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::InteractingHacker' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, CallFunc_GetInventoryComponent_Inventory) == 0x000040, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000048, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_FinishedChannelingHoldInteraction, CallFunc_GrantItem_Result) == 0x000058, "Member 'ProximityMineProjectile_C_FinishedChannelingHoldInteraction::CallFunc_GrantItem_Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.TryDetachInteract
// 0x0020 (0x0020 - 0x0000)
struct ProximityMineProjectile_C_TryDetachInteract final
{
public:
	bool                                          SimulatePhysics;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartDetonationCountdown_Result;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProximityMineProjectile_C_TryDetachInteract) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_TryDetachInteract");
static_assert(sizeof(ProximityMineProjectile_C_TryDetachInteract) == 0x000020, "Wrong size on ProximityMineProjectile_C_TryDetachInteract");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, SimulatePhysics) == 0x000000, "Member 'ProximityMineProjectile_C_TryDetachInteract::SimulatePhysics' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, Result) == 0x000001, "Member 'ProximityMineProjectile_C_TryDetachInteract::Result' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, CallFunc_GetAttachParentActor_ReturnValue) == 0x000008, "Member 'ProximityMineProjectile_C_TryDetachInteract::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000010, "Member 'ProximityMineProjectile_C_TryDetachInteract::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ProximityMineProjectile_C_TryDetachInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProximityMineProjectile_C_TryDetachInteract, CallFunc_TryStartDetonationCountdown_Result) == 0x000019, "Member 'ProximityMineProjectile_C_TryDetachInteract::CallFunc_TryStartDetonationCountdown_Result' has a wrong offset!");

// Function ProximityMineProjectile.ProximityMineProjectile_C.GetExplosivePhysicsComponent
// 0x0008 (0x0008 - 0x0000)
struct ProximityMineProjectile_C_GetExplosivePhysicsComponent final
{
public:
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProximityMineProjectile_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong alignment on ProximityMineProjectile_C_GetExplosivePhysicsComponent");
static_assert(sizeof(ProximityMineProjectile_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong size on ProximityMineProjectile_C_GetExplosivePhysicsComponent");
static_assert(offsetof(ProximityMineProjectile_C_GetExplosivePhysicsComponent, PhysicsComponent) == 0x000000, "Member 'ProximityMineProjectile_C_GetExplosivePhysicsComponent::PhysicsComponent' has a wrong offset!");

}


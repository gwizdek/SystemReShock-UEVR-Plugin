#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_SystemShockCharacter

#include "Basic.hpp"

#include "ENUM_LocomotionType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SystemReShock_structs.hpp"
#include "STRUCT_CharacterAudioParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_Foot_structs.hpp"
#include "ENUM_HazardType_structs.hpp"
#include "ENUM_AudioComponentLocation_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_SystemShockCharacter.PAWN_SystemShockCharacter_C
// 0x01C0 (0x0680 - 0x04C0)
class APAWN_SystemShockCharacter_C : public ACharacter
{
public:
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_LimbManager_C*                    COMP_LimbManager;                                  // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ActionManager_C*                  COMP_ActionManager;                                // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          GrantedDefaultLoadout;                             // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChangePriorityString;                              // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             CharacterDied;                                     // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCharacterInitialized;                            // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPawnDetectable;                                  // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnBecomeUndetectable;                              // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSTRUCT_CharacterAudioParams           AudioParams;                                       // 0x0538(0x0003)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B[0x5];                                      // 0x053B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCOMP_VoxelAudio_C*>             CharacterAudioComponents;                          // 0x0540(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bHasFootstepAudioSet;                              // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldSaveCharacter;                               // 0x0551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SaveComponentNames;                                // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraComponent*                      ShieldEffectsComponent;                            // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ShieldAudioComponent;                              // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ShieldSystem;                                      // 0x0578(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ShieldImpactSystem;                                // 0x05A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ShieldActivateSoundCue;                            // 0x05C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ShieldDeactivateSoundCue;                          // 0x05F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundCue*                              ShieldLoopSoundCue;                                // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldProtectionSpanDegrees;                       // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldActivateDuration;                            // 0x0624(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldDeactivateDuration;                          // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldBufferRadius;                                // 0x062C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldIntensityWhenIdle;                           // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldIntensityWhenImpacted;                       // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastShieldImpactTimestamp;                         // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldImpactDuration;                              // 0x063C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShieldBonusCategory;                               // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShieldIntegrityTimerHandle;                        // 0x0648(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShieldIntensityTimerHandle;                        // 0x0650(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsToBeVisible;                                  // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CharacterTeleportTimerHandle;                      // 0x0660(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   HeadSocketName;                                    // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PendingVelocity;                                   // 0x0670(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CharacterDied__DelegateSignature(class APAWN_SystemShockCharacter_C* Character);
	void OnCharacterInitialized__DelegateSignature(class APAWN_SystemShockCharacter_C* Character);
	void OnBecomeUndetectable__DelegateSignature(class APAWN_SystemShockCharacter_C* Character);
	void ExecuteUbergraph_PAWN_SystemShockCharacter(int32 EntryPoint);
	void StreamFootstepAudio();
	void AsyncPlayShieldFX();
	void ReceiveBeginPlay();
	void OnLoaded_8AA4DBE04F0AF8F736F2C6AFD716504F(class UObject* Loaded);
	void OnLoaded_CB181028468BDE35D77C81B51AB574AE(class UObject* Loaded);
	void EVENT_OnDamageReceived(class AActor* Other_Actor, const struct FAttribDamageInstance& Damage_Instance, class UObject* User_Params);
	void OnCharacterDied(class UOBJ_ImpactData_C* ImpactData, const struct FAttribDamageInstance& DamageInstance, class AActor* OtherActor, bool* Result);
	void GetDefaultAttributeOverrides(TArray<struct FDefaultAttribute>* OverrideAttribs);
	void GrantDefaultCharacterLoadout();
	void GrantSpecificCharacterLoadout(const struct FSTRUCT_CharacterLoadoutSettings& Loadout);
	void BindCharacterEvents();
	void ApplyPendingVelocity();
	void GetInventoryComponent(class UCOMP_Inventory_C** Inventory);
	void GetGazeLocations(TArray<struct FVector>* GazeLocations);
	void GetActionMeshComponent(class USkeletalMeshComponent** SkeletalMeshComponent);
	void SetDisplayMesh(class USkeletalMesh* DisplayMesh, class UClass* AnimBP, class UMaterialInterface* OverrideMaterial, bool* Result);
	void GetExploitDamagePercentage(class AActor* SourceActor, class FName BoneName, const struct FVector& ImpactLocation, const struct FVector& AttackDirection, float AttackRadius, bool AllowSneakAttack, float* ExploitDamagePercent);
	void GetArmorAugmentationPercentage(class FName BoneName, const struct FVector& ImpactLocation, float* ArmorAugmentPercent);
	void HasDisplayMesh(bool* Result);
	void OnCharacterHurt(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void OnDeathImpact(const struct FAttribDamageInstance& DamageInstance, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void UpdateDeathSettingsOnPawn(bool DuringBeginPlay, bool* Result);
	void GetDisplayMeshComponent(class USkeletalMeshComponent** MeshComponent);
	void OnCharacterVisibilityChanged(bool VisibilityState);
	void SetCharacterVisible(bool State);
	void SetDetectability(bool IsDetectable_0);
	void IsDetectable(bool* IsDetectable_0);
	void GetAudioComponentByLocationType(ENUM_AudioComponentLocation LocationType, class UCOMP_VoxelAudio_C** Result);
	void InitializeAudio();
	void InitializeCharacterAudioComponents();
	void PlayFootstepAudio(ENUM_Foot Foot, ENUM_LocomotionType LocomotionType);
	void IsTeleporting(bool* Result);
	void CanTeleportCharacter(bool* Result);
	void GetMeshComponentsForTeleport(TArray<class UMeshComponent*>* MeshComponents);
	void UpdateCharacterStateForTeleport(bool ShouldUpdateVisibility);
	void TryTeleportCharacter(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* BoundsFX, class UNiagaraSystem* MeshFX, bool* Result);
	void IsCharacterVisible(bool* Result);
	void InitializeCharacter(bool* Result);
	void PostInitializeCharacter(bool* Result);
	void Play_Foley_FX(class USoundCue* FoleyCue, class FName AttachmentName, class UNiagaraSystem* NiagaraSystem);
	void GetShockAgentLocation(struct FVector* Location);
	void UpdateShieldIntegrity(float Value);
	void UpdateShieldIntensity(float Value);
	void UpdateDefaultShieldParameters();
	void GetShieldAttachComponent(class USceneComponent** Component);
	void GetShieldRadius(float* Radius);
	void GetShieldProtectionSpanDegrees(float* Result);
	void TryPlayShieldStateChangeSound(bool HasShields);
	void ActivateShieldFX(class UNiagaraSystem* SystemAsset);
	void ForceStartNextShieldIntegrityTick();
	void ForceStartNextShieldIntensityTick();
	void ComputeShieldIntensity(float* ShieldIntensity, bool* FinishedUpdating);
	void DeactivateShieldFX();
	void HandleShieldImpact(const struct FVector& Location, const struct FVector& Direction, float Radius);
	void EVENT_OnShieldValueChanged(float CurrValue, float LastValue);
	void EVENT_OnShieldIntegrityTick();
	void EVENT_OnShieldIntensityTick();
	void EVENT_OnActorTimeScaleChanged(float CurrValue, float LastValue);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void GetHeadTransform(struct FTransform* Transform);
	void OnHazardLevelChanged(ENUM_HazardType HazardType, uint8 HazardLevel);
	void OnHazardProtectionChanged();
	void GetLocationalAudioSceneComponent(class USceneComponent** Result);
	void EVENT_OnGravityScaleChanged(float CurrValue, float LastValue);
	void EVENT_OnFinishedMaterializingFromTeleport();
	void DealPureDamage(int32 DamageValue);
	void ApplyKnockback(const struct FVector& LinearImpulse, const struct FVector& ImpactPoint);
	void TryApplyKnockbackFromDamage(class UAttribDamageType* DamageType, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void IsRealspaceCharacter(bool* Result);
	bool ReceiveAnimationMessage(const EActorMessagePriority& Priority, const class FString& Message);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

	void HasGrantedDefaultLoadout(bool* Result) const;
	bool CanJumpInternal() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_SystemShockCharacter_C">();
	}
	static class APAWN_SystemShockCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_SystemShockCharacter_C>();
	}
};
static_assert(alignof(APAWN_SystemShockCharacter_C) == 0x000010, "Wrong alignment on APAWN_SystemShockCharacter_C");
static_assert(sizeof(APAWN_SystemShockCharacter_C) == 0x000680, "Wrong size on APAWN_SystemShockCharacter_C");
static_assert(offsetof(APAWN_SystemShockCharacter_C, UberGraphFrame) == 0x0004C0, "Member 'APAWN_SystemShockCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, COMP_LimbManager) == 0x0004C8, "Member 'APAWN_SystemShockCharacter_C::COMP_LimbManager' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, COMP_ActionManager) == 0x0004D0, "Member 'APAWN_SystemShockCharacter_C::COMP_ActionManager' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, COMP_AttribManager) == 0x0004D8, "Member 'APAWN_SystemShockCharacter_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, GrantedDefaultLoadout) == 0x0004E0, "Member 'APAWN_SystemShockCharacter_C::GrantedDefaultLoadout' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ChangePriorityString) == 0x0004E8, "Member 'APAWN_SystemShockCharacter_C::ChangePriorityString' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, IsAlive) == 0x0004F8, "Member 'APAWN_SystemShockCharacter_C::IsAlive' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, CharacterDied) == 0x000500, "Member 'APAWN_SystemShockCharacter_C::CharacterDied' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, OnCharacterInitialized) == 0x000510, "Member 'APAWN_SystemShockCharacter_C::OnCharacterInitialized' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, IsPawnDetectable) == 0x000520, "Member 'APAWN_SystemShockCharacter_C::IsPawnDetectable' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, OnBecomeUndetectable) == 0x000528, "Member 'APAWN_SystemShockCharacter_C::OnBecomeUndetectable' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, AudioParams) == 0x000538, "Member 'APAWN_SystemShockCharacter_C::AudioParams' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, CharacterAudioComponents) == 0x000540, "Member 'APAWN_SystemShockCharacter_C::CharacterAudioComponents' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, bHasFootstepAudioSet) == 0x000550, "Member 'APAWN_SystemShockCharacter_C::bHasFootstepAudioSet' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShouldSaveCharacter) == 0x000551, "Member 'APAWN_SystemShockCharacter_C::ShouldSaveCharacter' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, SaveComponentNames) == 0x000558, "Member 'APAWN_SystemShockCharacter_C::SaveComponentNames' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldEffectsComponent) == 0x000568, "Member 'APAWN_SystemShockCharacter_C::ShieldEffectsComponent' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldAudioComponent) == 0x000570, "Member 'APAWN_SystemShockCharacter_C::ShieldAudioComponent' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldSystem) == 0x000578, "Member 'APAWN_SystemShockCharacter_C::ShieldSystem' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldImpactSystem) == 0x0005A0, "Member 'APAWN_SystemShockCharacter_C::ShieldImpactSystem' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldActivateSoundCue) == 0x0005C8, "Member 'APAWN_SystemShockCharacter_C::ShieldActivateSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldDeactivateSoundCue) == 0x0005F0, "Member 'APAWN_SystemShockCharacter_C::ShieldDeactivateSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldLoopSoundCue) == 0x000618, "Member 'APAWN_SystemShockCharacter_C::ShieldLoopSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldProtectionSpanDegrees) == 0x000620, "Member 'APAWN_SystemShockCharacter_C::ShieldProtectionSpanDegrees' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldActivateDuration) == 0x000624, "Member 'APAWN_SystemShockCharacter_C::ShieldActivateDuration' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldDeactivateDuration) == 0x000628, "Member 'APAWN_SystemShockCharacter_C::ShieldDeactivateDuration' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldBufferRadius) == 0x00062C, "Member 'APAWN_SystemShockCharacter_C::ShieldBufferRadius' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldIntensityWhenIdle) == 0x000630, "Member 'APAWN_SystemShockCharacter_C::ShieldIntensityWhenIdle' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldIntensityWhenImpacted) == 0x000634, "Member 'APAWN_SystemShockCharacter_C::ShieldIntensityWhenImpacted' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, LastShieldImpactTimestamp) == 0x000638, "Member 'APAWN_SystemShockCharacter_C::LastShieldImpactTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldImpactDuration) == 0x00063C, "Member 'APAWN_SystemShockCharacter_C::ShieldImpactDuration' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldBonusCategory) == 0x000640, "Member 'APAWN_SystemShockCharacter_C::ShieldBonusCategory' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldIntegrityTimerHandle) == 0x000648, "Member 'APAWN_SystemShockCharacter_C::ShieldIntegrityTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, ShieldIntensityTimerHandle) == 0x000650, "Member 'APAWN_SystemShockCharacter_C::ShieldIntensityTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, WantsToBeVisible) == 0x000658, "Member 'APAWN_SystemShockCharacter_C::WantsToBeVisible' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, CharacterTeleportTimerHandle) == 0x000660, "Member 'APAWN_SystemShockCharacter_C::CharacterTeleportTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, HeadSocketName) == 0x000668, "Member 'APAWN_SystemShockCharacter_C::HeadSocketName' has a wrong offset!");
static_assert(offsetof(APAWN_SystemShockCharacter_C, PendingVelocity) == 0x000670, "Member 'APAWN_SystemShockCharacter_C::PendingVelocity' has a wrong offset!");

}


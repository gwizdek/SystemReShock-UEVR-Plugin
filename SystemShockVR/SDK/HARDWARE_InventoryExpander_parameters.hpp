#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_InventoryExpander

#include "Basic.hpp"


namespace SDK::Params
{

// Function HARDWARE_InventoryExpander.HARDWARE_InventoryExpander_C.ExecuteUbergraph_HARDWARE_InventoryExpander
// 0x0004 (0x0004 - 0x0000)
struct HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander) == 0x000004, "Wrong alignment on HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander");
static_assert(sizeof(HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander) == 0x000004, "Wrong size on HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander, EntryPoint) == 0x000000, "Member 'HARDWARE_InventoryExpander_C_ExecuteUbergraph_HARDWARE_InventoryExpander::EntryPoint' has a wrong offset!");

// Function HARDWARE_InventoryExpander.HARDWARE_InventoryExpander_C.ExpandMainInventory
// 0x0060 (0x0060 - 0x0000)
struct HARDWARE_InventoryExpander_C_ExpandMainInventory final
{
public:
	class UWIDGET_PlayerHUD_C*                    NeuralHUD;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        GeneralBag;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSlots_Count;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMaxSlotCount_Result;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_InventoryExpander_C_ExpandMainInventory) == 0x000008, "Wrong alignment on HARDWARE_InventoryExpander_C_ExpandMainInventory");
static_assert(sizeof(HARDWARE_InventoryExpander_C_ExpandMainInventory) == 0x000060, "Wrong size on HARDWARE_InventoryExpander_C_ExpandMainInventory");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, NeuralHUD) == 0x000000, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::NeuralHUD' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, GeneralBag) == 0x000008, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::GeneralBag' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, HackerPawn) == 0x000010, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::HackerPawn' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_GetNeuralHUD_Result) == 0x000020, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_GetBagByIndex_Bag) == 0x000028, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_GetMaxSlots_Count) == 0x000030, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_GetMaxSlots_Count' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_GetGridWidth_Result) == 0x000034, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_Divide_IntInt_ReturnValue) == 0x000038, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_SetMaxSlotCount_Result) == 0x000044, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_SetMaxSlotCount_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, CallFunc_GetOwnerCharacter_Character) == 0x000048, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000050, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_ExpandMainInventory, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'HARDWARE_InventoryExpander_C_ExpandMainInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HARDWARE_InventoryExpander.HARDWARE_InventoryExpander_C.OnUpgradedItem
// 0x0010 (0x0010 - 0x0000)
struct HARDWARE_InventoryExpander_C_OnUpgradedItem final
{
public:
	class UITEM_UpgradeBase_C*                    PreviousItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnUpgradedItem_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_InventoryExpander_C_OnUpgradedItem) == 0x000008, "Wrong alignment on HARDWARE_InventoryExpander_C_OnUpgradedItem");
static_assert(sizeof(HARDWARE_InventoryExpander_C_OnUpgradedItem) == 0x000010, "Wrong size on HARDWARE_InventoryExpander_C_OnUpgradedItem");
static_assert(offsetof(HARDWARE_InventoryExpander_C_OnUpgradedItem, PreviousItem) == 0x000000, "Member 'HARDWARE_InventoryExpander_C_OnUpgradedItem::PreviousItem' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_OnUpgradedItem, Result) == 0x000008, "Member 'HARDWARE_InventoryExpander_C_OnUpgradedItem::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_InventoryExpander_C_OnUpgradedItem, CallFunc_OnUpgradedItem_Result) == 0x000009, "Member 'HARDWARE_InventoryExpander_C_OnUpgradedItem::CallFunc_OnUpgradedItem_Result' has a wrong offset!");

}


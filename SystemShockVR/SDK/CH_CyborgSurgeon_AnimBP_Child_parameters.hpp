#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CH_CyborgSurgeon_AnimBP_Child

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CH_CyborgSurgeon_AnimBP_Child.CH_CyborgSurgeon_AnimBP_Child_C.ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child
// 0x0008 (0x0008 - 0x0000)
struct CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child) == 0x000004, "Wrong alignment on CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child");
static_assert(sizeof(CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child) == 0x000008, "Wrong size on CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child, EntryPoint) == 0x000000, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child::EntryPoint' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_ExecuteUbergraph_CH_CyborgSurgeon_AnimBP_Child::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function CH_CyborgSurgeon_AnimBP_Child.CH_CyborgSurgeon_AnimBP_Child_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation");
static_assert(sizeof(CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function CH_CyborgSurgeon_AnimBP_Child.CH_CyborgSurgeon_AnimBP_Child_C.UpdateSightLasers
// 0x01E8 (0x01E8 - 0x0000)
struct CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers final
{
public:
	bool                                          IsInRangeToLineTrace;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ImpactLocation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LaserPS;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers) == 0x000008, "Wrong alignment on CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers");
static_assert(sizeof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers) == 0x0001E8, "Wrong size on CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, IsInRangeToLineTrace) == 0x000000, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::IsInRangeToLineTrace' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, ImpactLocation) == 0x000004, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::ImpactLocation' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, TargetLocation) == 0x000010, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::TargetLocation' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, SourceLocation) == 0x00001C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::SourceLocation' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, LaserPS) == 0x000028, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::LaserPS' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, Temp_int_Array_Index_Variable) == 0x000030, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, Temp_object_Variable) == 0x000038, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000050, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Array_Get_Item) == 0x000068, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_GetUpVector_ReturnValue) == 0x000078, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_LineTraceSingle_OutHit) == 0x0000A0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_LineTraceSingle_ReturnValue) == 0x000128, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00012C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_bBlockingHit) == 0x000138, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_bInitialOverlap) == 0x000139, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_Location) == 0x000144, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_ImpactPoint) == 0x000150, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_Normal) == 0x00015C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_ImpactNormal) == 0x000168, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_HitItem) == 0x000198, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_ElementIndex) == 0x00019C, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_FaceIndex) == 0x0001A0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_TraceStart) == 0x0001A4, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Square_ReturnValue) == 0x0001BC, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001C0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0001C8, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001D4, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0001E0, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001E4, "Member 'CH_CyborgSurgeon_AnimBP_Child_C_UpdateSightLasers::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


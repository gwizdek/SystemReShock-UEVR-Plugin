#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_AccessCard

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ITEM_UpgradeBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_AccessCard.ITEM_AccessCard_C
// 0x0060 (0x0210 - 0x01B0)
class UITEM_AccessCard_C : public UITEM_UpgradeBase_C
{
public:
	TSoftObjectPtr<class USkeletalMesh>           DisplayMesh;                                       // 0x01B0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     DisplayMaterial;                                   // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AnimInstanceClass;                                 // 0x01E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FColor                                 AutomapIconColor;                                  // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void GetDisplayProperties(class USkeletalMesh** SkeletalMesh, class UClass** AnimInstanceClass_0, class UMaterialInterface** OverrideMaterial);
	void GetInventoryItemDetailsClass(class UClass** InventoryItemDetailsWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_AccessCard_C">();
	}
	static class UITEM_AccessCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_AccessCard_C>();
	}
};
static_assert(alignof(UITEM_AccessCard_C) == 0x000008, "Wrong alignment on UITEM_AccessCard_C");
static_assert(sizeof(UITEM_AccessCard_C) == 0x000210, "Wrong size on UITEM_AccessCard_C");
static_assert(offsetof(UITEM_AccessCard_C, DisplayMesh) == 0x0001B0, "Member 'UITEM_AccessCard_C::DisplayMesh' has a wrong offset!");
static_assert(offsetof(UITEM_AccessCard_C, DisplayMaterial) == 0x0001D8, "Member 'UITEM_AccessCard_C::DisplayMaterial' has a wrong offset!");
static_assert(offsetof(UITEM_AccessCard_C, AnimInstanceClass) == 0x0001E0, "Member 'UITEM_AccessCard_C::AnimInstanceClass' has a wrong offset!");
static_assert(offsetof(UITEM_AccessCard_C, AutomapIconColor) == 0x000208, "Member 'UITEM_AccessCard_C::AutomapIconColor' has a wrong offset!");

}


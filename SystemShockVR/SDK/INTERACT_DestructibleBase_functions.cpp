#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_DestructibleBase

#include "Basic.hpp"

#include "INTERACT_DestructibleBase_classes.hpp"
#include "INTERACT_DestructibleBase_parameters.hpp"


namespace SDK
{

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.OnDestructibleDestroyed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AINTERACT_DestructibleBase_C::OnDestructibleDestroyed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "OnDestructibleDestroyed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.ExecuteUbergraph_INTERACT_DestructibleBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::ExecuteUbergraph_INTERACT_DestructibleBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "ExecuteUbergraph_INTERACT_DestructibleBase");

	Params::INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_DestructibleBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.InitializeDestructible
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DestructibleBase_C::InitializeDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "InitializeDestructible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.InitializeAttributes
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GrantDefaultAttribs                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::InitializeAttributes(bool GrantDefaultAttribs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "InitializeAttributes");

	Params::INTERACT_DestructibleBase_C_InitializeAttributes Parms{};

	Parms.GrantDefaultAttribs = GrantDefaultAttribs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::IsAlive(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "IsAlive");

	Params::INTERACT_DestructibleBase_C_IsAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::IsDead(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "IsDead");

	Params::INTERACT_DestructibleBase_C_IsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.OnTakeDamage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::OnTakeDamage(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "OnTakeDamage");

	Params::INTERACT_DestructibleBase_C_OnTakeDamage Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.OnDeath
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::OnDeath(class AActor* SourceActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "OnDeath");

	Params::INTERACT_DestructibleBase_C_OnDeath Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.EVENT_OnDamageReceived
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "EVENT_OnDamageReceived");

	Params::INTERACT_DestructibleBase_C_EVENT_OnDamageReceived Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.UpdateDeathSettings
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::UpdateDeathSettings(bool DuringBeginPlay, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "UpdateDeathSettings");

	Params::INTERACT_DestructibleBase_C_UpdateDeathSettings Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "TryInteract");

	Params::INTERACT_DestructibleBase_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.SetDestroyedDescription
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DestructibleBase_C::SetDestroyedDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "SetDestroyedDescription");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryCompleteOnDestroyGameEvent
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DestructibleBase_C::TryCompleteOnDestroyGameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "TryCompleteOnDestroyGameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryCompleteOnDamageGameEvent
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DestructibleBase_C::TryCompleteOnDamageGameEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "TryCompleteOnDamageGameEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.CanInteractBeDestroyed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::CanInteractBeDestroyed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "CanInteractBeDestroyed");

	Params::INTERACT_DestructibleBase_C_CanInteractBeDestroyed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetInteractDestroyed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::GetInteractDestroyed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetInteractDestroyed");

	Params::INTERACT_DestructibleBase_C_GetInteractDestroyed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsTargetIdentifiable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::IsTargetIdentifiable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "IsTargetIdentifiable");

	Params::INTERACT_DestructibleBase_C_IsTargetIdentifiable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetArmorAugmentationPercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::GetArmorAugmentationPercentage(class UOBJ_ImpactData_C* ImpactData, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetArmorAugmentationPercentage");

	Params::INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage Parms{};

	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.CanHackDestructible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     SourceCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DestructibleBase_C::CanHackDestructible(class APAWN_SystemShockCharacter_C* SourceCharacter, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "CanHackDestructible");

	Params::INTERACT_DestructibleBase_C_CanHackDestructible Parms{};

	Parms.SourceCharacter = SourceCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetThreatLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ThreatLevel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::GetThreatLevel(int32* ThreatLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetThreatLevel");

	Params::INTERACT_DestructibleBase_C_GetThreatLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThreatLevel != nullptr)
		*ThreatLevel = Parms.ThreatLevel;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetEnemyTypeForTargeting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_EnemyType                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::GetEnemyTypeForTargeting(ENUM_EnemyType* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetEnemyTypeForTargeting");

	Params::INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetDefaultOverrideAttributes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FDefaultAttribute>        Result                                                 (Parm, OutParm)

void AINTERACT_DestructibleBase_C::GetDefaultOverrideAttributes(TArray<struct FDefaultAttribute>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetDefaultOverrideAttributes");

	Params::INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetDetectionComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCOMP_EnemyDetection_C*           Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DestructibleBase_C::GetDetectionComponent(class UCOMP_EnemyDetection_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DestructibleBase_C", "GetDetectionComponent");

	Params::INTERACT_DestructibleBase_C_GetDetectionComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


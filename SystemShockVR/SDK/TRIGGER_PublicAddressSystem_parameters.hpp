#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_PublicAddressSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_QuestSoundCue_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"


namespace SDK::Params
{

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.ShouldSaveActor
// 0x0040 (0x0040 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          CallFunc_ShouldSaveActor_Params;                   // 0x0020(0x0018)()
	bool                                          CallFunc_ShouldSaveActor_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor) == 0x000008, "Wrong alignment on TRIGGER_PublicAddressSystem_C_ShouldSaveActor");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor) == 0x000040, "Wrong size on TRIGGER_PublicAddressSystem_C_ShouldSaveActor");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, CallFunc_ShouldSaveActor_Params) == 0x000020, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::CallFunc_ShouldSaveActor_Params' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, CallFunc_ShouldSaveActor_ReturnValue) == 0x000038, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::CallFunc_ShouldSaveActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ShouldSaveActor, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'TRIGGER_PublicAddressSystem_C_ShouldSaveActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.GetMediaToPlay
// 0x0090 (0x0090 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_GetMediaToPlay final
{
public:
	struct FDataTableRowHandle                    MediaHandle;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
	struct FSTRUCT_QuestSoundCue                  QuestSoundCue;                                     // 0x0010(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_QuestSoundCue                  CallFunc_Array_Get_Item;                           // 0x0068(0x0020)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay) == 0x000008, "Wrong alignment on TRIGGER_PublicAddressSystem_C_GetMediaToPlay");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay) == 0x000090, "Wrong size on TRIGGER_PublicAddressSystem_C_GetMediaToPlay");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, MediaHandle) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::MediaHandle' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, QuestSoundCue) == 0x000010, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::QuestSoundCue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, GameInstance) == 0x000030, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::GameInstance' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, Temp_int_Array_Index_Variable) == 0x000044, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_HasCompletedStoryQuest_Completed) == 0x000050, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_Array_Get_Item) == 0x000068, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000088, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_GetMediaToPlay, CallFunc_Max_ReturnValue) == 0x00008C, "Member 'TRIGGER_PublicAddressSystem_C_GetMediaToPlay::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.TryInteract
// 0x0118 (0x0118 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0038(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FDataTableRowHandle                    MediaHandle;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0070(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00A8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00C8(0x0020)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetMediaToPlay_MediaHandle;               // 0x0100(0x0010)(NoDestructor)
	bool                                          CallFunc_TryPlayPublicAddressMessage_Result;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_TryInteract) == 0x000008, "Wrong alignment on TRIGGER_PublicAddressSystem_C_TryInteract");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_TryInteract) == 0x000118, "Wrong size on TRIGGER_PublicAddressSystem_C_TryInteract");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, SourceActor) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, InteractionType) == 0x000010, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, InteractResults) == 0x000018, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, SoundCue) == 0x000038, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::SoundCue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, MediaHandle) == 0x000060, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::MediaHandle' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000070, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_BooleanOR_ReturnValue) == 0x000092, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A0, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000A8, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000C8, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_GetGameInstance_ReturnValue) == 0x0000E8, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000F0, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_GetMediaToPlay_MediaHandle) == 0x000100, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_GetMediaToPlay_MediaHandle' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_TryInteract, CallFunc_TryPlayPublicAddressMessage_Result) == 0x000110, "Member 'TRIGGER_PublicAddressSystem_C_TryInteract::CallFunc_TryPlayPublicAddressMessage_Result' has a wrong offset!");

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_UserConstructionScript) == 0x000001, "Wrong alignment on TRIGGER_PublicAddressSystem_C_UserConstructionScript");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_UserConstructionScript) == 0x000002, "Wrong size on TRIGGER_PublicAddressSystem_C_UserConstructionScript");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_UserConstructionScript, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_UserConstructionScript::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'TRIGGER_PublicAddressSystem_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'TRIGGER_PublicAddressSystem_C_BndEvt__TRIGGER_PublicAddressSystem_OverlapBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function TRIGGER_PublicAddressSystem.TRIGGER_PublicAddressSystem_C.ExecuteUbergraph_TRIGGER_PublicAddressSystem
// 0x00E0 (0x00E0 - 0x0000)
struct TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x00C0(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem) == 0x000008, "Wrong alignment on TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem");
static_assert(sizeof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem) == 0x0000E0, "Wrong size on TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, EntryPoint) == 0x000000, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000B0, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem, CallFunc_TryInteract_InteractResults) == 0x0000C0, "Member 'TRIGGER_PublicAddressSystem_C_ExecuteUbergraph_TRIGGER_PublicAddressSystem::CallFunc_TryInteract_InteractResults' has a wrong offset!");

}


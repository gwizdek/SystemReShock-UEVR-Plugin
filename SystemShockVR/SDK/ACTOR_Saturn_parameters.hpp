#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACTOR_Saturn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_LevelAtmosphereSettings_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"


namespace SDK::Params
{

// Function ACTOR_Saturn.ACTOR_Saturn_C.ExecuteUbergraph_ACTOR_Saturn
// 0x000C (0x000C - 0x0000)
struct ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingInEditor_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn");
static_assert(sizeof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn) == 0x00000C, "Wrong size on ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, EntryPoint) == 0x000000, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::EntryPoint' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, CallFunc_IsSimulatingInEditor_ReturnValue) == 0x000008, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::CallFunc_IsSimulatingInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn, K2Node_ComponentBoundEvent_bVisibleState) == 0x00000B, "Member 'ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ACTOR_Saturn_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_ReceiveTick) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_ReceiveTick");
static_assert(sizeof(ACTOR_Saturn_C_ReceiveTick) == 0x000004, "Wrong size on ACTOR_Saturn_C_ReceiveTick");
static_assert(offsetof(ACTOR_Saturn_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ACTOR_Saturn_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct ACTOR_Saturn_C_UserConstructionScript final
{
public:
	float                                         TotalPlanetSize;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_UserConstructionScript) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_UserConstructionScript");
static_assert(sizeof(ACTOR_Saturn_C_UserConstructionScript) == 0x000004, "Wrong size on ACTOR_Saturn_C_UserConstructionScript");
static_assert(offsetof(ACTOR_Saturn_C_UserConstructionScript, TotalPlanetSize) == 0x000000, "Member 'ACTOR_Saturn_C_UserConstructionScript::TotalPlanetSize' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSunMaterialParameters
// 0x0018 (0x0018 - 0x0000)
struct ACTOR_Saturn_C_UpdateSunMaterialParameters final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateSunMaterialParameters) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_UpdateSunMaterialParameters");
static_assert(sizeof(ACTOR_Saturn_C_UpdateSunMaterialParameters) == 0x000018, "Wrong size on ACTOR_Saturn_C_UpdateSunMaterialParameters");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunMaterialParameters, Material) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateSunMaterialParameters::Material' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunMaterialParameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000008, "Member 'ACTOR_Saturn_C_UpdateSunMaterialParameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.InitializeMeshMaterials
// 0x00D0 (0x00D0 - 0x0000)
struct ACTOR_Saturn_C_InitializeMeshMaterials final
{
public:
	float                                         RingsMaxDensityOffset;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorScale;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_12;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_13;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_14;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_15;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_16;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_17;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_18;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_19;       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_InitializeMeshMaterials) == 0x000010, "Wrong alignment on ACTOR_Saturn_C_InitializeMeshMaterials");
static_assert(sizeof(ACTOR_Saturn_C_InitializeMeshMaterials) == 0x0000D0, "Wrong size on ACTOR_Saturn_C_InitializeMeshMaterials");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, RingsMaxDensityOffset) == 0x000000, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::RingsMaxDensityOffset' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, ActorScale) == 0x000004, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::ActorScale' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_GetActorScale3D_ReturnValue) == 0x000008, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_GetMaxElement_ReturnValue) == 0x000014, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_BreakVector_X) == 0x000024, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_BreakVector_Y) == 0x000028, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_BreakVector_Z) == 0x00002C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, K2Node_MakeStruct_Vector4) == 0x000030, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00004C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000050, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000058, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00005C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000060, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000064, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000068, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00006C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000070, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000078, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000080, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000084, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000088, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_12) == 0x00008C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_13) == 0x000090, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000094, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_14) == 0x000098, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00009C, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_15) == 0x0000A0, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0000A4, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_16) == 0x0000A8, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_17) == 0x0000AC, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000B0, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_18) == 0x0000B8, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_Multiply_FloatFloat_ReturnValue_19) == 0x0000BC, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_Multiply_FloatFloat_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializeMeshMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0000C0, "Member 'ACTOR_Saturn_C_InitializeMeshMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSunSettings
// 0x004C (0x004C - 0x0000)
struct ACTOR_Saturn_C_UpdateSunSettings final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateSunSettings) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_UpdateSunSettings");
static_assert(sizeof(ACTOR_Saturn_C_UpdateSunSettings) == 0x00004C, "Wrong size on ACTOR_Saturn_C_UpdateSunSettings");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_Normal_ReturnValue) == 0x00000C, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_GetLightColor_ReturnValue) == 0x00001C, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00002C, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_GetActorForwardVector_ReturnValue) == 0x00003C, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSunSettings, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'ACTOR_Saturn_C_UpdateSunSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateMeshes
// 0x0100 (0x0100 - 0x0000)
struct ACTOR_Saturn_C_UpdateMeshes final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateMeshes) == 0x000010, "Wrong alignment on ACTOR_Saturn_C_UpdateMeshes");
static_assert(sizeof(ACTOR_Saturn_C_UpdateMeshes) == 0x000100, "Wrong size on ACTOR_Saturn_C_UpdateMeshes");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000004, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000014, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_BreakVector_X) == 0x0000DC, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, CallFunc_BreakVector_Z) == 0x0000E4, "Member 'ACTOR_Saturn_C_UpdateMeshes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateMeshes, K2Node_MakeStruct_Vector4) == 0x0000F0, "Member 'ACTOR_Saturn_C_UpdateMeshes::K2Node_MakeStruct_Vector4' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateAtmosphereSIze
// 0x005C (0x005C - 0x0000)
struct ACTOR_Saturn_C_UpdateAtmosphereSIze final
{
public:
	float                                         TotalPlanetSize;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AtmosphereMeshScale3D;                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateAtmosphereSIze) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_UpdateAtmosphereSIze");
static_assert(sizeof(ACTOR_Saturn_C_UpdateAtmosphereSIze) == 0x00005C, "Wrong size on ACTOR_Saturn_C_UpdateAtmosphereSIze");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, TotalPlanetSize) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::TotalPlanetSize' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, AtmosphereMeshScale3D) == 0x000004, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::AtmosphereMeshScale3D' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_GetLocalBounds_Min) == 0x00001C, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_GetLocalBounds_Max) == 0x000028, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_BreakVector_X) == 0x000040, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_BreakVector_Y) == 0x000044, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_BreakVector_Z) == 0x000048, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphereSIze, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'ACTOR_Saturn_C_UpdateAtmosphereSIze::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateAtmosphere
// 0x0100 (0x0100 - 0x0000)
struct ACTOR_Saturn_C_UpdateAtmosphere final
{
public:
	float                                         HorizonSinTheta;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HorizonCosTheta;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorToCameraDirection;                            // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToCamera;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrthoUpVector;                                     // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OrthoRightVector;                                  // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorToCameraVector;                               // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CameraManager;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSaturnRadius_Result;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Square_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindBestAxisVectors_OutAxis1;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindBestAxisVectors_OutAxis2;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateAtmosphere) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_UpdateAtmosphere");
static_assert(sizeof(ACTOR_Saturn_C_UpdateAtmosphere) == 0x000100, "Wrong size on ACTOR_Saturn_C_UpdateAtmosphere");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, HorizonSinTheta) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::HorizonSinTheta' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, HorizonCosTheta) == 0x000004, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::HorizonCosTheta' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, ActorToCameraDirection) == 0x000008, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::ActorToCameraDirection' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, DistanceToCamera) == 0x000014, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::DistanceToCamera' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, ActorLocation) == 0x000018, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::ActorLocation' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, OrthoUpVector) == 0x000024, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::OrthoUpVector' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, OrthoRightVector) == 0x000030, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::OrthoRightVector' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, ActorToCameraVector) == 0x00003C, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::ActorToCameraVector' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CameraManager) == 0x000048, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CameraManager' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CameraLocation) == 0x000050, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CameraLocation' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_GetScaledSaturnRadius_Result) == 0x00005C, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_GetScaledSaturnRadius_Result' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_IsVisible_ReturnValue) == 0x000060, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000061, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Square_ReturnValue) == 0x000064, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Sqrt_ReturnValue) == 0x00006C, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000070, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00008C, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_VSize_ReturnValue) == 0x000090, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000094, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000A0, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0000B0, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C0, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_GetCameraLocation_ReturnValue) == 0x0000D0, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_FindBestAxisVectors_OutAxis1) == 0x0000DC, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_FindBestAxisVectors_OutAxis1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_FindBestAxisVectors_OutAxis2) == 0x0000E8, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_FindBestAxisVectors_OutAxis2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdateAtmosphere, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000F8, "Member 'ACTOR_Saturn_C_UpdateAtmosphere::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.GetScaledSaturnRadius
// 0x0014 (0x0014 - 0x0000)
struct ACTOR_Saturn_C_GetScaledSaturnRadius final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_GetScaledSaturnRadius) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_GetScaledSaturnRadius");
static_assert(sizeof(ACTOR_Saturn_C_GetScaledSaturnRadius) == 0x000014, "Wrong size on ACTOR_Saturn_C_GetScaledSaturnRadius");
static_assert(offsetof(ACTOR_Saturn_C_GetScaledSaturnRadius, Result) == 0x000000, "Member 'ACTOR_Saturn_C_GetScaledSaturnRadius::Result' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_GetScaledSaturnRadius, CallFunc_BreakVector_X) == 0x000004, "Member 'ACTOR_Saturn_C_GetScaledSaturnRadius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_GetScaledSaturnRadius, CallFunc_BreakVector_Y) == 0x000008, "Member 'ACTOR_Saturn_C_GetScaledSaturnRadius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_GetScaledSaturnRadius, CallFunc_BreakVector_Z) == 0x00000C, "Member 'ACTOR_Saturn_C_GetScaledSaturnRadius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_GetScaledSaturnRadius, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ACTOR_Saturn_C_GetScaledSaturnRadius::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.CreateRingPermeabilityTexture
// 0x0028 (0x0028 - 0x0000)
struct ACTOR_Saturn_C_CreateRingPermeabilityTexture final
{
public:
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_CreateRingPermeabilityTexture) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_CreateRingPermeabilityTexture");
static_assert(sizeof(ACTOR_Saturn_C_CreateRingPermeabilityTexture) == 0x000028, "Wrong size on ACTOR_Saturn_C_CreateRingPermeabilityTexture");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000000, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000008, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_CreateRingPermeabilityTexture, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'ACTOR_Saturn_C_CreateRingPermeabilityTexture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdatePlanetaryRotation
// 0x011C (0x011C - 0x0000)
struct ACTOR_Saturn_C_UpdatePlanetaryRotation final
{
public:
	float                                         CurrentSunYawDegrees;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSaturnYawDegrees;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedPlayTime;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGame_ReturnValue;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_UpdatePlanetaryRotation) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_UpdatePlanetaryRotation");
static_assert(sizeof(ACTOR_Saturn_C_UpdatePlanetaryRotation) == 0x00011C, "Wrong size on ACTOR_Saturn_C_UpdatePlanetaryRotation");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CurrentSunYawDegrees) == 0x000000, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CurrentSunYawDegrees' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CurrentSaturnYawDegrees) == 0x000004, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CurrentSaturnYawDegrees' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, ElapsedPlayTime) == 0x000008, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::ElapsedPlayTime' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_IsGame_ReturnValue) == 0x00000C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_IsGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_IsValid_ReturnValue_1) == 0x00000E, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000010, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_NormalizeAxis_ReturnValue) == 0x000020, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000024, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000030, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_DegCos_ReturnValue) == 0x000034, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_DegSin_ReturnValue) == 0x000048, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000058, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00005C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000068, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000074, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000078, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000100, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_NormalizeAxis_ReturnValue_1) == 0x000104, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000108, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_ComposeRotators_ReturnValue) == 0x00010C, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_UpdatePlanetaryRotation, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000118, "Member 'ACTOR_Saturn_C_UpdatePlanetaryRotation::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.InitializePlanetRotationParameters
// 0x0074 (0x0074 - 0x0000)
struct ACTOR_Saturn_C_InitializePlanetRotationParameters final
{
public:
	struct FVector                                SaturnOrbitVector;                                 // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FindBestAxisVectors_OutAxis1;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindBestAxisVectors_OutAxis2;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ACTOR_Saturn_C_InitializePlanetRotationParameters) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_InitializePlanetRotationParameters");
static_assert(sizeof(ACTOR_Saturn_C_InitializePlanetRotationParameters) == 0x000074, "Wrong size on ACTOR_Saturn_C_InitializePlanetRotationParameters");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, SaturnOrbitVector) == 0x000000, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::SaturnOrbitVector' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_MakeVector_ReturnValue) == 0x00000C, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_Normal_ReturnValue) == 0x00001C, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_FindBestAxisVectors_OutAxis1) == 0x000034, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_FindBestAxisVectors_OutAxis1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_FindBestAxisVectors_OutAxis2) == 0x000040, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_FindBestAxisVectors_OutAxis2' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_Normal_ReturnValue_1) == 0x00004C, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_InitializePlanetRotationParameters, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'ACTOR_Saturn_C_InitializePlanetRotationParameters::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.SetOuterspaceVisibleThroughWindows
// 0x0002 (0x0002 - 0x0000)
struct ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows final
{
public:
	bool                                          VisibleState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows) == 0x000001, "Wrong alignment on ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows");
static_assert(sizeof(ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows) == 0x000002, "Wrong size on ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows");
static_assert(offsetof(ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows, VisibleState) == 0x000000, "Member 'ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows::VisibleState' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.SetSunSettingsFromLevelAtmosphere
// 0x0138 (0x0138 - 0x0000)
struct ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere final
{
public:
	struct FSTRUCT_LevelAtmosphereSettings        CurrentSettings;                                   // 0x0000(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LevelInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelAtmosphereSettings        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x010C(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere");
static_assert(sizeof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere) == 0x000138, "Wrong size on ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CurrentSettings) == 0x000000, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CurrentSettings' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000028, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000108, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x00010C, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000130, "Member 'ACTOR_Saturn_C_SetSunSettingsFromLevelAtmosphere::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSaturnVisibility
// 0x0001 (0x0001 - 0x0000)
struct ACTOR_Saturn_C_UpdateSaturnVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateSaturnVisibility) == 0x000001, "Wrong alignment on ACTOR_Saturn_C_UpdateSaturnVisibility");
static_assert(sizeof(ACTOR_Saturn_C_UpdateSaturnVisibility) == 0x000001, "Wrong size on ACTOR_Saturn_C_UpdateSaturnVisibility");
static_assert(offsetof(ACTOR_Saturn_C_UpdateSaturnVisibility, VisibilityState) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateSaturnVisibility::VisibilityState' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateRingVisibility
// 0x0001 (0x0001 - 0x0000)
struct ACTOR_Saturn_C_UpdateRingVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_UpdateRingVisibility) == 0x000001, "Wrong alignment on ACTOR_Saturn_C_UpdateRingVisibility");
static_assert(sizeof(ACTOR_Saturn_C_UpdateRingVisibility) == 0x000001, "Wrong size on ACTOR_Saturn_C_UpdateRingVisibility");
static_assert(offsetof(ACTOR_Saturn_C_UpdateRingVisibility, VisibilityState) == 0x000000, "Member 'ACTOR_Saturn_C_UpdateRingVisibility::VisibilityState' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct ACTOR_Saturn_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(ACTOR_Saturn_C_ShouldSaveActor) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_ShouldSaveActor");
static_assert(sizeof(ACTOR_Saturn_C_ShouldSaveActor) == 0x000038, "Wrong size on ACTOR_Saturn_C_ShouldSaveActor");
static_assert(offsetof(ACTOR_Saturn_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'ACTOR_Saturn_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'ACTOR_Saturn_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct ACTOR_Saturn_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on ACTOR_Saturn_C_ReceivePendingBodyTransforms");
static_assert(sizeof(ACTOR_Saturn_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on ACTOR_Saturn_C_ReceivePendingBodyTransforms");
static_assert(offsetof(ACTOR_Saturn_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'ACTOR_Saturn_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'ACTOR_Saturn_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'ACTOR_Saturn_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct ACTOR_Saturn_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ACTOR_Saturn_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on ACTOR_Saturn_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(ACTOR_Saturn_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on ACTOR_Saturn_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(ACTOR_Saturn_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'ACTOR_Saturn_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(ACTOR_Saturn_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'ACTOR_Saturn_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SoftwarePanel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SoftwarePanel.WIDGET_SoftwarePanel_C.InitializeSoftwarePanel
// 0x0098 (0x0098 - 0x0000)
struct WIDGET_SoftwarePanel_C_InitializeSoftwarePanel final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWIDGET_SoftwareListItem_C*>     K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWIDGET_SoftwareListItem_C*             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWIDGET_ImplantButton_C*>        K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_ImplantButton_C*                CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel) == 0x000008, "Wrong alignment on WIDGET_SoftwarePanel_C_InitializeSoftwarePanel");
static_assert(sizeof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel) == 0x000098, "Wrong size on WIDGET_SoftwarePanel_C_InitializeSoftwarePanel");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, HUD) == 0x000000, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_GetHackerGender_Result) == 0x000041, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, K2Node_MakeArray_Array) == 0x000050, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Array_Get_Item) == 0x000060, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, K2Node_MakeArray_Array_1) == 0x000070, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_InitializeSoftwarePanel, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'WIDGET_SoftwarePanel_C_InitializeSoftwarePanel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SoftwarePanel.WIDGET_SoftwarePanel_C.SetSoftwarePanelVisibility
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility) == 0x000001, "Wrong alignment on WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility");
static_assert(sizeof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility) == 0x000005, "Wrong size on WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility");
static_assert(offsetof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility, Visible) == 0x000000, "Member 'WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility, K2Node_Select_Default) == 0x000004, "Member 'WIDGET_SoftwarePanel_C_SetSoftwarePanelVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SoftwarePanel.WIDGET_SoftwarePanel_C.EVENT_OnMouseMove
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_SoftwarePanel_C_EVENT_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove) == 0x000008, "Wrong alignment on WIDGET_SoftwarePanel_C_EVENT_OnMouseMove");
static_assert(sizeof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove) == 0x000218, "Wrong size on WIDGET_SoftwarePanel_C_EVENT_OnMouseMove");
static_assert(offsetof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove, MyGeometry) == 0x000000, "Member 'WIDGET_SoftwarePanel_C_EVENT_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove, MouseEvent) == 0x000038, "Member 'WIDGET_SoftwarePanel_C_EVENT_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove, ReturnValue) == 0x0000A8, "Member 'WIDGET_SoftwarePanel_C_EVENT_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SoftwarePanel_C_EVENT_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_SoftwarePanel_C_EVENT_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");

}


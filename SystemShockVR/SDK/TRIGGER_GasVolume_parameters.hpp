#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_GasVolume

#include "Basic.hpp"

#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.ExecuteUbergraph_TRIGGER_GasVolume
// 0x0038 (0x0038 - 0x0000)
struct TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelNavAgentComponent*                K2Node_ComponentBoundEvent_AgentComponent;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_ComponentBoundEvent_MaxOverlapPropagationDensity; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume");
static_assert(sizeof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume) == 0x000038, "Wrong size on TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, EntryPoint) == 0x000000, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, K2Node_ComponentBoundEvent_AgentComponent) == 0x000008, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::K2Node_ComponentBoundEvent_AgentComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, K2Node_ComponentBoundEvent_MaxOverlapPropagationDensity) == 0x000010, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::K2Node_ComponentBoundEvent_MaxOverlapPropagationDensity' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000014, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TRIGGER_GasVolume_C_ExecuteUbergraph_TRIGGER_GasVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature final
{
public:
	class UVoxelNavAgentComponent*                AgentComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         MaxOverlapPropagationDensity;                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature");
static_assert(sizeof(TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature) == 0x000010, "Wrong size on TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature");
static_assert(offsetof(TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature, AgentComponent) == 0x000000, "Member 'TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature::AgentComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature, MaxOverlapPropagationDensity) == 0x000008, "Member 'TRIGGER_GasVolume_C_BndEvt__TRIGGER_GasVolume_COMP_VoxelCullablePropagator_K2Node_ComponentBoundEvent_0_PropagationDensityChangedSignature__DelegateSignature::MaxOverlapPropagationDensity' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.InitializeGasVolume
// 0x0018 (0x0018 - 0x0000)
struct TRIGGER_GasVolume_C_InitializeGasVolume final
{
public:
	class UAttribDamageType*                      InDamageType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDamageValue;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InGasDuration;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_GasVolume_C_InitializeGasVolume) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_InitializeGasVolume");
static_assert(sizeof(TRIGGER_GasVolume_C_InitializeGasVolume) == 0x000018, "Wrong size on TRIGGER_GasVolume_C_InitializeGasVolume");
static_assert(offsetof(TRIGGER_GasVolume_C_InitializeGasVolume, InDamageType) == 0x000000, "Member 'TRIGGER_GasVolume_C_InitializeGasVolume::InDamageType' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_InitializeGasVolume, InDamageValue) == 0x000008, "Member 'TRIGGER_GasVolume_C_InitializeGasVolume::InDamageValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_InitializeGasVolume, InGasDuration) == 0x00000C, "Member 'TRIGGER_GasVolume_C_InitializeGasVolume::InGasDuration' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_InitializeGasVolume, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'TRIGGER_GasVolume_C_InitializeGasVolume::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.TryBeginGasBehavior
// 0x0140 (0x0140 - 0x0000)
struct TRIGGER_GasVolume_C_TryBeginGasBehavior final
{
public:
	float                                         PropagationDurationRemaining;                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDurationRemaining;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeSinceSpawn;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	struct FLatentObjectEventHandle               K2Node_MakeStruct_LatentObjectEventHandle;         // 0x0048(0x0010)(ContainsInstancedReference)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0058(0x0030)(HasGetValueTypeHash)
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array_2;                          // 0x0088(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_3;                          // 0x0098(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams_1;           // 0x00A8(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_GasVolume_C_TryBeginGasBehavior) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_TryBeginGasBehavior");
static_assert(sizeof(TRIGGER_GasVolume_C_TryBeginGasBehavior) == 0x000140, "Wrong size on TRIGGER_GasVolume_C_TryBeginGasBehavior");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, PropagationDurationRemaining) == 0x000000, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::PropagationDurationRemaining' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, TotalDurationRemaining) == 0x000004, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::TotalDurationRemaining' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, ElapsedTimeSinceSpawn) == 0x000008, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::ElapsedTimeSinceSpawn' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeArray_Array) == 0x000028, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeArray_Array_1) == 0x000038, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeStruct_LatentObjectEventHandle) == 0x000048, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeStruct_LatentObjectEventHandle' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000058, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeArray_Array_2) == 0x000088, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeArray_Array_3) == 0x000098, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_MakeStruct_STRUCT_EffectParams_1) == 0x0000A8, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_MakeStruct_STRUCT_EffectParams_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000D8, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0000E0, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000FC, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000100, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000108, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000120, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000128, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000130, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000134, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_TryBeginGasBehavior, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000138, "Member 'TRIGGER_GasVolume_C_TryBeginGasBehavior::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.EVENT_BeginDissipatingGas
// 0x0048 (0x0048 - 0x0000)
struct TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVoxelAudioComponent*>           CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVoxelAudioComponent*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas");
static_assert(sizeof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas) == 0x000048, "Wrong size on TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000028, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_Array_Get_Item) == 0x000038, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'TRIGGER_GasVolume_C_EVENT_BeginDissipatingGas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.UpdateGasAttribModOnCharacter
// 0x00F0 (0x00F0 - 0x0000)
struct TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GasIntensity;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledGasTickrate;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             GasDamageMod;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    GasDamageApplyData;                                // 0x0018(0x00A0)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ExpireModsFromSourceActor_ReturnValue;    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter");
static_assert(sizeof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter) == 0x0000F0, "Wrong size on TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, Character) == 0x000000, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::Character' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, GasIntensity) == 0x000008, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::GasIntensity' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, ScaledGasTickrate) == 0x00000C, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::ScaledGasTickrate' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, GasDamageMod) == 0x000010, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::GasDamageMod' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, GasDamageApplyData) == 0x000018, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::GasDamageApplyData' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B8, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_ApplyMod_ReturnValue) == 0x0000C0, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Lerp_ReturnValue) == 0x0000CC, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D4, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Round_ReturnValue) == 0x0000D8, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000DC, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_GetActiveModWithCategory_ReturnValue) == 0x0000E0, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_GetActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter, CallFunc_ExpireModsFromSourceActor_ReturnValue) == 0x0000E8, "Member 'TRIGGER_GasVolume_C_UpdateGasAttribModOnCharacter::CallFunc_ExpireModsFromSourceActor_ReturnValue' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct TRIGGER_GasVolume_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(TRIGGER_GasVolume_C_ShouldSaveActor) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_ShouldSaveActor");
static_assert(sizeof(TRIGGER_GasVolume_C_ShouldSaveActor) == 0x000038, "Wrong size on TRIGGER_GasVolume_C_ShouldSaveActor");
static_assert(offsetof(TRIGGER_GasVolume_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'TRIGGER_GasVolume_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'TRIGGER_GasVolume_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'TRIGGER_GasVolume_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct TRIGGER_GasVolume_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_GasVolume_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on TRIGGER_GasVolume_C_ReceivePendingBodyTransforms");
static_assert(sizeof(TRIGGER_GasVolume_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on TRIGGER_GasVolume_C_ReceivePendingBodyTransforms");
static_assert(offsetof(TRIGGER_GasVolume_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'TRIGGER_GasVolume_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'TRIGGER_GasVolume_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'TRIGGER_GasVolume_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function TRIGGER_GasVolume.TRIGGER_GasVolume_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'TRIGGER_GasVolume_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


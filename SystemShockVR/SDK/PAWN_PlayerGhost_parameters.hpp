#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_PlayerGhost

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.ExecuteUbergraph_PAWN_PlayerGhost
// 0x05F0 (0x05F0 - 0x0000)
struct PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x00C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x00E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x00F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0110(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0128(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0158(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x0170(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0188(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x01A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x01B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x01D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0200(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0218(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0230(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x0248(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0260(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0278(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_8;                            // 0x0290(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x02A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x02C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_9;                            // 0x02D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_10;                           // 0x02F0(0x0018)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x0318(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x0340(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_11;                           // 0x0358(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x0370(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x0388(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_12;                           // 0x03A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x03B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x03D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_13;                           // 0x0408(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x0420(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x0438(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_14;                           // 0x0450(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_30;                    // 0x0468(0x0018)(HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_31;                    // 0x0488(0x0018)(HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker_1;                 // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PreGameScreen_C*                CallFunc_Create_ReturnValue;                       // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_LoadingScreen_C*                CallFunc_Create_ReturnValue_1;                     // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker_2;                 // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_GameOverScreen_C*               CallFunc_Create_ReturnValue_2;                     // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_CitadelStation_C*                   K2Node_DynamicCast_AsGM_Citadel_Station;           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryLoadStartingLevel_Result;              // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x6];                                      // 0x0502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x0508(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowIntroSequence_Result;           // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_Title_C*                            K2Node_DynamicCast_AsGM_Title;                     // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_15;                           // 0x0540(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x0558(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0570(0x0010)(ZeroConstructor, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGM_CitadelStation_C*                   K2Node_DynamicCast_AsGM_Citadel_Station_1;         // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x05A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x05C0(0x0018)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost");
static_assert(sizeof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost) == 0x0005F0, "Wrong size on PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, EntryPoint) == 0x000000, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_18) == 0x000008, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable) == 0x000020, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_17) == 0x000038, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_16) == 0x000050, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_1) == 0x000068, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_15) == 0x000080, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_14) == 0x000098, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_2) == 0x0000B0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_13) == 0x0000C8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_12) == 0x0000E0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_3) == 0x0000F8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputKeyEvent_Key_1) == 0x000110, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputKeyEvent_Key) == 0x000128, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_11) == 0x000140, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_10) == 0x000158, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_4) == 0x000170, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_9) == 0x000188, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_8) == 0x0001A0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_5) == 0x0001B8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_7) == 0x0001D0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_6) == 0x0001E8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_6) == 0x000200, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_5) == 0x000218, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_4) == 0x000230, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_7) == 0x000248, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_3) == 0x000260, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_2) == 0x000278, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_8) == 0x000290, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_1) == 0x0002A8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key) == 0x0002C0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_9) == 0x0002D8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_10) == 0x0002F0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetController_ReturnValue) == 0x000308, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_IsValid_ReturnValue) == 0x000310, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_IsValid_ReturnValue_1) == 0x000311, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_22) == 0x000318, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_IsValid_ReturnValue_2) == 0x000330, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputAxisEvent_AxisValue_1) == 0x000334, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputAxisEvent_AxisValue) == 0x000338, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Less_FloatFloat_ReturnValue) == 0x00033C, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00033D, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00033E, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00033F, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_23) == 0x000340, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_11) == 0x000358, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_24) == 0x000370, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_25) == 0x000388, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_12) == 0x0003A0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_26) == 0x0003B8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_27) == 0x0003D0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0003E8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetPlatformName_ReturnValue) == 0x0003F0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Not_PreBool_ReturnValue) == 0x000400, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_13) == 0x000408, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_28) == 0x000420, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_29) == 0x000438, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_14) == 0x000450, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_30) == 0x000468, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_30' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_Event_OldController) == 0x000480, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_31) == 0x000488, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_31' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_Event_NewController) == 0x0004A0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsCON_Hacker) == 0x0004A8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess) == 0x0004B0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsCON_Hacker_1) == 0x0004B8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsCON_Hacker_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_1) == 0x0004C0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Create_ReturnValue) == 0x0004C8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Create_ReturnValue_1) == 0x0004D0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsCON_Hacker_2) == 0x0004D8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsCON_Hacker_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_2) == 0x0004E0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetGameMode_ReturnValue) == 0x0004E8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_Create_ReturnValue_2) == 0x0004F0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsGM_Citadel_Station) == 0x0004F8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsGM_Citadel_Station' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_3) == 0x000500, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_TryLoadStartingLevel_Result) == 0x000501, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_TryLoadStartingLevel_Result' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_19) == 0x000508, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_ShouldShowIntroSequence_Result) == 0x000520, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_ShouldShowIntroSequence_Result' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetGameMode_ReturnValue_1) == 0x000528, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsGM_Title) == 0x000530, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsGM_Title' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_4) == 0x000538, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, Temp_struct_Variable_15) == 0x000540, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_20) == 0x000558, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_CreateDelegate_OutputDelegate) == 0x000570, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetGameMode_ReturnValue_2) == 0x000580, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000588, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsGM_Citadel_Station_1) == 0x000598, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsGM_Citadel_Station_1' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_5) == 0x0005A0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0005A1, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputKeyEvent_Key_2) == 0x0005A8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_InputActionEvent_Key_21) == 0x0005C0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, CallFunc_GetGameInstance_ReturnValue) == 0x0005D8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_AsGI_Single_Player) == 0x0005E0, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost, K2Node_DynamicCast_bSuccess_6) == 0x0005E8, "Member 'PAWN_PlayerGhost_C_ExecuteUbergraph_PAWN_PlayerGhost::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct PAWN_PlayerGhost_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_ReceivePossessed) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_ReceivePossessed");
static_assert(sizeof(PAWN_PlayerGhost_C_ReceivePossessed) == 0x000008, "Wrong size on PAWN_PlayerGhost_C_ReceivePossessed");
static_assert(offsetof(PAWN_PlayerGhost_C_ReceivePossessed, NewController) == 0x000000, "Member 'PAWN_PlayerGhost_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct PAWN_PlayerGhost_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_ReceiveUnpossessed");
static_assert(sizeof(PAWN_PlayerGhost_C_ReceiveUnpossessed) == 0x000008, "Wrong size on PAWN_PlayerGhost_C_ReceiveUnpossessed");
static_assert(offsetof(PAWN_PlayerGhost_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'PAWN_PlayerGhost_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17) == 0x000004, "Wrong alignment on PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17");
static_assert(sizeof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17");
static_assert(offsetof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17, AxisValue) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17::AxisValue' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16) == 0x000004, "Wrong alignment on PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16");
static_assert(sizeof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16");
static_assert(offsetof(PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16, AxisValue) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16::AxisValue' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Home_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Home_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Locked_Escape_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_Locked_Escape_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_30::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_31::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(sizeof(PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2");
static_assert(offsetof(PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'PAWN_PlayerGhost_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.EVENT_OnStartingLevelFinishedLoading
// 0x0001 (0x0001 - 0x0000)
struct PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading");
static_assert(sizeof(PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading) == 0x000001, "Wrong size on PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading");
static_assert(offsetof(PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PAWN_PlayerGhost_C_EVENT_OnStartingLevelFinishedLoading::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavUp
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavUp final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavUp) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavUp");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavUp) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavUp");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavUp, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavUp::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavUp, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavUp, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavUp, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavUp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavDown
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavDown final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavDown) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavDown");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavDown) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavDown");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavDown, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavDown::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavDown, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavDown, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavDown, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavDown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavLeft
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavLeft final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavLeft) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavLeft");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavLeft) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavLeft");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavLeft, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavLeft::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavLeft, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavLeft, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavLeft::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavRight
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavRight final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavRight) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavRight");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavRight) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavRight");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavRight, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavRight::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavRight, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavRight, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavRight, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavRight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavAccept
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavAccept final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavAccept) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavAccept");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavAccept) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavAccept");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAccept, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAccept::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAccept, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAccept::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAccept, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAccept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAccept, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAccept::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavBack
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavBack final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavBack) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavBack");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavBack) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavBack");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavBack, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavBack::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavBack, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavBack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavBack, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavBack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavBack, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavBack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavAlt1
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavAlt1 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavAlt1) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavAlt1");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavAlt1) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavAlt1");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt1, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt1::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt1, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt1, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt1, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt1::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavAlt2
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavAlt2 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavAlt2) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavAlt2");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavAlt2) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavAlt2");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt2, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt2::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt2, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt2, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavAlt2, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavAlt2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavTabLeft
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavTabLeft final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavTabLeft");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavTabLeft");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabLeft::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabLeft, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabLeft::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleMenuNavTabRight
// 0x0004 (0x0004 - 0x0000)
struct PAWN_PlayerGhost_C_HandleMenuNavTabRight final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleMenuNavTabRight) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleMenuNavTabRight");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleMenuNavTabRight) == 0x000004, "Wrong size on PAWN_PlayerGhost_C_HandleMenuNavTabRight");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabRight, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabRight::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabRight, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabRight, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleMenuNavTabRight, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'PAWN_PlayerGhost_C_HandleMenuNavTabRight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleSecretCodeA
// 0x0002 (0x0002 - 0x0000)
struct PAWN_PlayerGhost_C_HandleSecretCodeA final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleSecretCodeA) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleSecretCodeA");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleSecretCodeA) == 0x000002, "Wrong size on PAWN_PlayerGhost_C_HandleSecretCodeA");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeA, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeA::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeA, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeA::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleSecretCodeB
// 0x0002 (0x0002 - 0x0000)
struct PAWN_PlayerGhost_C_HandleSecretCodeB final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleSecretCodeB) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleSecretCodeB");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleSecretCodeB) == 0x000002, "Wrong size on PAWN_PlayerGhost_C_HandleSecretCodeB");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeB, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeB::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeB, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeB::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_PlayerGhost.PAWN_PlayerGhost_C.HandleSecretCodeStart
// 0x0002 (0x0002 - 0x0000)
struct PAWN_PlayerGhost_C_HandleSecretCodeStart final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_PlayerGhost_C_HandleSecretCodeStart) == 0x000001, "Wrong alignment on PAWN_PlayerGhost_C_HandleSecretCodeStart");
static_assert(sizeof(PAWN_PlayerGhost_C_HandleSecretCodeStart) == 0x000002, "Wrong size on PAWN_PlayerGhost_C_HandleSecretCodeStart");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeStart, ButtonDown) == 0x000000, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeStart::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_PlayerGhost_C_HandleSecretCodeStart, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_PlayerGhost_C_HandleSecretCodeStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


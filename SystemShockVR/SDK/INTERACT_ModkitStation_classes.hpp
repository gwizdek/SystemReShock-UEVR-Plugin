#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ModkitStation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_ModkitStation.INTERACT_ModkitStation_C
// 0x0210 (0x0518 - 0x0308)
class AINTERACT_ModkitStation_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_ModkitStation_C;           // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ScannableObject_C*                COMP_ScannableObject;                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_CancelButton;                                 // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_CoinSlot;                                     // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RightDispenserSpawnNode;                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LeftDispenserSpawnNode;                            // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointOfInterestComponent_C*            PointOfInterestComponent;                          // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_RightModkitScreen;                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_LeftModkitScreen;                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StationMesh;                                       // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LeftModkitClass;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         LeftModkitCost;                                    // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RightModkitClass;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RightModkitCost;                                   // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenInitialized;                                // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         CreditsPaid;                                       // 0x038A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B[0x5];                                      // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_WeaponModKit_Base_C*            LeftPickupActor;                                   // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_WeaponModKit_Base_C*            RightPickupActor;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DispenseDuration;                                  // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeftDispenseProgress;                              // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightDispenseProgress;                             // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   AcceptedPaymentMessage;                            // 0x03B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RequiresPaymentMessage;                            // 0x03D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RefundProcessedMessage;                            // 0x03E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ModkitDescriptionMessage;                          // 0x0400(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ItemSoldOutMessage;                                // 0x0418(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    CompleteTutorialOnInteract;                        // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FText                                   NoStockMessage;                                    // 0x0440(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TakeModkitMessage;                                 // 0x0458(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USoundCue>               PaymentAcceptedSoundCue;                           // 0x0470(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               RefundProcessedSoundCue;                           // 0x0498(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ProtractModkitSoundCue;                            // 0x04C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               RetractModkitSoundCue;                             // 0x04E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           DispenseDelayTimerHandle;                          // 0x0510(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_ModkitStation(int32 EntryPoint);
	void BndEvt__INTERACT_ModkitStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeModkitStation();
	void InitializeAttributes();
	void TickModkitStation(float DeltaTime);
	void TryTickModKitTransition(class USceneComponent* SpawnNode, class APICKUP_WeaponModKit_Base_C* PickupActor, float& Progress, float DeltaTime, bool* IsFinished);
	void UpdateEmissiveStrength(float Scale);
	void UpdateModkitDispensePosition(class USceneComponent* SpawnNode, class APICKUP_WeaponModKit_Base_C* PickupActor, float Progress);
	void UpdateModkitSelectionScreen(int32 ScreenIndex, bool HasStock);
	void CreateDynamicMaterial();
	void SpawnModkitPickupActor(int32 DispenserIndex);
	void SetModkitScreenDescription(int32 ScreenIndex, const class FText& Description);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void SetDispenserEmissiveState(int32 DispenserIndex, bool Active);
	void FinalizePayment(class APAWN_SystemShockCharacter_C* Character, int32 DispenserIndex);
	void OnPaidCost();
	void TryProtractModkit(int32 DispenserIndex, bool* Result);
	void TryRetractModkit(int32 DispenserIndex, bool* Result);
	void TryMakePayment(class APAWN_SystemShockCharacter_C* Character, uint8 CostToPay, bool* Result);
	void TryRefundPayment(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	void TryCompleteTutorialOnInteract();
	void IsModkitStationFunctional(bool* Result);
	void HasAnyModkitsInStock(bool* Result);
	void GetMinModkitCost(uint8* Result);
	void GetMaxModkitCost(uint8* Result);
	void EVENT_OnDispenseDelayFinished();
	void EVENT_OnPickedupModkit(class APICKUP_Base_C* PickupActor);
	void UpdateModkitStationVisibility(bool VisibilityState);
	void CanReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void TryReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void GetRequiredCostIncrement(uint8* Result);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_ModkitStation_C">();
	}
	static class AINTERACT_ModkitStation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_ModkitStation_C>();
	}
};
static_assert(alignof(AINTERACT_ModkitStation_C) == 0x000008, "Wrong alignment on AINTERACT_ModkitStation_C");
static_assert(sizeof(AINTERACT_ModkitStation_C) == 0x000518, "Wrong size on AINTERACT_ModkitStation_C");
static_assert(offsetof(AINTERACT_ModkitStation_C, UberGraphFrame_INTERACT_ModkitStation_C) == 0x000308, "Member 'AINTERACT_ModkitStation_C::UberGraphFrame_INTERACT_ModkitStation_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, COMP_AttribManager) == 0x000310, "Member 'AINTERACT_ModkitStation_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, COMP_ScannableObject) == 0x000318, "Member 'AINTERACT_ModkitStation_C::COMP_ScannableObject' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, SpotLight) == 0x000320, "Member 'AINTERACT_ModkitStation_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, COMP_VoxelCullable) == 0x000328, "Member 'AINTERACT_ModkitStation_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, Scan_CancelButton) == 0x000330, "Member 'AINTERACT_ModkitStation_C::Scan_CancelButton' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, Scan_CoinSlot) == 0x000338, "Member 'AINTERACT_ModkitStation_C::Scan_CoinSlot' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RightDispenserSpawnNode) == 0x000340, "Member 'AINTERACT_ModkitStation_C::RightDispenserSpawnNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, LeftDispenserSpawnNode) == 0x000348, "Member 'AINTERACT_ModkitStation_C::LeftDispenserSpawnNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, PointOfInterestComponent) == 0x000350, "Member 'AINTERACT_ModkitStation_C::PointOfInterestComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, Scan_RightModkitScreen) == 0x000358, "Member 'AINTERACT_ModkitStation_C::Scan_RightModkitScreen' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, Scan_LeftModkitScreen) == 0x000360, "Member 'AINTERACT_ModkitStation_C::Scan_LeftModkitScreen' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, StationMesh) == 0x000368, "Member 'AINTERACT_ModkitStation_C::StationMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, LeftModkitClass) == 0x000370, "Member 'AINTERACT_ModkitStation_C::LeftModkitClass' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, LeftModkitCost) == 0x000378, "Member 'AINTERACT_ModkitStation_C::LeftModkitCost' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RightModkitClass) == 0x000380, "Member 'AINTERACT_ModkitStation_C::RightModkitClass' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RightModkitCost) == 0x000388, "Member 'AINTERACT_ModkitStation_C::RightModkitCost' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, HasBeenInitialized) == 0x000389, "Member 'AINTERACT_ModkitStation_C::HasBeenInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, CreditsPaid) == 0x00038A, "Member 'AINTERACT_ModkitStation_C::CreditsPaid' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, LeftPickupActor) == 0x000390, "Member 'AINTERACT_ModkitStation_C::LeftPickupActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RightPickupActor) == 0x000398, "Member 'AINTERACT_ModkitStation_C::RightPickupActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, DispenseDuration) == 0x0003A0, "Member 'AINTERACT_ModkitStation_C::DispenseDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, LeftDispenseProgress) == 0x0003A4, "Member 'AINTERACT_ModkitStation_C::LeftDispenseProgress' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RightDispenseProgress) == 0x0003A8, "Member 'AINTERACT_ModkitStation_C::RightDispenseProgress' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, DynamicMaterial) == 0x0003B0, "Member 'AINTERACT_ModkitStation_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, AcceptedPaymentMessage) == 0x0003B8, "Member 'AINTERACT_ModkitStation_C::AcceptedPaymentMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RequiresPaymentMessage) == 0x0003D0, "Member 'AINTERACT_ModkitStation_C::RequiresPaymentMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RefundProcessedMessage) == 0x0003E8, "Member 'AINTERACT_ModkitStation_C::RefundProcessedMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, ModkitDescriptionMessage) == 0x000400, "Member 'AINTERACT_ModkitStation_C::ModkitDescriptionMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, ItemSoldOutMessage) == 0x000418, "Member 'AINTERACT_ModkitStation_C::ItemSoldOutMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, CompleteTutorialOnInteract) == 0x000430, "Member 'AINTERACT_ModkitStation_C::CompleteTutorialOnInteract' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, NoStockMessage) == 0x000440, "Member 'AINTERACT_ModkitStation_C::NoStockMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, TakeModkitMessage) == 0x000458, "Member 'AINTERACT_ModkitStation_C::TakeModkitMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, PaymentAcceptedSoundCue) == 0x000470, "Member 'AINTERACT_ModkitStation_C::PaymentAcceptedSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RefundProcessedSoundCue) == 0x000498, "Member 'AINTERACT_ModkitStation_C::RefundProcessedSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, ProtractModkitSoundCue) == 0x0004C0, "Member 'AINTERACT_ModkitStation_C::ProtractModkitSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, RetractModkitSoundCue) == 0x0004E8, "Member 'AINTERACT_ModkitStation_C::RetractModkitSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_ModkitStation_C, DispenseDelayTimerHandle) == 0x000510, "Member 'AINTERACT_ModkitStation_C::DispenseDelayTimerHandle' has a wrong offset!");

}


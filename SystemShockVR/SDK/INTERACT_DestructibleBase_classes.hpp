#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_DestructibleBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_EnemyType_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_DestructibleBase.INTERACT_DestructibleBase_C
// 0x0040 (0x0348 - 0x0308)
class AINTERACT_DestructibleBase_C : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_DestructibleBase_C;        // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CompleteGameEventOnDestroy;                        // 0x0318(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    CompleteGameEventOnDamage;                         // 0x0328(0x0010)(Edit, BlueprintVisible, NoDestructor)
	FMulticastInlineDelegateProperty_             OnDestructibleDestroyed;                           // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnDestructibleDestroyed__DelegateSignature();
	void ExecuteUbergraph_INTERACT_DestructibleBase(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InitializeDestructible();
	void InitializeAttributes(bool GrantDefaultAttribs);
	void IsAlive(bool* Result);
	void IsDead(bool* Result);
	void OnTakeDamage(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams, bool* Result);
	void OnDeath(class AActor* SourceActor, bool* Result);
	void EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams);
	void UpdateDeathSettings(bool DuringBeginPlay, bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void SetDestroyedDescription();
	void TryCompleteOnDestroyGameEvent();
	void TryCompleteOnDamageGameEvent();
	void CanInteractBeDestroyed(bool* Result);
	void GetInteractDestroyed(bool* Result);
	void IsTargetIdentifiable(bool* Result);
	void GetArmorAugmentationPercentage(class UOBJ_ImpactData_C* ImpactData, float* Result);
	void CanHackDestructible(class APAWN_SystemShockCharacter_C* SourceCharacter, bool* Result);
	void GetThreatLevel(int32* ThreatLevel);
	void GetEnemyTypeForTargeting(ENUM_EnemyType* Result);
	void GetDefaultOverrideAttributes(TArray<struct FDefaultAttribute>* Result);
	void GetDetectionComponent(class UCOMP_EnemyDetection_C** Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_DestructibleBase_C">();
	}
	static class AINTERACT_DestructibleBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_DestructibleBase_C>();
	}
};
static_assert(alignof(AINTERACT_DestructibleBase_C) == 0x000008, "Wrong alignment on AINTERACT_DestructibleBase_C");
static_assert(sizeof(AINTERACT_DestructibleBase_C) == 0x000348, "Wrong size on AINTERACT_DestructibleBase_C");
static_assert(offsetof(AINTERACT_DestructibleBase_C, UberGraphFrame_INTERACT_DestructibleBase_C) == 0x000308, "Member 'AINTERACT_DestructibleBase_C::UberGraphFrame_INTERACT_DestructibleBase_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_DestructibleBase_C, COMP_AttribManager) == 0x000310, "Member 'AINTERACT_DestructibleBase_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_DestructibleBase_C, CompleteGameEventOnDestroy) == 0x000318, "Member 'AINTERACT_DestructibleBase_C::CompleteGameEventOnDestroy' has a wrong offset!");
static_assert(offsetof(AINTERACT_DestructibleBase_C, CompleteGameEventOnDamage) == 0x000328, "Member 'AINTERACT_DestructibleBase_C::CompleteGameEventOnDamage' has a wrong offset!");
static_assert(offsetof(AINTERACT_DestructibleBase_C, OnDestructibleDestroyed) == 0x000338, "Member 'AINTERACT_DestructibleBase_C::OnDestructibleDestroyed' has a wrong offset!");

}


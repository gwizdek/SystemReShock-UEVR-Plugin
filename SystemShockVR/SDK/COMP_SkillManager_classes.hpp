#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_SkillManager

#include "Basic.hpp"

#include "ENUM_SkillType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_PreferredCombatStyle_structs.hpp"
#include "STRUCT_DefaultSkillComboParams_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass COMP_SkillManager.COMP_SkillManager_C
// 0x0078 (0x0128 - 0x00B0)
class UCOMP_SkillManager_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UClass*>                         DefaultSkills;                                     // 0x00B8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSTRUCT_DefaultSkillComboParams> DefaultCombos;                                     // 0x00C8(0x0010)(Edit, BlueprintVisible)
	TArray<class USkill_C*>                       Skills;                                            // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame)
	class USkill_C*                               ActiveSkill;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCOMBOREQ_Base_C*>               CustomRequirements;                                // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 ComboCanBeUsedTimestamp;                           // 0x0100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame)
	int32                                         LastChosenComboIndex;                              // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastChosenComboSkillIndex;                         // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreferredDistance_Min;                             // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PreferredDistanceMinMax;                           // 0x011C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_COMP_SkillManager(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InitializeDefaultSkills(bool GrantDefaultSkills);
	void InitializeCustomRequirements();
	void CleanupSkills();
	void AddSkill(class UClass* Skill);
	void HasAnySkills(bool* Result);
	void EVENT_OnSkillActivated(class USkill_C* Skill);
	void EVENT_OnSkillDeactivated(class USkill_C* Skill);
	void GetSkillByClass(class UClass* SkillClass, bool AnyDerivedClass, class USkill_C** Skill);
	void GetActiveSkill(class USkill_C** Skill);
	void HasActiveCombo(bool* Result);
	void GetComboCooldownRemaining(int32 ComboIndex, float* Result);
	void GetCombosByType(ENUM_SkillType Type, TArray<int32>* Result);
	void GetCombosByStyle(ENUM_PreferredCombatStyle Style, TArray<int32>* Result);
	void GetCombosByTypes(TArray<ENUM_SkillType>& Types, TArray<int32>* Result);
	void GetLastUsedComboIndex(int32* LastComboIndex);
	void SelectRandomComboOfType(ENUM_SkillType SkillType, bool OnlyPreferredStyle, bool* Result);
	void GetActiveComboBehaviorTree(class UBehaviorTree** BehaviorTree);
	void GetPreferredDistanceMinMax(struct FVector2D* PreferredDistance);
	void IsComboInRange(int32 ComboIndex, bool* InRange);
	void IsAnyComboInRange(bool* Result);
	void IsAnyComboByTypeInRange(TArray<ENUM_SkillType>& Types, bool* Result);
	void CanStartCombo(int32 ComboIndex, bool* CanStart);
	void CanStartAnyComboOfType(ENUM_SkillType Type, bool* Result);
	void CanStartAnyComboOfTypes(TArray<ENUM_SkillType>& Types, bool* Result);
	void GetCombosOfTypeThatCanStart(ENUM_SkillType ComboType, TArray<int32>* Combos);
	void GetMinAttackComboRange(float* MinRange);
	void GetMaxAttackComboRange(float* MaxRange);
	void CheckCustomRequirements(int32 ComboIndex, bool* Result);
	void TriggerComboCooldown(int32 ComboIndex, bool TriggerGroup);
	void GetComboByBehaviorTree(class UBehaviorTree* BehaviorTree, int32* ComboIndex);
	bool ShouldSaveComponent(struct FStreamingSaveGameComponentParams* Params_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"COMP_SkillManager_C">();
	}
	static class UCOMP_SkillManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCOMP_SkillManager_C>();
	}
};
static_assert(alignof(UCOMP_SkillManager_C) == 0x000008, "Wrong alignment on UCOMP_SkillManager_C");
static_assert(sizeof(UCOMP_SkillManager_C) == 0x000128, "Wrong size on UCOMP_SkillManager_C");
static_assert(offsetof(UCOMP_SkillManager_C, UberGraphFrame) == 0x0000B0, "Member 'UCOMP_SkillManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, DefaultSkills) == 0x0000B8, "Member 'UCOMP_SkillManager_C::DefaultSkills' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, DefaultCombos) == 0x0000C8, "Member 'UCOMP_SkillManager_C::DefaultCombos' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, Skills) == 0x0000D8, "Member 'UCOMP_SkillManager_C::Skills' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, ActiveSkill) == 0x0000E8, "Member 'UCOMP_SkillManager_C::ActiveSkill' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, CustomRequirements) == 0x0000F0, "Member 'UCOMP_SkillManager_C::CustomRequirements' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, ComboCanBeUsedTimestamp) == 0x000100, "Member 'UCOMP_SkillManager_C::ComboCanBeUsedTimestamp' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, LastChosenComboIndex) == 0x000110, "Member 'UCOMP_SkillManager_C::LastChosenComboIndex' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, LastChosenComboSkillIndex) == 0x000114, "Member 'UCOMP_SkillManager_C::LastChosenComboSkillIndex' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, PreferredDistance_Min) == 0x000118, "Member 'UCOMP_SkillManager_C::PreferredDistance_Min' has a wrong offset!");
static_assert(offsetof(UCOMP_SkillManager_C, PreferredDistanceMinMax) == 0x00011C, "Member 'UCOMP_SkillManager_C::PreferredDistanceMinMax' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_Hotbar

#include "Basic.hpp"

#include "COMP_Hotbar_classes.hpp"
#include "COMP_Hotbar_parameters.hpp"


namespace SDK
{

// Function COMP_Hotbar.COMP_Hotbar_C.OnAddedToHotbar__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::OnAddedToHotbar__DelegateSignature(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "OnAddedToHotbar__DelegateSignature");

	Params::COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.OnRemovedFromHotbar__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::OnRemovedFromHotbar__DelegateSignature(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "OnRemovedFromHotbar__DelegateSignature");

	Params::COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.OnQuickSlotChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewSlotIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldSlotIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::OnQuickSlotChanged__DelegateSignature(class UCOMP_Hotbar_C* HotbarComponent, int32 NewSlotIndex, int32 OldSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "OnQuickSlotChanged__DelegateSignature");

	Params::COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.NewSlotIndex = NewSlotIndex;
	Parms.OldSlotIndex = OldSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.ExecuteUbergraph_COMP_Hotbar
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::ExecuteUbergraph_COMP_Hotbar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ExecuteUbergraph_COMP_Hotbar");

	Params::COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UCOMP_Hotbar_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_Hotbar.COMP_Hotbar_C.InitializeHotbarSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_Hotbar_C::InitializeHotbarSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "InitializeHotbarSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_Hotbar.COMP_Hotbar_C.AddToSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::AddToSlot(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "AddToSlot");

	Params::COMP_Hotbar_C_AddToSlot Parms{};

	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.AddToBestAvailableSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::AddToBestAvailableSlot(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "AddToBestAvailableSlot");

	Params::COMP_Hotbar_C_AddToBestAvailableSlot Parms{};

	Parms.SlottableObject = SlottableObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.AddToSlotInternal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::AddToSlotInternal(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "AddToSlotInternal");

	Params::COMP_Hotbar_C_AddToSlotInternal Parms{};

	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.ClearSlotPreference
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::ClearSlotPreference(int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ClearSlotPreference");

	Params::COMP_Hotbar_C_ClearSlotPreference Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.ClearDuplicatePreference
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           SlottableClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::ClearDuplicatePreference(class UClass* SlottableClass, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ClearDuplicatePreference");

	Params::COMP_Hotbar_C_ClearDuplicatePreference Parms{};

	Parms.SlottableClass = SlottableClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.RemoveFromSlotIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ClearPreference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::RemoveFromSlotIndex(int32 SlotIndex, bool ClearPreference, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "RemoveFromSlotIndex");

	Params::COMP_Hotbar_C_RemoveFromSlotIndex Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.ClearPreference = ClearPreference;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.IsSlotted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::IsSlotted(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "IsSlotted");

	Params::COMP_Hotbar_C_IsSlotted Parms{};

	Parms.SlottableObject = SlottableObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.IsUsingHotbarCategories
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::IsUsingHotbarCategories(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "IsUsingHotbarCategories");

	Params::COMP_Hotbar_C_IsUsingHotbarCategories Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.IsSlotClassPreference
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           SlottableClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::IsSlotClassPreference(int32 SlotIndex, class UClass* SlottableClass, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "IsSlotClassPreference");

	Params::COMP_Hotbar_C_IsSlotClassPreference Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.SlottableClass = SlottableClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::GetSlotIndex(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32* SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetSlotIndex");

	Params::COMP_Hotbar_C_GetSlotIndex Parms{};

	Parms.SlottableObject = SlottableObject;

	UObject::ProcessEvent(Func, &Parms);

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotAtIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::GetSlotAtIndex(int32 SlotIndex, TScriptInterface<class IINTERF_HotbarSlottable_C>* SlottableObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetSlotAtIndex");

	Params::COMP_Hotbar_C_GetSlotAtIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (SlottableObject != nullptr)
		*SlottableObject = Parms.SlottableObject;
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ResultCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::GetSlotCount(int32* ResultCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetSlotCount");

	Params::COMP_Hotbar_C_GetSlotCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ResultCount != nullptr)
		*ResultCount = Parms.ResultCount;
}


// Function COMP_Hotbar.COMP_Hotbar_C.RemoveFromSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ClearPreference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::RemoveFromSlot(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, bool ClearPreference, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "RemoveFromSlot");

	Params::COMP_Hotbar_C_RemoveFromSlot Parms{};

	Parms.SlottableObject = SlottableObject;
	Parms.ClearPreference = ClearPreference;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.CanSlotAtIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::CanSlotAtIndex(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "CanSlotAtIndex");

	Params::COMP_Hotbar_C_CanSlotAtIndex Parms{};

	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.IsSlottableClass
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::IsSlottableClass(class UClass* Class_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "IsSlottableClass");

	Params::COMP_Hotbar_C_IsSlottableClass Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.EmptySlots
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ClearPreferences                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::EmptySlots(bool ClearPreferences)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "EmptySlots");

	Params::COMP_Hotbar_C_EmptySlots Parms{};

	Parms.ClearPreferences = ClearPreferences;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.ActivateSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::ActivateSlot(int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ActivateSlot");

	Params::COMP_Hotbar_C_ActivateSlot Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.DeactivateSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::DeactivateSlot(int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "DeactivateSlot");

	Params::COMP_Hotbar_C_DeactivateSlot Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.TryActivateQuickSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::TryActivateQuickSlot(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "TryActivateQuickSlot");

	Params::COMP_Hotbar_C_TryActivateQuickSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.TryUseConsumableAtSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::TryUseConsumableAtSlot(int32 SlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "TryUseConsumableAtSlot");

	Params::COMP_Hotbar_C_TryUseConsumableAtSlot Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.CycleFromSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           MatchClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           IgnoreClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CycleIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::CycleFromSlot(int32 SlotIndex, class UClass* MatchClass, class UClass* IgnoreClass, bool Previous, int32* CycleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "CycleFromSlot");

	Params::COMP_Hotbar_C_CycleFromSlot Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.MatchClass = MatchClass;
	Parms.IgnoreClass = IgnoreClass;
	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);

	if (CycleIndex != nullptr)
		*CycleIndex = Parms.CycleIndex;
}


// Function COMP_Hotbar.COMP_Hotbar_C.CycleQuickSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::CycleQuickSlot(bool Previous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "CycleQuickSlot");

	Params::COMP_Hotbar_C_CycleQuickSlot Parms{};

	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetQuickSlotIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   QuickSlotIndex                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::GetQuickSlotIndex(int32* QuickSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetQuickSlotIndex");

	Params::COMP_Hotbar_C_GetQuickSlotIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (QuickSlotIndex != nullptr)
		*QuickSlotIndex = Parms.QuickSlotIndex;
}


// Function COMP_Hotbar.COMP_Hotbar_C.SetQuickSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HotbarSlotIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::SetQuickSlot(int32 HotbarSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "SetQuickSlot");

	Params::COMP_Hotbar_C_SetQuickSlot Parms{};

	Parms.HotbarSlotIndex = HotbarSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.SetEnableHotbarCategories
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_Hotbar_C::SetEnableHotbarCategories(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "SetEnableHotbarCategories");

	Params::COMP_Hotbar_C_SetEnableHotbarCategories Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetFirstOccupiedSlotIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::GetFirstOccupiedSlotIndex(int32* SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetFirstOccupiedSlotIndex");

	Params::COMP_Hotbar_C_GetFirstOccupiedSlotIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;
}


// Function COMP_Hotbar.COMP_Hotbar_C.GetFirstFreeSlotIndexWithPreference
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           SlottableClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_Hotbar_C::GetFirstFreeSlotIndexWithPreference(class UClass* SlottableClass, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "GetFirstFreeSlotIndexWithPreference");

	Params::COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference Parms{};

	Parms.SlottableClass = SlottableClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_Hotbar.COMP_Hotbar_C.ShouldSaveComponent
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameComponentParamsParams_0                                               (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCOMP_Hotbar_C::ShouldSaveComponent(struct FStreamingSaveGameComponentParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_Hotbar_C", "ShouldSaveComponent");

	Params::COMP_Hotbar_C_ShouldSaveComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}

}


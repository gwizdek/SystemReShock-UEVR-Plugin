#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrenadeProjectile_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.ExecuteUbergraph_GrenadeProjectile_Base
// 0x0014 (0x0014 - 0x0000)
struct GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base) == 0x000004, "Wrong alignment on GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base");
static_assert(sizeof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base) == 0x000014, "Wrong size on GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, EntryPoint) == 0x000000, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'GrenadeProjectile_Base_C_ExecuteUbergraph_GrenadeProjectile_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GrenadeProjectile_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrenadeProjectile_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on GrenadeProjectile_Base_C_ReceiveTick");
static_assert(sizeof(GrenadeProjectile_Base_C_ReceiveTick) == 0x000004, "Wrong size on GrenadeProjectile_Base_C_ReceiveTick");
static_assert(offsetof(GrenadeProjectile_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GrenadeProjectile_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.InitializeGrenade
// 0x0040 (0x0040 - 0x0000)
struct GrenadeProjectile_Base_C_InitializeGrenade final
{
public:
	float                                         InArmTimestamp;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InLastBeepTimestamp;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InContactDetonation;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InContactDamage;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeUntilDetonation;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetonationTimestamp;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMinimumFuseTime_Time;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrenadeProjectile_Base_C_InitializeGrenade) == 0x000004, "Wrong alignment on GrenadeProjectile_Base_C_InitializeGrenade");
static_assert(sizeof(GrenadeProjectile_Base_C_InitializeGrenade) == 0x000040, "Wrong size on GrenadeProjectile_Base_C_InitializeGrenade");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, InArmTimestamp) == 0x000000, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::InArmTimestamp' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, InLastBeepTimestamp) == 0x000004, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::InLastBeepTimestamp' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, InContactDetonation) == 0x000008, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::InContactDetonation' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, InContactDamage) == 0x00000C, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::InContactDamage' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, TimeUntilDetonation) == 0x000010, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::TimeUntilDetonation' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, DetonationTimestamp) == 0x000014, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::DetonationTimestamp' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_GetMinimumFuseTime_Time) == 0x00001C, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_GetMinimumFuseTime_Time' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000034, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000038, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_InitializeGrenade, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'GrenadeProjectile_Base_C_InitializeGrenade::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.TryStartDetonationTimer
// 0x0030 (0x0030 - 0x0000)
struct GrenadeProjectile_Base_C_TryStartDetonationTimer final
{
public:
	float                                         TimeUntilDetonation;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrenadeProjectile_Base_C_TryStartDetonationTimer) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_TryStartDetonationTimer");
static_assert(sizeof(GrenadeProjectile_Base_C_TryStartDetonationTimer) == 0x000030, "Wrong size on GrenadeProjectile_Base_C_TryStartDetonationTimer");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, TimeUntilDetonation) == 0x000000, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::TimeUntilDetonation' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryStartDetonationTimer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'GrenadeProjectile_Base_C_TryStartDetonationTimer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.EVENT_OnComponentHit
// 0x0250 (0x0250 - 0x0000)
struct GrenadeProjectile_Base_C_EVENT_OnComponentHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribManagerComponent*                OtherAttribManager;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    ContactDamageModData;                              // 0x00B8(0x00A0)(Edit, BlueprintVisible)
	float                                         Temp_float_Variable;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrenadeProjectile_Base_C_EVENT_OnComponentHit) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_EVENT_OnComponentHit");
static_assert(sizeof(GrenadeProjectile_Base_C_EVENT_OnComponentHit) == 0x000250, "Wrong size on GrenadeProjectile_Base_C_EVENT_OnComponentHit");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, HitComponent) == 0x000000, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::HitComponent' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, OtherActor) == 0x000008, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::OtherActor' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, OtherComp) == 0x000010, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::OtherComp' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, NormalImpulse) == 0x000018, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, Hit) == 0x000024, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::Hit' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, OtherAttribManager) == 0x0000B0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::OtherAttribManager' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, ContactDamageModData) == 0x0000B8, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::ContactDamageModData' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, Temp_float_Variable) == 0x000158, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_IsValid_ReturnValue) == 0x00015C, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_Greater_IntInt_ReturnValue) == 0x00015D, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, Temp_float_Variable_1) == 0x000160, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_Normal_ReturnValue) == 0x000164, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000170, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00017C, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017D, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_Time) == 0x000180, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_Distance) == 0x000184, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000194, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0001AC, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_TraceStart) == 0x0001E4, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_SpawnObject_ReturnValue) == 0x000200, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, Temp_bool_Variable) == 0x000208, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, K2Node_Select_Default) == 0x00020C, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_GetInstigator_ReturnValue) == 0x000210, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_IsValid_ReturnValue_1) == 0x000218, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_ApplyMod_ReturnValue) == 0x000220, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000228, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_GetComponentByClass_ReturnValue) == 0x000230, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000238, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_GetInstigator_ReturnValue_1) == 0x000240, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnComponentHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000248, "Member 'GrenadeProjectile_Base_C_EVENT_OnComponentHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.TryBindCollisionEvent
// 0x0030 (0x0030 - 0x0000)
struct GrenadeProjectile_Base_C_TryBindCollisionEvent final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrenadeProjectile_Base_C_TryBindCollisionEvent) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_TryBindCollisionEvent");
static_assert(sizeof(GrenadeProjectile_Base_C_TryBindCollisionEvent) == 0x000030, "Wrong size on GrenadeProjectile_Base_C_TryBindCollisionEvent");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000000, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000009, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000010, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryBindCollisionEvent, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'GrenadeProjectile_Base_C_TryBindCollisionEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.TryDamageShields
// 0x02D0 (0x02D0 - 0x0000)
struct GrenadeProjectile_Base_C_TryDamageShields final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BounceVector;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentVelocity;                                   // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x001C(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         TraceDistance;                                     // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirection;                                    // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceLocation;                                     // 0x00B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorNormalAndLength_OutLength;       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorNormalAndLength_ReturnValue;     // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APAWN_SystemShockCharacter_C*>   CallFunc_Set_ToArray_Result;                       // 0x0230(0x0010)(ReferenceParm)
	bool                                          CallFunc_DamageCharacterShieldsAlongRay_BlockingHit; // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_DamageCharacterShieldsAlongRay_HitResult; // 0x0244(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GrenadeProjectile_Base_C_TryDamageShields) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_TryDamageShields");
static_assert(sizeof(GrenadeProjectile_Base_C_TryDamageShields) == 0x0002D0, "Wrong size on GrenadeProjectile_Base_C_TryDamageShields");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, DeltaTime) == 0x000000, "Member 'GrenadeProjectile_Base_C_TryDamageShields::DeltaTime' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, BounceVector) == 0x000004, "Member 'GrenadeProjectile_Base_C_TryDamageShields::BounceVector' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CurrentVelocity) == 0x000010, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, HitResult) == 0x00001C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::HitResult' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, TraceDistance) == 0x0000A4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::TraceDistance' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, TraceDirection) == 0x0000A8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::TraceDirection' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, TraceLocation) == 0x0000B4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::TraceLocation' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x0000C0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x0000C8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0000D0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_bBlockingHit) == 0x0000DC, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DD, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Time) == 0x0000E0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Distance) == 0x0000E4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Location) == 0x0000E8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Normal) == 0x000100, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ImpactNormal) == 0x00010C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ElementIndex) == 0x00013C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_FaceIndex) == 0x000140, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_TraceStart) == 0x000144, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_TraceEnd) == 0x000150, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetExplosiveLocation_Location) == 0x00015C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000168, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000174, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000175, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Time_1) == 0x000178, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Distance_1) == 0x00017C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Location_1) == 0x000180, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00018C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_Normal_1) == 0x000198, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0001A4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_PhysMat_1) == 0x0001B0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitActor_1) == 0x0001B8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitComponent_1) == 0x0001C0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001C8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_HitItem_1) == 0x0001D0, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_ElementIndex_1) == 0x0001D4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001D8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_TraceStart_1) == 0x0001DC, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_BreakHitResult_TraceEnd_1) == 0x0001E8, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetReflectionVector_ReturnValue) == 0x0001F4, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000200, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetVelocity_ReturnValue) == 0x000204, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000210, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetVectorNormalAndLength_OutLength) == 0x00021C, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetVectorNormalAndLength_OutLength' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_GetVectorNormalAndLength_ReturnValue) == 0x000220, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_GetVectorNormalAndLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_Set_ToArray_Result) == 0x000230, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_DamageCharacterShieldsAlongRay_BlockingHit) == 0x000240, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_DamageCharacterShieldsAlongRay_BlockingHit' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_TryDamageShields, CallFunc_DamageCharacterShieldsAlongRay_HitResult) == 0x000244, "Member 'GrenadeProjectile_Base_C_TryDamageShields::CallFunc_DamageCharacterShieldsAlongRay_HitResult' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.GetMinimumFuseTime
// 0x0020 (0x0020 - 0x0000)
struct GrenadeProjectile_Base_C_GetMinimumFuseTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyByType_Difficulty;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GrenadeProjectile_Base_C_GetMinimumFuseTime) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_GetMinimumFuseTime");
static_assert(sizeof(GrenadeProjectile_Base_C_GetMinimumFuseTime) == 0x000020, "Wrong size on GrenadeProjectile_Base_C_GetMinimumFuseTime");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, Time) == 0x000000, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::Time' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, CallFunc_GetDifficultyByType_Difficulty) == 0x000019, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::CallFunc_GetDifficultyByType_Difficulty' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_GetMinimumFuseTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'GrenadeProjectile_Base_C_GetMinimumFuseTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.StartFuseBeepTimer
// 0x0040 (0x0040 - 0x0000)
struct GrenadeProjectile_Base_C_StartFuseBeepTimer final
{
public:
	float                                         LastTimestamp;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrenadeProjectile_Base_C_StartFuseBeepTimer) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_StartFuseBeepTimer");
static_assert(sizeof(GrenadeProjectile_Base_C_StartFuseBeepTimer) == 0x000040, "Wrong size on GrenadeProjectile_Base_C_StartFuseBeepTimer");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, LastTimestamp) == 0x000000, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::LastTimestamp' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000014, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000018, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000020, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_StartFuseBeepTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'GrenadeProjectile_Base_C_StartFuseBeepTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.EVENT_OnFuseBeepTick
// 0x0010 (0x0010 - 0x0000)
struct GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick");
static_assert(sizeof(GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick) == 0x000010, "Wrong size on GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000008, "Member 'GrenadeProjectile_Base_C_EVENT_OnFuseBeepTick::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function GrenadeProjectile_Base.GrenadeProjectile_Base_C.GetExplosivePhysicsComponent
// 0x0008 (0x0008 - 0x0000)
struct GrenadeProjectile_Base_C_GetExplosivePhysicsComponent final
{
public:
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GrenadeProjectile_Base_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong alignment on GrenadeProjectile_Base_C_GetExplosivePhysicsComponent");
static_assert(sizeof(GrenadeProjectile_Base_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong size on GrenadeProjectile_Base_C_GetExplosivePhysicsComponent");
static_assert(offsetof(GrenadeProjectile_Base_C_GetExplosivePhysicsComponent, PhysicsComponent) == 0x000000, "Member 'GrenadeProjectile_Base_C_GetExplosivePhysicsComponent::PhysicsComponent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Security1Bot

#include "Basic.hpp"

#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_DynaDamageElement_structs.hpp"
#include "STRUCT_LimbSpawnEffect_structs.hpp"
#include "ENUM_LeftRight_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"


namespace SDK::Params
{

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.ExecuteUbergraph_PAWN_Security1Bot
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot) == 0x000004, "Wrong alignment on PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot");
static_assert(sizeof(PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot) == 0x000004, "Wrong size on PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot");
static_assert(offsetof(PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot, EntryPoint) == 0x000000, "Member 'PAWN_Security1Bot_C_ExecuteUbergraph_PAWN_Security1Bot::EntryPoint' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.UpdateCustomDeathBehavior
// 0x0078 (0x0078 - 0x0000)
struct PAWN_Security1Bot_C_UpdateCustomDeathBehavior final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0028(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateBlastOff_IsFinished;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior) == 0x000008, "Wrong alignment on PAWN_Security1Bot_C_UpdateCustomDeathBehavior");
static_assert(sizeof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior) == 0x000078, "Wrong size on PAWN_Security1Bot_C_UpdateCustomDeathBehavior");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, IsFinished) == 0x000000, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::IsFinished' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, K2Node_MakeArray_Array) == 0x000008, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, K2Node_MakeArray_Array_1) == 0x000018, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000028, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000069, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_UpdateBlastOff_IsFinished) == 0x00006A, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_UpdateBlastOff_IsFinished' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_RandomBool_ReturnValue) == 0x00006B, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_RandomBool_ReturnValue_1) == 0x00006C, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateCustomDeathBehavior, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000070, "Member 'PAWN_Security1Bot_C_UpdateCustomDeathBehavior::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.UpdateBlastOff
// 0x0130 (0x0130 - 0x0000)
struct PAWN_Security1Bot_C_UpdateBlastOff final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RotateThrust;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotateLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateProgressMultiplier;                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EngineThrust;                                      // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EngineProgressMultiplier;                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HoverThrust;                                       // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoverProgressMultiplier;                           // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TorsoLocation;                                     // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_1;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBlastOffOverlap_IsOverlapping;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue_2;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Security1Bot_C_UpdateBlastOff) == 0x000004, "Wrong alignment on PAWN_Security1Bot_C_UpdateBlastOff");
static_assert(sizeof(PAWN_Security1Bot_C_UpdateBlastOff) == 0x000130, "Wrong size on PAWN_Security1Bot_C_UpdateBlastOff");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, IsFinished) == 0x000000, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::IsFinished' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, RotateThrust) == 0x000004, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::RotateThrust' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, RotateLocation) == 0x000010, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::RotateLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, RotateProgressMultiplier) == 0x00001C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::RotateProgressMultiplier' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, EngineThrust) == 0x000020, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::EngineThrust' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, EngineProgressMultiplier) == 0x00002C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::EngineProgressMultiplier' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, HoverThrust) == 0x000030, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::HoverThrust' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, HoverProgressMultiplier) == 0x00003C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::HoverProgressMultiplier' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, TorsoLocation) == 0x000040, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::TorsoLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, Progress) == 0x00004C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::Progress' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_SelectFloat_ReturnValue_1) == 0x000054, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetFloatValue_ReturnValue) == 0x00005C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000064, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetSocketRotation_ReturnValue) == 0x000068, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetRightVector_ReturnValue) == 0x000074, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetSocketLocation_ReturnValue) == 0x000080, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00008C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetFloatValue_ReturnValue_1) == 0x0000A4, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetFloatValue_ReturnValue_2) == 0x0000A8, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000AC, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetSocketRotation_ReturnValue_1) == 0x0000BC, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetSocketRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetSocketLocation_ReturnValue_1) == 0x0000C8, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetForwardVector_ReturnValue) == 0x0000D4, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_CheckBlastOffOverlap_IsOverlapping) == 0x0000E0, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_CheckBlastOffOverlap_IsOverlapping' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000E4, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000E8, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000EC, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000F0, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetSocketRotation_ReturnValue_2) == 0x0000FC, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetSocketRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000108, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_GetUpVector_ReturnValue) == 0x00010C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000118, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000124, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_UpdateBlastOff, CallFunc_FClamp_ReturnValue) == 0x00012C, "Member 'PAWN_Security1Bot_C_UpdateBlastOff::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.CheckBlastOffOverlap
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Security1Bot_C_CheckBlastOffOverlap final
{
public:
	bool                                          IsOverlapping;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Security1Bot_C_CheckBlastOffOverlap) == 0x000008, "Wrong alignment on PAWN_Security1Bot_C_CheckBlastOffOverlap");
static_assert(sizeof(PAWN_Security1Bot_C_CheckBlastOffOverlap) == 0x000050, "Wrong size on PAWN_Security1Bot_C_CheckBlastOffOverlap");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, IsOverlapping) == 0x000000, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::IsOverlapping' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, K2Node_MakeArray_Array) == 0x000008, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, K2Node_MakeArray_Array_1) == 0x000018, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, CallFunc_SphereOverlapActors_OutActors) == 0x000038, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_CheckBlastOffOverlap, CallFunc_SphereOverlapActors_ReturnValue) == 0x000048, "Member 'PAWN_Security1Bot_C_CheckBlastOffOverlap::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.HasCustomDeathBehavior
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Security1Bot_C_HasCustomDeathBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Security1Bot_C_HasCustomDeathBehavior) == 0x000001, "Wrong alignment on PAWN_Security1Bot_C_HasCustomDeathBehavior");
static_assert(sizeof(PAWN_Security1Bot_C_HasCustomDeathBehavior) == 0x000001, "Wrong size on PAWN_Security1Bot_C_HasCustomDeathBehavior");
static_assert(offsetof(PAWN_Security1Bot_C_HasCustomDeathBehavior, Result) == 0x000000, "Member 'PAWN_Security1Bot_C_HasCustomDeathBehavior::Result' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.SpawnEngineExplosion
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Security1Bot_C_SpawnEngineExplosion final
{
public:
	ENUM_LeftRight                                Engine;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Security1Bot_C_SpawnEngineExplosion) == 0x000008, "Wrong alignment on PAWN_Security1Bot_C_SpawnEngineExplosion");
static_assert(sizeof(PAWN_Security1Bot_C_SpawnEngineExplosion) == 0x000050, "Wrong size on PAWN_Security1Bot_C_SpawnEngineExplosion");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Engine) == 0x000000, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Engine' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_byte_Variable) == 0x000001, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_name_Variable) == 0x000004, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_name_Variable_1) == 0x00000C, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_int_Variable) == 0x000014, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_object_Variable) == 0x000018, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_object_Variable_1) == 0x000020, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, Temp_object_Variable_2) == 0x000028, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, K2Node_Select_Default) == 0x000030, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000038, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, K2Node_Select_Default_1) == 0x000040, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SpawnEngineExplosion, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000048, "Member 'PAWN_Security1Bot_C_SpawnEngineExplosion::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.OnDynaDamage
// 0x00D0 (0x00D0 - 0x0000)
struct PAWN_Security1Bot_C_OnDynaDamage final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x0010(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LimbSpawnEffect                K2Node_MakeStruct_STRUCT_LimbSpawnEffect;          // 0x0080(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Security1Bot_C_OnDynaDamage) == 0x000010, "Wrong alignment on PAWN_Security1Bot_C_OnDynaDamage");
static_assert(sizeof(PAWN_Security1Bot_C_OnDynaDamage) == 0x0000D0, "Wrong size on PAWN_Security1Bot_C_OnDynaDamage");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, DynaElement) == 0x000000, "Member 'PAWN_Security1Bot_C_OnDynaDamage::DynaElement' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, OnBeginPlay) == 0x000008, "Member 'PAWN_Security1Bot_C_OnDynaDamage::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000009, "Member 'PAWN_Security1Bot_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00000A, "Member 'PAWN_Security1Bot_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'PAWN_Security1Bot_C_OnDynaDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, CallFunc_GetDynaData_DynaData) == 0x000010, "Member 'PAWN_Security1Bot_C_OnDynaDamage::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnDynaDamage, K2Node_MakeStruct_STRUCT_LimbSpawnEffect) == 0x000080, "Member 'PAWN_Security1Bot_C_OnDynaDamage::K2Node_MakeStruct_STRUCT_LimbSpawnEffect' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.SetCharacterPropertiesToDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Security1Bot_C_SetCharacterPropertiesToDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterPropertiesToDead_Result;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Security1Bot_C_SetCharacterPropertiesToDead) == 0x000001, "Wrong alignment on PAWN_Security1Bot_C_SetCharacterPropertiesToDead");
static_assert(sizeof(PAWN_Security1Bot_C_SetCharacterPropertiesToDead) == 0x000002, "Wrong size on PAWN_Security1Bot_C_SetCharacterPropertiesToDead");
static_assert(offsetof(PAWN_Security1Bot_C_SetCharacterPropertiesToDead, Result) == 0x000000, "Member 'PAWN_Security1Bot_C_SetCharacterPropertiesToDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_SetCharacterPropertiesToDead, CallFunc_SetCharacterPropertiesToDead_Result) == 0x000001, "Member 'PAWN_Security1Bot_C_SetCharacterPropertiesToDead::CallFunc_SetCharacterPropertiesToDead_Result' has a wrong offset!");

// Function PAWN_Security1Bot.PAWN_Security1Bot_C.OnCharacterVisibilityChanged
// 0x0005 (0x0005 - 0x0000)
struct PAWN_Security1Bot_C_OnCharacterVisibilityChanged final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged) == 0x000001, "Wrong alignment on PAWN_Security1Bot_C_OnCharacterVisibilityChanged");
static_assert(sizeof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged) == 0x000005, "Wrong size on PAWN_Security1Bot_C_OnCharacterVisibilityChanged");
static_assert(offsetof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged, VisibilityState) == 0x000000, "Member 'PAWN_Security1Bot_C_OnCharacterVisibilityChanged::VisibilityState' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Security1Bot_C_OnCharacterVisibilityChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'PAWN_Security1Bot_C_OnCharacterVisibilityChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'PAWN_Security1Bot_C_OnCharacterVisibilityChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Security1Bot_C_OnCharacterVisibilityChanged, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'PAWN_Security1Bot_C_OnCharacterVisibilityChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ServiceDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ServiceDoor.INTERACT_ServiceDoor_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ServiceDoor_C_UserConstructionScript final
{
public:
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ServiceDoor_C_UserConstructionScript) == 0x000001, "Wrong alignment on INTERACT_ServiceDoor_C_UserConstructionScript");
static_assert(sizeof(INTERACT_ServiceDoor_C_UserConstructionScript) == 0x000008, "Wrong size on INTERACT_ServiceDoor_C_UserConstructionScript");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000001, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_bool_Variable) == 0x000002, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_byte_Variable_2) == 0x000003, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_byte_Variable_3) == 0x000004, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000005, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, K2Node_Select_Default) == 0x000006, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000007, "Member 'INTERACT_ServiceDoor_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");

// Function INTERACT_ServiceDoor.INTERACT_ServiceDoor_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_ServiceDoor_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ServiceDoor_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_ServiceDoor_C_GetTargetShape");
static_assert(sizeof(INTERACT_ServiceDoor_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_ServiceDoor_C_GetTargetShape");
static_assert(offsetof(INTERACT_ServiceDoor_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_ServiceDoor_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_ServiceDoor_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_ServiceDoor_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceDoor_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_ServiceDoor_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

}


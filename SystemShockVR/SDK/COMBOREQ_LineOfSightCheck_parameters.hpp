#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMBOREQ_LineOfSightCheck

#include "Basic.hpp"


namespace SDK::Params
{

// Function COMBOREQ_LineOfSightCheck.COMBOREQ_LineOfSightCheck_C.CanStartCombo
// 0x00D8 (0x00D8 - 0x0000)
struct COMBOREQ_LineOfSightCheck_C_CanStartCombo final
{
public:
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ComboIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CapsuleCollision;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BulletRadius;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USKILL_Projectile_Base_C*               ProjectileSkill;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       K2Node_DynamicCast_AsSphere_Collision;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USKILL_LaunchProjectile_C*              K2Node_DynamicCast_AsSKILL_Launch_Projectile;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CallFunc_GetClassComponentTemplate_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsSKILL_Shoot_Bullet;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasClearShotToTargetFromSocket_Result;    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkill_C*                               CallFunc_GetSkillByClass_Skill;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USKILL_Projectile_Base_C*               K2Node_DynamicCast_AsSKILL_Projectile_Base;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasClearShotToTargetFromSocket_Result_1;  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMBOREQ_LineOfSightCheck_C_CanStartCombo) == 0x000008, "Wrong alignment on COMBOREQ_LineOfSightCheck_C_CanStartCombo");
static_assert(sizeof(COMBOREQ_LineOfSightCheck_C_CanStartCombo) == 0x0000D8, "Wrong size on COMBOREQ_LineOfSightCheck_C_CanStartCombo");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, EnemyPawn) == 0x000000, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, ComboIndex) == 0x000008, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::ComboIndex' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, Result) == 0x00000C, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::Result' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CapsuleCollision) == 0x000010, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CapsuleCollision' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, ShapeComponent) == 0x000018, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::ShapeComponent' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, BulletRadius) == 0x000020, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::BulletRadius' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, ProjectileSkill) == 0x000028, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::ProjectileSkill' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, Temp_int_Array_Index_Variable) == 0x000030, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_AsSphere_Collision) == 0x000038, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_AsSphere_Collision' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_AsCapsule_Collision) == 0x000048, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_AsCapsule_Collision' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_AsSKILL_Launch_Projectile) == 0x000058, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_AsSKILL_Launch_Projectile' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_GetClassComponentTemplate_ReturnValue) == 0x000068, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_GetClassComponentTemplate_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_IsValidClass_ReturnValue) == 0x000070, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, Temp_name_Variable) == 0x000078, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_GetObjectClass_ReturnValue) == 0x000090, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_GetObjectClass_ReturnValue_1) == 0x000098, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_ClassDynamicCast_AsSKILL_Shoot_Bullet) == 0x0000A8, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_ClassDynamicCast_AsSKILL_Shoot_Bullet' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_ClassDynamicCast_bSuccess) == 0x0000B0, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_IsValidClass_ReturnValue_1) == 0x0000B9, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_HasClearShotToTargetFromSocket_Result) == 0x0000BA, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_HasClearShotToTargetFromSocket_Result' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_GetSkillByClass_Skill) == 0x0000C0, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_GetSkillByClass_Skill' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_AsSKILL_Projectile_Base) == 0x0000C8, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_AsSKILL_Projectile_Base' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(COMBOREQ_LineOfSightCheck_C_CanStartCombo, CallFunc_HasClearShotToTargetFromSocket_Result_1) == 0x0000D1, "Member 'COMBOREQ_LineOfSightCheck_C_CanStartCombo::CallFunc_HasClearShotToTargetFromSocket_Result_1' has a wrong offset!");

}


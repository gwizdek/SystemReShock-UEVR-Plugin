#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_IceDrill_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.EVENT_FireProjectile
// 0x0030 (0x0030 - 0x0000)
struct ITEM_IceDrill_Base_C_EVENT_FireProjectile final
{
public:
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnProjectile_Projectile;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APROJECTILE_IceDrill_C*                 K2Node_DynamicCast_AsPROJECTILE_Ice_Drill;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_IceDrill_Base_C_EVENT_FireProjectile) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_EVENT_FireProjectile");
static_assert(sizeof(ITEM_IceDrill_Base_C_EVENT_FireProjectile) == 0x000030, "Wrong size on ITEM_IceDrill_Base_C_EVENT_FireProjectile");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, CallFunc_GetOwnerCharacter_Character) == 0x000000, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000008, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, CallFunc_SpawnProjectile_Projectile) == 0x000018, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::CallFunc_SpawnProjectile_Projectile' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_AsPROJECTILE_Ice_Drill) == 0x000020, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_AsPROJECTILE_Ice_Drill' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'ITEM_IceDrill_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.GetLockOnProgress
// 0x0018 (0x0018 - 0x0000)
struct ITEM_IceDrill_Base_C_GetLockOnProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_IceDrill_Base_C_GetLockOnProgress) == 0x000004, "Wrong alignment on ITEM_IceDrill_Base_C_GetLockOnProgress");
static_assert(sizeof(ITEM_IceDrill_Base_C_GetLockOnProgress) == 0x000018, "Wrong size on ITEM_IceDrill_Base_C_GetLockOnProgress");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, Progress) == 0x000000, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::Progress' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_GetLockOnProgress, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'ITEM_IceDrill_Base_C_GetLockOnProgress::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.EVENT_LockOnTick
// 0x0070 (0x0070 - 0x0000)
struct ITEM_IceDrill_Base_C_EVENT_LockOnTick final
{
public:
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar_2;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLockOnProgress_Progress;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_TryFindLockOnActor_Result;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_3;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar_3;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorInLockOnRange_Result;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsActorInLockOnRange_Angle;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_IceDrill_Base_C_EVENT_LockOnTick) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_EVENT_LockOnTick");
static_assert(sizeof(ITEM_IceDrill_Base_C_EVENT_LockOnTick) == 0x000070, "Wrong size on ITEM_IceDrill_Base_C_EVENT_LockOnTick");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetOwnerCharacter_Character) == 0x000000, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000008, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetOwnerCharacter_Character_1) == 0x000018, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_AsPAWN_Avatar_1) == 0x000020, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_AsPAWN_Avatar_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetOwnerCharacter_Character_2) == 0x000030, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetOwnerCharacter_Character_2' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_AsPAWN_Avatar_2) == 0x000038, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_AsPAWN_Avatar_2' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetLockOnProgress_Progress) == 0x000044, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetLockOnProgress_Progress' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_TryFindLockOnActor_Result) == 0x000048, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_TryFindLockOnActor_Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetOwnerCharacter_Character_3) == 0x000050, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetOwnerCharacter_Character_3' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_AsPAWN_Avatar_3) == 0x000058, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_AsPAWN_Avatar_3' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_IsActorInLockOnRange_Result) == 0x000061, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_IsActorInLockOnRange_Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_IsActorInLockOnRange_Angle) == 0x000064, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_IsActorInLockOnRange_Angle' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_EVENT_LockOnTick, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00006C, "Member 'ITEM_IceDrill_Base_C_EVENT_LockOnTick::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.TryFindLockOnActor
// 0x00F0 (0x00F0 - 0x0000)
struct ITEM_IceDrill_Base_C_TryFindLockOnActor final
{
public:
	class AActor*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleToCurrentEnemy;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestAngle;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentActor;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BestActor;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         Avatar;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     GameMode;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APickup_Software_Base_C*                K2Node_DynamicCast_AsPickup_Software_Base;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACYBR_InteractBase_C*                   K2Node_DynamicCast_AsCYBR_Interact_Base;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeDef*                          CallFunc_GetShieldAttrib_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorInLockOnRange_Result;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsActorInLockOnRange_Angle;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetCyberActorsInSphere_Result;            // 0x0098(0x0010)(ReferenceParm)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_CyberEnemy_C*                     K2Node_DynamicCast_AsPAWN_Cyber_Enemy;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_IceDrill_Base_C_TryFindLockOnActor) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_TryFindLockOnActor");
static_assert(sizeof(ITEM_IceDrill_Base_C_TryFindLockOnActor) == 0x0000F0, "Wrong size on ITEM_IceDrill_Base_C_TryFindLockOnActor");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, Result) == 0x000000, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, AngleToCurrentEnemy) == 0x000008, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::AngleToCurrentEnemy' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, ClosestAngle) == 0x00000C, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::ClosestAngle' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CurrentActor) == 0x000010, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CurrentActor' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, BestActor) == 0x000018, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::BestActor' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, Avatar) == 0x000020, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, GameMode) == 0x000028, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::GameMode' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, Temp_int_Array_Index_Variable) == 0x000038, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_AsPickup_Software_Base) == 0x000040, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_AsPickup_Software_Base' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_AsCYBR_Interact_Base) == 0x000050, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_AsCYBR_Interact_Base' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetShieldAttrib_ReturnValue) == 0x000068, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetShieldAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetAttribValue_ReturnValue) == 0x000074, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_IsActorInLockOnRange_Result) == 0x000079, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_IsActorInLockOnRange_Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_IsActorInLockOnRange_Angle) == 0x00007C, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_IsActorInLockOnRange_Angle' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetGameMode_ReturnValue) == 0x000090, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetCyberActorsInSphere_Result) == 0x000098, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetCyberActorsInSphere_Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_AsGM_Single_Player) == 0x0000A8, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_AsPAWN_Cyber_Enemy) == 0x0000C8, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_AsPAWN_Cyber_Enemy' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_GetOwnerCharacter_Character) == 0x0000D8, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_AsPAWN_Avatar) == 0x0000E0, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, K2Node_DynamicCast_bSuccess_4) == 0x0000E8, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_TryFindLockOnActor, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E9, "Member 'ITEM_IceDrill_Base_C_TryFindLockOnActor::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.IsActorInLockOnRange
// 0x0090 (0x0090 - 0x0000)
struct ITEM_IceDrill_Base_C_IsActorInLockOnRange final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Angle;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleToCurrentEnemy;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         Avatar;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenVectors_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_IceDrill_Base_C_IsActorInLockOnRange) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_IsActorInLockOnRange");
static_assert(sizeof(ITEM_IceDrill_Base_C_IsActorInLockOnRange) == 0x000090, "Wrong size on ITEM_IceDrill_Base_C_IsActorInLockOnRange");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, Actor) == 0x000000, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::Actor' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, Result) == 0x000008, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, Angle) == 0x00000C, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::Angle' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, AngleToCurrentEnemy) == 0x000010, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::AngleToCurrentEnemy' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, Avatar) == 0x000018, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00002C, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000038, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000044, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_Square_ReturnValue) == 0x000048, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_GetOwnerCharacter_Character) == 0x000050, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000058, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000061, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000064, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_GetForwardVector_ReturnValue) == 0x00007C, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_IsActorInLockOnRange, CallFunc_AngleBetweenVectors_ReturnValue) == 0x000088, "Member 'ITEM_IceDrill_Base_C_IsActorInLockOnRange::CallFunc_AngleBetweenVectors_ReturnValue' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.Activate
// 0x0048 (0x0048 - 0x0000)
struct ITEM_IceDrill_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_IceDrill_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_Activate");
static_assert(sizeof(ITEM_IceDrill_Base_C_Activate) == 0x000048, "Wrong size on ITEM_IceDrill_Base_C_Activate");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_IceDrill_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_IceDrill_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'ITEM_IceDrill_Base_C_Activate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, CallFunc_Activate_Result) == 0x000018, "Member 'ITEM_IceDrill_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000020, "Member 'ITEM_IceDrill_Base_C_Activate::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_IceDrill_Base_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'ITEM_IceDrill_Base_C_Activate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Activate, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'ITEM_IceDrill_Base_C_Activate::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ITEM_IceDrill_Base.ITEM_IceDrill_Base_C.Deactivate
// 0x0040 (0x0040 - 0x0000)
struct ITEM_IceDrill_Base_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LockOnProgress;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLockOnProgress_Progress;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_IceDrill_Base_C_Deactivate) == 0x000008, "Wrong alignment on ITEM_IceDrill_Base_C_Deactivate");
static_assert(sizeof(ITEM_IceDrill_Base_C_Deactivate) == 0x000040, "Wrong size on ITEM_IceDrill_Base_C_Deactivate");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, Result) == 0x000000, "Member 'ITEM_IceDrill_Base_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, LockOnProgress) == 0x000004, "Member 'ITEM_IceDrill_Base_C_Deactivate::LockOnProgress' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_GetOwnerCharacter_Character_1) == 0x000010, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000018, "Member 'ITEM_IceDrill_Base_C_Deactivate::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_IceDrill_Base_C_Deactivate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, K2Node_DynamicCast_AsPAWN_Avatar_1) == 0x000028, "Member 'ITEM_IceDrill_Base_C_Deactivate::K2Node_DynamicCast_AsPAWN_Avatar_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ITEM_IceDrill_Base_C_Deactivate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000032, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_GetLockOnProgress_Progress) == 0x000034, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_GetLockOnProgress_Progress' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_IceDrill_Base_C_Deactivate, CallFunc_Deactivate_Result) == 0x000039, "Member 'ITEM_IceDrill_Base_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

}


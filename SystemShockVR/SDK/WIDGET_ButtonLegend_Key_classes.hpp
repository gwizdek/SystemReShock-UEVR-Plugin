#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_ButtonLegend_Key

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_PrimarySecondary_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_ButtonLegend_Key.WIDGET_ButtonLegend_Key_C
// 0x00A0 (0x0300 - 0x0260)
class UWIDGET_ButtonLegend_Key_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridMeshWidget*                        MESH_KeyBackground;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_KeyCode;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FKey                                   KeyMapping;                                        // 0x0278(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 PanelSizeX;                                        // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 TextSizeX;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DefaultHeight;                                     // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PrimarySecondary                         KeyRank;                                           // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputActionString;                                 // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          AutoSwapToGamepad;                                 // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHighlighted;                                     // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDisabled;                                        // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PanelSize;                                         // 0x02CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              KeySize;                                           // 0x02D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ButtonSize;                                        // 0x02DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextMeshWidget*                        SourceTextMeshWidget;                              // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnLegendKeySizedChanged;                           // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnLegendKeySizedChanged__DelegateSignature();
	void ExecuteUbergraph_WIDGET_ButtonLegend_Key(int32 EntryPoint);
	void SetDecoratorColor(const struct FColor& Color);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void InitializeLegendKey();
	void SetLegendKey(const struct FKey& Key);
	void SetLegendInputAction(const class FString& ActionString);
	void SetLegendColor(const struct FColor& Color);
	void UpdateWidgetVisibility(bool IsUsingGamepad, bool* Visible);
	void UpdateLegend();
	void GetKeyTextColor(struct FColor* Color);
	void GetKeyPanelSize(struct FVector2D* Result);
	void ParseInputActionFromString(const class FString& InputString, bool IsUsingGamepad, class FName* Result);
	void TryUpdateLegendSize();
	void SetHighlighted(bool State);
	void SetDisabled(bool State);
	void EVENT_OnUsingGamepadChanged(bool IsUsingGamepad);
	void SetAutoSwapToGamepad(bool State);
	struct FVector2D GetDecoratorSizeFromPayload(const class FString& Payload);
	bool InitializeDecorator(class UTextMeshWidget* TextMeshWidget, const struct FColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_ButtonLegend_Key_C">();
	}
	static class UWIDGET_ButtonLegend_Key_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_ButtonLegend_Key_C>();
	}
};
static_assert(alignof(UWIDGET_ButtonLegend_Key_C) == 0x000008, "Wrong alignment on UWIDGET_ButtonLegend_Key_C");
static_assert(sizeof(UWIDGET_ButtonLegend_Key_C) == 0x000300, "Wrong size on UWIDGET_ButtonLegend_Key_C");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_ButtonLegend_Key_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, MESH_KeyBackground) == 0x000268, "Member 'UWIDGET_ButtonLegend_Key_C::MESH_KeyBackground' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, TEXT_KeyCode) == 0x000270, "Member 'UWIDGET_ButtonLegend_Key_C::TEXT_KeyCode' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, KeyMapping) == 0x000278, "Member 'UWIDGET_ButtonLegend_Key_C::KeyMapping' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, PanelSizeX) == 0x000290, "Member 'UWIDGET_ButtonLegend_Key_C::PanelSizeX' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, TextSizeX) == 0x0002A0, "Member 'UWIDGET_ButtonLegend_Key_C::TextSizeX' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, DefaultHeight) == 0x0002B0, "Member 'UWIDGET_ButtonLegend_Key_C::DefaultHeight' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, KeyRank) == 0x0002B4, "Member 'UWIDGET_ButtonLegend_Key_C::KeyRank' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, InputActionString) == 0x0002B8, "Member 'UWIDGET_ButtonLegend_Key_C::InputActionString' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, AutoSwapToGamepad) == 0x0002C8, "Member 'UWIDGET_ButtonLegend_Key_C::AutoSwapToGamepad' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, IsHighlighted) == 0x0002C9, "Member 'UWIDGET_ButtonLegend_Key_C::IsHighlighted' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, IsDisabled) == 0x0002CA, "Member 'UWIDGET_ButtonLegend_Key_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, PanelSize) == 0x0002CC, "Member 'UWIDGET_ButtonLegend_Key_C::PanelSize' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, KeySize) == 0x0002D4, "Member 'UWIDGET_ButtonLegend_Key_C::KeySize' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, ButtonSize) == 0x0002DC, "Member 'UWIDGET_ButtonLegend_Key_C::ButtonSize' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, SourceTextMeshWidget) == 0x0002E8, "Member 'UWIDGET_ButtonLegend_Key_C::SourceTextMeshWidget' has a wrong offset!");
static_assert(offsetof(UWIDGET_ButtonLegend_Key_C, OnLegendKeySizedChanged) == 0x0002F0, "Member 'UWIDGET_ButtonLegend_Key_C::OnLegendKeySizedChanged' has a wrong offset!");

}


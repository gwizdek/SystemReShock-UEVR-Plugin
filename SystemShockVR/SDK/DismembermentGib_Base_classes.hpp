#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DismembermentGib_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DismembermentGib_Base.DismembermentGib_Base_C
// 0x0038 (0x0258 - 0x0220)
class ADismembermentGib_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_Descriptor_C*                     COMP_Descriptor;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0238(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                AngularVelocity;                                   // 0x0244(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         LifeSpan;                                          // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnTimestamp;                                    // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DismembermentGib_Base(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InitializeHeroGib();
	void DestroyHeroGib();
	void GetMeshComponent(class UMeshComponent** MeshComponent);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DismembermentGib_Base_C">();
	}
	static class ADismembermentGib_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADismembermentGib_Base_C>();
	}
};
static_assert(alignof(ADismembermentGib_Base_C) == 0x000008, "Wrong alignment on ADismembermentGib_Base_C");
static_assert(sizeof(ADismembermentGib_Base_C) == 0x000258, "Wrong size on ADismembermentGib_Base_C");
static_assert(offsetof(ADismembermentGib_Base_C, UberGraphFrame) == 0x000220, "Member 'ADismembermentGib_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, COMP_Descriptor) == 0x000228, "Member 'ADismembermentGib_Base_C::COMP_Descriptor' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, DefaultSceneRoot) == 0x000230, "Member 'ADismembermentGib_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, Impulse) == 0x000238, "Member 'ADismembermentGib_Base_C::Impulse' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, AngularVelocity) == 0x000244, "Member 'ADismembermentGib_Base_C::AngularVelocity' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, LifeSpan) == 0x000250, "Member 'ADismembermentGib_Base_C::LifeSpan' has a wrong offset!");
static_assert(offsetof(ADismembermentGib_Base_C, SpawnTimestamp) == 0x000254, "Member 'ADismembermentGib_Base_C::SpawnTimestamp' has a wrong offset!");

}


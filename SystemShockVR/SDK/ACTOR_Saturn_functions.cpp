#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ACTOR_Saturn

#include "Basic.hpp"

#include "ACTOR_Saturn_classes.hpp"
#include "ACTOR_Saturn_parameters.hpp"


namespace SDK
{

// Function ACTOR_Saturn.ACTOR_Saturn_C.ExecuteUbergraph_ACTOR_Saturn
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AACTOR_Saturn_C::ExecuteUbergraph_ACTOR_Saturn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ExecuteUbergraph_ACTOR_Saturn");

	Params::ACTOR_Saturn_C_ExecuteUbergraph_ACTOR_Saturn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AACTOR_Saturn_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ReceiveTick");

	Params::ACTOR_Saturn_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AACTOR_Saturn_C::BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::ACTOR_Saturn_C_BndEvt__ACTOR_Saturn_COMP_ExteriorCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AACTOR_Saturn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSunMaterialParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AACTOR_Saturn_C::UpdateSunMaterialParameters(class UMaterialInstanceDynamic* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateSunMaterialParameters");

	Params::ACTOR_Saturn_C_UpdateSunMaterialParameters Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.InitializeMeshMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::InitializeMeshMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "InitializeMeshMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSunSettings
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UpdateSunSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateSunSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UpdateMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateAtmosphereSIze
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UpdateAtmosphereSIze()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateAtmosphereSIze");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateAtmosphere
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UpdateAtmosphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateAtmosphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.GetScaledSaturnRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AACTOR_Saturn_C::GetScaledSaturnRadius(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "GetScaledSaturnRadius");

	Params::ACTOR_Saturn_C_GetScaledSaturnRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.CreateRingPermeabilityTexture
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::CreateRingPermeabilityTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "CreateRingPermeabilityTexture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdatePlanetaryRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::UpdatePlanetaryRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdatePlanetaryRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.InitializePlanetRotationParameters
// (Public, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::InitializePlanetRotationParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "InitializePlanetRotationParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.SetOuterspaceVisibleThroughWindows
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibleState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AACTOR_Saturn_C::SetOuterspaceVisibleThroughWindows(bool VisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "SetOuterspaceVisibleThroughWindows");

	Params::ACTOR_Saturn_C_SetOuterspaceVisibleThroughWindows Parms{};

	Parms.VisibleState = VisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.SetSunSettingsFromLevelAtmosphere
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AACTOR_Saturn_C::SetSunSettingsFromLevelAtmosphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "SetSunSettingsFromLevelAtmosphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateSaturnVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AACTOR_Saturn_C::UpdateSaturnVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateSaturnVisibility");

	Params::ACTOR_Saturn_C_UpdateSaturnVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.UpdateRingVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AACTOR_Saturn_C::UpdateRingVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "UpdateRingVisibility");

	Params::ACTOR_Saturn_C_UpdateRingVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AACTOR_Saturn_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ShouldSaveActor");

	Params::ACTOR_Saturn_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AACTOR_Saturn_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ReceivePendingBodyTransforms");

	Params::ACTOR_Saturn_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ACTOR_Saturn.ACTOR_Saturn_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AACTOR_Saturn_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ACTOR_Saturn_C", "ReceivePendingCharacterVelocity");

	Params::ACTOR_Saturn_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Hopper_BeamAttack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TASK_Beam_Base_classes.hpp"
#include "ENUM_MobileLaser_BeamState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Hopper_BeamAttack.TASK_Hopper_BeamAttack_C
// 0x0010 (0x0220 - 0x0210)
class UTASK_Hopper_BeamAttack_C final : public UTASK_Beam_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TASK_Hopper_BeamAttack_C;           // 0x0210(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         BeamAttackDuration;                                // 0x0218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxBeamAimAngle;                                   // 0x021C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_Hopper_BeamAttack(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetBeamState(ENUM_MobileLaser_BeamState State);
	void UpdateBeamTurningOn(float DeltaSeconds, float* Progress);
	void UpdateBeamOn(float DeltaSeconds);
	void GetBarrelWorldLocation(struct FVector* BarrelLocation);
	void GetBeamAimDirection(class FName BeamSocket, struct FVector* BeamAimDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Hopper_BeamAttack_C">();
	}
	static class UTASK_Hopper_BeamAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Hopper_BeamAttack_C>();
	}
};
static_assert(alignof(UTASK_Hopper_BeamAttack_C) == 0x000008, "Wrong alignment on UTASK_Hopper_BeamAttack_C");
static_assert(sizeof(UTASK_Hopper_BeamAttack_C) == 0x000220, "Wrong size on UTASK_Hopper_BeamAttack_C");
static_assert(offsetof(UTASK_Hopper_BeamAttack_C, UberGraphFrame_TASK_Hopper_BeamAttack_C) == 0x000210, "Member 'UTASK_Hopper_BeamAttack_C::UberGraphFrame_TASK_Hopper_BeamAttack_C' has a wrong offset!");
static_assert(offsetof(UTASK_Hopper_BeamAttack_C, BeamAttackDuration) == 0x000218, "Member 'UTASK_Hopper_BeamAttack_C::BeamAttackDuration' has a wrong offset!");
static_assert(offsetof(UTASK_Hopper_BeamAttack_C, MaxBeamAimAngle) == 0x00021C, "Member 'UTASK_Hopper_BeamAttack_C::MaxBeamAimAngle' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MenuBase

#include "Basic.hpp"

#include "ENUM_MenuNavigationInput_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MenuBase_C_OnMenuOpened__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MenuBase_C_OnMenuClosed__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnSubMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     SubMenu;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature, SubMenu) == 0x000000, "Member 'WIDGET_MenuBase_C_OnSubMenuOpened__DelegateSignature::SubMenu' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnSubMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     SubMenu;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature, SubMenu) == 0x000000, "Member 'WIDGET_MenuBase_C_OnSubMenuClosed__DelegateSignature::SubMenu' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnCanApply__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_OnCanApply__DelegateSignature final
{
public:
	bool                                          CanApply;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_OnCanApply__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_OnCanApply__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnCanApply__DelegateSignature) == 0x000001, "Wrong size on WIDGET_MenuBase_C_OnCanApply__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnCanApply__DelegateSignature, CanApply) == 0x000000, "Member 'WIDGET_MenuBase_C_OnCanApply__DelegateSignature::CanApply' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnCanReset__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_OnCanReset__DelegateSignature final
{
public:
	bool                                          CanReset;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_OnCanReset__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_OnCanReset__DelegateSignature");
static_assert(sizeof(WIDGET_MenuBase_C_OnCanReset__DelegateSignature) == 0x000001, "Wrong size on WIDGET_MenuBase_C_OnCanReset__DelegateSignature");
static_assert(offsetof(WIDGET_MenuBase_C_OnCanReset__DelegateSignature, CanReset) == 0x000000, "Member 'WIDGET_MenuBase_C_OnCanReset__DelegateSignature::CanReset' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.InitializeMenu
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_InitializeMenu final
{
public:
	class UWIDGET_MenuBase_C*                     ParentMenuWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_InitializeMenu) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_InitializeMenu");
static_assert(sizeof(WIDGET_MenuBase_C_InitializeMenu) == 0x000008, "Wrong size on WIDGET_MenuBase_C_InitializeMenu");
static_assert(offsetof(WIDGET_MenuBase_C_InitializeMenu, ParentMenuWidget) == 0x000000, "Member 'WIDGET_MenuBase_C_InitializeMenu::ParentMenuWidget' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.OnMenuOpen
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_OnMenuOpen final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_OnMenuOpen) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_OnMenuOpen");
static_assert(sizeof(WIDGET_MenuBase_C_OnMenuOpen) == 0x000001, "Wrong size on WIDGET_MenuBase_C_OnMenuOpen");
static_assert(offsetof(WIDGET_MenuBase_C_OnMenuOpen, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WIDGET_MenuBase_C_OnMenuOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.InvokeNavManager
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_MenuBase_C_InvokeNavManager final
{
public:
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavBack_Result;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavTabRight_Result;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavTabLeft_Result;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_3; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavAlt2_Result;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_4; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavAlt1_Result;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_5; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavAccept_Result;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_6; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavRight_Result;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_7; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavLeft_Result;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_8; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavDown_Result;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_9; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavUp_Result;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_InvokeNavManager) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_InvokeNavManager");
static_assert(sizeof(WIDGET_MenuBase_C_InvokeNavManager) == 0x0000F8, "Wrong size on WIDGET_MenuBase_C_InvokeNavManager");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, InputType) == 0x000000, "Member 'WIDGET_MenuBase_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, InputState) == 0x000001, "Member 'WIDGET_MenuBase_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient) == 0x000008, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavBack_Result) == 0x00001A, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavBack_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_1) == 0x000020, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavTabRight_Result) == 0x000031, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavTabRight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_2) == 0x000038, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavTabLeft_Result) == 0x000049, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavTabLeft_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_3) == 0x000050, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavAlt2_Result) == 0x000061, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavAlt2_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_4) == 0x000068, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavAlt1_Result) == 0x000079, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavAlt1_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_5) == 0x000080, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_5' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavAccept_Result) == 0x000091, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavAccept_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_6) == 0x000098, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_6' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_6) == 0x0000A8, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavRight_Result) == 0x0000A9, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavRight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_7) == 0x0000B0, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_7' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_7) == 0x0000C0, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavLeft_Result) == 0x0000C1, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavLeft_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_8) == 0x0000C8, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_8' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_8) == 0x0000D8, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavDown_Result) == 0x0000D9, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavDown_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_9) == 0x0000E0, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_AsBPI_Menu_Navigation_Recipient_9' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, K2Node_DynamicCast_bSuccess_9) == 0x0000F0, "Member 'WIDGET_MenuBase_C_InvokeNavManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_ReceiveNavUp_Result) == 0x0000F1, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_ReceiveNavUp_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_2) == 0x0000F2, "Member 'WIDGET_MenuBase_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.TryOpenSubMenu
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MenuBase_C_TryOpenSubMenu final
{
public:
	class UWIDGET_MenuBase_C*                     SubMenu;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_TryOpenSubMenu) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_TryOpenSubMenu");
static_assert(sizeof(WIDGET_MenuBase_C_TryOpenSubMenu) == 0x000010, "Wrong size on WIDGET_MenuBase_C_TryOpenSubMenu");
static_assert(offsetof(WIDGET_MenuBase_C_TryOpenSubMenu, SubMenu) == 0x000000, "Member 'WIDGET_MenuBase_C_TryOpenSubMenu::SubMenu' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_TryOpenSubMenu, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_MenuBase_C_TryOpenSubMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.TryCloseSubMenu
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_TryCloseSubMenu final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_TryCloseSubMenu) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_TryCloseSubMenu");
static_assert(sizeof(WIDGET_MenuBase_C_TryCloseSubMenu) == 0x000001, "Wrong size on WIDGET_MenuBase_C_TryCloseSubMenu");
static_assert(offsetof(WIDGET_MenuBase_C_TryCloseSubMenu, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WIDGET_MenuBase_C_TryCloseSubMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.IsUsingGamepad
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_MenuBase_C_IsUsingGamepad final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_IsUsingGamepad) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_IsUsingGamepad");
static_assert(sizeof(WIDGET_MenuBase_C_IsUsingGamepad) == 0x000020, "Wrong size on WIDGET_MenuBase_C_IsUsingGamepad");
static_assert(offsetof(WIDGET_MenuBase_C_IsUsingGamepad, Result) == 0x000000, "Member 'WIDGET_MenuBase_C_IsUsingGamepad::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_IsUsingGamepad, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WIDGET_MenuBase_C_IsUsingGamepad::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_IsUsingGamepad, K2Node_DynamicCast_AsCON_Hacker) == 0x000010, "Member 'WIDGET_MenuBase_C_IsUsingGamepad::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_IsUsingGamepad, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MenuBase_C_IsUsingGamepad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_IsUsingGamepad, CallFunc_IsUsingGamepad_Result) == 0x000019, "Member 'WIDGET_MenuBase_C_IsUsingGamepad::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.GetActiveMenuList
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MenuBase_C_GetActiveMenuList final
{
public:
	class UWIDGET_MenuListBase_C*                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MenuBase_C_GetActiveMenuList) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_GetActiveMenuList");
static_assert(sizeof(WIDGET_MenuBase_C_GetActiveMenuList) == 0x000008, "Wrong size on WIDGET_MenuBase_C_GetActiveMenuList");
static_assert(offsetof(WIDGET_MenuBase_C_GetActiveMenuList, Result) == 0x000000, "Member 'WIDGET_MenuBase_C_GetActiveMenuList::Result' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.SetActiveMenuList
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_MenuBase_C_SetActiveMenuList final
{
public:
	class UWIDGET_MenuListBase_C*                 Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsDefault)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsDirty)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsDirty)>                 K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_SetActiveMenuList) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_SetActiveMenuList");
static_assert(sizeof(WIDGET_MenuBase_C_SetActiveMenuList) == 0x000040, "Wrong size on WIDGET_MenuBase_C_SetActiveMenuList");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, Value) == 0x000000, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::Value' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MenuBase_C_SetActiveMenuList, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'WIDGET_MenuBase_C_SetActiveMenuList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.GetMenuLabel
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MenuBase_C_GetMenuLabel final
{
public:
	class FText                                   Page;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(WIDGET_MenuBase_C_GetMenuLabel) == 0x000008, "Wrong alignment on WIDGET_MenuBase_C_GetMenuLabel");
static_assert(sizeof(WIDGET_MenuBase_C_GetMenuLabel) == 0x000018, "Wrong size on WIDGET_MenuBase_C_GetMenuLabel");
static_assert(offsetof(WIDGET_MenuBase_C_GetMenuLabel, Page) == 0x000000, "Member 'WIDGET_MenuBase_C_GetMenuLabel::Page' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.EVENT_ActiveListDirtyValueChanged
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged final
{
public:
	bool                                          IsDirty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged");
static_assert(sizeof(WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged) == 0x000001, "Wrong size on WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged");
static_assert(offsetof(WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged, IsDirty) == 0x000000, "Member 'WIDGET_MenuBase_C_EVENT_ActiveListDirtyValueChanged::IsDirty' has a wrong offset!");

// Function WIDGET_MenuBase.WIDGET_MenuBase_C.EVENT_ActivateListDefaultValueChanged
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged final
{
public:
	bool                                          IsDefault;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged) == 0x000001, "Wrong alignment on WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged");
static_assert(sizeof(WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged) == 0x000001, "Wrong size on WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged");
static_assert(offsetof(WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged, IsDefault) == 0x000000, "Member 'WIDGET_MenuBase_C_EVENT_ActivateListDefaultValueChanged::IsDefault' has a wrong offset!");

}


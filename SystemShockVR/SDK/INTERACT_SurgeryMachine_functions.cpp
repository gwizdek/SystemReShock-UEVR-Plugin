#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_SurgeryMachine

#include "Basic.hpp"

#include "INTERACT_SurgeryMachine_classes.hpp"
#include "INTERACT_SurgeryMachine_parameters.hpp"


namespace SDK
{

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ExecuteUbergraph_INTERACT_SurgeryMachine
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::ExecuteUbergraph_INTERACT_SurgeryMachine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ExecuteUbergraph_INTERACT_SurgeryMachine");

	Params::INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.StopButtonBlink
// (BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::StopButtonBlink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "StopButtonBlink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ButtonBlink
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeIntoBlink                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::ButtonBlink(float TimeIntoBlink)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ButtonBlink");

	Params::INTERACT_SurgeryMachine_C_ButtonBlink Parms{};

	Parms.TimeIntoBlink = TimeIntoBlink;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ReceiveTick");

	Params::INTERACT_SurgeryMachine_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "GetTargetShape");

	Params::INTERACT_SurgeryMachine_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "TryInteract");

	Params::INTERACT_SurgeryMachine_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.InitializeSurgeryMachine
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::InitializeSurgeryMachine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "InitializeSurgeryMachine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.BindAttributeEvents
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::BindAttributeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "BindAttributeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateMeshEmissiveStrength
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::UpdateMeshEmissiveStrength(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "UpdateMeshEmissiveStrength");

	Params::INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.OnSurgeryMachineDestroyed
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::OnSurgeryMachineDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "OnSurgeryMachineDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.SpawnDestroyedFX
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::SpawnDestroyedFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "SpawnDestroyedFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateDeathSettings
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::UpdateDeathSettings(bool DuringBeginPlay, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "UpdateDeathSettings");

	Params::INTERACT_SurgeryMachine_C_UpdateDeathSettings Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::UpdateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "UpdateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnStateFinished
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::EVENT_OnStateFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_OnStateFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.LaserStartUp
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::LaserStartUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "LaserStartUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.LaserShutDown
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::LaserShutDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "LaserShutDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.LaserMid
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::LaserMid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "LaserMid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.PlayNanoBot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::PlayNanoBot(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "PlayNanoBot");

	Params::INTERACT_SurgeryMachine_C_PlayNanoBot Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.PlaySmokeParticle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HatchOpening                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::PlaySmokeParticle(bool HatchOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "PlaySmokeParticle");

	Params::INTERACT_SurgeryMachine_C_PlaySmokeParticle Parms{};

	Parms.HatchOpening = HatchOpening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryCompleteTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::TryCompleteTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "TryCompleteTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SurgeryMachineState                NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsResuming                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::EnterState(ENUM_SurgeryMachineState NewState, float TimeElapsedInState, bool IsResuming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterState");

	Params::INTERACT_SurgeryMachine_C_EnterState Parms{};

	Parms.NewState = NewState;
	Parms.TimeElapsedInState = TimeElapsedInState;
	Parms.IsResuming = IsResuming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterIdle
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::EnterIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpeningToReceive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterOpeningToReceive(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterOpeningToReceive");

	Params::INTERACT_SurgeryMachine_C_EnterOpeningToReceive Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpenedToReceive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterOpenedToReceive(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterOpenedToReceive");

	Params::INTERACT_SurgeryMachine_C_EnterOpenedToReceive Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterClosingToScan
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterClosingToScan(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterClosingToScan");

	Params::INTERACT_SurgeryMachine_C_EnterClosingToScan Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToScan
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterWaitingToScan(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterWaitingToScan");

	Params::INTERACT_SurgeryMachine_C_EnterWaitingToScan Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScanRampUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterScanRampUp(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterScanRampUp");

	Params::INTERACT_SurgeryMachine_C_EnterScanRampUp Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScan
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterScan(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterScan");

	Params::INTERACT_SurgeryMachine_C_EnterScan Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScanRampDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterScanRampDown(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterScanRampDown");

	Params::INTERACT_SurgeryMachine_C_EnterScanRampDown Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToHeal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterWaitingToHeal(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterWaitingToHeal");

	Params::INTERACT_SurgeryMachine_C_EnterWaitingToHeal Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHealRampUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterHealRampUp(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterHealRampUp");

	Params::INTERACT_SurgeryMachine_C_EnterHealRampUp Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHeal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterHeal(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterHeal");

	Params::INTERACT_SurgeryMachine_C_EnterHeal Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHealRampDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterHealRampDown(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterHealRampDown");

	Params::INTERACT_SurgeryMachine_C_EnterHealRampDown Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToRelease
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterWaitingToRelease(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterWaitingToRelease");

	Params::INTERACT_SurgeryMachine_C_EnterWaitingToRelease Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpeningToRelease
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterOpeningToRelease(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterOpeningToRelease");

	Params::INTERACT_SurgeryMachine_C_EnterOpeningToRelease Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpenedToRelease
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterOpenedToRelease(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterOpenedToRelease");

	Params::INTERACT_SurgeryMachine_C_EnterOpenedToRelease Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterClosingToRearm
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterClosingToRearm(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterClosingToRearm");

	Params::INTERACT_SurgeryMachine_C_EnterClosingToRearm Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_EnableIdleOverride
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::EVENT_EnableIdleOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_EnableIdleOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_DisableIdleOverride
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::EVENT_DisableIdleOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_DisableIdleOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnCharacterExitFinished
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::EVENT_OnCharacterExitFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_OnCharacterExitFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ApplyEnterMoveControl
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SurgeryMachine_C::ApplyEnterMoveControl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ApplyEnterMoveControl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateVisibilityState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::UpdateVisibilityState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "UpdateVisibilityState");

	Params::INTERACT_SurgeryMachine_C_UpdateVisibilityState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnMoveControlExpire
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMOVECONTROL_Base_C*              MoveControl                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EVENT_OnMoveControlExpire(class UMOVECONTROL_Base_C* MoveControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_OnMoveControlExpire");

	Params::INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire Parms{};

	Parms.MoveControl = MoveControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryResumeSurgery
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::TryResumeSurgery(class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "TryResumeSurgery");

	Params::INTERACT_SurgeryMachine_C_TryResumeSurgery Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.VerifyInventoryOnResume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::VerifyInventoryOnResume(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "VerifyInventoryOnResume");

	Params::INTERACT_SurgeryMachine_C_VerifyInventoryOnResume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ResumeMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeIntoMontage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseLaserMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RemainingTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::ResumeMontage(class UAnimMontage* Montage, float TimeIntoMontage, bool UseLaserMesh, float* RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ResumeMontage");

	Params::INTERACT_SurgeryMachine_C_ResumeMontage Parms{};

	Parms.Montage = Montage;
	Parms.TimeIntoMontage = TimeIntoMontage;
	Parms.UseLaserMesh = UseLaserMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingTime != nullptr)
		*RemainingTime = Parms.RemainingTime;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.GetNextState
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SurgeryMachineState                OriginalState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_SurgeryMachineState                NewState                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::GetNextState(ENUM_SurgeryMachineState OriginalState, ENUM_SurgeryMachineState* NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "GetNextState");

	Params::INTERACT_SurgeryMachine_C_GetNextState Parms{};

	Parms.OriginalState = OriginalState;

	UObject::ProcessEvent(Func, &Parms);

	if (NewState != nullptr)
		*NewState = Parms.NewState;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterRearm
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeElapsedInState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EnterRearm(float TimeElapsedInState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EnterRearm");

	Params::INTERACT_SurgeryMachine_C_EnterRearm Parms{};

	Parms.TimeElapsedInState = TimeElapsedInState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ResumeChannelingInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::ResumeChannelingInteraction(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "ResumeChannelingInteraction");

	Params::INTERACT_SurgeryMachine_C_ResumeChannelingInteraction Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.StopChanneling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewChannelingInteract                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::StopChanneling(class AActor* NewChannelingInteract, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "StopChanneling");

	Params::INTERACT_SurgeryMachine_C_StopChanneling Parms{};

	Parms.NewChannelingInteract = NewChannelingInteract;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.IsSurgeryMachineDestroyed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::IsSurgeryMachineDestroyed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "IsSurgeryMachineDestroyed");

	Params::INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnDamageReceived
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_OnDamageReceived");

	Params::INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SurgeryMachine_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "EVENT_OnDisableAttribChanged");

	Params::INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.IsSurgeryMachineDisabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::IsSurgeryMachineDisabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "IsSurgeryMachineDisabled");

	Params::INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.HasActiveChannelingMoveControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SurgeryMachine_C::HasActiveChannelingMoveControl(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SurgeryMachine_C", "HasActiveChannelingMoveControl");

	Params::INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TARGET_ThrowGrenadeLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TARGET_ThrowGrenadeLocation.TARGET_ThrowGrenadeLocation_C
// 0x0028 (0x00D0 - 0x00A8)
class UTARGET_ThrowGrenadeLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                PredictedTargetLocation;                           // 0x00B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelSpatialNavigationQuery*           Query;                                             // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TARGET_ThrowGrenadeLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void EVENT_OnQueryFinished(bool bResult, const TArray<struct FVector4>& WeightedWorldLocations);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TARGET_ThrowGrenadeLocation_C">();
	}
	static class UTARGET_ThrowGrenadeLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTARGET_ThrowGrenadeLocation_C>();
	}
};
static_assert(alignof(UTARGET_ThrowGrenadeLocation_C) == 0x000008, "Wrong alignment on UTARGET_ThrowGrenadeLocation_C");
static_assert(sizeof(UTARGET_ThrowGrenadeLocation_C) == 0x0000D0, "Wrong size on UTARGET_ThrowGrenadeLocation_C");
static_assert(offsetof(UTARGET_ThrowGrenadeLocation_C, UberGraphFrame) == 0x0000A8, "Member 'UTARGET_ThrowGrenadeLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTARGET_ThrowGrenadeLocation_C, EnemyPawn) == 0x0000B0, "Member 'UTARGET_ThrowGrenadeLocation_C::EnemyPawn' has a wrong offset!");
static_assert(offsetof(UTARGET_ThrowGrenadeLocation_C, PredictedTargetLocation) == 0x0000B8, "Member 'UTARGET_ThrowGrenadeLocation_C::PredictedTargetLocation' has a wrong offset!");
static_assert(offsetof(UTARGET_ThrowGrenadeLocation_C, Query) == 0x0000C8, "Member 'UTARGET_ThrowGrenadeLocation_C::Query' has a wrong offset!");

}


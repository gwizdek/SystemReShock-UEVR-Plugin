#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_CheckAttribute

#include "Basic.hpp"

#include "AIModule_classes.hpp"
#include "ENUM_GreaterEqualLess_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DEC_CheckAttribute.DEC_CheckAttribute_C
// 0x0020 (0x00C0 - 0x00A0)
class UDEC_CheckAttribute_C final : public UBTDecorator_BlueprintBase
{
public:
	class FName                                   HasActiveModWithCategory;                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeDef*                          AttributeToCheck;                                  // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GreaterEqualLess                         CheckType;                                         // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ValueToCheckAgainst;                               // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckPercentage;                                   // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DEC_CheckAttribute_C">();
	}
	static class UDEC_CheckAttribute_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDEC_CheckAttribute_C>();
	}
};
static_assert(alignof(UDEC_CheckAttribute_C) == 0x000008, "Wrong alignment on UDEC_CheckAttribute_C");
static_assert(sizeof(UDEC_CheckAttribute_C) == 0x0000C0, "Wrong size on UDEC_CheckAttribute_C");
static_assert(offsetof(UDEC_CheckAttribute_C, HasActiveModWithCategory) == 0x0000A0, "Member 'UDEC_CheckAttribute_C::HasActiveModWithCategory' has a wrong offset!");
static_assert(offsetof(UDEC_CheckAttribute_C, AttributeToCheck) == 0x0000A8, "Member 'UDEC_CheckAttribute_C::AttributeToCheck' has a wrong offset!");
static_assert(offsetof(UDEC_CheckAttribute_C, CheckType) == 0x0000B0, "Member 'UDEC_CheckAttribute_C::CheckType' has a wrong offset!");
static_assert(offsetof(UDEC_CheckAttribute_C, ValueToCheckAgainst) == 0x0000B4, "Member 'UDEC_CheckAttribute_C::ValueToCheckAgainst' has a wrong offset!");
static_assert(offsetof(UDEC_CheckAttribute_C, CheckPercentage) == 0x0000B8, "Member 'UDEC_CheckAttribute_C::CheckPercentage' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_SentryTurret_Base

#include "Basic.hpp"

#include "INTERACT_SentryTurret_Base_classes.hpp"
#include "INTERACT_SentryTurret_Base_parameters.hpp"


namespace SDK
{

// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.ExecuteUbergraph_INTERACT_SentryTurret_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::ExecuteUbergraph_INTERACT_SentryTurret_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "ExecuteUbergraph_INTERACT_SentryTurret_Base");

	Params::INTERACT_SentryTurret_Base_C_ExecuteUbergraph_INTERACT_SentryTurret_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "ReceiveTick");

	Params::INTERACT_SentryTurret_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bAudibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature(bool bAudibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature");

	Params::INTERACT_SentryTurret_Base_C_BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature Parms{};

	Parms.bAudibleState = bAudibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_SentryTurret_Base_C_BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.IsSentryTurretEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::IsSentryTurretEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "IsSentryTurretEnabled");

	Params::INTERACT_SentryTurret_Base_C_IsSentryTurretEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.IsSentryTurretAudible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::IsSentryTurretAudible(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "IsSentryTurretAudible");

	Params::INTERACT_SentryTurret_Base_C_IsSentryTurretAudible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.CanDeploySentryTurret
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::CanDeploySentryTurret(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "CanDeploySentryTurret");

	Params::INTERACT_SentryTurret_Base_C_CanDeploySentryTurret Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetSentryTurretRelativePitch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::SetSentryTurretRelativePitch(float Pitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetSentryTurretRelativePitch");

	Params::INTERACT_SentryTurret_Base_C_SetSentryTurretRelativePitch Parms{};

	Parms.Pitch = Pitch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetSentryTurretRelativeYaw
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::SetSentryTurretRelativeYaw(float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetSentryTurretRelativeYaw");

	Params::INTERACT_SentryTurret_Base_C_SetSentryTurretRelativeYaw Parms{};

	Parms.Yaw = Yaw;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetSentryTurretRelativeYaw
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetSentryTurretRelativeYaw(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetSentryTurretRelativeYaw");

	Params::INTERACT_SentryTurret_Base_C_GetSentryTurretRelativeYaw Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetTurretRelativeRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::GetTurretRelativeRotation(struct FRotator* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetTurretRelativeRotation");

	Params::INTERACT_SentryTurret_Base_C_GetTurretRelativeRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.InitializeSentryTurret
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::InitializeSentryTurret(bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "InitializeSentryTurret");

	Params::INTERACT_SentryTurret_Base_C_InitializeSentryTurret Parms{};

	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetupAttributeBinds
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::SetupAttributeBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetupAttributeBinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TickSentryTurret
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::TickSentryTurret(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TickSentryTurret");

	Params::INTERACT_SentryTurret_Base_C_TickSentryTurret Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TickSentryTurretTransition
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::TickSentryTurretTransition(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TickSentryTurretTransition");

	Params::INTERACT_SentryTurret_Base_C_TickSentryTurretTransition Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryDeploySentryTurret
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::TryDeploySentryTurret(class AActor* SourceActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryDeploySentryTurret");

	Params::INTERACT_SentryTurret_Base_C_TryDeploySentryTurret Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.ForceDeploySentryTurret
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::ForceDeploySentryTurret(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "ForceDeploySentryTurret");

	Params::INTERACT_SentryTurret_Base_C_ForceDeploySentryTurret Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryConcealSentryTurret
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::TryConcealSentryTurret(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryConcealSentryTurret");

	Params::INTERACT_SentryTurret_Base_C_TryConcealSentryTurret Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.ForceConcealSentryTurret
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::ForceConcealSentryTurret()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "ForceConcealSentryTurret");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UpdateSentryTurretTransition
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StateProgress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::UpdateSentryTurretTransition(float StateProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UpdateSentryTurretTransition");

	Params::INTERACT_SentryTurret_Base_C_UpdateSentryTurretTransition Parms{};

	Parms.StateProgress = StateProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UpdateDomeMeshLocation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeployProgress                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::UpdateDomeMeshLocation(float DeployProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UpdateDomeMeshLocation");

	Params::INTERACT_SentryTurret_Base_C_UpdateDomeMeshLocation Parms{};

	Parms.DeployProgress = DeployProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UpdateDoorMeshLocations
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OpenProgress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::UpdateDoorMeshLocations(float OpenProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UpdateDoorMeshLocations");

	Params::INTERACT_SentryTurret_Base_C_UpdateDoorMeshLocations Parms{};

	Parms.OpenProgress = OpenProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UpdateMeshEmissiveStrength
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Strength                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::UpdateMeshEmissiveStrength(float Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UpdateMeshEmissiveStrength");

	Params::INTERACT_SentryTurret_Base_C_UpdateMeshEmissiveStrength Parms{};

	Parms.Strength = Strength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetSentryTurretVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::SetSentryTurretVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetSentryTurretVisibility");

	Params::INTERACT_SentryTurret_Base_C_SetSentryTurretVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetSentryTurretAudibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AudibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::SetSentryTurretAudibility(bool AudibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetSentryTurretAudibility");

	Params::INTERACT_SentryTurret_Base_C_SetSentryTurretAudibility Parms{};

	Parms.AudibilityState = AudibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetTurretYawAngleToLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetTurretYawAngleToLocation(const struct FVector& Location, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetTurretYawAngleToLocation");

	Params::INTERACT_SentryTurret_Base_C_GetTurretYawAngleToLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetTurretPitchAngleToLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetTurretPitchAngleToLocation(const struct FVector& Location, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetTurretPitchAngleToLocation");

	Params::INTERACT_SentryTurret_Base_C_GetTurretPitchAngleToLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetElapsedStateTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetElapsedStateTime(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetElapsedStateTime");

	Params::INTERACT_SentryTurret_Base_C_GetElapsedStateTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.HasTickBehaviorWhilePerceptible
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::HasTickBehaviorWhilePerceptible(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "HasTickBehaviorWhilePerceptible");

	Params::INTERACT_SentryTurret_Base_C_HasTickBehaviorWhilePerceptible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.HasCriticalTickBehavior
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::HasCriticalTickBehavior(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "HasCriticalTickBehavior");

	Params::INTERACT_SentryTurret_Base_C_HasCriticalTickBehavior Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.CanChangeTickState
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DesiredState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::CanChangeTickState(bool DesiredState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "CanChangeTickState");

	Params::INTERACT_SentryTurret_Base_C_CanChangeTickState Parms{};

	Parms.DesiredState = DesiredState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryChangeTickState
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DesiredState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::TryChangeTickState(bool DesiredState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryChangeTickState");

	Params::INTERACT_SentryTurret_Base_C_TryChangeTickState Parms{};

	Parms.DesiredState = DesiredState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnTickStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::OnTickStateChanged(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnTickStateChanged");

	Params::INTERACT_SentryTurret_Base_C_OnTickStateChanged Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetDoorState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_DoorState                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetDoorState(ENUM_DoorState* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetDoorState");

	Params::INTERACT_SentryTurret_Base_C_GetDoorState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnMagneticDisableStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisableState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::OnMagneticDisableStateChanged(bool DisableState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnMagneticDisableStateChanged");

	Params::INTERACT_SentryTurret_Base_C_OnMagneticDisableStateChanged Parms{};

	Parms.DisableState = DisableState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnSentryTurretStartedDeploying
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::OnSentryTurretStartedDeploying(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnSentryTurretStartedDeploying");

	Params::INTERACT_SentryTurret_Base_C_OnSentryTurretStartedDeploying Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnSentryTurretFinishedDeploying
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::OnSentryTurretFinishedDeploying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnSentryTurretFinishedDeploying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnSentryTurretStartedConcealing
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::OnSentryTurretStartedConcealing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnSentryTurretStartedConcealing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnSentryTurretFinishedConcealing
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::OnSentryTurretFinishedConcealing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnSentryTurretFinishedConcealing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.PlayExplosionEffects
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::PlayExplosionEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "PlayExplosionEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "EVENT_OnDisableAttribChanged");

	Params::INTERACT_SentryTurret_Base_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SpawnGoreDebris
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::SpawnGoreDebris()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SpawnGoreDebris");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.SetBrokenMeshes
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::SetBrokenMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "SetBrokenMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryStartRotating
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::TryStartRotating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryStartRotating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryStopRotating
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::TryStopRotating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryStopRotating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.InitializeDestructible
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_SentryTurret_Base_C::InitializeDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "InitializeDestructible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.OnDeath
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::OnDeath(class AActor* SourceActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "OnDeath");

	Params::INTERACT_SentryTurret_Base_C_OnDeath Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "TryInteract");

	Params::INTERACT_SentryTurret_Base_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.UpdateDeathSettings
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_SentryTurret_Base_C::UpdateDeathSettings(bool DuringBeginPlay, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "UpdateDeathSettings");

	Params::INTERACT_SentryTurret_Base_C_UpdateDeathSettings Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetArmorAugmentationPercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_SentryTurret_Base_C::GetArmorAugmentationPercentage(class UOBJ_ImpactData_C* ImpactData, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetArmorAugmentationPercentage");

	Params::INTERACT_SentryTurret_Base_C_GetArmorAugmentationPercentage Parms{};

	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C.GetDefaultOverrideAttributes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FDefaultAttribute>        Result                                                 (Parm, OutParm)

void AINTERACT_SentryTurret_Base_C::GetDefaultOverrideAttributes(TArray<struct FDefaultAttribute>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_SentryTurret_Base_C", "GetDefaultOverrideAttributes");

	Params::INTERACT_SentryTurret_Base_C_GetDefaultOverrideAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}

}


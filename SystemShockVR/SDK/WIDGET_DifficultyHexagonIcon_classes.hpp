#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyHexagonIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_GameDifficultyConfigCategory_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C
// 0x0038 (0x0298 - 0x0260)
class UWIDGET_DifficultyHexagonIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IMAGE_DifficultyCategoryIcon;                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_IconHex;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Highlighted;                                       // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterial*>                      CategoryIcons;                                     // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ENUM_GameDifficultyConfigCategory             DifficultyConfigCategory;                          // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_DifficultyHexagonIcon(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetHighlighted(bool Highlighted_0);
	void OnHighlighted();
	void SetIconInHex(ENUM_GameDifficultyConfigCategory DifficultyCategory);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_DifficultyHexagonIcon_C">();
	}
	static class UWIDGET_DifficultyHexagonIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_DifficultyHexagonIcon_C>();
	}
};
static_assert(alignof(UWIDGET_DifficultyHexagonIcon_C) == 0x000008, "Wrong alignment on UWIDGET_DifficultyHexagonIcon_C");
static_assert(sizeof(UWIDGET_DifficultyHexagonIcon_C) == 0x000298, "Wrong size on UWIDGET_DifficultyHexagonIcon_C");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_DifficultyHexagonIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, IMAGE_DifficultyCategoryIcon) == 0x000268, "Member 'UWIDGET_DifficultyHexagonIcon_C::IMAGE_DifficultyCategoryIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, IMAGE_IconHex) == 0x000270, "Member 'UWIDGET_DifficultyHexagonIcon_C::IMAGE_IconHex' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, Highlighted) == 0x000278, "Member 'UWIDGET_DifficultyHexagonIcon_C::Highlighted' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, CategoryIcons) == 0x000280, "Member 'UWIDGET_DifficultyHexagonIcon_C::CategoryIcons' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyHexagonIcon_C, DifficultyConfigCategory) == 0x000290, "Member 'UWIDGET_DifficultyHexagonIcon_C::DifficultyConfigCategory' has a wrong offset!");

}


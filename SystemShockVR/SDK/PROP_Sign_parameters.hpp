#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROP_Sign

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PROP_Sign.PROP_Sign_C.ExecuteUbergraph_PROP_Sign
// 0x0008 (0x0008 - 0x0000)
struct PROP_Sign_C_ExecuteUbergraph_PROP_Sign final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROP_Sign_C_ExecuteUbergraph_PROP_Sign) == 0x000004, "Wrong alignment on PROP_Sign_C_ExecuteUbergraph_PROP_Sign");
static_assert(sizeof(PROP_Sign_C_ExecuteUbergraph_PROP_Sign) == 0x000008, "Wrong size on PROP_Sign_C_ExecuteUbergraph_PROP_Sign");
static_assert(offsetof(PROP_Sign_C_ExecuteUbergraph_PROP_Sign, EntryPoint) == 0x000000, "Member 'PROP_Sign_C_ExecuteUbergraph_PROP_Sign::EntryPoint' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_ExecuteUbergraph_PROP_Sign, K2Node_Event_EndPlayReason) == 0x000004, "Member 'PROP_Sign_C_ExecuteUbergraph_PROP_Sign::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function PROP_Sign.PROP_Sign_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PROP_Sign_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROP_Sign_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PROP_Sign_C_ReceiveEndPlay");
static_assert(sizeof(PROP_Sign_C_ReceiveEndPlay) == 0x000001, "Wrong size on PROP_Sign_C_ReceiveEndPlay");
static_assert(offsetof(PROP_Sign_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PROP_Sign_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PROP_Sign.PROP_Sign_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct PROP_Sign_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PROP_Sign_C_UserConstructionScript) == 0x000001, "Wrong alignment on PROP_Sign_C_UserConstructionScript");
static_assert(sizeof(PROP_Sign_C_UserConstructionScript) == 0x000002, "Wrong size on PROP_Sign_C_UserConstructionScript");
static_assert(offsetof(PROP_Sign_C_UserConstructionScript, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'PROP_Sign_C_UserConstructionScript::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PROP_Sign_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PROP_Sign.PROP_Sign_C.UpdateSign
// 0x0078 (0x0078 - 0x0000)
struct PROP_Sign_C_UpdateSign final
{
public:
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_4;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_5;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasRenderTarget2D*                  CallFunc_CreateCanvasRenderTarget2D_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROP_Sign_C_UpdateSign) == 0x000008, "Wrong alignment on PROP_Sign_C_UpdateSign");
static_assert(sizeof(PROP_Sign_C_UpdateSign) == 0x000078, "Wrong size on PROP_Sign_C_UpdateSign");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000000, "Member 'PROP_Sign_C_UpdateSign::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000008, "Member 'PROP_Sign_C_UpdateSign::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000010, "Member 'PROP_Sign_C_UpdateSign::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PROP_Sign_C_UpdateSign::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PROP_Sign_C_UpdateSign::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'PROP_Sign_C_UpdateSign::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000030, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000034, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_MakeVector2D_ReturnValue_1) == 0x000038, "Member 'PROP_Sign_C_UpdateSign::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000040, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000044, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_MakeVector2D_ReturnValue_2) == 0x000050, "Member 'PROP_Sign_C_UpdateSign::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'PROP_Sign_C_UpdateSign::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue_4) == 0x000060, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_FTrunc_ReturnValue) == 0x000064, "Member 'PROP_Sign_C_UpdateSign::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_Multiply_IntFloat_ReturnValue_5) == 0x000068, "Member 'PROP_Sign_C_UpdateSign::CallFunc_Multiply_IntFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'PROP_Sign_C_UpdateSign::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROP_Sign_C_UpdateSign, CallFunc_CreateCanvasRenderTarget2D_ReturnValue) == 0x000070, "Member 'PROP_Sign_C_UpdateSign::CallFunc_CreateCanvasRenderTarget2D_ReturnValue' has a wrong offset!");

// Function PROP_Sign.PROP_Sign_C.TryCleanupSign
// 0x0001 (0x0001 - 0x0000)
struct PROP_Sign_C_TryCleanupSign final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PROP_Sign_C_TryCleanupSign) == 0x000001, "Wrong alignment on PROP_Sign_C_TryCleanupSign");
static_assert(sizeof(PROP_Sign_C_TryCleanupSign) == 0x000001, "Wrong size on PROP_Sign_C_TryCleanupSign");
static_assert(offsetof(PROP_Sign_C_TryCleanupSign, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PROP_Sign_C_TryCleanupSign::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BULLORANG_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BULLORANG_Base.BULLORANG_Base_C
// 0x0100 (0x0320 - 0x0220)
class ABULLORANG_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_Projectile_Loop;                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSpinRotationRate;                           // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         TargetSpinRotationRate;                            // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    DamageModData;                                     // 0x0248(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCOMP_AttribManager_C*>          DamagedComponents;                                 // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ReturnToBully;                                     // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnSpeed;                                       // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StunnedTimestamp;                                  // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StunnedDuration;                                   // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0308(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastSocketLocaton;                                 // 0x0314(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BULLORANG_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UpdateBullorangMovement(float DeltaSeconds);
	void UpdateBullorangBladeSpin(float Delta_Seconds);
	void UpdateReturnToOwner(float DeltaSeconds);
	void RecallBullorang();
	void BullorangDamageTrace(const struct FVector& TargetLocation, bool PassThroughPlayer, struct FHitResult* Hit);
	void ResetDamageCounter();
	void ReceiveStunningImpact(const struct FVector& ReflectionDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BULLORANG_Base_C">();
	}
	static class ABULLORANG_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABULLORANG_Base_C>();
	}
};
static_assert(alignof(ABULLORANG_Base_C) == 0x000008, "Wrong alignment on ABULLORANG_Base_C");
static_assert(sizeof(ABULLORANG_Base_C) == 0x000320, "Wrong size on ABULLORANG_Base_C");
static_assert(offsetof(ABULLORANG_Base_C, UberGraphFrame) == 0x000220, "Member 'ABULLORANG_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, Audio_Projectile_Loop) == 0x000228, "Member 'ABULLORANG_Base_C::Audio_Projectile_Loop' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, Sphere) == 0x000230, "Member 'ABULLORANG_Base_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, StaticMesh) == 0x000238, "Member 'ABULLORANG_Base_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, CurrentSpinRotationRate) == 0x000240, "Member 'ABULLORANG_Base_C::CurrentSpinRotationRate' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, TargetSpinRotationRate) == 0x000244, "Member 'ABULLORANG_Base_C::TargetSpinRotationRate' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, DamageModData) == 0x000248, "Member 'ABULLORANG_Base_C::DamageModData' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, DamagedComponents) == 0x0002E8, "Member 'ABULLORANG_Base_C::DamagedComponents' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, ReturnToBully) == 0x0002F8, "Member 'ABULLORANG_Base_C::ReturnToBully' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, ReturnSpeed) == 0x0002FC, "Member 'ABULLORANG_Base_C::ReturnSpeed' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, StunnedTimestamp) == 0x000300, "Member 'ABULLORANG_Base_C::StunnedTimestamp' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, StunnedDuration) == 0x000304, "Member 'ABULLORANG_Base_C::StunnedDuration' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, Velocity) == 0x000308, "Member 'ABULLORANG_Base_C::Velocity' has a wrong offset!");
static_assert(offsetof(ABULLORANG_Base_C, LastSocketLocaton) == 0x000314, "Member 'ABULLORANG_Base_C::LastSocketLocaton' has a wrong offset!");

}


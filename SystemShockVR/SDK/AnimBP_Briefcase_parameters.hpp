#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Briefcase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.ExecuteUbergraph_AnimBP_Briefcase
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase) == 0x000004, "Wrong alignment on AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase");
static_assert(sizeof(AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase) == 0x000004, "Wrong size on AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase");
static_assert(offsetof(AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase, EntryPoint) == 0x000000, "Member 'AnimBP_Briefcase_C_ExecuteUbergraph_AnimBP_Briefcase::EntryPoint' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_Briefcase_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_Briefcase_C_AnimGraph");
static_assert(sizeof(AnimBP_Briefcase_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_Briefcase_C_AnimGraph");
static_assert(offsetof(AnimBP_Briefcase_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_Briefcase_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.UnlockDoor
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Briefcase_C_UnlockDoor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_UnlockDoor) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_UnlockDoor");
static_assert(sizeof(AnimBP_Briefcase_C_UnlockDoor) == 0x000001, "Wrong size on AnimBP_Briefcase_C_UnlockDoor");
static_assert(offsetof(AnimBP_Briefcase_C_UnlockDoor, Result) == 0x000000, "Member 'AnimBP_Briefcase_C_UnlockDoor::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.HideBackButton
// 0x0002 (0x0002 - 0x0000)
struct AnimBP_Briefcase_C_HideBackButton final
{
public:
	bool                                          HideState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_HideBackButton) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_HideBackButton");
static_assert(sizeof(AnimBP_Briefcase_C_HideBackButton) == 0x000002, "Wrong size on AnimBP_Briefcase_C_HideBackButton");
static_assert(offsetof(AnimBP_Briefcase_C_HideBackButton, HideState) == 0x000000, "Member 'AnimBP_Briefcase_C_HideBackButton::HideState' has a wrong offset!");
static_assert(offsetof(AnimBP_Briefcase_C_HideBackButton, Result) == 0x000001, "Member 'AnimBP_Briefcase_C_HideBackButton::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.HideFrontButton
// 0x0002 (0x0002 - 0x0000)
struct AnimBP_Briefcase_C_HideFrontButton final
{
public:
	bool                                          HideState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_HideFrontButton) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_HideFrontButton");
static_assert(sizeof(AnimBP_Briefcase_C_HideFrontButton) == 0x000002, "Wrong size on AnimBP_Briefcase_C_HideFrontButton");
static_assert(offsetof(AnimBP_Briefcase_C_HideFrontButton, HideState) == 0x000000, "Member 'AnimBP_Briefcase_C_HideFrontButton::HideState' has a wrong offset!");
static_assert(offsetof(AnimBP_Briefcase_C_HideFrontButton, Result) == 0x000001, "Member 'AnimBP_Briefcase_C_HideFrontButton::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.SetLocked
// 0x0002 (0x0002 - 0x0000)
struct AnimBP_Briefcase_C_SetLocked final
{
public:
	bool                                          LockedState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_SetLocked) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_SetLocked");
static_assert(sizeof(AnimBP_Briefcase_C_SetLocked) == 0x000002, "Wrong size on AnimBP_Briefcase_C_SetLocked");
static_assert(offsetof(AnimBP_Briefcase_C_SetLocked, LockedState) == 0x000000, "Member 'AnimBP_Briefcase_C_SetLocked::LockedState' has a wrong offset!");
static_assert(offsetof(AnimBP_Briefcase_C_SetLocked, Result) == 0x000001, "Member 'AnimBP_Briefcase_C_SetLocked::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.IsLocked
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Briefcase_C_IsLocked final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_IsLocked) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_IsLocked");
static_assert(sizeof(AnimBP_Briefcase_C_IsLocked) == 0x000001, "Wrong size on AnimBP_Briefcase_C_IsLocked");
static_assert(offsetof(AnimBP_Briefcase_C_IsLocked, Result) == 0x000000, "Member 'AnimBP_Briefcase_C_IsLocked::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.CloseDoor
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Briefcase_C_CloseDoor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_CloseDoor) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_CloseDoor");
static_assert(sizeof(AnimBP_Briefcase_C_CloseDoor) == 0x000001, "Wrong size on AnimBP_Briefcase_C_CloseDoor");
static_assert(offsetof(AnimBP_Briefcase_C_CloseDoor, Result) == 0x000000, "Member 'AnimBP_Briefcase_C_CloseDoor::Result' has a wrong offset!");

// Function AnimBP_Briefcase.AnimBP_Briefcase_C.OpenDoor
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Briefcase_C_OpenDoor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Briefcase_C_OpenDoor) == 0x000001, "Wrong alignment on AnimBP_Briefcase_C_OpenDoor");
static_assert(sizeof(AnimBP_Briefcase_C_OpenDoor) == 0x000001, "Wrong size on AnimBP_Briefcase_C_OpenDoor");
static_assert(offsetof(AnimBP_Briefcase_C_OpenDoor, Result) == 0x000000, "Member 'AnimBP_Briefcase_C_OpenDoor::Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Subtitles

#include "Basic.hpp"

#include "STRUCT_SubtitleToDisplay_structs.hpp"
#include "STRUCT_DialogueCaptionObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_SubtitleParseMode_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"
#include "STRUCT_NarrativeSpeakers_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ExecuteUbergraph_WIDGET_Subtitles
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUpdateSubtitleText_Result;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSubtitlesEnabled_Result;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles");
static_assert(sizeof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles) == 0x000058, "Wrong size on WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, EntryPoint) == 0x000000, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, CallFunc_TryUpdateSubtitleText_Result) == 0x000004, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::CallFunc_TryUpdateSubtitleText_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, K2Node_Event_MyGeometry) == 0x000008, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000048, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles, CallFunc_GetSubtitlesEnabled_Result) == 0x000050, "Member 'WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles::CallFunc_GetSubtitlesEnabled_Result' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_Subtitles_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_Tick) == 0x000004, "Wrong alignment on WIDGET_Subtitles_C_Tick");
static_assert(sizeof(WIDGET_Subtitles_C_Tick) == 0x00003C, "Wrong size on WIDGET_Subtitles_C_Tick");
static_assert(offsetof(WIDGET_Subtitles_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_Subtitles_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_Subtitles_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.InitilalizeSubtitleWidget
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_Subtitles_C_InitilalizeSubtitleWidget final
{
public:
	class UWIDGET_MediaDisplay_C*                 MediaDisplay_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         Player_HUD;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_InitilalizeSubtitleWidget) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_InitilalizeSubtitleWidget");
static_assert(sizeof(WIDGET_Subtitles_C_InitilalizeSubtitleWidget) == 0x000018, "Wrong size on WIDGET_Subtitles_C_InitilalizeSubtitleWidget");
static_assert(offsetof(WIDGET_Subtitles_C_InitilalizeSubtitleWidget, MediaDisplay_0) == 0x000000, "Member 'WIDGET_Subtitles_C_InitilalizeSubtitleWidget::MediaDisplay_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_InitilalizeSubtitleWidget, Player_HUD) == 0x000008, "Member 'WIDGET_Subtitles_C_InitilalizeSubtitleWidget::Player_HUD' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ClearSubtitles
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Subtitles_C_ClearSubtitles final
{
public:
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0000(0x0018)()
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0018(0x0018)()
};
static_assert(alignof(WIDGET_Subtitles_C_ClearSubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ClearSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_ClearSubtitles) == 0x000030, "Wrong size on WIDGET_Subtitles_C_ClearSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_ClearSubtitles, CallFunc_GetEmptyText_ReturnValue) == 0x000000, "Member 'WIDGET_Subtitles_C_ClearSubtitles::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ClearSubtitles, CallFunc_GetEmptyText_ReturnValue_1) == 0x000018, "Member 'WIDGET_Subtitles_C_ClearSubtitles::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SetSubtitlesEnabled
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_Subtitles_C_SetSubtitlesEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_SetSubtitlesEnabled) == 0x000001, "Wrong alignment on WIDGET_Subtitles_C_SetSubtitlesEnabled");
static_assert(sizeof(WIDGET_Subtitles_C_SetSubtitlesEnabled) == 0x000005, "Wrong size on WIDGET_Subtitles_C_SetSubtitlesEnabled");
static_assert(offsetof(WIDGET_Subtitles_C_SetSubtitlesEnabled, State) == 0x000000, "Member 'WIDGET_Subtitles_C_SetSubtitlesEnabled::State' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetSubtitlesEnabled, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_Subtitles_C_SetSubtitlesEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetSubtitlesEnabled, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_Subtitles_C_SetSubtitlesEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetSubtitlesEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_Subtitles_C_SetSubtitlesEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetSubtitlesEnabled, K2Node_Select_Default) == 0x000004, "Member 'WIDGET_Subtitles_C_SetSubtitlesEnabled::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplayNewSubtitles
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_Subtitles_C_DisplayNewSubtitles final
{
public:
	class FString                                 ContextString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAdvanceSubtitlesToStartTime_Result;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryAdvanceSubtitlesToStartTime_StartTimeOnLine; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUpdateSubtitleText_Result;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplayNewSubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplayNewSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_DisplayNewSubtitles) == 0x000020, "Wrong size on WIDGET_Subtitles_C_DisplayNewSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_DisplayNewSubtitles, ContextString) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplayNewSubtitles::ContextString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplayNewSubtitles, StartTime) == 0x000010, "Member 'WIDGET_Subtitles_C_DisplayNewSubtitles::StartTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplayNewSubtitles, CallFunc_TryAdvanceSubtitlesToStartTime_Result) == 0x000014, "Member 'WIDGET_Subtitles_C_DisplayNewSubtitles::CallFunc_TryAdvanceSubtitlesToStartTime_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplayNewSubtitles, CallFunc_TryAdvanceSubtitlesToStartTime_StartTimeOnLine) == 0x000018, "Member 'WIDGET_Subtitles_C_DisplayNewSubtitles::CallFunc_TryAdvanceSubtitlesToStartTime_StartTimeOnLine' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplayNewSubtitles, CallFunc_TryUpdateSubtitleText_Result) == 0x00001C, "Member 'WIDGET_Subtitles_C_DisplayNewSubtitles::CallFunc_TryUpdateSubtitleText_Result' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromMediaItemClass
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass final
{
public:
	class UClass*                                 MediaItemClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsNOTE_Base;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct; // 0x0030(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass");
static_assert(sizeof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass) == 0x0000B8, "Wrong size on WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, MediaItemClass) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::MediaItemClass' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, StartTime) == 0x000008, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::StartTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, CallFunc_IsValidClass_ReturnValue) == 0x00000C, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, CallFunc_GetClassDisplayName_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, K2Node_ClassDynamicCast_AsNOTE_Base) == 0x000020, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::K2Node_ClassDynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct) == 0x000030, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromCutscene
// 0x0200 (0x0200 - 0x0000)
struct WIDGET_Subtitles_C_DisplaySubtitleFromCutscene final
{
public:
	class FName                                   SubtitleRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DialogueCaptionObject          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    K2Node_MakeStruct_STRUCT_MediaObject;              // 0x00A8(0x0080)(HasGetValueTypeHash)
	struct FSTRUCT_DialogueCaptionObject          CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0128(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    K2Node_MakeStruct_STRUCT_MediaObject_1;            // 0x0180(0x0080)(HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplaySubtitleFromCutscene");
static_assert(sizeof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene) == 0x000200, "Wrong size on WIDGET_Subtitles_C_DisplaySubtitleFromCutscene");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, SubtitleRowName) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::SubtitleRowName' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetHackerGender_Result) == 0x000040, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, K2Node_MakeStruct_STRUCT_MediaObject) == 0x0000A8, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::K2Node_MakeStruct_STRUCT_MediaObject' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000128, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000178, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromCutscene, K2Node_MakeStruct_STRUCT_MediaObject_1) == 0x000180, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromCutscene::K2Node_MakeStruct_STRUCT_MediaObject_1' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromAtmospherics
// 0x0208 (0x0208 - 0x0000)
struct WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics final
{
public:
	class FName                                   SubtitleRowName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DialogueCaptionObject          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    K2Node_MakeStruct_STRUCT_MediaObject;              // 0x00B0(0x0080)(HasGetValueTypeHash)
	struct FSTRUCT_DialogueCaptionObject          CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0130(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    K2Node_MakeStruct_STRUCT_MediaObject_1;            // 0x0188(0x0080)(HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics");
static_assert(sizeof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics) == 0x000208, "Wrong size on WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, SubtitleRowName) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::SubtitleRowName' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, StartTime) == 0x000008, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::StartTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetHackerGender_Result) == 0x000048, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000054, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, K2Node_MakeStruct_STRUCT_MediaObject) == 0x0000B0, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::K2Node_MakeStruct_STRUCT_MediaObject' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000130, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000180, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics, K2Node_MakeStruct_STRUCT_MediaObject_1) == 0x000188, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics::K2Node_MakeStruct_STRUCT_MediaObject_1' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromTaunt
// 0x0088 (0x0088 - 0x0000)
struct WIDGET_Subtitles_C_DisplaySubtitleFromTaunt final
{
public:
	struct FSTRUCT_MediaObject                    Media_Data;                                        // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0080(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplaySubtitleFromTaunt) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplaySubtitleFromTaunt");
static_assert(sizeof(WIDGET_Subtitles_C_DisplaySubtitleFromTaunt) == 0x000088, "Wrong size on WIDGET_Subtitles_C_DisplaySubtitleFromTaunt");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromTaunt, Media_Data) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromTaunt::Media_Data' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromTaunt, StartTime) == 0x000080, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromTaunt::StartTime' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromDialogueCaption
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption final
{
public:
	struct FSTRUCT_DialogueCaptionObject          DialogueCaption;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisplayingSubtitles_Result;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    K2Node_MakeStruct_STRUCT_MediaObject;              // 0x0058(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption");
static_assert(sizeof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption) == 0x0000E0, "Wrong size on WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption, DialogueCaption) == 0x000000, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption::DialogueCaption' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption, StartTime) == 0x000050, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption::StartTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption, CallFunc_IsDisplayingSubtitles_Result) == 0x000054, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption::CallFunc_IsDisplayingSubtitles_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption, K2Node_MakeStruct_STRUCT_MediaObject) == 0x000058, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption::K2Node_MakeStruct_STRUCT_MediaObject' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption, CallFunc_Not_PreBool_ReturnValue) == 0x0000D8, "Member 'WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryAdvanceSubtitlesToStartTime
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTimeOnLine;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SubtitleDisplayDuration;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeRemaining;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_SubtitleToDisplay              CallFunc_Array_Get_Item;                           // 0x0030(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime");
static_assert(sizeof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime) == 0x000060, "Wrong size on WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, StartTime) == 0x000000, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::StartTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, Result) == 0x000004, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, StartTimeOnLine) == 0x000008, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::StartTimeOnLine' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, SubtitleDisplayDuration) == 0x00000C, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::SubtitleDisplayDuration' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, StartTimeRemaining) == 0x000010, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::StartTimeRemaining' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, Temp_int_Variable) == 0x000014, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Array_Get_Item) == 0x000030, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ParseTranscriptionText
// 0x0178 (0x0178 - 0x0000)
struct WIDGET_Subtitles_C_ParseTranscriptionText final
{
public:
	class FString                                 ContextString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SpeakerString;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         TranscriptionCharArray;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FString                                 CurrentCharacterParsing;                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 BuiltString;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 BuiltTimeDuration;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ENUM_SubtitleParseMode                        SubtitleParseMode;                                 // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x00E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0130(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_ParseTranscriptionText) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ParseTranscriptionText");
static_assert(sizeof(WIDGET_Subtitles_C_ParseTranscriptionText) == 0x000178, "Wrong size on WIDGET_Subtitles_C_ParseTranscriptionText");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, ContextString) == 0x000000, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::ContextString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, SpeakerString) == 0x000010, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::SpeakerString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, TranscriptionCharArray) == 0x000020, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::TranscriptionCharArray' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CurrentCharacterParsing) == 0x000030, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CurrentCharacterParsing' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, BuiltString) == 0x000040, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::BuiltString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, BuiltTimeDuration) == 0x000050, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::BuiltTimeDuration' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, SubtitleParseMode) == 0x000060, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::SubtitleParseMode' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, Temp_int_Array_Index_Variable) == 0x000064, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000081, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000098, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000B0, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000B1, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, K2Node_SwitchString_CmpSuccess) == 0x0000B2, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C8, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x0000E8, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000100, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000110, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000111, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000118, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000128, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000129, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00012A, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, Temp_string_Variable) == 0x000130, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Array_Contains_ReturnValue) == 0x000140, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000141, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000142, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_IsNumeric_ReturnValue) == 0x000143, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000158, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000159, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x00015A, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00015B, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x00015C, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000160, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ParseTranscriptionText, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x000170, "Member 'WIDGET_Subtitles_C_ParseTranscriptionText::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.CreateSubtitleLineStruct
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_Subtitles_C_CreateSubtitleLineStruct final
{
public:
	class FString                                 BuiltString;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 BuiltTime;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 InterruptSpeaker;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_SubtitleToDisplay              K2Node_MakeStruct_STRUCT_SubtitleToDisplay;        // 0x0038(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_CreateSubtitleLineStruct) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_CreateSubtitleLineStruct");
static_assert(sizeof(WIDGET_Subtitles_C_CreateSubtitleLineStruct) == 0x000068, "Wrong size on WIDGET_Subtitles_C_CreateSubtitleLineStruct");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, BuiltString) == 0x000000, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::BuiltString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, BuiltTime) == 0x000010, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::BuiltTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, InterruptSpeaker) == 0x000020, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::InterruptSpeaker' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000030, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, K2Node_MakeStruct_STRUCT_SubtitleToDisplay) == 0x000038, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::K2Node_MakeStruct_STRUCT_SubtitleToDisplay' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_CreateSubtitleLineStruct, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'WIDGET_Subtitles_C_CreateSubtitleLineStruct::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.UpdateSpeakerText
// 0x0200 (0x0200 - 0x0000)
struct WIDGET_Subtitles_C_UpdateSpeakerText final
{
public:
	class FText                                   BuiltSpeakerName;                                  // 0x0000(0x0018)(Edit, BlueprintVisible)
	int32                                         PortraitFrameRate;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColumnCount;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitRowCount;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              PortraitTexture;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Surname;                                           // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FText                                   FirstName;                                         // 0x0068(0x0018)(Edit, BlueprintVisible)
	struct FSTRUCT_SubtitleToDisplay              CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_SubtitleToDisplay              CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetStandardName_Result;                   // 0x0158(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0170(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0190(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_UpdateSpeakerText) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_UpdateSpeakerText");
static_assert(sizeof(WIDGET_Subtitles_C_UpdateSpeakerText) == 0x000200, "Wrong size on WIDGET_Subtitles_C_UpdateSpeakerText");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, BuiltSpeakerName) == 0x000000, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::BuiltSpeakerName' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, PortraitFrameRate) == 0x000018, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, PortraitColumnCount) == 0x00001C, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::PortraitColumnCount' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, PortraitRowCount) == 0x000020, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::PortraitRowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, PortraitTexture) == 0x000028, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::PortraitTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, Surname) == 0x000050, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::Surname' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, FirstName) == 0x000068, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::FirstName' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_Array_Get_Item) == 0x000080, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_IsEmpty_ReturnValue) == 0x0000A8, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, Temp_bool_Variable) == 0x0000AA, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_TextIsEmpty_ReturnValue) == 0x0000D8, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_Conv_StringToName_ReturnValue) == 0x0000DC, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_GetStandardName_Result) == 0x000158, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_GetStandardName_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, K2Node_Select_Default) == 0x000170, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000188, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000190, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_UpdateSpeakerText, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001F8, "Member 'WIDGET_Subtitles_C_UpdateSpeakerText::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryUpdateSubtitleText
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_Subtitles_C_TryUpdateSubtitleText final
{
public:
	float                                         StartTimeOnLine;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_SubtitleToDisplay              CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_TryUpdateSubtitleText) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_TryUpdateSubtitleText");
static_assert(sizeof(WIDGET_Subtitles_C_TryUpdateSubtitleText) == 0x000060, "Wrong size on WIDGET_Subtitles_C_TryUpdateSubtitleText");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, StartTimeOnLine) == 0x000000, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::StartTimeOnLine' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, Result) == 0x000004, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Array_Get_Item) == 0x000010, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000050, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryUpdateSubtitleText, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'WIDGET_Subtitles_C_TryUpdateSubtitleText::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.RevealSubtitles
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Subtitles_C_RevealSubtitles final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_RevealSubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_RevealSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_RevealSubtitles) == 0x000008, "Wrong size on WIDGET_Subtitles_C_RevealSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_RevealSubtitles, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WIDGET_Subtitles_C_RevealSubtitles::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.HideSubtitles
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Subtitles_C_HideSubtitles final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_HideSubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_HideSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_HideSubtitles) == 0x000008, "Wrong size on WIDGET_Subtitles_C_HideSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_HideSubtitles, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WIDGET_Subtitles_C_HideSubtitles::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowParseError
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_Subtitles_C_ThrowParseError final
{
public:
	class FString                                 ContextString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_ThrowParseError) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ThrowParseError");
static_assert(sizeof(WIDGET_Subtitles_C_ThrowParseError) == 0x000020, "Wrong size on WIDGET_Subtitles_C_ThrowParseError");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowParseError, ContextString) == 0x000000, "Member 'WIDGET_Subtitles_C_ThrowParseError::ContextString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowParseError, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_ThrowParseError::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowMissingSubtitlesError
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_Subtitles_C_ThrowMissingSubtitlesError final
{
public:
	class FString                                 ContextString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_ThrowMissingSubtitlesError) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ThrowMissingSubtitlesError");
static_assert(sizeof(WIDGET_Subtitles_C_ThrowMissingSubtitlesError) == 0x000020, "Wrong size on WIDGET_Subtitles_C_ThrowMissingSubtitlesError");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowMissingSubtitlesError, ContextString) == 0x000000, "Member 'WIDGET_Subtitles_C_ThrowMissingSubtitlesError::ContextString' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowMissingSubtitlesError, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_ThrowMissingSubtitlesError::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowMissingSpeakerError
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Subtitles_C_ThrowMissingSpeakerError final
{
public:
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WIDGET_Subtitles_C_ThrowMissingSpeakerError) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ThrowMissingSpeakerError");
static_assert(sizeof(WIDGET_Subtitles_C_ThrowMissingSpeakerError) == 0x000028, "Wrong size on WIDGET_Subtitles_C_ThrowMissingSpeakerError");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowMissingSpeakerError, CallFunc_MakeLiteralString_ReturnValue) == 0x000000, "Member 'WIDGET_Subtitles_C_ThrowMissingSpeakerError::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ThrowMissingSpeakerError, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_ThrowMissingSpeakerError::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryHideSubtitlesForSoundCue
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue");
static_assert(sizeof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue) == 0x000040, "Wrong size on WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue, SoundCue) == 0x000000, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue::SoundCue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue, Result) == 0x000008, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000038, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryHideSubtitlesForMediaHandle
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle final
{
public:
	struct FDataTableRowHandle                    MediaHandle;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DialogueCaptionObject          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0070(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1; // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle");
static_assert(sizeof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle) == 0x0000F8, "Wrong size on WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, MediaHandle) == 0x000000, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::MediaHandle' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, Result) == 0x000010, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000070, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000F0, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0000F1, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1) == 0x0000F2, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F3, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000F4, "Member 'WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SetLineTransition
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_Subtitles_C_SetLineTransition final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUpdateSubtitleText_Result;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Subtitles_C_SetLineTransition) == 0x000004, "Wrong alignment on WIDGET_Subtitles_C_SetLineTransition");
static_assert(sizeof(WIDGET_Subtitles_C_SetLineTransition) == 0x000010, "Wrong size on WIDGET_Subtitles_C_SetLineTransition");
static_assert(offsetof(WIDGET_Subtitles_C_SetLineTransition, DeltaTime) == 0x000000, "Member 'WIDGET_Subtitles_C_SetLineTransition::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetLineTransition, CallFunc_TryUpdateSubtitleText_Result) == 0x000004, "Member 'WIDGET_Subtitles_C_SetLineTransition::CallFunc_TryUpdateSubtitleText_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetLineTransition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'WIDGET_Subtitles_C_SetLineTransition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetLineTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WIDGET_Subtitles_C_SetLineTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_SetLineTransition, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WIDGET_Subtitles_C_SetLineTransition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TickSubtitles
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Subtitles_C_TickSubtitles final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUpdateSubtitleText_Result;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_TickSubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_TickSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_TickSubtitles) == 0x000030, "Wrong size on WIDGET_Subtitles_C_TickSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, DeltaTime) == 0x000000, "Member 'WIDGET_Subtitles_C_TickSubtitles::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, Temp_int_Variable) == 0x000004, "Member 'WIDGET_Subtitles_C_TickSubtitles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_GetMainMenuWidget_Result) == 0x000010, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_TryUpdateSubtitleText_Result) == 0x000021, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_TryUpdateSubtitleText_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_TickSubtitles, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'WIDGET_Subtitles_C_TickSubtitles::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.IsDisplayingSubtitles
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Subtitles_C_IsDisplayingSubtitles final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_IsDisplayingSubtitles) == 0x000001, "Wrong alignment on WIDGET_Subtitles_C_IsDisplayingSubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_IsDisplayingSubtitles) == 0x000001, "Wrong size on WIDGET_Subtitles_C_IsDisplayingSubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_IsDisplayingSubtitles, Result) == 0x000000, "Member 'WIDGET_Subtitles_C_IsDisplayingSubtitles::Result' has a wrong offset!");

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ShouldDisplaySubtitles
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_Subtitles_C_ShouldDisplaySubtitles final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSubtitlesEnabled_Result;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Subtitles_C_ShouldDisplaySubtitles) == 0x000008, "Wrong alignment on WIDGET_Subtitles_C_ShouldDisplaySubtitles");
static_assert(sizeof(WIDGET_Subtitles_C_ShouldDisplaySubtitles) == 0x000018, "Wrong size on WIDGET_Subtitles_C_ShouldDisplaySubtitles");
static_assert(offsetof(WIDGET_Subtitles_C_ShouldDisplaySubtitles, Result) == 0x000000, "Member 'WIDGET_Subtitles_C_ShouldDisplaySubtitles::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ShouldDisplaySubtitles, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'WIDGET_Subtitles_C_ShouldDisplaySubtitles::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_Subtitles_C_ShouldDisplaySubtitles, CallFunc_GetSubtitlesEnabled_Result) == 0x000010, "Member 'WIDGET_Subtitles_C_ShouldDisplaySubtitles::CallFunc_GetSubtitlesEnabled_Result' has a wrong offset!");

}


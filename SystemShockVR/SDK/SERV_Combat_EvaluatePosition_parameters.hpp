#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SERV_Combat_EvaluatePosition

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_SpeedType_structs.hpp"
#include "ENUM_PreferredCombatStyle_structs.hpp"
#include "ENUM_MoveSpeed_structs.hpp"


namespace SDK::Params
{

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.ExecuteUbergraph_SERV_Combat_EvaluatePosition
// 0x00C8 (0x00C8 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition) == 0x0000C8, "Wrong size on SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, EntryPoint) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::EntryPoint' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_Event_OwnerController) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_Event_ControlledPawn) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Conv_FloatToString_ReturnValue) == 0x000050, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_Event_OwnerController_1) == 0x000070, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_Event_ControlledPawn_1) == 0x000078, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000084, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000088, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0000A8, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'SERV_Combat_EvaluatePosition_C_ExecuteUbergraph_SERV_Combat_EvaluatePosition::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_ReceiveActivationAI");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_ReceiveActivationAI) == 0x000010, "Wrong size on SERV_Combat_EvaluatePosition_C_ReceiveActivationAI");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_ReceiveTickAI) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_ReceiveTickAI");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_ReceiveTickAI) == 0x000018, "Wrong size on SERV_Combat_EvaluatePosition_C_ReceiveTickAI");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.IsMoving
// 0x000C (0x000C - 0x0000)
struct SERV_Combat_EvaluatePosition_C_IsMoving final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MoveSpeed                                CallFunc_GetTargetMoveSpeed_MoveSpeed;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_SpeedType                                CallFunc_GetTargetMoveSpeed_ChangeRate;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_IsMoving) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_IsMoving");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_IsMoving) == 0x00000C, "Wrong size on SERV_Combat_EvaluatePosition_C_IsMoving");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, Result) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_GetTargetMoveSpeed_MoveSpeed) == 0x000001, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_GetTargetMoveSpeed_MoveSpeed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_GetTargetMoveSpeed_ChangeRate) == 0x000002, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_GetTargetMoveSpeed_ChangeRate' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsMoving, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'SERV_Combat_EvaluatePosition_C_IsMoving::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetFrameDesireForNewNavTarget
// 0x0098 (0x0098 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDesire;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceFromNavToSkillTarget_Distance; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance_1;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetNavTargetLocation_Location;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation_1; // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue_1;     // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance_2;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget) == 0x000098, "Wrong size on SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, DeltaSeconds) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, FrameDesire) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::FrameDesire' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetPerfectDistance_Distance) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetDistanceFromNavToSkillTarget_Distance) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetDistanceFromNavToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetDistanceToSkillTarget_Distance_1) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetDistanceToSkillTarget_Distance_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x00001C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Ease_ReturnValue) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetPerfectDistance_Distance_1) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetPerfectDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x000034, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetShockAgentLocation_Location) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetNavTargetLocation_Location) == 0x00004C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetNavTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetSkillTargetAgentLocation_TargetLocation_1) == 0x000058, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetSkillTargetAgentLocation_TargetLocation_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000064, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetDirectionUnitVector_ReturnValue_1) == 0x000070, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetDirectionUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_GetPerfectDistance_Distance_2) == 0x00007C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_GetPerfectDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x000080, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Ease_ReturnValue_1) == 0x00008C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000094, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireForNewNavTarget::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetFrameDesireToMoveCloser
// 0x0024 (0x0024 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDesire;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser) == 0x000024, "Wrong size on SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, DeltaSeconds) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, FrameDesire) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::FrameDesire' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_GetPerfectDistance_Distance) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveCloser::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetSkillTargetAgentLocation
// 0x0048 (0x0048 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     SkillTarget;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation) == 0x000048, "Wrong size on SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, TargetLocation) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, SkillTarget) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::SkillTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_GetTargetCharacter_Character) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_GetShockAgentLocation_Location) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_GetTargetCharacter_Character_1) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_GetTarget_Target) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_GetSkillTargetAgentLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.UpdateState
// 0x0090 (0x0090 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_UpdateState final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PerfectDistanceDifference;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionToSkillTarget_Direction;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionToManeuverTarget_Direction;   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange_1; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMoving_Result;                          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange_2; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoxelSpatialNavigationQuery*           CallFunc_MakeGroundManeuverEQSQuery_Query;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange_3; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDistanceToManeuverLocation_Distance;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange_4; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFrameDesireToMoveAway_FrameDesire;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameDesireToMoveCloser_FrameDesire;   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_UpdateState) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_UpdateState");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_UpdateState) == 0x000090, "Wrong size on SERV_Combat_EvaluatePosition_C_UpdateState");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, DeltaSeconds) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, PerfectDistanceDifference) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::PerfectDistanceDifference' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetDirectionToSkillTarget_Direction) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetDirectionToSkillTarget_Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetDirectionToManeuverTarget_Direction) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetDirectionToManeuverTarget_Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Dot_VectorVector_ReturnValue) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistanceBufferRange_BufferRange_1) == 0x00003C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistanceBufferRange_BufferRange_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_IsMoving_Result) == 0x000041, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_IsMoving_Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistanceBufferRange_BufferRange_2) == 0x000044, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistanceBufferRange_BufferRange_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_MakeGroundManeuverEQSQuery_Query) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_MakeGroundManeuverEQSQuery_Query' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000050, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistanceBufferRange_BufferRange_3) == 0x000054, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistanceBufferRange_BufferRange_3' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistance_Distance) == 0x000058, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000060, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000069, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00006A, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00006B, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetDistanceToManeuverLocation_Distance) == 0x00006C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetDistanceToManeuverLocation_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000070, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000071, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Abs_ReturnValue) == 0x000074, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetPerfectDistanceBufferRange_BufferRange_4) == 0x000078, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetPerfectDistanceBufferRange_BufferRange_4' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00007C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetFrameDesireToMoveAway_FrameDesire) == 0x000080, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetFrameDesireToMoveAway_FrameDesire' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_GetFrameDesireToMoveCloser_FrameDesire) == 0x000088, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_GetFrameDesireToMoveCloser_FrameDesire' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateState, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateState::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.UpdateTargetLocation
// 0x0070 (0x0070 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_UpdateTargetLocation final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldStop;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionToSkillTarget_Direction;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionToManeuverTarget_Direction;   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceFromManeuverLocToSkillLoc_Distance; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelSpatialNavigationQuery*           CallFunc_MakeGroundManeuverEQSQuery_Query;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_UpdateTargetLocation");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation) == 0x000070, "Wrong size on SERV_Combat_EvaluatePosition_C_UpdateTargetLocation");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, DeltaSeconds) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, ShouldStop) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::ShouldStop' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetDirectionToSkillTarget_Direction) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetDirectionToSkillTarget_Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetDirectionToManeuverTarget_Direction) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetDirectionToManeuverTarget_Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetDistanceFromManeuverLocToSkillLoc_Distance) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetDistanceFromManeuverLocToSkillLoc_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_MapRangeClamped_ReturnValue) == 0x00002C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_GetPerfectDistance_Distance) == 0x000050, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000059, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_MakeGroundManeuverEQSQuery_Query) == 0x000060, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_MakeGroundManeuverEQSQuery_Query' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_UpdateTargetLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'SERV_Combat_EvaluatePosition_C_UpdateTargetLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.InitializeMovement
// 0x0010 (0x0010 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_InitializeMovement final
{
public:
	bool                                          CallFunc_IsNavigatingDirectlyToSkillTarget_Result; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMoving_Result;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_InitializeMovement) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_InitializeMovement");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_InitializeMovement) == 0x000010, "Wrong size on SERV_Combat_EvaluatePosition_C_InitializeMovement");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_IsNavigatingDirectlyToSkillTarget_Result) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_IsNavigatingDirectlyToSkillTarget_Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_IsMoving_Result) == 0x000001, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_IsMoving_Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000D, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_InitializeMovement, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'SERV_Combat_EvaluatePosition_C_InitializeMovement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetFrameDesireToMoveAway
// 0x0028 (0x0028 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameDesire;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway) == 0x000028, "Wrong size on SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, DeltaSeconds) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, FrameDesire) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::FrameDesire' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_GetPerfectDistance_Distance) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_GetFrameDesireToMoveAway::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDistanceToSkillTarget
// 0x0020 (0x0020 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget) == 0x000020, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x00001C, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToSkillTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDistanceToManeuverLocation
// 0x0020 (0x0020 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     NavTarget;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation) == 0x000020, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation, NavTarget) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation::NavTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation, CallFunc_Vector_Distance2D_ReturnValue) == 0x00001C, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceToManeuverLocation::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDistanceFromNavToSkillTarget
// 0x0038 (0x0038 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location_1;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget) == 0x000038, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, CallFunc_GetTarget_Target) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, CallFunc_GetTarget_Target_1) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, CallFunc_Get_Target_Location_Location) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, CallFunc_Get_Target_Location_Location_1) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::CallFunc_Get_Target_Location_Location_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromNavToSkillTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDistanceFromManeuverLocToSkillLoc
// 0x0014 (0x0014 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc) == 0x000014, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc, CallFunc_Vector_Distance2D_ReturnValue) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetDistanceFromManeuverLocToSkillLoc::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetPawnTouchingDistance
// 0x0048 (0x0048 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           TargetPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloseDistance;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance) == 0x000048, "Wrong size on SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, TargetPawn) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::TargetPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CloseDistance) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CloseDistance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_GetTarget_Target) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_GetTarget_Target_1) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_GetTargetCharacter_Character) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'SERV_Combat_EvaluatePosition_C_GetPawnTouchingDistance::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetPerfectDistance
// 0x001C (0x001C - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetPerfectDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPreferredDistanceMinMax_PreferredDistance; // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetPerfectDistance");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance) == 0x00001C, "Wrong size on SERV_Combat_EvaluatePosition_C_GetPerfectDistance");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, CallFunc_GetPreferredDistanceMinMax_PreferredDistance) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::CallFunc_GetPreferredDistanceMinMax_PreferredDistance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetWalkDistance
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetWalkDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetWalkDistance) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetWalkDistance");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetWalkDistance) == 0x000018, "Wrong size on SERV_Combat_EvaluatePosition_C_GetWalkDistance");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, CallFunc_GetMoveSpeedValue_Speed_1) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::CallFunc_GetMoveSpeedValue_Speed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetWalkDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetWalkDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetJogDistance
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetJogDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetJogDistance) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetJogDistance");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetJogDistance) == 0x000018, "Wrong size on SERV_Combat_EvaluatePosition_C_GetJogDistance");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, CallFunc_GetMoveSpeedValue_Speed_1) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::CallFunc_GetMoveSpeedValue_Speed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetJogDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetJogDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetSprintDistance
// 0x0008 (0x0008 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetSprintDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetSprintDistance) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetSprintDistance");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetSprintDistance) == 0x000008, "Wrong size on SERV_Combat_EvaluatePosition_C_GetSprintDistance");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSprintDistance, Distance) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetSprintDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetSprintDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetSprintDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.IsNavigatingDirectlyToSkillTarget
// 0x0048 (0x0048 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     SkillTarget;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     NavTarget;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget) == 0x000048, "Wrong size on SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, Result) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, SkillTarget) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::SkillTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, NavTarget) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::NavTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTarget_Target) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTargetCharacter_Character) == 0x000028, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTargetCharacter_Character_1) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTarget_Target_1) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTarget_Target_1' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetNavTargetLocation
// 0x0050 (0x0050 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetNavTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     NavTarget;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetNavTargetLocation");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation) == 0x000050, "Wrong size on SERV_Combat_EvaluatePosition_C_GetNavTargetLocation");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, Location) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, NavTarget) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::NavTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_GetTargetCharacter_Character) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_Get_Target_Location_Location) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_GetShockAgentLocation_Location) == 0x00002C, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_GetTargetCharacter_Character_1) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetNavTargetLocation, CallFunc_GetTarget_Target) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_GetNavTargetLocation::CallFunc_GetTarget_Target' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.MakeGroundManeuverEQSQuery
// 0x0128 (0x0128 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery final
{
public:
	class UVoxelSpatialNavigationQuery*           Query;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SkillTargetToSource;                               // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           SkillTargetPawn;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SkillTargetLocation;                               // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x002C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance_2;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPerfectDistance_Distance_3;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0068(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightByDistanceFromObstacles_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WeightByDistanceFromPoint_ReturnValue;    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0088(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location_1;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_Select_Default_1;                           // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bResult, TArray<struct FVector4>& WeightedWorldLocations)> K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_FilterByVisibilityToPoint_ReturnValue;    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WeightByAngleFromViewpoint_ReturnValue;   // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteQueryInBackground_ReturnValue;     // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddPathableVoxelsInBox_ReturnValue;       // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVoxelSpatialNavigationQuery*           CallFunc_CreateSpatialNavigationQuery_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery) == 0x000008, "Wrong alignment on SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery) == 0x000128, "Wrong size on SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, Query) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::Query' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, SkillTargetToSource) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::SkillTargetToSource' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, SkillTargetPawn) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::SkillTargetPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, SkillTargetLocation) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::SkillTargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, Temp_struct_Variable) == 0x00002C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, Temp_bool_Variable) == 0x000038, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x00003C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetPerfectDistance_Distance) == 0x000044, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetPerfectDistance_Distance_1) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetPerfectDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetPerfectDistance_Distance_2) == 0x00004C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetPerfectDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000050, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetPerfectDistance_Distance_3) == 0x000054, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetPerfectDistance_Distance_3' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, Temp_struct_Variable_1) == 0x000068, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_FTrunc_ReturnValue_1) == 0x000074, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_WeightByDistanceFromObstacles_ReturnValue) == 0x000078, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_WeightByDistanceFromObstacles_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, Temp_bool_Variable_1) == 0x000079, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_WeightByDistanceFromPoint_ReturnValue) == 0x00007A, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_WeightByDistanceFromPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007B, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetShockAgentLocation_Location) == 0x00007C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, K2Node_Select_Default) == 0x000088, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetShockAgentLocation_Location_1) == 0x000094, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetShockAgentLocation_Location_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetTarget_Target) == 0x0000A0, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetTargetCharacter_Character) == 0x0000B0, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, K2Node_MakeArray_Array) == 0x0000B8, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Normal_ReturnValue) == 0x0000C8, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D4, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, K2Node_Select_Default_1) == 0x0000F0, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x000100, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_FilterByVisibilityToPoint_ReturnValue) == 0x00011C, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_FilterByVisibilityToPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_WeightByAngleFromViewpoint_ReturnValue) == 0x00011D, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_WeightByAngleFromViewpoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_ExecuteQueryInBackground_ReturnValue) == 0x00011E, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_ExecuteQueryInBackground_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_AddPathableVoxelsInBox_ReturnValue) == 0x00011F, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_AddPathableVoxelsInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery, CallFunc_CreateSpatialNavigationQuery_ReturnValue) == 0x000120, "Member 'SERV_Combat_EvaluatePosition_C_MakeGroundManeuverEQSQuery::CallFunc_CreateSpatialNavigationQuery_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.EVENT_OnManeuverQueryFinished
// 0x0070 (0x0070 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       WeightedWorldLocations;                            // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_Array_Get_Item_1;                         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished) == 0x000010, "Wrong alignment on SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished) == 0x000070, "Wrong size on SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, bResult) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::bResult' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, WeightedWorldLocations) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::WeightedWorldLocations' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_Array_Get_Item) == 0x000020, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_BreakVector4_X) == 0x000040, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_BreakVector4_Y) == 0x000044, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_BreakVector4_Z) == 0x000048, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_BreakVector4_W) == 0x00004C, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x000050, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005C, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000060, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'SERV_Combat_EvaluatePosition_C_EVENT_OnManeuverQueryFinished::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetPerfectDistanceBufferRange
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange final
{
public:
	float                                         BufferRange;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PreferredCombatStyle                     Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange) == 0x000018, "Wrong size on SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, BufferRange) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, Temp_byte_Variable) == 0x000004, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000008, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange, K2Node_Select_Default) == 0x000014, "Member 'SERV_Combat_EvaluatePosition_C_GetPerfectDistanceBufferRange::K2Node_Select_Default' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDirectionToManeuverTarget
// 0x0024 (0x0024 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget) == 0x000024, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget, Direction) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget::Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToManeuverTarget::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");

// Function SERV_Combat_EvaluatePosition.SERV_Combat_EvaluatePosition_C.GetDirectionToSkillTarget
// 0x0030 (0x0030 - 0x0000)
struct SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget) == 0x000004, "Wrong alignment on SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget");
static_assert(sizeof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget) == 0x000030, "Wrong size on SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget, Direction) == 0x000000, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget::Direction' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x00000C, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget, CallFunc_GetShockAgentLocation_Location) == 0x000018, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x000024, "Member 'SERV_Combat_EvaluatePosition_C_GetDirectionToSkillTarget::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_AmmoDepot

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_AmmoDepotState_structs.hpp"
#include "Engine_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "CoreGame_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.ExecuteUbergraph_INTERACT_AmmoDepot
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot");
static_assert(sizeof(INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot) == 0x000008, "Wrong size on INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot");
static_assert(offsetof(INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot, EntryPoint) == 0x000000, "Member 'INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_AmmoDepot_C_ExecuteUbergraph_INTERACT_AmmoDepot::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_AmmoDepot_C_BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.InitializeAmmoDepot
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_AmmoDepot_C_InitializeAmmoDepot final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_InitializeAmmoDepot) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_InitializeAmmoDepot");
static_assert(sizeof(INTERACT_AmmoDepot_C_InitializeAmmoDepot) == 0x000040, "Wrong size on INTERACT_AmmoDepot_C_InitializeAmmoDepot");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00000C, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, K2Node_DynamicCast_AsANIMBP_Ammo_Depot) == 0x000018, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::K2Node_DynamicCast_AsANIMBP_Ammo_Depot' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1) == 0x000030, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, CallFunc_IsValid_ReturnValue_3) == 0x00003A, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAmmoDepot, K2Node_SwitchEnum_CmpSuccess) == 0x00003B, "Member 'INTERACT_AmmoDepot_C_InitializeAmmoDepot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.HasAnyAmmoInStock
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_AmmoDepot_C_HasAnyAmmoInStock final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock) == 0x000001, "Wrong alignment on INTERACT_AmmoDepot_C_HasAnyAmmoInStock");
static_assert(sizeof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock) == 0x000004, "Wrong size on INTERACT_AmmoDepot_C_HasAnyAmmoInStock");
static_assert(offsetof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock, Result) == 0x000000, "Member 'INTERACT_AmmoDepot_C_HasAnyAmmoInStock::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'INTERACT_AmmoDepot_C_HasAnyAmmoInStock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'INTERACT_AmmoDepot_C_HasAnyAmmoInStock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_HasAnyAmmoInStock, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'INTERACT_AmmoDepot_C_HasAnyAmmoInStock::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_AmmoDepot_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_InitializeAttributes");
static_assert(sizeof(INTERACT_AmmoDepot_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_AmmoDepot_C_InitializeAttributes");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_AmmoDepot_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_AmmoDepot_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.CreateDynamicMaterial
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_AmmoDepot_C_CreateDynamicMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_CreateDynamicMaterial) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_CreateDynamicMaterial");
static_assert(sizeof(INTERACT_AmmoDepot_C_CreateDynamicMaterial) == 0x000008, "Wrong size on INTERACT_AmmoDepot_C_CreateDynamicMaterial");
static_assert(offsetof(INTERACT_AmmoDepot_C_CreateDynamicMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'INTERACT_AmmoDepot_C_CreateDynamicMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateEmissiveStrength
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateEmissiveStrength) == 0x000004, "Wrong size on INTERACT_AmmoDepot_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateEmissiveStrength::Scale' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateScreenEmissiveStrength
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength) == 0x000004, "Wrong size on INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateScreenEmissiveStrength::Scale' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateGunCabinetLightIntensity
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity final
{
public:
	float                                         IntensityScale;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity) == 0x000014, "Wrong size on INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity, IntensityScale) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity::IntensityScale' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity, EmissiveScale) == 0x000004, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000010, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateAmmoSelectionScreen
// 0x0150 (0x0150 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasStock;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_AMMO_Base_C*                    PickupActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CostParameterName;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextureParameterName;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	struct FObjectClassCollection                 CallFunc_GetRenderIconClassCollection_Result;      // 0x0100(0x0010)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_AMMO_Base_C*                    K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetItemHotbarRenderTargetForPickupClass_Result; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen) == 0x000150, "Wrong size on INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, ScreenIndex) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::ScreenIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, HasStock) == 0x000004, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::HasStock' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, PickupActor) == 0x000008, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::PickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CostParameterName) == 0x000010, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CostParameterName' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, TextureParameterName) == 0x000018, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::TextureParameterName' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_int_Variable) == 0x000020, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_int_Variable_1) == 0x000024, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_name_Variable) == 0x000028, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_name_Variable_1) == 0x000030, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_int_Variable_2) == 0x000038, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_name_Variable_2) == 0x00003C, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, Temp_name_Variable_3) == 0x000044, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_GetItemClass_Result) == 0x000090, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_GetItemClass_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_MakeArray_Array) == 0x0000D8, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_GetRenderIconClassCollection_Result) == 0x000100, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_GetRenderIconClassCollection_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000110, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_Select_Default) == 0x000114, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_Select_Default_1) == 0x00011C, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_Select_Default_2) == 0x000128, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000130, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_DynamicCast_AsGI_Single_Player) == 0x000138, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen, CallFunc_GetItemHotbarRenderTargetForPickupClass_Result) == 0x000148, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoSelectionScreen::CallFunc_GetItemHotbarRenderTargetForPickupClass_Result' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateGunCabinetAnimState
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState) == 0x000018, "Wrong size on INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState, K2Node_DynamicCast_AsANIMBP_Ammo_Depot) == 0x000008, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState::K2Node_DynamicCast_AsANIMBP_Ammo_Depot' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_AmmoDepot_C_UpdateGunCabinetAnimState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryInteract
// 0x0278 (0x0278 - 0x0000)
struct INTERACT_AmmoDepot_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0040(0x0020)(HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0070(0x0020)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyAmmoInStock_Result;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0110(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryRefundPayment_Result;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0138(0x0020)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0168(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x0188(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x01A8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_8;        // 0x01C8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryOpenAmmoCabinet_Result;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryOpenAmmoCabinet_Result_1;              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F0(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_9;        // 0x0208(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_10;       // 0x0228(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryMakePayment_Result;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_11;       // 0x0250(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryInteract");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryInteract) == 0x000278, "Wrong size on INTERACT_AmmoDepot_C_TryInteract");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_AmmoDepot_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, Character) == 0x000038, "Member 'INTERACT_AmmoDepot_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000040, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000060, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000070, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_HasAnyAmmoInStock_Result) == 0x0000D0, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_HasAnyAmmoInStock_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeArray_Array) == 0x0000D8, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000E8, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000108, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000110, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_TryRefundPayment_Result) == 0x000130, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_TryRefundPayment_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000131, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000138, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue) == 0x000158, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000160, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000161, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000168, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x000188, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x0001A8, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_8) == 0x0001C8, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_8' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_TryOpenAmmoCabinet_Result) == 0x0001E8, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_TryOpenAmmoCabinet_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_TryOpenAmmoCabinet_Result_1) == 0x0001E9, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_TryOpenAmmoCabinet_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_Format_ReturnValue) == 0x0001F0, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_9) == 0x000208, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_9' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_10) == 0x000228, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_10' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_TryMakePayment_Result) == 0x000248, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_TryMakePayment_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000249, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00024A, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00024B, "Member 'INTERACT_AmmoDepot_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_11) == 0x000250, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_11' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x000270, "Member 'INTERACT_AmmoDepot_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.UpdateAmmoDepotVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility) == 0x000001, "Wrong alignment on INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility");
static_assert(sizeof(INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility) == 0x000001, "Wrong size on INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility");
static_assert(offsetof(INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_AmmoDepot_C_UpdateAmmoDepotVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.SetAmmoScreenDescription
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_AmmoDepot_C_SetAmmoScreenDescription final
{
public:
	int32                                         ScreenIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_SetAmmoScreenDescription) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_SetAmmoScreenDescription");
static_assert(sizeof(INTERACT_AmmoDepot_C_SetAmmoScreenDescription) == 0x000028, "Wrong size on INTERACT_AmmoDepot_C_SetAmmoScreenDescription");
static_assert(offsetof(INTERACT_AmmoDepot_C_SetAmmoScreenDescription, ScreenIndex) == 0x000000, "Member 'INTERACT_AmmoDepot_C_SetAmmoScreenDescription::ScreenIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SetAmmoScreenDescription, Description) == 0x000008, "Member 'INTERACT_AmmoDepot_C_SetAmmoScreenDescription::Description' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SetAmmoScreenDescription, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_AmmoDepot_C_SetAmmoScreenDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.OnPaidCost
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_AmmoDepot_C_OnPaidCost final
{
public:
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0020(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_OnPaidCost) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_OnPaidCost");
static_assert(sizeof(INTERACT_AmmoDepot_C_OnPaidCost) == 0x000070, "Wrong size on INTERACT_AmmoDepot_C_OnPaidCost");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, K2Node_MakeArray_Array) == 0x000000, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, K2Node_MakeArray_Array_1) == 0x000010, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000020, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000064, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_OnPaidCost, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00006C, "Member 'INTERACT_AmmoDepot_C_OnPaidCost::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryMakePayment
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_AmmoDepot_C_TryMakePayment final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        JunkBag;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CoinCount;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveItemCountByClass_RemovedCount;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryMakePayment) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryMakePayment");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryMakePayment) == 0x000038, "Wrong size on INTERACT_AmmoDepot_C_TryMakePayment");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, Character) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, Result) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, JunkBag) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::JunkBag' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CoinCount) == 0x000018, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CoinCount' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_RemoveItemCountByClass_RemovedCount) == 0x00001C, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_RemoveItemCountByClass_RemovedCount' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_GetItemCount_Result) == 0x000024, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_GetInventoryComponent_Inventory) == 0x000028, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryMakePayment, CallFunc_GetBagByType_Bag) == 0x000030, "Member 'INTERACT_AmmoDepot_C_TryMakePayment::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryRefundPayment
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_AmmoDepot_C_TryRefundPayment final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0038(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0080(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryRefundPayment) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryRefundPayment");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryRefundPayment) == 0x0000A0, "Wrong size on INTERACT_AmmoDepot_C_TryRefundPayment");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, Character) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, Result) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_MakeArray_Array) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_MakeArray_Array_1) == 0x000028, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000038, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, CallFunc_GetGameInstance_ReturnValue) == 0x000068, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_DynamicCast_AsGI_Single_Player) == 0x000070, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000080, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, CallFunc_GetInventoryComponent_Inventory) == 0x000090, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryRefundPayment, CallFunc_GrantItem_Result) == 0x000098, "Member 'INTERACT_AmmoDepot_C_TryRefundPayment::CallFunc_GrantItem_Result' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryOpenAmmoCabinet
// 0x00D0 (0x00D0 - 0x0000)
struct INTERACT_AmmoDepot_C_TryOpenAmmoCabinet final
{
public:
	int32                                         CabinetIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_AMMO_Base_C*                    AmmoPickupActor;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_AmmoDepotState                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_AmmoDepotState                           Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryIncrementOrderedAchievement_Result;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_AmmoDepotState                           K2Node_Select_Default;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_AMMO_Base_C*                    K2Node_Select_Default_2;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryOpenAmmoCabinet");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet) == 0x0000D0, "Wrong size on INTERACT_AmmoDepot_C_TryOpenAmmoCabinet");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CabinetIndex) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CabinetIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Result) == 0x000004, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, AmmoPickupActor) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::AmmoPickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_byte_Variable) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_byte_Variable_1) == 0x000011, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_int_Variable) == 0x000014, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_int_Variable_1) == 0x000018, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_int_Variable_2) == 0x00001C, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_int_Variable_3) == 0x000020, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, Temp_int_Variable_4) == 0x000030, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_TryIncrementOrderedAchievement_Result) == 0x000041, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_TryIncrementOrderedAchievement_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_Montage_Play_ReturnValue) == 0x000068, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000070, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000078, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000088, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_Montage_Play_ReturnValue_1) == 0x000090, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000098, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_AsANIMBP_Ammo_Depot) == 0x0000A0, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_AsANIMBP_Ammo_Depot' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, CallFunc_GetAnimInstance_ReturnValue_3) == 0x0000B0, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1) == 0x0000B8, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_SwitchEnum_CmpSuccess) == 0x0000C1, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_Select_Default) == 0x0000C2, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_Select_Default_1) == 0x0000C4, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryOpenAmmoCabinet, K2Node_Select_Default_2) == 0x0000C8, "Member 'INTERACT_AmmoDepot_C_TryOpenAmmoCabinet::K2Node_Select_Default_2' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.SpawnAmmoPickupActor
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_AmmoDepot_C_SpawnAmmoPickupActor final
{
public:
	int32                                         CabinetIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_AMMO_Base_C*                    SpawnedPickupActor;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AmmoPickupClass;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SpawnNode;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class APICKUP_AMMO_Base_C*                    CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor) == 0x000010, "Wrong alignment on INTERACT_AmmoDepot_C_SpawnAmmoPickupActor");
static_assert(sizeof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor) == 0x000090, "Wrong size on INTERACT_AmmoDepot_C_SpawnAmmoPickupActor");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, CabinetIndex) == 0x000000, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::CabinetIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, SpawnedPickupActor) == 0x000008, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::SpawnedPickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, AmmoPickupClass) == 0x000010, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::AmmoPickupClass' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, SpawnNode) == 0x000018, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::SpawnNode' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, Temp_int_Variable) == 0x000020, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, CallFunc_IsValidClass_ReturnValue) == 0x000024, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, Temp_int_Variable_1) == 0x000028, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, CallFunc_GetActorLevel_ReturnValue) == 0x000030, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000070, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, K2Node_Select_Default) == 0x000078, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_SpawnAmmoPickupActor, K2Node_Select_Default_1) == 0x000080, "Member 'INTERACT_AmmoDepot_C_SpawnAmmoPickupActor::K2Node_Select_Default_1' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryBindAmmoRemovedEvent
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent final
{
public:
	class APICKUP_AMMO_Base_C*                    AmmoPickupActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent) == 0x000020, "Wrong size on INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent, AmmoPickupActor) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent::AmmoPickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_AmmoDepot_C_TryBindAmmoRemovedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.EVENT_OnAmmoPickupRemoved
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UANIMBP_AmmoDepot_C*                    K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved");
static_assert(sizeof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved) == 0x000080, "Wrong size on INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, DestroyedActor) == 0x000000, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::DestroyedActor' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_Montage_Play_ReturnValue) == 0x000024, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000028, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000030, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000040, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_Montage_Play_ReturnValue_1) == 0x000048, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000050, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_AsANIMBP_Ammo_Depot) == 0x000058, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_AsANIMBP_Ammo_Depot' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000068, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1) == 0x000070, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_AsANIMBP_Ammo_Depot_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'INTERACT_AmmoDepot_C_EVENT_OnAmmoPickupRemoved::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_AmmoDepot_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_GetTargetShape");
static_assert(sizeof(INTERACT_AmmoDepot_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_AmmoDepot_C_GetTargetShape");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000012, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000013, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000014, "Member 'INTERACT_AmmoDepot_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.ToggleGunCabinet
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_AmmoDepot_C_ToggleGunCabinet final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_ToggleGunCabinet) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_ToggleGunCabinet");
static_assert(sizeof(INTERACT_AmmoDepot_C_ToggleGunCabinet) == 0x000060, "Wrong size on INTERACT_AmmoDepot_C_ToggleGunCabinet");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, Temp_bool_Variable) == 0x000000, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_ToggleGunCabinet, CallFunc_Montage_Play_ReturnValue) == 0x00005C, "Member 'INTERACT_AmmoDepot_C_ToggleGunCabinet::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryCompleteTutorialOnInteract
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract) == 0x000018, "Wrong size on INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract, CallFunc_TryCompleteTutorial_Result) == 0x000011, "Member 'INTERACT_AmmoDepot_C_TryCompleteTutorialOnInteract::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.TryReceiveItem
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_AmmoDepot_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanReceiveItem_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_TryReceiveItem) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_TryReceiveItem");
static_assert(sizeof(INTERACT_AmmoDepot_C_TryReceiveItem) == 0x000028, "Wrong size on INTERACT_AmmoDepot_C_TryReceiveItem");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, Item) == 0x000000, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, Result) == 0x000008, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, CallFunc_CanReceiveItem_Result) == 0x000009, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::CallFunc_CanReceiveItem_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, CallFunc_GetBag_Result) == 0x000010, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, CallFunc_GetCount_Result) == 0x000018, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_TryReceiveItem, CallFunc_RemoveItemCount_RemovedItem) == 0x000020, "Member 'INTERACT_AmmoDepot_C_TryReceiveItem::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.CanReceiveItem
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_AmmoDepot_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Coin_C*                           K2Node_DynamicCast_AsITEM_Coin;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyAmmoInStock_Result;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_AmmoDepot_C_CanReceiveItem) == 0x000008, "Wrong alignment on INTERACT_AmmoDepot_C_CanReceiveItem");
static_assert(sizeof(INTERACT_AmmoDepot_C_CanReceiveItem) == 0x000020, "Wrong size on INTERACT_AmmoDepot_C_CanReceiveItem");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, Item) == 0x000000, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, Result) == 0x000008, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, K2Node_DynamicCast_AsITEM_Coin) == 0x000010, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::K2Node_DynamicCast_AsITEM_Coin' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, CallFunc_HasAnyAmmoInStock_Result) == 0x00001A, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::CallFunc_HasAnyAmmoInStock_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_CanReceiveItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'INTERACT_AmmoDepot_C_CanReceiveItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_AmmoDepot.INTERACT_AmmoDepot_C.EVENT_OnDisableAttribChanged
// 0x000C (0x000C - 0x0000)
struct INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged) == 0x00000C, "Wrong size on INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_AmmoDepot_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}


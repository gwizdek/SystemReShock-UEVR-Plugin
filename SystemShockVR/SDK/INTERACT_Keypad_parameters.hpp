#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Keypad

#include "Basic.hpp"

#include "STRUCT_MissionDifficultySettings_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "STRUCT_KeycodeSettings_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Keypad.INTERACT_Keypad_C.ExecuteUbergraph_INTERACT_Keypad
// 0x000C (0x000C - 0x0000)
struct INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad");
static_assert(sizeof(INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad) == 0x00000C, "Wrong size on INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad");
static_assert(offsetof(INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad, EntryPoint) == 0x000000, "Member 'INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad, K2Node_ComponentBoundEvent_bVisibleState) == 0x000008, "Member 'INTERACT_Keypad_C_ExecuteUbergraph_INTERACT_Keypad::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Keypad_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_Keypad_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_ReceiveTick");
static_assert(sizeof(INTERACT_Keypad_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_Keypad_C_ReceiveTick");
static_assert(offsetof(INTERACT_Keypad_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_Keypad_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.IsKeypadFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_Keypad_C_IsKeypadFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_IsKeypadFunctional) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_IsKeypadFunctional");
static_assert(sizeof(INTERACT_Keypad_C_IsKeypadFunctional) == 0x00000C, "Wrong size on INTERACT_Keypad_C_IsKeypadFunctional");
static_assert(offsetof(INTERACT_Keypad_C_IsKeypadFunctional, Result) == 0x000000, "Member 'INTERACT_Keypad_C_IsKeypadFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_IsKeypadFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_Keypad_C_IsKeypadFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_IsKeypadFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_IsKeypadFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetScreenMesh
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Keypad_C_GetScreenMesh final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_GetScreenMesh) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_GetScreenMesh");
static_assert(sizeof(INTERACT_Keypad_C_GetScreenMesh) == 0x000008, "Wrong size on INTERACT_Keypad_C_GetScreenMesh");
static_assert(offsetof(INTERACT_Keypad_C_GetScreenMesh, MeshComponent) == 0x000000, "Member 'INTERACT_Keypad_C_GetScreenMesh::MeshComponent' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetTargetDigitCount
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Keypad_C_GetTargetDigitCount final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Log_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_GetTargetDigitCount) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_GetTargetDigitCount");
static_assert(sizeof(INTERACT_Keypad_C_GetTargetDigitCount) == 0x000018, "Wrong size on INTERACT_Keypad_C_GetTargetDigitCount");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, Result) == 0x000000, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, CallFunc_Log_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetDigitCount, CallFunc_Max_ReturnValue) == 0x000014, "Member 'INTERACT_Keypad_C_GetTargetDigitCount::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetKeyFromBoxComponent
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Keypad_C_GetKeyFromBoxComponent final
{
public:
	class UBoxComponent*                          BoxCollision;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_GetKeyFromBoxComponent) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_GetKeyFromBoxComponent");
static_assert(sizeof(INTERACT_Keypad_C_GetKeyFromBoxComponent) == 0x000028, "Wrong size on INTERACT_Keypad_C_GetKeyFromBoxComponent");
static_assert(offsetof(INTERACT_Keypad_C_GetKeyFromBoxComponent, BoxCollision) == 0x000000, "Member 'INTERACT_Keypad_C_GetKeyFromBoxComponent::BoxCollision' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetKeyFromBoxComponent, Result) == 0x000008, "Member 'INTERACT_Keypad_C_GetKeyFromBoxComponent::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetKeyFromBoxComponent, K2Node_MakeArray_Array) == 0x000010, "Member 'INTERACT_Keypad_C_GetKeyFromBoxComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetKeyFromBoxComponent, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_GetKeyFromBoxComponent::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.InitializeKeypad
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_Keypad_C_InitializeKeypad final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueRandomKeycode_Keycode;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MissionDifficultySettings      CallFunc_GetMissionDifficultySettings_Settings;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_KeycodeSettings                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_InitializeKeypad) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_InitializeKeypad");
static_assert(sizeof(INTERACT_Keypad_C_InitializeKeypad) == 0x000058, "Wrong size on INTERACT_Keypad_C_InitializeKeypad");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, GameInstance) == 0x000000, "Member 'INTERACT_Keypad_C_InitializeKeypad::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_NotEqual_NameName_ReturnValue) == 0x00000A, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_GetUniqueRandomKeycode_Keycode) == 0x00000C, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_GetUniqueRandomKeycode_Keycode' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_GetMissionDifficultySettings_Settings) == 0x000010, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_GetMissionDifficultySettings_Settings' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_Keypad_C_InitializeKeypad::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_Keypad_C_InitializeKeypad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'INTERACT_Keypad_C_InitializeKeypad::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_HasCompletedStoryQuest_Completed) == 0x00004D, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00004E, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_Not_PreBool_ReturnValue) == 0x00004F, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeKeypad, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'INTERACT_Keypad_C_InitializeKeypad::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Keypad_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_InitializeAttributes");
static_assert(sizeof(INTERACT_Keypad_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_Keypad_C_InitializeAttributes");
static_assert(offsetof(INTERACT_Keypad_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_Keypad_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateKeypad
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Keypad_C_UpdateKeypad final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMaterialStrength_Finished;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateMaterialStrength_Finished_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateMaterialStrength_Finished_2;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateKeypad) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_UpdateKeypad");
static_assert(sizeof(INTERACT_Keypad_C_UpdateKeypad) == 0x000018, "Wrong size on INTERACT_Keypad_C_UpdateKeypad");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, DeltaTime) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateKeypad::DeltaTime' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, CallFunc_UpdateMaterialStrength_Finished) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateKeypad::CallFunc_UpdateMaterialStrength_Finished' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, CallFunc_UpdateMaterialStrength_Finished_1) == 0x000005, "Member 'INTERACT_Keypad_C_UpdateKeypad::CallFunc_UpdateMaterialStrength_Finished_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateKeypad::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, CallFunc_UpdateMaterialStrength_Finished_2) == 0x00000C, "Member 'INTERACT_Keypad_C_UpdateKeypad::CallFunc_UpdateMaterialStrength_Finished_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateKeypad::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypad, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'INTERACT_Keypad_C_UpdateKeypad::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.EraseLastKeypadEntry
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Keypad_C_EraseLastKeypadEntry final
{
public:
	TArray<class FString>                         KeycodeCharArray;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_EraseLastKeypadEntry) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_EraseLastKeypadEntry");
static_assert(sizeof(INTERACT_Keypad_C_EraseLastKeypadEntry) == 0x000038, "Wrong size on INTERACT_Keypad_C_EraseLastKeypadEntry");
static_assert(offsetof(INTERACT_Keypad_C_EraseLastKeypadEntry, KeycodeCharArray) == 0x000000, "Member 'INTERACT_Keypad_C_EraseLastKeypadEntry::KeycodeCharArray' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EraseLastKeypadEntry, CallFunc_JoinStringArray_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_EraseLastKeypadEntry::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EraseLastKeypadEntry, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_EraseLastKeypadEntry::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EraseLastKeypadEntry, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_EraseLastKeypadEntry::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.RecordKeypadEntry
// 0x0108 (0x0108 - 0x0000)
struct INTERACT_Keypad_C_RecordKeypadEntry final
{
public:
	int32                                         EntryValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0008(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class FText                                   ResultText;                                        // 0x0028(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_CanInteractWithTargetInteractable_Result; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_CanInteractWithTargetInteractable_FailMessage; // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetDigitCount_Result;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0098(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00B8(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_RecordKeypadEntry) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_RecordKeypadEntry");
static_assert(sizeof(INTERACT_Keypad_C_RecordKeypadEntry) == 0x000108, "Wrong size on INTERACT_Keypad_C_RecordKeypadEntry");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, EntryValue) == 0x000000, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::EntryValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, InteractResults) == 0x000008, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, ResultText) == 0x000028, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::ResultText' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_CanInteractWithTargetInteractable_Result) == 0x000040, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_CanInteractWithTargetInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_CanInteractWithTargetInteractable_FailMessage) == 0x000048, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_CanInteractWithTargetInteractable_FailMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_GetTargetDigitCount_Result) == 0x000070, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_GetTargetDigitCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000078, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000098, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000B8, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_Len_ReturnValue) == 0x0000D8, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_Not_PreBool_ReturnValue) == 0x0000DD, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000E0, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x0000E4, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000E8, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_RecordKeypadEntry, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'INTERACT_Keypad_C_RecordKeypadEntry::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateErrorState
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Keypad_C_UpdateErrorState final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PulseValue;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateErrorState) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UpdateErrorState");
static_assert(sizeof(INTERACT_Keypad_C_UpdateErrorState) == 0x000060, "Wrong size on INTERACT_Keypad_C_UpdateErrorState");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, ElapsedTime) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateErrorState::ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, PulseValue) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateErrorState::PulseValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, Progress) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateErrorState::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Lerp_ReturnValue) == 0x000024, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_Keypad_C_UpdateErrorState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_Keypad_C_UpdateErrorState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_MakePulsatingValue_ReturnValue) == 0x000044, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00004C, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000050, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000054, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateErrorState, CallFunc_FMax_ReturnValue) == 0x00005C, "Member 'INTERACT_Keypad_C_UpdateErrorState::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateValidState
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_Keypad_C_UpdateValidState final
{
public:
	class APAWN_Hacker_Simple_C*                  PlayerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeterProgress;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateValidState) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UpdateValidState");
static_assert(sizeof(INTERACT_Keypad_C_UpdateValidState) == 0x000088, "Wrong size on INTERACT_Keypad_C_UpdateValidState");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, PlayerPawn) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateValidState::PlayerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, MeterProgress) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateValidState::MeterProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'INTERACT_Keypad_C_UpdateValidState::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Keypad_C_UpdateValidState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'INTERACT_Keypad_C_UpdateValidState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'INTERACT_Keypad_C_UpdateValidState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'INTERACT_Keypad_C_UpdateValidState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000062, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000064, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00006C, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000070, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000078, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_FClamp_ReturnValue) == 0x00007C, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateValidState, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000080, "Member 'INTERACT_Keypad_C_UpdateValidState::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateMeshEmissiveStrength
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Keypad_C_UpdateMeshEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveStrength;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UpdateMeshEmissiveStrength");
static_assert(sizeof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength) == 0x000048, "Wrong size on INTERACT_Keypad_C_UpdateMeshEmissiveStrength");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, EmissiveStrength) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, Temp_int_Array_Index_Variable) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000018, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000028, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Array_Get_Item) == 0x000030, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMeshEmissiveStrength, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'INTERACT_Keypad_C_UpdateMeshEmissiveStrength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateKeyParameters
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_Keypad_C_UpdateKeyParameters final
{
public:
	bool                                          ReceivedKeyEntry;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DigitStrength;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitValue;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutputDigitIndex;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitIndex;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetDigitCount;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SourceDigitCount;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentKeycodeValue;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CurrentKeycodeChars;                               // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetDigitCount_Result;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_1;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateKeyParameters) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UpdateKeyParameters");
static_assert(sizeof(INTERACT_Keypad_C_UpdateKeyParameters) == 0x0000A0, "Wrong size on INTERACT_Keypad_C_UpdateKeyParameters");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, ReceivedKeyEntry) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::ReceivedKeyEntry' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, DigitStrength) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::DigitStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, DigitValue) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::DigitValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, OutputDigitIndex) == 0x00000C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::OutputDigitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, DigitIndex) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::DigitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, TargetDigitCount) == 0x000014, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::TargetDigitCount' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, SourceDigitCount) == 0x000018, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::SourceDigitCount' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CurrentKeycodeValue) == 0x00001C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CurrentKeycodeValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CurrentKeycodeChars) == 0x000020, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CurrentKeycodeChars' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, Temp_int_Variable) == 0x000034, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Len_ReturnValue) == 0x000040, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, Temp_float_Variable) == 0x000044, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Conv_StringToInt_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000058, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00005C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000060, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000064, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Round_ReturnValue) == 0x000068, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Divide_IntInt_ReturnValue) == 0x00006C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Percent_IntInt_ReturnValue) == 0x000070, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_FMin_ReturnValue) == 0x000078, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00007C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, Temp_bool_Variable) == 0x000080, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_GetTargetDigitCount_Result) == 0x000084, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_GetTargetDigitCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, K2Node_Select_Default) == 0x000088, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_IsEmpty_ReturnValue) == 0x00008C, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_GetScreenMesh_MeshComponent) == 0x000090, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeyParameters, CallFunc_GetScreenMesh_MeshComponent_1) == 0x000098, "Member 'INTERACT_Keypad_C_UpdateKeyParameters::CallFunc_GetScreenMesh_MeshComponent_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.SetErrorParameters
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_Keypad_C_SetErrorParameters final
{
public:
	float                                         ErrorStrength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitCount;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_1;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_2;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_SetErrorParameters) == 0x000010, "Wrong alignment on INTERACT_Keypad_C_SetErrorParameters");
static_assert(sizeof(INTERACT_Keypad_C_SetErrorParameters) == 0x000080, "Wrong size on INTERACT_Keypad_C_SetErrorParameters");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, ErrorStrength) == 0x000000, "Member 'INTERACT_Keypad_C_SetErrorParameters::ErrorStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, DigitIndex) == 0x000004, "Member 'INTERACT_Keypad_C_SetErrorParameters::DigitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, DigitCount) == 0x000008, "Member 'INTERACT_Keypad_C_SetErrorParameters::DigitCount' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, Temp_bool_Variable) == 0x00000C, "Member 'INTERACT_Keypad_C_SetErrorParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, Temp_struct_Variable) == 0x000010, "Member 'INTERACT_Keypad_C_SetErrorParameters::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, Temp_struct_Variable_1) == 0x00001C, "Member 'INTERACT_Keypad_C_SetErrorParameters::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_MakeVector4_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_GetScreenMesh_MeshComponent) == 0x000048, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, K2Node_Select_Default) == 0x000050, "Member 'INTERACT_Keypad_C_SetErrorParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_GetScreenMesh_MeshComponent_1) == 0x000060, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_GetScreenMesh_MeshComponent_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000068, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetErrorParameters, CallFunc_GetScreenMesh_MeshComponent_2) == 0x000078, "Member 'INTERACT_Keypad_C_SetErrorParameters::CallFunc_GetScreenMesh_MeshComponent_2' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.SetAcceptParameters
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Keypad_C_SetAcceptParameters final
{
public:
	float                                         AcceptStrength;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_SetAcceptParameters) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_SetAcceptParameters");
static_assert(sizeof(INTERACT_Keypad_C_SetAcceptParameters) == 0x000028, "Wrong size on INTERACT_Keypad_C_SetAcceptParameters");
static_assert(offsetof(INTERACT_Keypad_C_SetAcceptParameters, AcceptStrength) == 0x000000, "Member 'INTERACT_Keypad_C_SetAcceptParameters::AcceptStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetAcceptParameters, CallFunc_GetScreenMesh_MeshComponent) == 0x000008, "Member 'INTERACT_Keypad_C_SetAcceptParameters::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetAcceptParameters, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_SetAcceptParameters::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetAcceptParameters, CallFunc_GetScreenMesh_MeshComponent_1) == 0x000020, "Member 'INTERACT_Keypad_C_SetAcceptParameters::CallFunc_GetScreenMesh_MeshComponent_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.SetMeterParameter
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_Keypad_C_SetMeterParameter final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerpUsingHSV_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_1;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_SetMeterParameter) == 0x000010, "Wrong alignment on INTERACT_Keypad_C_SetMeterParameter");
static_assert(sizeof(INTERACT_Keypad_C_SetMeterParameter) == 0x000050, "Wrong size on INTERACT_Keypad_C_SetMeterParameter");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, Progress) == 0x000000, "Member 'INTERACT_Keypad_C_SetMeterParameter::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_Ease_ReturnValue) == 0x000004, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_GetScreenMesh_MeshComponent) == 0x000008, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_LinearColorLerpUsingHSV_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_LinearColorLerpUsingHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_MakeVector4_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetMeterParameter, CallFunc_GetScreenMesh_MeshComponent_1) == 0x000040, "Member 'INTERACT_Keypad_C_SetMeterParameter::CallFunc_GetScreenMesh_MeshComponent_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.ResetKeyParameters
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Keypad_C_ResetKeyParameters final
{
public:
	int32                                         StartIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitCount;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetDigitCount_Result;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_ResetKeyParameters) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_ResetKeyParameters");
static_assert(sizeof(INTERACT_Keypad_C_ResetKeyParameters) == 0x000048, "Wrong size on INTERACT_Keypad_C_ResetKeyParameters");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, StartIndex) == 0x000000, "Member 'INTERACT_Keypad_C_ResetKeyParameters::StartIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, DigitIndex) == 0x000004, "Member 'INTERACT_Keypad_C_ResetKeyParameters::DigitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, DigitCount) == 0x000008, "Member 'INTERACT_Keypad_C_ResetKeyParameters::DigitCount' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, Temp_int_Variable) == 0x00000C, "Member 'INTERACT_Keypad_C_ResetKeyParameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_GetScreenMesh_MeshComponent) == 0x000020, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_GetScreenMesh_MeshComponent_1) == 0x000030, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_GetScreenMesh_MeshComponent_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_Greater_IntInt_ReturnValue) == 0x00003D, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ResetKeyParameters, CallFunc_GetTargetDigitCount_Result) == 0x000040, "Member 'INTERACT_Keypad_C_ResetKeyParameters::CallFunc_GetTargetDigitCount_Result' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateMaterialStrength
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_Keypad_C_UpdateMaterialStrength final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finished;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetStrength;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DigitStrength;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitIndex;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DigitCount;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Done;                                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThirdDigit_CurrentStr;                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondDigit_CurrentStr;                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstDigit_CurrentStr;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetDigitCount_Result;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateMaterialStrength) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UpdateMaterialStrength");
static_assert(sizeof(INTERACT_Keypad_C_UpdateMaterialStrength) == 0x000068, "Wrong size on INTERACT_Keypad_C_UpdateMaterialStrength");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, DeltaTime) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::DeltaTime' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, Finished) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::Finished' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, TargetStrength) == 0x000008, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::TargetStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, DigitStrength) == 0x00000C, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::DigitStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, DigitIndex) == 0x000010, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::DigitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, DigitCount) == 0x000014, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::DigitCount' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, Done) == 0x000018, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::Done' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, ThirdDigit_CurrentStr) == 0x00001C, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::ThirdDigit_CurrentStr' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, SecondDigit_CurrentStr) == 0x000020, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::SecondDigit_CurrentStr' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, FirstDigit_CurrentStr) == 0x000024, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::FirstDigit_CurrentStr' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_GetScreenMesh_MeshComponent) == 0x000028, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000034, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Array_Get_Item) == 0x000038, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, Temp_int_Variable) == 0x00003C, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000055, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_GetTargetDigitCount_Result) == 0x000058, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_GetTargetDigitCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialStrength, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'INTERACT_Keypad_C_UpdateMaterialStrength::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.EVENT_OnStoryQuestChanged
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Keypad_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged) == 0x000038, "Wrong size on INTERACT_Keypad_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, Quest) == 0x000000, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::Quest' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, State) == 0x000008, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000034, "Member 'INTERACT_Keypad_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.OnLockedInteraction
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Keypad_C_OnLockedInteraction final
{
public:
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0010(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_OnLockedInteraction) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_OnLockedInteraction");
static_assert(sizeof(INTERACT_Keypad_C_OnLockedInteraction) == 0x000038, "Wrong size on INTERACT_Keypad_C_OnLockedInteraction");
static_assert(offsetof(INTERACT_Keypad_C_OnLockedInteraction, CallFunc_TryInteract_self_CastInput) == 0x000000, "Member 'INTERACT_Keypad_C_OnLockedInteraction::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_OnLockedInteraction, CallFunc_TryInteract_InteractResults) == 0x000010, "Member 'INTERACT_Keypad_C_OnLockedInteraction::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_OnLockedInteraction, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_OnLockedInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateMaterialFromKeycodeString
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Keypad_C_UpdateMaterialFromKeycodeString final
{
public:
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateMaterialFromKeycodeString) == 0x000001, "Wrong alignment on INTERACT_Keypad_C_UpdateMaterialFromKeycodeString");
static_assert(sizeof(INTERACT_Keypad_C_UpdateMaterialFromKeycodeString) == 0x000002, "Wrong size on INTERACT_Keypad_C_UpdateMaterialFromKeycodeString");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialFromKeycodeString, CallFunc_IsEmpty_ReturnValue) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateMaterialFromKeycodeString::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateMaterialFromKeycodeString, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_Keypad_C_UpdateMaterialFromKeycodeString::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.TryCompleteKeypadEntryTutorial
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial");
static_assert(sizeof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial) == 0x000018, "Wrong size on INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial");
static_assert(offsetof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial, CallFunc_TryCompleteTutorial_Result) == 0x000011, "Member 'INTERACT_Keypad_C_TryCompleteKeypadEntryTutorial::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.EVENT_CreateSoundDetectionEvent
// 0x00F0 (0x00F0 - 0x0000)
struct INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent final
{
public:
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  PlayerPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConditionalAutoSave_Result;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0078(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVoxelNavAgentComponent*>        CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue; // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVoxelNavAgentComponent*                CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent");
static_assert(sizeof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent) == 0x0000F0, "Wrong size on INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, EnemyPawn) == 0x000000, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::EnemyPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, PlayerPawn) == 0x000008, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::PlayerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, GameInstance) == 0x000010, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, Temp_int_Array_Index_Variable) == 0x000018, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_ConditionalAutoSave_Result) == 0x000024, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_ConditionalAutoSave_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000028, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_MakeBox_ReturnValue) == 0x000078, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue) == 0x000098, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_GetOwner_ReturnValue) == 0x0000B8, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_AsPAWN_Enemy) == 0x0000C8, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000D8, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000E0, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'INTERACT_Keypad_C_EVENT_CreateSoundDetectionEvent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.TryPressKeypadDigit
// 0x00E0 (0x00E0 - 0x0000)
struct INTERACT_Keypad_C_TryPressKeypadDigit final
{
public:
	int32                                         Digit;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0008(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_8;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_9;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0080(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_RecordKeypadEntry_InteractResults;        // 0x00A8(0x0020)(HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_TryPressKeypadDigit) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_TryPressKeypadDigit");
static_assert(sizeof(INTERACT_Keypad_C_TryPressKeypadDigit) == 0x0000E0, "Wrong size on INTERACT_Keypad_C_TryPressKeypadDigit");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Digit) == 0x000000, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Digit' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, InteractResults) == 0x000008, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_int_Variable) == 0x000028, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable) == 0x000030, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_1) == 0x000038, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_2) == 0x000040, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_3) == 0x000048, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_4) == 0x000050, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_5) == 0x000058, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_6) == 0x000060, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_7) == 0x000068, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_8) == 0x000070, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, Temp_object_Variable_9) == 0x000078, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000080, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_RecordKeypadEntry_InteractResults) == 0x0000A8, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_RecordKeypadEntry_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, K2Node_Select_Default) == 0x0000C8, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_GetAnimInstance_ReturnValue) == 0x0000D0, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_Montage_Play_ReturnValue) == 0x0000D8, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000DC, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_BooleanAND_ReturnValue) == 0x0000DD, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadDigit, CallFunc_BooleanAND_ReturnValue_1) == 0x0000DE, "Member 'INTERACT_Keypad_C_TryPressKeypadDigit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.TryPressKeypadClear
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Keypad_C_TryPressKeypadClear final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_TryPressKeypadClear) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_TryPressKeypadClear");
static_assert(sizeof(INTERACT_Keypad_C_TryPressKeypadClear) == 0x000018, "Wrong size on INTERACT_Keypad_C_TryPressKeypadClear");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadClear, Result) == 0x000000, "Member 'INTERACT_Keypad_C_TryPressKeypadClear::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadClear, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_Keypad_C_TryPressKeypadClear::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadClear, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_TryPressKeypadClear::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadClear, CallFunc_Montage_Play_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_TryPressKeypadClear::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.TryPressKeypadEraseLast
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Keypad_C_TryPressKeypadEraseLast final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_TryPressKeypadEraseLast) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_TryPressKeypadEraseLast");
static_assert(sizeof(INTERACT_Keypad_C_TryPressKeypadEraseLast) == 0x000018, "Wrong size on INTERACT_Keypad_C_TryPressKeypadEraseLast");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadEraseLast, Result) == 0x000000, "Member 'INTERACT_Keypad_C_TryPressKeypadEraseLast::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadEraseLast, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_Keypad_C_TryPressKeypadEraseLast::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadEraseLast, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_TryPressKeypadEraseLast::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryPressKeypadEraseLast, CallFunc_Montage_Play_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_TryPressKeypadEraseLast::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetBoxComponentFromKey
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_Keypad_C_GetBoxComponentFromKey final
{
public:
	int32                                         Digit;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          BoxComponent;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  OrderedBoxComponents;                              // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_GetBoxComponentFromKey) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_GetBoxComponentFromKey");
static_assert(sizeof(INTERACT_Keypad_C_GetBoxComponentFromKey) == 0x000040, "Wrong size on INTERACT_Keypad_C_GetBoxComponentFromKey");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, Digit) == 0x000000, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::Digit' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, BoxComponent) == 0x000008, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::BoxComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, OrderedBoxComponents) == 0x000010, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::OrderedBoxComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, K2Node_MakeArray_Array) == 0x000020, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetBoxComponentFromKey, CallFunc_Array_Get_Item) == 0x000038, "Member 'INTERACT_Keypad_C_GetBoxComponentFromKey::CallFunc_Array_Get_Item' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.CanResumeChannelingInteraction
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Keypad_C_CanResumeChannelingInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_CanResumeChannelingInteraction) == 0x000001, "Wrong alignment on INTERACT_Keypad_C_CanResumeChannelingInteraction");
static_assert(sizeof(INTERACT_Keypad_C_CanResumeChannelingInteraction) == 0x000002, "Wrong size on INTERACT_Keypad_C_CanResumeChannelingInteraction");
static_assert(offsetof(INTERACT_Keypad_C_CanResumeChannelingInteraction, Result) == 0x000000, "Member 'INTERACT_Keypad_C_CanResumeChannelingInteraction::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanResumeChannelingInteraction, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_Keypad_C_CanResumeChannelingInteraction::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetFocusWorldTransform
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Keypad_C_GetFocusWorldTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_GetFocusWorldTransform) == 0x000010, "Wrong alignment on INTERACT_Keypad_C_GetFocusWorldTransform");
static_assert(sizeof(INTERACT_Keypad_C_GetFocusWorldTransform) == 0x000060, "Wrong size on INTERACT_Keypad_C_GetFocusWorldTransform");
static_assert(offsetof(INTERACT_Keypad_C_GetFocusWorldTransform, Transform) == 0x000000, "Member 'INTERACT_Keypad_C_GetFocusWorldTransform::Transform' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetFocusWorldTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'INTERACT_Keypad_C_GetFocusWorldTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.CycleFocusedPrimitiveComponent
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_Keypad_C_CycleFocusedPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vertical;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Previous;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CycleIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CycleAdjustment;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CycleDirection;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetBoxIndex;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  BoxComponents;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntOnce_ReturnValue;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_CycleFocusedPrimitiveComponent");
static_assert(sizeof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent) == 0x000090, "Wrong size on INTERACT_Keypad_C_CycleFocusedPrimitiveComponent");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CursorPrimitive) == 0x000000, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Vertical) == 0x000008, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Vertical' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Previous) == 0x000009, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Previous' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CycleIndex) == 0x00000C, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CycleIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CycleAdjustment) == 0x000010, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CycleAdjustment' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CycleDirection) == 0x000014, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CycleDirection' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, TargetBoxIndex) == 0x000018, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::TargetBoxIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, BoxComponents) == 0x000020, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::BoxComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable) == 0x000030, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_int_Variable) == 0x000034, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_1) == 0x000038, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable_1) == 0x00003C, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_2) == 0x000040, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_3) == 0x000044, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, K2Node_MakeArray_Array) == 0x000048, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Get_Item) == 0x000058, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanXOR_ReturnValue) == 0x000064, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_WrapIntOnce_ReturnValue) == 0x00006C, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_WrapIntOnce_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default) == 0x000070, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default_1) == 0x000078, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_Multiply_IntInt_ReturnValue) == 0x00007C, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, K2Node_DynamicCast_AsBox_Collision) == 0x000080, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Find_ReturnValue) == 0x00008C, "Member 'INTERACT_Keypad_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateNumberColor
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Keypad_C_UpdateNumberColor final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetScreenMesh_MeshComponent;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateNumberColor) == 0x000010, "Wrong alignment on INTERACT_Keypad_C_UpdateNumberColor");
static_assert(sizeof(INTERACT_Keypad_C_UpdateNumberColor) == 0x000030, "Wrong size on INTERACT_Keypad_C_UpdateNumberColor");
static_assert(offsetof(INTERACT_Keypad_C_UpdateNumberColor, Valid) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateNumberColor::Valid' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateNumberColor, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'INTERACT_Keypad_C_UpdateNumberColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateNumberColor, CallFunc_GetScreenMesh_MeshComponent) == 0x000018, "Member 'INTERACT_Keypad_C_UpdateNumberColor::CallFunc_GetScreenMesh_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UpdateNumberColor, CallFunc_MakeVector4_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_UpdateNumberColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UnlockAndTargetInteractables
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_Keypad_C_UnlockAndTargetInteractables final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_SetInteractLocked_self_CastInput;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInteractLocked_Result;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0040(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UnlockAndTargetInteractables) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_UnlockAndTargetInteractables");
static_assert(sizeof(INTERACT_Keypad_C_UnlockAndTargetInteractables) == 0x000068, "Wrong size on INTERACT_Keypad_C_UnlockAndTargetInteractables");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_Array_Get_Item) == 0x000008, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_SetInteractLocked_self_CastInput) == 0x000018, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_SetInteractLocked_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_SetInteractLocked_Result) == 0x000028, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_SetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_TryInteract_self_CastInput) == 0x000030, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_TryInteract_InteractResults) == 0x000040, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_UnlockAndTargetInteractables, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'INTERACT_Keypad_C_UnlockAndTargetInteractables::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.UpdateKeypadVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Keypad_C_UpdateKeypadVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_UpdateKeypadVisibility) == 0x000001, "Wrong alignment on INTERACT_Keypad_C_UpdateKeypadVisibility");
static_assert(sizeof(INTERACT_Keypad_C_UpdateKeypadVisibility) == 0x000001, "Wrong size on INTERACT_Keypad_C_UpdateKeypadVisibility");
static_assert(offsetof(INTERACT_Keypad_C_UpdateKeypadVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_Keypad_C_UpdateKeypadVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.CanInteractWithTargetInteractable
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Keypad_C_CanInteractWithTargetInteractable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FailMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_GetInteractLocked_self_CastInput;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0040(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_CanInteractWithTargetInteractable) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_CanInteractWithTargetInteractable");
static_assert(sizeof(INTERACT_Keypad_C_CanInteractWithTargetInteractable) == 0x000060, "Wrong size on INTERACT_Keypad_C_CanInteractWithTargetInteractable");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, Result) == 0x000000, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, FailMessage) == 0x000008, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::FailMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_GetInteractLocked_self_CastInput) == 0x000028, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_GetInteractLocked_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_GetInteractLocked_Result) == 0x000038, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_GetInteractLocked_LockMessage) == 0x000040, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_CanInteractWithTargetInteractable, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'INTERACT_Keypad_C_CanInteractWithTargetInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.ShouldFocusOnInteract
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Keypad_C_ShouldFocusOnInteract final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_ShouldFocusOnInteract) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_ShouldFocusOnInteract");
static_assert(sizeof(INTERACT_Keypad_C_ShouldFocusOnInteract) == 0x000010, "Wrong size on INTERACT_Keypad_C_ShouldFocusOnInteract");
static_assert(offsetof(INTERACT_Keypad_C_ShouldFocusOnInteract, Controller) == 0x000000, "Member 'INTERACT_Keypad_C_ShouldFocusOnInteract::Controller' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldFocusOnInteract, Result) == 0x000008, "Member 'INTERACT_Keypad_C_ShouldFocusOnInteract::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldFocusOnInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'INTERACT_Keypad_C_ShouldFocusOnInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldFocusOnInteract, CallFunc_ShouldFocusOnInteract_Result) == 0x00000A, "Member 'INTERACT_Keypad_C_ShouldFocusOnInteract::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.EVENT_OnDisableAttribChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Keypad_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged) == 0x000010, "Wrong size on INTERACT_Keypad_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_Keypad_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_Keypad_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_Keypad_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Keypad_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.GetTargetShape
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_Keypad_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        K2Node_DynamicCast_AsShape_Component;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_GetTargetShape");
static_assert(sizeof(INTERACT_Keypad_C_GetTargetShape) == 0x000058, "Wrong size on INTERACT_Keypad_C_GetTargetShape");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Keypad_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Keypad_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_GetAttachParent_ReturnValue) == 0x000018, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000020, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue_1) == 0x000023, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, K2Node_DynamicCast_AsShape_Component) == 0x000028, "Member 'INTERACT_Keypad_C_GetTargetShape::K2Node_DynamicCast_AsShape_Component' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_Keypad_C_GetTargetShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_GetAttachParent_ReturnValue_1) == 0x000038, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_GetAttachParent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000040, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_ShouldFocusOnInteract_Result) == 0x000050, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_GetTargetShape, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'INTERACT_Keypad_C_GetTargetShape::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Keypad_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_Keypad_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_Keypad_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_Keypad_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_Keypad_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_Keypad_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.SetInteractPowered
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Keypad_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_Keypad_C_SetInteractPowered");
static_assert(sizeof(INTERACT_Keypad_C_SetInteractPowered) == 0x000010, "Wrong size on INTERACT_Keypad_C_SetInteractPowered");
static_assert(offsetof(INTERACT_Keypad_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_Keypad_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_Keypad_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_Keypad_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Keypad_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'INTERACT_Keypad_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.ShouldSaveActor
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Keypad_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          CallFunc_ShouldSaveActor_Params;                   // 0x0028(0x0018)()
	bool                                          CallFunc_ShouldSaveActor_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_ShouldSaveActor) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_ShouldSaveActor");
static_assert(sizeof(INTERACT_Keypad_C_ShouldSaveActor) == 0x000048, "Wrong size on INTERACT_Keypad_C_ShouldSaveActor");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'INTERACT_Keypad_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'INTERACT_Keypad_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_GetAttribValue_ReturnValue) == 0x00001C, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_IsEmpty_ReturnValue) == 0x000020, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_ShouldSaveActor_Params) == 0x000028, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_ShouldSaveActor_Params' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_ShouldSaveActor_ReturnValue) == 0x000040, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_ShouldSaveActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000041, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_BooleanOR_ReturnValue_1) == 0x000043, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_ShouldSaveActor, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'INTERACT_Keypad_C_ShouldSaveActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_Keypad.INTERACT_Keypad_C.TryInteract
// 0x0190 (0x0190 - 0x0000)
struct INTERACT_Keypad_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxTargetShape;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeypadFunctional_Result;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x00A0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00C0(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryBeginFocusInteraction_Result;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPressKeypadEraseLast_Result;           // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPressKeypadClear_Result;               // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0100(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0120(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0140(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetKeyFromBoxComponent_Result;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryPressKeypadDigit_InteractResults;      // 0x0168(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Keypad_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Keypad_C_TryInteract");
static_assert(sizeof(INTERACT_Keypad_C_TryInteract) == 0x000190, "Wrong size on INTERACT_Keypad_C_TryInteract");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Keypad_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Keypad_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Keypad_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Keypad_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, MontageToPlay) == 0x000038, "Member 'INTERACT_Keypad_C_TryInteract::MontageToPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, BoxTargetShape) == 0x000040, "Member 'INTERACT_Keypad_C_TryInteract::BoxTargetShape' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, Character) == 0x000048, "Member 'INTERACT_Keypad_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_IsKeypadFunctional_Result) == 0x000050, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_IsKeypadFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000058, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000080, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_AsBox_Collision) == 0x000090, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x0000A0, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000C0, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000E0, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_GetController_ReturnValue) == 0x0000F0, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_TryBeginFocusInteraction_Result) == 0x0000F8, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_TryBeginFocusInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_ShouldFocusOnInteract_Result) == 0x0000F9, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_TryPressKeypadEraseLast_Result) == 0x0000FA, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_TryPressKeypadEraseLast_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_TryPressKeypadClear_Result) == 0x0000FB, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_TryPressKeypadClear_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000100, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000120, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000140, "Member 'INTERACT_Keypad_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000160, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_GetKeyFromBoxComponent_Result) == 0x000164, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_GetKeyFromBoxComponent_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_TryPressKeypadDigit_InteractResults) == 0x000168, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_TryPressKeypadDigit_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000188, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000189, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Keypad_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00018A, "Member 'INTERACT_Keypad_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

}


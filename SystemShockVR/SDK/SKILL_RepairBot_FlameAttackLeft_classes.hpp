#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_RepairBot_FlameAttackLeft

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SKILL_ShootBullet_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SKILL_RepairBot_FlameAttackLeft.SKILL_RepairBot_FlameAttackLeft_C
// 0x0050 (0x0128 - 0x00D8)
class USKILL_RepairBot_FlameAttackLeft_C : public USKILL_ShootBullet_C
{
public:
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         ProjectileCountToSpawn;                            // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ProjectileCountSpawned;                            // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledDamagePerAttack;                             // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlameBurstDuration;                                // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackAngleOffset;                                 // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackTimeInterval;                                // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AttackTimerHandle;                                 // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          FlameEffect;                                       // 0x0100(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SKILL_RepairBot_FlameAttackLeft(int32 EntryPoint);
	void CreateFlameEffect();
	void OnLoaded_9F3B9FB9471F5B9DC88EE38F0B4D9D2C(class UObject* Loaded);
	void OnActivateSkill(bool* Result);
	void EVENT_FireShot();
	void CalculateAngleOffset(float* AngleOffset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SKILL_RepairBot_FlameAttackLeft_C">();
	}
	static class USKILL_RepairBot_FlameAttackLeft_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USKILL_RepairBot_FlameAttackLeft_C>();
	}
};
static_assert(alignof(USKILL_RepairBot_FlameAttackLeft_C) == 0x000008, "Wrong alignment on USKILL_RepairBot_FlameAttackLeft_C");
static_assert(sizeof(USKILL_RepairBot_FlameAttackLeft_C) == 0x000128, "Wrong size on USKILL_RepairBot_FlameAttackLeft_C");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, UberGraphFrame) == 0x0000D8, "Member 'USKILL_RepairBot_FlameAttackLeft_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, ProjectileCountToSpawn) == 0x0000E0, "Member 'USKILL_RepairBot_FlameAttackLeft_C::ProjectileCountToSpawn' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, ProjectileCountSpawned) == 0x0000E4, "Member 'USKILL_RepairBot_FlameAttackLeft_C::ProjectileCountSpawned' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, ScaledDamagePerAttack) == 0x0000E8, "Member 'USKILL_RepairBot_FlameAttackLeft_C::ScaledDamagePerAttack' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, FlameBurstDuration) == 0x0000EC, "Member 'USKILL_RepairBot_FlameAttackLeft_C::FlameBurstDuration' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, AttackAngleOffset) == 0x0000F0, "Member 'USKILL_RepairBot_FlameAttackLeft_C::AttackAngleOffset' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, AttackTimeInterval) == 0x0000F4, "Member 'USKILL_RepairBot_FlameAttackLeft_C::AttackTimeInterval' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, AttackTimerHandle) == 0x0000F8, "Member 'USKILL_RepairBot_FlameAttackLeft_C::AttackTimerHandle' has a wrong offset!");
static_assert(offsetof(USKILL_RepairBot_FlameAttackLeft_C, FlameEffect) == 0x000100, "Member 'USKILL_RepairBot_FlameAttackLeft_C::FlameEffect' has a wrong offset!");

}


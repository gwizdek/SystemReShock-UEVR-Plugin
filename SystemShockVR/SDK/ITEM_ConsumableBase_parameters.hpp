#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_ConsumableBase

#include "Basic.hpp"

#include "STRUCT_HardItemParams_structs.hpp"
#include "CoreGame_structs.hpp"


namespace SDK::Params
{

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.ExecuteUbergraph_ITEM_ConsumableBase
// 0x00B0 (0x00B0 - 0x0000)
struct ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_CustomEvent_Character;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase");
static_assert(sizeof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase) == 0x0000B0, "Wrong size on ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, EntryPoint) == 0x000000, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CustomEvent_Loaded_2) == 0x000008, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, Temp_object_Variable) == 0x000020, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_AsSound_Cue) == 0x000028, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CustomEvent_Loaded_1) == 0x000038, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, Temp_object_Variable_1) == 0x000040, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_AsAnim_Montage) == 0x000048, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CustomEvent_Loaded) == 0x000058, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, Temp_object_Variable_2) == 0x000060, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000068, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CustomEvent_Character) == 0x000078, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000080, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000089, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x00008A, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x00008B, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'ITEM_ConsumableBase_C_ExecuteUbergraph_ITEM_ConsumableBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.PlayConsumableSound
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ConsumableBase_C_PlayConsumableSound final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_PlayConsumableSound) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_PlayConsumableSound");
static_assert(sizeof(ITEM_ConsumableBase_C_PlayConsumableSound) == 0x000008, "Wrong size on ITEM_ConsumableBase_C_PlayConsumableSound");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayConsumableSound, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_PlayConsumableSound::Character' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.OnLoaded_49D782F144B7FE27127973B496EEE974
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974");
static_assert(sizeof(ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974) == 0x000008, "Wrong size on ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974");
static_assert(offsetof(ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974, Loaded) == 0x000000, "Member 'ITEM_ConsumableBase_C_OnLoaded_49D782F144B7FE27127973B496EEE974::Loaded' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.OnLoaded_6C2C606447223CF60BBDA7BAA36FED84
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84");
static_assert(sizeof(ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84) == 0x000008, "Wrong size on ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84");
static_assert(offsetof(ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84, Loaded) == 0x000000, "Member 'ITEM_ConsumableBase_C_OnLoaded_6C2C606447223CF60BBDA7BAA36FED84::Loaded' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7");
static_assert(sizeof(ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7) == 0x000008, "Wrong size on ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7");
static_assert(offsetof(ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7, Loaded) == 0x000000, "Member 'ITEM_ConsumableBase_C_OnLoaded_40F0C26F43F6BC4415500EBC5D7F5FD7::Loaded' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.UseConsumable
// 0x0020 (0x0020 - 0x0000)
struct ITEM_ConsumableBase_C_UseConsumable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 ConsumedItem;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_RemoveConsumableFromInventory_RemovedItem; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_UseConsumable) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_UseConsumable");
static_assert(sizeof(ITEM_ConsumableBase_C_UseConsumable) == 0x000020, "Wrong size on ITEM_ConsumableBase_C_UseConsumable");
static_assert(offsetof(ITEM_ConsumableBase_C_UseConsumable, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_UseConsumable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_UseConsumable, ConsumedItem) == 0x000008, "Member 'ITEM_ConsumableBase_C_UseConsumable::ConsumedItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_UseConsumable, PlayerHacker) == 0x000010, "Member 'ITEM_ConsumableBase_C_UseConsumable::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_UseConsumable, CallFunc_RemoveConsumableFromInventory_RemovedItem) == 0x000018, "Member 'ITEM_ConsumableBase_C_UseConsumable::CallFunc_RemoveConsumableFromInventory_RemovedItem' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.RemoveConsumableFromInventory
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ConsumableBase_C_RemoveConsumableFromInventory final
{
public:
	class UITEM_ConsumableBase_C*                 RemovedItem;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 K2Node_DynamicCast_AsITEM_Consumable_Base;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_RemoveConsumableFromInventory");
static_assert(sizeof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory) == 0x000038, "Wrong size on ITEM_ConsumableBase_C_RemoveConsumableFromInventory");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, RemovedItem) == 0x000000, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::RemovedItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, CallFunc_GetBag_Result) == 0x000008, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, CallFunc_GetBag_Result_1) == 0x000018, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::CallFunc_GetBag_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, CallFunc_RemoveItemCount_RemovedItem) == 0x000020, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, K2Node_DynamicCast_AsITEM_Consumable_Base) == 0x000028, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::K2Node_DynamicCast_AsITEM_Consumable_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_RemoveConsumableFromInventory, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ConsumableBase_C_RemoveConsumableFromInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.ShouldShowDetailedEffects
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ConsumableBase_C_ShouldShowDetailedEffects final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHARDWARE_Bioscan_Base_C*               BioscanHardware;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        HardwareBag;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAdvancedBioScanner_Result;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHARDWARE_Bioscan_Base_C*               K2Node_DynamicCast_AsHARDWARE_Bioscan_Base;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_ShouldShowDetailedEffects");
static_assert(sizeof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects) == 0x000058, "Wrong size on ITEM_ConsumableBase_C_ShouldShowDetailedEffects");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, Result) == 0x000000, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, BioscanHardware) == 0x000008, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::BioscanHardware' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, HardwareBag) == 0x000010, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::HardwareBag' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_HasAdvancedBioScanner_Result) == 0x000019, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_HasAdvancedBioScanner_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_FindItem_FoundItem) == 0x000020, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_GetIsActivated_Result) == 0x000028, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, K2Node_DynamicCast_AsHARDWARE_Bioscan_Base) == 0x000030, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::K2Node_DynamicCast_AsHARDWARE_Bioscan_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_GetInventory_Inventory) == 0x000040, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ShouldShowDetailedEffects, CallFunc_GetBagByType_Bag) == 0x000050, "Member 'ITEM_ConsumableBase_C_ShouldShowDetailedEffects::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetEffects
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ConsumableBase_C_GetEffects final
{
public:
	class FText                                   EffectsText;                                       // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetEffects) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetEffects");
static_assert(sizeof(ITEM_ConsumableBase_C_GetEffects) == 0x000018, "Wrong size on ITEM_ConsumableBase_C_GetEffects");
static_assert(offsetof(ITEM_ConsumableBase_C_GetEffects, EffectsText) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetEffects::EffectsText' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetSideEffects
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ConsumableBase_C_GetSideEffects final
{
public:
	class FText                                   SideEffectsText;                                   // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetSideEffects) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetSideEffects");
static_assert(sizeof(ITEM_ConsumableBase_C_GetSideEffects) == 0x000018, "Wrong size on ITEM_ConsumableBase_C_GetSideEffects");
static_assert(offsetof(ITEM_ConsumableBase_C_GetSideEffects, SideEffectsText) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetSideEffects::SideEffectsText' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetDuration
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ConsumableBase_C_GetDuration final
{
public:
	class FText                                   DurationText;                                      // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetDuration) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetDuration");
static_assert(sizeof(ITEM_ConsumableBase_C_GetDuration) == 0x000018, "Wrong size on ITEM_ConsumableBase_C_GetDuration");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDuration, DurationText) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetDuration::DurationText' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.TryPlayActivateMontage
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ConsumableBase_C_TryPlayActivateMontage final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayActivateMontage_Result;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitingToHolster_Result;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_TryPlayActivateMontage) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_TryPlayActivateMontage");
static_assert(sizeof(ITEM_ConsumableBase_C_TryPlayActivateMontage) == 0x000058, "Wrong size on ITEM_ConsumableBase_C_TryPlayActivateMontage");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, Success) == 0x000008, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::Success' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, EquippedWeapon) == 0x000010, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, PlayerHacker) == 0x000018, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, CallFunc_CanPlayActivateMontage_Result) == 0x000020, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::CallFunc_CanPlayActivateMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000028, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, CallFunc_GetEquippedWeapon_Weapon) == 0x000038, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, CallFunc_IsWaitingToHolster_Result) == 0x000040, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::CallFunc_IsWaitingToHolster_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryPlayActivateMontage, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'ITEM_ConsumableBase_C_TryPlayActivateMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.PlayActivateMontage
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ConsumableBase_C_PlayActivateMontage final
{
public:
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FLatentEventHandle                     CallFunc_CreateEventHandle_ReturnValue;            // 0x0018(0x0010)(ContainsInstancedReference)
	class UAnimMontage*                           CallFunc_GetActivateMontage_Montage;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_PlayActivateMontage) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_PlayActivateMontage");
static_assert(sizeof(ITEM_ConsumableBase_C_PlayActivateMontage) == 0x000058, "Wrong size on ITEM_ConsumableBase_C_PlayActivateMontage");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, PlayerHacker) == 0x000000, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, CallFunc_CreateEventHandle_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::CallFunc_CreateEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, CallFunc_GetActivateMontage_Montage) == 0x000028, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::CallFunc_GetActivateMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000038, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, CallFunc_GetBag_Result) == 0x000048, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_PlayActivateMontage, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ITEM_ConsumableBase_C_PlayActivateMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.ChangeDisplayMesh
// 0x0040 (0x0040 - 0x0000)
struct ITEM_ConsumableBase_C_ChangeDisplayMesh final
{
public:
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetDisplayMesh_SkeletalMesh;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDisplayMesh_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_ChangeDisplayMesh) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_ChangeDisplayMesh");
static_assert(sizeof(ITEM_ConsumableBase_C_ChangeDisplayMesh) == 0x000040, "Wrong size on ITEM_ConsumableBase_C_ChangeDisplayMesh");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, PlayerHacker) == 0x000000, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, CallFunc_GetDisplayMesh_SkeletalMesh) == 0x000008, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::CallFunc_GetDisplayMesh_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000030, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ChangeDisplayMesh, CallFunc_SetDisplayMesh_Result) == 0x000039, "Member 'ITEM_ConsumableBase_C_ChangeDisplayMesh::CallFunc_SetDisplayMesh_Result' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.CanPlayActivateMontage
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ConsumableBase_C_CanPlayActivateMontage final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HandheldConsumable_Base_C*        HandheldItem;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipmentDisabled_Result;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverrideHandheldBeingUsed_Result;       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_CanPlayActivateMontage) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_CanPlayActivateMontage");
static_assert(sizeof(ITEM_ConsumableBase_C_CanPlayActivateMontage) == 0x000058, "Wrong size on ITEM_ConsumableBase_C_CanPlayActivateMontage");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, Result) == 0x000008, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, HandheldItem) == 0x000010, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, PlayerHacker) == 0x000018, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_GetEquippedWeapon_Weapon) == 0x000030, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_GetInventory_Inventory) == 0x000040, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_GetHandheldItem_HandheldItem) == 0x000048, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_IsEquipmentDisabled_Result) == 0x000050, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_IsEquipmentDisabled_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_IsOverrideHandheldBeingUsed_Result) == 0x000052, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_IsOverrideHandheldBeingUsed_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanPlayActivateMontage, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'ITEM_ConsumableBase_C_CanPlayActivateMontage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetActivateMontage
// 0x0020 (0x0020 - 0x0000)
struct ITEM_ConsumableBase_C_GetActivateMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetActivateMontage) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetActivateMontage");
static_assert(sizeof(ITEM_ConsumableBase_C_GetActivateMontage) == 0x000020, "Wrong size on ITEM_ConsumableBase_C_GetActivateMontage");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, Montage) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000019, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetActivateMontage, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'ITEM_ConsumableBase_C_GetActivateMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetDisplayMesh
// 0x0020 (0x0020 - 0x0000)
struct ITEM_ConsumableBase_C_GetDisplayMesh final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetDisplayMesh) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetDisplayMesh");
static_assert(sizeof(ITEM_ConsumableBase_C_GetDisplayMesh) == 0x000020, "Wrong size on ITEM_ConsumableBase_C_GetDisplayMesh");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, SkeletalMesh) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000010, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000019, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayMesh, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'ITEM_ConsumableBase_C_GetDisplayMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.EVENT_OnActivatedConsumable
// 0x0028 (0x0028 - 0x0000)
struct ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable");
static_assert(sizeof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable) == 0x000028, "Wrong size on ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable");
static_assert(offsetof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable, HackerPawn) == 0x000000, "Member 'ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable, CallFunc_GetCurrentAction_CurrentAction) == 0x000020, "Member 'ITEM_ConsumableBase_C_EVENT_OnActivatedConsumable::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.TryUseHandheldItem
// 0x0028 (0x0028 - 0x0000)
struct ITEM_ConsumableBase_C_TryUseHandheldItem final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_TryUseHandheldItem) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_TryUseHandheldItem");
static_assert(sizeof(ITEM_ConsumableBase_C_TryUseHandheldItem) == 0x000028, "Wrong size on ITEM_ConsumableBase_C_TryUseHandheldItem");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, Result) == 0x000008, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, CallFunc_GetHandheldItem_HandheldItem) == 0x000018, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_TryUseHandheldItem, CallFunc_Activate_Result) == 0x000021, "Member 'ITEM_ConsumableBase_C_TryUseHandheldItem::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetHandheldItem
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ConsumableBase_C_GetHandheldItem final
{
public:
	class UCOMP_Inventory_C*                      SpecificInventory;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        HandheldItem;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        HiddenBag;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetHandheldItem) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetHandheldItem");
static_assert(sizeof(ITEM_ConsumableBase_C_GetHandheldItem) == 0x000058, "Wrong size on ITEM_ConsumableBase_C_GetHandheldItem");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, SpecificInventory) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::SpecificInventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, HandheldItem) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, HiddenBag) == 0x000010, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::HiddenBag' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_GetBagByType_Bag) == 0x000020, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_FindItem_FoundItem) == 0x000040, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base) == 0x000048, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHandheldItem, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'ITEM_ConsumableBase_C_GetHandheldItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetOrCreateHandheldItem
// 0x0088 (0x0088 - 0x0000)
struct ITEM_ConsumableBase_C_GetOrCreateHandheldItem final
{
public:
	class UCOMP_Inventory_C*                      SpecificInventory;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        HandheldItem;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        HiddenBag;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_CreateItem_Item;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetOrCreateHandheldItem");
static_assert(sizeof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem) == 0x000088, "Wrong size on ITEM_ConsumableBase_C_GetOrCreateHandheldItem");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, SpecificInventory) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::SpecificInventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, HandheldItem) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, HiddenBag) == 0x000010, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::HiddenBag' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_IsValidClass_ReturnValue) == 0x00001A, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000020, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_CreateItem_Item) == 0x000030, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_CreateItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base) == 0x000038, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_GetBagByType_Bag) == 0x000048, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_AddItem_Result) == 0x000058, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000060, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, CallFunc_FindItem_FoundItem) == 0x000070, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base_1) == 0x000078, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetOrCreateHandheldItem, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'ITEM_ConsumableBase_C_GetOrCreateHandheldItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.ReceiveAnimationMessage
// 0x0040 (0x0040 - 0x0000)
struct ITEM_ConsumableBase_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_UseConsumable_ConsumedItem;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_ConsumableBase_C_ReceiveAnimationMessage) == 0x000040, "Wrong size on ITEM_ConsumableBase_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, HackerPawn) == 0x000018, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, CallFunc_UseConsumable_ConsumedItem) == 0x000020, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::CallFunc_UseConsumable_ConsumedItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000039, "Member 'ITEM_ConsumableBase_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetDisplayProperties
// 0x0048 (0x0048 - 0x0000)
struct ITEM_ConsumableBase_C_GetDisplayProperties final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimInstanceClass;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetDisplayProperties) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetDisplayProperties");
static_assert(sizeof(ITEM_ConsumableBase_C_GetDisplayProperties) == 0x000048, "Wrong size on ITEM_ConsumableBase_C_GetDisplayProperties");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, SkeletalMesh) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, AnimInstanceClass) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::AnimInstanceClass' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, OverrideMaterial) == 0x000010, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000028, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000038, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetDisplayProperties, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_ConsumableBase_C_GetDisplayProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.OnInventoryChanged
// 0x00D8 (0x00D8 - 0x0000)
struct ITEM_ConsumableBase_C_OnInventoryChanged final
{
public:
	class UCOMP_Inventory_C*                      PrevInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HotbarSlotIndex;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToSlot_Result;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFirstFreeSlotIndexWithPreference_Result; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAutoSlotHotbar_Result;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHotbarCount_ResultCount;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHotbarSlottableObject_Valid;           // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_GetHotbarSlottableObject_SlottableObject; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHotbarSlottableObject_Valid_1;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_GetHotbarSlottableObject_SlottableObject_1; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveFromSlot_Result;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToBestAvailableSlot_Result;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_OnInventoryChanged) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_OnInventoryChanged");
static_assert(sizeof(ITEM_ConsumableBase_C_OnInventoryChanged) == 0x0000D8, "Wrong size on ITEM_ConsumableBase_C_OnInventoryChanged");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, PrevInventory) == 0x000000, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::PrevInventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, Result) == 0x000008, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, HotbarSlotIndex) == 0x00000C, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::HotbarSlotIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, HackerPawn) == 0x000010, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, SlottableObject) == 0x000018, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::SlottableObject' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000028, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_AddToSlot_Result) == 0x000030, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_AddToSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetFirstFreeSlotIndexWithPreference_Result) == 0x000040, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetFirstFreeSlotIndexWithPreference_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetInventory_Inventory) == 0x000048, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000058, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000060, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetAutoSlotHotbar_Result) == 0x000069, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetAutoSlotHotbar_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000070, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHotbarCount_ResultCount) == 0x000078, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHotbarCount_ResultCount' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007D, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHotbarSlottableObject_Valid) == 0x00007E, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHotbarSlottableObject_Valid' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHotbarSlottableObject_SlottableObject) == 0x000080, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHotbarSlottableObject_SlottableObject' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHotbarSlottableObject_Valid_1) == 0x000090, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHotbarSlottableObject_Valid_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHotbarSlottableObject_SlottableObject_1) == 0x000098, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHotbarSlottableObject_SlottableObject_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetHandheldItem_HandheldItem) == 0x0000A8, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetOwner_ReturnValue_1) == 0x0000B0, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, K2Node_DynamicCast_AsPAWN_Hacker_Implant_1) == 0x0000B8, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::K2Node_DynamicCast_AsPAWN_Hacker_Implant_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_RemoveFromSlot_Result) == 0x0000C1, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_RemoveFromSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_AddToBestAvailableSlot_Result) == 0x0000C2, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_AddToBestAvailableSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GetInventory_Inventory_1) == 0x0000C8, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_OnInventoryChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D2, "Member 'ITEM_ConsumableBase_C_OnInventoryChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.CanUnslot
// 0x0050 (0x0050 - 0x0000)
struct ITEM_ConsumableBase_C_CanUnslot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HandheldConsumable_Base_C*        HandheldItem;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_GetActiveConsumableItem_Result;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUnslot_Result;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverrideHandheldBeingUsed_Result;       // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_CanUnslot) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_CanUnslot");
static_assert(sizeof(ITEM_ConsumableBase_C_CanUnslot) == 0x000050, "Wrong size on ITEM_ConsumableBase_C_CanUnslot");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, Result) == 0x000000, "Member 'ITEM_ConsumableBase_C_CanUnslot::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, HandheldItem) == 0x000008, "Member 'ITEM_ConsumableBase_C_CanUnslot::HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_GetActiveConsumableItem_Result) == 0x000010, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_GetActiveConsumableItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_GetInventory_Inventory) == 0x000020, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_GetHandheldItem_HandheldItem) == 0x000028, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000040, "Member 'ITEM_ConsumableBase_C_CanUnslot::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ITEM_ConsumableBase_C_CanUnslot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_CanUnslot_Result) == 0x000049, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_CanUnslot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_IsOverrideHandheldBeingUsed_Result) == 0x00004A, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_IsOverrideHandheldBeingUsed_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_CanUnslot, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004B, "Member 'ITEM_ConsumableBase_C_CanUnslot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.Activate
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ConsumableBase_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUseHandheldItem_Result;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayActivateMontage_Success;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_ConsumableBase_C*                 CallFunc_UseConsumable_ConsumedItem;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_Activate) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_Activate");
static_assert(sizeof(ITEM_ConsumableBase_C_Activate) == 0x000018, "Wrong size on ITEM_ConsumableBase_C_Activate");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, Character) == 0x000000, "Member 'ITEM_ConsumableBase_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, Result) == 0x000008, "Member 'ITEM_ConsumableBase_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, CallFunc_Activate_Result) == 0x000009, "Member 'ITEM_ConsumableBase_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, CallFunc_TryUseHandheldItem_Result) == 0x00000A, "Member 'ITEM_ConsumableBase_C_Activate::CallFunc_TryUseHandheldItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00000B, "Member 'ITEM_ConsumableBase_C_Activate::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, CallFunc_TryPlayActivateMontage_Success) == 0x00000C, "Member 'ITEM_ConsumableBase_C_Activate::CallFunc_TryPlayActivateMontage_Success' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_Activate, CallFunc_UseConsumable_ConsumedItem) == 0x000010, "Member 'ITEM_ConsumableBase_C_Activate::CallFunc_UseConsumable_ConsumedItem' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ConsumableBase_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_ConsumableBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_ConsumableBase_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_ConsumableBase_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

// Function ITEM_ConsumableBase.ITEM_ConsumableBase_C.GetHotbarSlottableObject
// 0x0030 (0x0030 - 0x0000)
struct ITEM_ConsumableBase_C_GetHotbarSlottableObject final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetOrCreateHandheldItem_HandheldItem;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ConsumableBase_C_GetHotbarSlottableObject) == 0x000008, "Wrong alignment on ITEM_ConsumableBase_C_GetHotbarSlottableObject");
static_assert(sizeof(ITEM_ConsumableBase_C_GetHotbarSlottableObject) == 0x000030, "Wrong size on ITEM_ConsumableBase_C_GetHotbarSlottableObject");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHotbarSlottableObject, Valid) == 0x000000, "Member 'ITEM_ConsumableBase_C_GetHotbarSlottableObject::Valid' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHotbarSlottableObject, SlottableObject) == 0x000008, "Member 'ITEM_ConsumableBase_C_GetHotbarSlottableObject::SlottableObject' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHotbarSlottableObject, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_ConsumableBase_C_GetHotbarSlottableObject::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHotbarSlottableObject, CallFunc_GetOrCreateHandheldItem_HandheldItem) == 0x000020, "Member 'ITEM_ConsumableBase_C_GetHotbarSlottableObject::CallFunc_GetOrCreateHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ConsumableBase_C_GetHotbarSlottableObject, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITEM_ConsumableBase_C_GetHotbarSlottableObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEBRIS_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"


namespace SDK::Params
{

// Function DEBRIS_Base.DEBRIS_Base_C.ExecuteUbergraph_DEBRIS_Base
// 0x0018 (0x0018 - 0x0000)
struct DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base) == 0x000008, "Wrong alignment on DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base");
static_assert(sizeof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base) == 0x000018, "Wrong size on DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base");
static_assert(offsetof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base, EntryPoint) == 0x000000, "Member 'DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base, K2Node_ComponentBoundEvent_bVisibleState) == 0x000011, "Member 'DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'DEBRIS_Base_C_ExecuteUbergraph_DEBRIS_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'DEBRIS_Base_C_BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.IsTeleporting
// 0x0002 (0x0002 - 0x0000)
struct DEBRIS_Base_C_IsTeleporting final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_IsTeleporting) == 0x000001, "Wrong alignment on DEBRIS_Base_C_IsTeleporting");
static_assert(sizeof(DEBRIS_Base_C_IsTeleporting) == 0x000002, "Wrong size on DEBRIS_Base_C_IsTeleporting");
static_assert(offsetof(DEBRIS_Base_C_IsTeleporting, Result) == 0x000000, "Member 'DEBRIS_Base_C_IsTeleporting::Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_IsTeleporting, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'DEBRIS_Base_C_IsTeleporting::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.CanTeleportDebris
// 0x0003 (0x0003 - 0x0000)
struct DEBRIS_Base_C_CanTeleportDebris final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeleporting_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_CanTeleportDebris) == 0x000001, "Wrong alignment on DEBRIS_Base_C_CanTeleportDebris");
static_assert(sizeof(DEBRIS_Base_C_CanTeleportDebris) == 0x000003, "Wrong size on DEBRIS_Base_C_CanTeleportDebris");
static_assert(offsetof(DEBRIS_Base_C_CanTeleportDebris, Result) == 0x000000, "Member 'DEBRIS_Base_C_CanTeleportDebris::Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_CanTeleportDebris, CallFunc_IsTeleporting_Result) == 0x000001, "Member 'DEBRIS_Base_C_CanTeleportDebris::CallFunc_IsTeleporting_Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_CanTeleportDebris, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'DEBRIS_Base_C_CanTeleportDebris::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.UpdateDebrisVisibility
// 0x0004 (0x0004 - 0x0000)
struct DEBRIS_Base_C_UpdateDebrisVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeleporting_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_UpdateDebrisVisibility) == 0x000001, "Wrong alignment on DEBRIS_Base_C_UpdateDebrisVisibility");
static_assert(sizeof(DEBRIS_Base_C_UpdateDebrisVisibility) == 0x000004, "Wrong size on DEBRIS_Base_C_UpdateDebrisVisibility");
static_assert(offsetof(DEBRIS_Base_C_UpdateDebrisVisibility, VisibilityState) == 0x000000, "Member 'DEBRIS_Base_C_UpdateDebrisVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_UpdateDebrisVisibility, CallFunc_IsTeleporting_Result) == 0x000001, "Member 'DEBRIS_Base_C_UpdateDebrisVisibility::CallFunc_IsTeleporting_Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_UpdateDebrisVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'DEBRIS_Base_C_UpdateDebrisVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_UpdateDebrisVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'DEBRIS_Base_C_UpdateDebrisVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.TryTeleportDebris
// 0x0170 (0x0170 - 0x0000)
struct DEBRIS_Base_C_TryTeleportDebris final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeDuration;                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              SoundCue;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         TeleportFX;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      SpawnedTeleportFX;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsHalfExtent;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsOrigin;                                      // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CanTeleportDebris_Result;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEBRIS_Base_C_TryTeleportDebris) == 0x000010, "Wrong alignment on DEBRIS_Base_C_TryTeleportDebris");
static_assert(sizeof(DEBRIS_Base_C_TryTeleportDebris) == 0x000170, "Wrong size on DEBRIS_Base_C_TryTeleportDebris");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, Location) == 0x000000, "Member 'DEBRIS_Base_C_TryTeleportDebris::Location' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, Rotation) == 0x00000C, "Member 'DEBRIS_Base_C_TryTeleportDebris::Rotation' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, MaterializeDuration) == 0x000018, "Member 'DEBRIS_Base_C_TryTeleportDebris::MaterializeDuration' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, SoundCue) == 0x000020, "Member 'DEBRIS_Base_C_TryTeleportDebris::SoundCue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, TeleportFX) == 0x000028, "Member 'DEBRIS_Base_C_TryTeleportDebris::TeleportFX' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, Result) == 0x000030, "Member 'DEBRIS_Base_C_TryTeleportDebris::Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, SpawnedTeleportFX) == 0x000038, "Member 'DEBRIS_Base_C_TryTeleportDebris::SpawnedTeleportFX' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, BoundsHalfExtent) == 0x000040, "Member 'DEBRIS_Base_C_TryTeleportDebris::BoundsHalfExtent' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, BoundsOrigin) == 0x00004C, "Member 'DEBRIS_Base_C_TryTeleportDebris::BoundsOrigin' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_GetActorBounds_Origin) == 0x000064, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_GetActorBounds_BoxExtent) == 0x000070, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000080, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000C0, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_CanTeleportDebris_Result) == 0x000148, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_CanTeleportDebris_Result' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, K2Node_CreateDelegate_OutputDelegate) == 0x00014C, "Member 'DEBRIS_Base_C_TryTeleportDebris::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_TryTeleportDebris, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000160, "Member 'DEBRIS_Base_C_TryTeleportDebris::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.IgnorePhysicsBodyCollisionTemporarily
// 0x0020 (0x0020 - 0x0000)
struct DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily) == 0x000008, "Wrong alignment on DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily");
static_assert(sizeof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily) == 0x000020, "Wrong size on DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily");
static_assert(offsetof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily, Duration) == 0x000000, "Member 'DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily::Duration' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'DEBRIS_Base_C_IgnorePhysicsBodyCollisionTemporarily::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.GetDebrisMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct DEBRIS_Base_C_GetDebrisMeshComponent final
{
public:
	class UStaticMeshComponent*                   Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEBRIS_Base_C_GetDebrisMeshComponent) == 0x000008, "Wrong alignment on DEBRIS_Base_C_GetDebrisMeshComponent");
static_assert(sizeof(DEBRIS_Base_C_GetDebrisMeshComponent) == 0x000008, "Wrong size on DEBRIS_Base_C_GetDebrisMeshComponent");
static_assert(offsetof(DEBRIS_Base_C_GetDebrisMeshComponent, Result) == 0x000000, "Member 'DEBRIS_Base_C_GetDebrisMeshComponent::Result' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct DEBRIS_Base_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(DEBRIS_Base_C_ShouldSaveActor) == 0x000008, "Wrong alignment on DEBRIS_Base_C_ShouldSaveActor");
static_assert(sizeof(DEBRIS_Base_C_ShouldSaveActor) == 0x000038, "Wrong size on DEBRIS_Base_C_ShouldSaveActor");
static_assert(offsetof(DEBRIS_Base_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'DEBRIS_Base_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'DEBRIS_Base_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'DEBRIS_Base_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct DEBRIS_Base_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on DEBRIS_Base_C_ReceivePendingBodyTransforms");
static_assert(sizeof(DEBRIS_Base_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on DEBRIS_Base_C_ReceivePendingBodyTransforms");
static_assert(offsetof(DEBRIS_Base_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'DEBRIS_Base_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'DEBRIS_Base_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'DEBRIS_Base_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function DEBRIS_Base.DEBRIS_Base_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct DEBRIS_Base_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_Base_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on DEBRIS_Base_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(DEBRIS_Base_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on DEBRIS_Base_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(DEBRIS_Base_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'DEBRIS_Base_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(DEBRIS_Base_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'DEBRIS_Base_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


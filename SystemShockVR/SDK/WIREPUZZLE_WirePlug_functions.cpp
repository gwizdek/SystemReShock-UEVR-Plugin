#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIREPUZZLE_WirePlug

#include "Basic.hpp"

#include "WIREPUZZLE_WirePlug_classes.hpp"
#include "WIREPUZZLE_WirePlug_parameters.hpp"


namespace SDK
{

// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.OnConnected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::OnConnected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "OnConnected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.OnDisconnected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::OnDisconnected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "OnDisconnected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.OnExtended__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::OnExtended__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "OnExtended__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ExecuteUbergraph_WIREPUZZLE_WirePlug
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::ExecuteUbergraph_WIREPUZZLE_WirePlug(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ExecuteUbergraph_WIREPUZZLE_WirePlug");

	Params::WIREPUZZLE_WirePlug_C_ExecuteUbergraph_WIREPUZZLE_WirePlug Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.OnTransitionStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::OnTransitionStateChanged(float DeltaTimeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "OnTransitionStateChanged");

	Params::WIREPUZZLE_WirePlug_C_OnTransitionStateChanged Parms{};

	Parms.DeltaTimeOffset = DeltaTimeOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ReceiveTick");

	Params::WIREPUZZLE_WirePlug_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.RetractingTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::RetractingTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "RetractingTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.RetractingTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::RetractingTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "RetractingTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.DisconnectingTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::DisconnectingTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "DisconnectingTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.DisconnectingTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::DisconnectingTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "DisconnectingTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ConnectingTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ConnectingTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ConnectingTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ConnectingTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ConnectingTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ConnectingTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.RetractedTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::RetractedTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "RetractedTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.RetractedTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::RetractedTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "RetractedTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ExtendedTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ExtendedTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ExtendedTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ExtendedTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ExtendedTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ExtendedTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ConnectedTimeline__UpdateFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ConnectedTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ConnectedTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.ConnectedTimeline__FinishedFunc
// (BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::ConnectedTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "ConnectedTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateWireMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::UpdateWireMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateWireMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateWirePlugTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::UpdateWirePlugTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateWirePlugTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateWirePlug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpAlpha                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::UpdateWirePlug(float InterpAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateWirePlug");

	Params::WIREPUZZLE_WirePlug_C_UpdateWirePlug Parms{};

	Parms.InterpAlpha = InterpAlpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetInitiallyConnected
// (Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::SetInitiallyConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetInitiallyConnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetTargetWirePlugState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_WirePlugState                      NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::SetTargetWirePlugState(ENUM_WirePlugState NewState, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetTargetWirePlugState");

	Params::WIREPUZZLE_WirePlug_C_SetTargetWirePlugState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetSplineForState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USplineComponent*                 Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetSplineForState(ENUM_WirePlugState State, class USplineComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetSplineForState");

	Params::WIREPUZZLE_WirePlug_C_GetSplineForState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateSpline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpAlpha                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::UpdateSpline(float InterpAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateSpline");

	Params::WIREPUZZLE_WirePlug_C_UpdateSpline Parms{};

	Parms.InterpAlpha = InterpAlpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetConnectionOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::SetConnectionOffset(const struct FVector2D& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetConnectionOffset");

	Params::WIREPUZZLE_WirePlug_C_SetConnectionOffset Parms{};

	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetLocalOffsetForSplinePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PointIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetLocalOffsetForSplinePoint(ENUM_WirePlugState State, int32 PointIndex, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetLocalOffsetForSplinePoint");

	Params::WIREPUZZLE_WirePlug_C_GetLocalOffsetForSplinePoint Parms{};

	Parms.State = State;
	Parms.PointIndex = PointIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetTargetExtensionOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::SetTargetExtensionOffset(const struct FVector2D& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetTargetExtensionOffset");

	Params::WIREPUZZLE_WirePlug_C_SetTargetExtensionOffset Parms{};

	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.InitializeSplines
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::InitializeSplines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "InitializeSplines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.OnFinishedSplineUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::OnFinishedSplineUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "OnFinishedSplineUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetTransitionDurationForState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetTransitionDurationForState(ENUM_WirePlugState State, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetTransitionDurationForState");

	Params::WIREPUZZLE_WirePlug_C_GetTransitionDurationForState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateExtensionOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::UpdateExtensionOffset(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateExtensionOffset");

	Params::WIREPUZZLE_WirePlug_C_UpdateExtensionOffset Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetTimelineForState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTimelineComponent*               Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetTimelineForState(ENUM_WirePlugState State, class UTimelineComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetTimelineForState");

	Params::WIREPUZZLE_WirePlug_C_GetTimelineForState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetProgressInCurrentState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetProgressInCurrentState(float* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetProgressInCurrentState");

	Params::WIREPUZZLE_WirePlug_C_GetProgressInCurrentState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetShouldBlendAlongTargetForState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::GetShouldBlendAlongTargetForState(ENUM_WirePlugState State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetShouldBlendAlongTargetForState");

	Params::WIREPUZZLE_WirePlug_C_GetShouldBlendAlongTargetForState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetShouldUseShortestPathRotationForState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::GetShouldUseShortestPathRotationForState(ENUM_WirePlugState State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetShouldUseShortestPathRotationForState");

	Params::WIREPUZZLE_WirePlug_C_GetShouldUseShortestPathRotationForState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetConnectionDepthOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DepthOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::SetConnectionDepthOffset(float DepthOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetConnectionDepthOffset");

	Params::WIREPUZZLE_WirePlug_C_SetConnectionDepthOffset Parms{};

	Parms.DepthOffset = DepthOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.IsTransitioning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::IsTransitioning(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "IsTransitioning");

	Params::WIREPUZZLE_WirePlug_C_IsTransitioning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetTargetShape");

	Params::WIREPUZZLE_WirePlug_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "TryInteract");

	Params::WIREPUZZLE_WirePlug_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.EnableWirePlugCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::EnableWirePlugCollision(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "EnableWirePlugCollision");

	Params::WIREPUZZLE_WirePlug_C_EnableWirePlugCollision Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.FillTargetStatePath
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_WirePlugState                      FinalState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaTimeOffset                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::FillTargetStatePath(ENUM_WirePlugState FinalState, float* DeltaTimeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "FillTargetStatePath");

	Params::WIREPUZZLE_WirePlug_C_FillTargetStatePath Parms{};

	Parms.FinalState = FinalState;

	UObject::ProcessEvent(Func, &Parms);

	if (DeltaTimeOffset != nullptr)
		*DeltaTimeOffset = Parms.DeltaTimeOffset;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetNextTransitionState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetNextTransitionState(ENUM_WirePlugState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetNextTransitionState");

	Params::WIREPUZZLE_WirePlug_C_GetNextTransitionState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.BeginTransitioningToNewState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeOffset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::BeginTransitioningToNewState(float DeltaTimeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "BeginTransitioningToNewState");

	Params::WIREPUZZLE_WirePlug_C_BeginTransitioningToNewState Parms{};

	Parms.DeltaTimeOffset = DeltaTimeOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.CanImmediatelyTransitionToState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_WirePlug_C::CanImmediatelyTransitionToState(ENUM_WirePlugState State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "CanImmediatelyTransitionToState");

	Params::WIREPUZZLE_WirePlug_C_CanImmediatelyTransitionToState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateWirePlugOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::UpdateWirePlugOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateWirePlugOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.UpdateInteractionOverride
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::UpdateInteractionOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "UpdateInteractionOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetConnectionDepthOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetConnectionDepthOffset(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetConnectionDepthOffset");

	Params::WIREPUZZLE_WirePlug_C_GetConnectionDepthOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.InitializeWirePlug
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_WirePlug_C::InitializeWirePlug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "InitializeWirePlug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.SetWirePlugPowerTypeDescription
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PowerTypeText                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void AWIREPUZZLE_WirePlug_C::SetWirePlugPowerTypeDescription(const class FText& PowerTypeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "SetWirePlugPowerTypeDescription");

	Params::WIREPUZZLE_WirePlug_C_SetWirePlugPowerTypeDescription Parms{};

	Parms.PowerTypeText = std::move(PowerTypeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_WirePlug.WIREPUZZLE_WirePlug_C.GetFinalTransitionState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WirePlugState                      State                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_WirePlug_C::GetFinalTransitionState(ENUM_WirePlugState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_WirePlug_C", "GetFinalTransitionState");

	Params::WIREPUZZLE_WirePlug_C_GetFinalTransitionState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (State != nullptr)
		*State = Parms.State;
}

}


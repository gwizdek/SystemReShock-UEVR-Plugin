#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRAP_Trigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "ENUM_TriggerCondition_structs.hpp"


namespace SDK::Params
{

// Function TRAP_Trigger.TRAP_Trigger_C.ExecuteUbergraph_TRAP_Trigger
// 0x0108 (0x0108 - 0x0000)
struct TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySpringTrapFromOverlapEvent_Result;     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTrapGroup_Result;                     // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTrapGroup_Result_1;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0078(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TrySpringTrapFromOverlapEvent_Result_1;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger) == 0x000008, "Wrong alignment on TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger");
static_assert(sizeof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger) == 0x000108, "Wrong size on TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, EntryPoint) == 0x000000, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_Event_EndPlayReason) == 0x000024, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_TrySpringTrapFromOverlapEvent_Result) == 0x000025, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_TrySpringTrapFromOverlapEvent_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_IsInTrapGroup_Result) == 0x000026, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_IsInTrapGroup_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_IsInTrapGroup_Result_1) == 0x000027, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_IsInTrapGroup_Result_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_GetGameInstance_ReturnValue_1) == 0x000040, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000048, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000058, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000060, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000068, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000070, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_bFromSweep) == 0x000074, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, K2Node_ComponentBoundEvent_SweepResult) == 0x000078, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger, CallFunc_TrySpringTrapFromOverlapEvent_Result_1) == 0x000100, "Member 'TRAP_Trigger_C_ExecuteUbergraph_TRAP_Trigger::CallFunc_TrySpringTrapFromOverlapEvent_Result_1' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRAP_Trigger_C_BndEvt__TRAP_Trigger_TriggerVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct TRAP_Trigger_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRAP_Trigger_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on TRAP_Trigger_C_ReceiveEndPlay");
static_assert(sizeof(TRAP_Trigger_C_ReceiveEndPlay) == 0x000001, "Wrong size on TRAP_Trigger_C_ReceiveEndPlay");
static_assert(offsetof(TRAP_Trigger_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'TRAP_Trigger_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'TRAP_Trigger_C_BndEvt__TriggerVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct TRAP_Trigger_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTrapGroup_Result;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_UserConstructionScript) == 0x000004, "Wrong alignment on TRAP_Trigger_C_UserConstructionScript");
static_assert(sizeof(TRAP_Trigger_C_UserConstructionScript) == 0x000010, "Wrong size on TRAP_Trigger_C_UserConstructionScript");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_UserConstructionScript, CallFunc_IsInTrapGroup_Result) == 0x00000C, "Member 'TRAP_Trigger_C_UserConstructionScript::CallFunc_IsInTrapGroup_Result' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.IsInTrapGroup
// 0x0002 (0x0002 - 0x0000)
struct TRAP_Trigger_C_IsInTrapGroup final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_IsInTrapGroup) == 0x000001, "Wrong alignment on TRAP_Trigger_C_IsInTrapGroup");
static_assert(sizeof(TRAP_Trigger_C_IsInTrapGroup) == 0x000002, "Wrong size on TRAP_Trigger_C_IsInTrapGroup");
static_assert(offsetof(TRAP_Trigger_C_IsInTrapGroup, Result) == 0x000000, "Member 'TRAP_Trigger_C_IsInTrapGroup::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_IsInTrapGroup, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'TRAP_Trigger_C_IsInTrapGroup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.CanSpringTrap
// 0x0006 (0x0006 - 0x0000)
struct TRAP_Trigger_C_CanSpringTrap final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTrapBeenTriggered_Result;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedRequiredQuests_Result;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_CanSpringTrap) == 0x000001, "Wrong alignment on TRAP_Trigger_C_CanSpringTrap");
static_assert(sizeof(TRAP_Trigger_C_CanSpringTrap) == 0x000006, "Wrong size on TRAP_Trigger_C_CanSpringTrap");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, Result) == 0x000000, "Member 'TRAP_Trigger_C_CanSpringTrap::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, CallFunc_HasTrapBeenTriggered_Result) == 0x000001, "Member 'TRAP_Trigger_C_CanSpringTrap::CallFunc_HasTrapBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, CallFunc_HasCompletedRequiredQuests_Result) == 0x000002, "Member 'TRAP_Trigger_C_CanSpringTrap::CallFunc_HasCompletedRequiredQuests_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'TRAP_Trigger_C_CanSpringTrap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'TRAP_Trigger_C_CanSpringTrap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_CanSpringTrap, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'TRAP_Trigger_C_CanSpringTrap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.HasTrapBeenTriggered
// 0x0002 (0x0002 - 0x0000)
struct TRAP_Trigger_C_HasTrapBeenTriggered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_HasTrapBeenTriggered) == 0x000001, "Wrong alignment on TRAP_Trigger_C_HasTrapBeenTriggered");
static_assert(sizeof(TRAP_Trigger_C_HasTrapBeenTriggered) == 0x000002, "Wrong size on TRAP_Trigger_C_HasTrapBeenTriggered");
static_assert(offsetof(TRAP_Trigger_C_HasTrapBeenTriggered, Result) == 0x000000, "Member 'TRAP_Trigger_C_HasTrapBeenTriggered::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasTrapBeenTriggered, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'TRAP_Trigger_C_HasTrapBeenTriggered::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.HasCompletedRequiredQuests
// 0x0050 (0x0050 - 0x0000)
struct TRAP_Trigger_C_HasCompletedRequiredQuests final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_HasCompletedRequiredQuests) == 0x000008, "Wrong alignment on TRAP_Trigger_C_HasCompletedRequiredQuests");
static_assert(sizeof(TRAP_Trigger_C_HasCompletedRequiredQuests) == 0x000050, "Wrong size on TRAP_Trigger_C_HasCompletedRequiredQuests");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, Result) == 0x000000, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, GameInstance) == 0x000008, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::GameInstance' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, Temp_int_Array_Index_Variable) == 0x000010, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_Array_Get_Item) == 0x000020, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_HasCompletedStoryQuest_Completed) == 0x000035, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_HasCompletedRequiredQuests, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TRAP_Trigger_C_HasCompletedRequiredQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.SetTrapEnabled
// 0x0003 (0x0003 - 0x0000)
struct TRAP_Trigger_C_SetTrapEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StateChanged;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_SetTrapEnabled) == 0x000001, "Wrong alignment on TRAP_Trigger_C_SetTrapEnabled");
static_assert(sizeof(TRAP_Trigger_C_SetTrapEnabled) == 0x000003, "Wrong size on TRAP_Trigger_C_SetTrapEnabled");
static_assert(offsetof(TRAP_Trigger_C_SetTrapEnabled, State) == 0x000000, "Member 'TRAP_Trigger_C_SetTrapEnabled::State' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_SetTrapEnabled, StateChanged) == 0x000001, "Member 'TRAP_Trigger_C_SetTrapEnabled::StateChanged' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_SetTrapEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'TRAP_Trigger_C_SetTrapEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.DismantleTrap
// 0x0008 (0x0008 - 0x0000)
struct TRAP_Trigger_C_DismantleTrap final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTrapEnabled_StateChanged;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_DismantleTrap) == 0x000004, "Wrong alignment on TRAP_Trigger_C_DismantleTrap");
static_assert(sizeof(TRAP_Trigger_C_DismantleTrap) == 0x000008, "Wrong size on TRAP_Trigger_C_DismantleTrap");
static_assert(offsetof(TRAP_Trigger_C_DismantleTrap, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'TRAP_Trigger_C_DismantleTrap::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_DismantleTrap, CallFunc_SetTrapEnabled_StateChanged) == 0x000004, "Member 'TRAP_Trigger_C_DismantleTrap::CallFunc_SetTrapEnabled_StateChanged' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.OnSpringTrap
// 0x0058 (0x0058 - 0x0000)
struct TRAP_Trigger_C_OnSpringTrap final
{
public:
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0030(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRAP_Trigger_C_OnSpringTrap) == 0x000008, "Wrong alignment on TRAP_Trigger_C_OnSpringTrap");
static_assert(sizeof(TRAP_Trigger_C_OnSpringTrap) == 0x000058, "Wrong size on TRAP_Trigger_C_OnSpringTrap");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, Hacker) == 0x000000, "Member 'TRAP_Trigger_C_OnSpringTrap::Hacker' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TRAP_Trigger_C_OnSpringTrap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TRAP_Trigger_C_OnSpringTrap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_Array_Get_Item) == 0x000010, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_TryInteract_self_CastInput) == 0x000020, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_TryInteract_InteractResults) == 0x000030, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnSpringTrap, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'TRAP_Trigger_C_OnSpringTrap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.EVENT_OnStoryQuestChanged
// 0x0028 (0x0028 - 0x0000)
struct TRAP_Trigger_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   StoryQuestName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_HasCompletedRequiredQuests_Result;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on TRAP_Trigger_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged) == 0x000028, "Wrong size on TRAP_Trigger_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged, StoryQuestName) == 0x000000, "Member 'TRAP_Trigger_C_EVENT_OnStoryQuestChanged::StoryQuestName' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged, Value) == 0x000008, "Member 'TRAP_Trigger_C_EVENT_OnStoryQuestChanged::Value' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged, OverlappingActors) == 0x000010, "Member 'TRAP_Trigger_C_EVENT_OnStoryQuestChanged::OverlappingActors' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_EVENT_OnStoryQuestChanged, CallFunc_HasCompletedRequiredQuests_Result) == 0x000020, "Member 'TRAP_Trigger_C_EVENT_OnStoryQuestChanged::CallFunc_HasCompletedRequiredQuests_Result' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TrySpringTrap
// 0x00E0 (0x00E0 - 0x0000)
struct TRAP_Trigger_C_TrySpringTrap final
{
public:
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSpringTrap_Result;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple_2;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TrySpringTrap) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TrySpringTrap");
static_assert(sizeof(TRAP_Trigger_C_TrySpringTrap) == 0x0000E0, "Wrong size on TRAP_Trigger_C_TrySpringTrap");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, OverlappingActors) == 0x000000, "Member 'TRAP_Trigger_C_TrySpringTrap::OverlappingActors' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, GameInstance) == 0x000010, "Member 'TRAP_Trigger_C_TrySpringTrap::GameInstance' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, Temp_int_Array_Index_Variable) == 0x000018, "Member 'TRAP_Trigger_C_TrySpringTrap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'TRAP_Trigger_C_TrySpringTrap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00004C, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000050, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_GetPlayerPawn_ReturnValue) == 0x000060, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000068, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_CanSpringTrap_Result) == 0x000071, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_CanSpringTrap_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, Temp_object_Variable) == 0x000078, "Member 'TRAP_Trigger_C_TrySpringTrap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_ComponentOverlapActors_OutActors) == 0x000088, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000098, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_AsPAWN_Hacker_Simple_1) == 0x0000B0, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_AsPAWN_Hacker_Simple_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Less_IntInt_ReturnValue) == 0x0000B9, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_IsStreamingLevels_Result) == 0x0000BA, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'TRAP_Trigger_C_TrySpringTrap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_AsPAWN_Hacker_Simple_2) == 0x0000D0, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_AsPAWN_Hacker_Simple_2' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrap, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'TRAP_Trigger_C_TrySpringTrap::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TrySpringTrapFromOverlapEvent
// 0x0038 (0x0038 - 0x0000)
struct TRAP_Trigger_C_TrySpringTrapFromOverlapEvent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeginOverlap;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_TriggerCondition                         Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TriggerCondition                         Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TriggerCondition                         K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSpringTrap_Result;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TrySpringTrapFromOverlapEvent");
static_assert(sizeof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent) == 0x000038, "Wrong size on TRAP_Trigger_C_TrySpringTrapFromOverlapEvent");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, Actor) == 0x000000, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::Actor' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, BeginOverlap) == 0x000008, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::BeginOverlap' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, Result) == 0x000009, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, HackerPawn) == 0x000010, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::HackerPawn' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, Temp_bool_Variable) == 0x000018, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, Temp_byte_Variable) == 0x000029, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, Temp_byte_Variable_1) == 0x00002A, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00002C, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, K2Node_Select_Default) == 0x000030, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TrySpringTrapFromOverlapEvent, CallFunc_CanSpringTrap_Result) == 0x000032, "Member 'TRAP_Trigger_C_TrySpringTrapFromOverlapEvent::CallFunc_CanSpringTrap_Result' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.OnTrapEnabledStateChanged
// 0x0005 (0x0005 - 0x0000)
struct TRAP_Trigger_C_OnTrapEnabledStateChanged final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTrapBeenTriggered_Result;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_OnTrapEnabledStateChanged) == 0x000001, "Wrong alignment on TRAP_Trigger_C_OnTrapEnabledStateChanged");
static_assert(sizeof(TRAP_Trigger_C_OnTrapEnabledStateChanged) == 0x000005, "Wrong size on TRAP_Trigger_C_OnTrapEnabledStateChanged");
static_assert(offsetof(TRAP_Trigger_C_OnTrapEnabledStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'TRAP_Trigger_C_OnTrapEnabledStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnTrapEnabledStateChanged, CallFunc_HasTrapBeenTriggered_Result) == 0x000001, "Member 'TRAP_Trigger_C_OnTrapEnabledStateChanged::CallFunc_HasTrapBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnTrapEnabledStateChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'TRAP_Trigger_C_OnTrapEnabledStateChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnTrapEnabledStateChanged, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'TRAP_Trigger_C_OnTrapEnabledStateChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_OnTrapEnabledStateChanged, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'TRAP_Trigger_C_OnTrapEnabledStateChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryBindToQuestChanged
// 0x0038 (0x0038 - 0x0000)
struct TRAP_Trigger_C_TryBindToQuestChanged final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedRequiredQuests_Result;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryBindToQuestChanged) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TryBindToQuestChanged");
static_assert(sizeof(TRAP_Trigger_C_TryBindToQuestChanged) == 0x000038, "Wrong size on TRAP_Trigger_C_TryBindToQuestChanged");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, GameInstance) == 0x000000, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::GameInstance' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, CallFunc_HasCompletedRequiredQuests_Result) == 0x000010, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::CallFunc_HasCompletedRequiredQuests_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryBindToQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'TRAP_Trigger_C_TryBindToQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryInteract
// 0x00C0 (0x00C0 - 0x0000)
struct TRAP_Trigger_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0058(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0078(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpringTrap_Result;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTrapEnabled_StateChanged;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryInteract) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TryInteract");
static_assert(sizeof(TRAP_Trigger_C_TryInteract) == 0x0000C0, "Wrong size on TRAP_Trigger_C_TryInteract");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, SourceActor) == 0x000000, "Member 'TRAP_Trigger_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'TRAP_Trigger_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, InteractionType) == 0x000010, "Member 'TRAP_Trigger_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, InteractResults) == 0x000018, "Member 'TRAP_Trigger_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'TRAP_Trigger_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000058, "Member 'TRAP_Trigger_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000078, "Member 'TRAP_Trigger_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000098, "Member 'TRAP_Trigger_C_TryInteract::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000A0, "Member 'TRAP_Trigger_C_TryInteract::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, CallFunc_CanSpringTrap_Result) == 0x0000A8, "Member 'TRAP_Trigger_C_TryInteract::CallFunc_CanSpringTrap_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000B0, "Member 'TRAP_Trigger_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'TRAP_Trigger_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryInteract, CallFunc_SetTrapEnabled_StateChanged) == 0x0000B9, "Member 'TRAP_Trigger_C_TryInteract::CallFunc_SetTrapEnabled_StateChanged' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryUnbindFromQuestChanged
// 0x0038 (0x0038 - 0x0000)
struct TRAP_Trigger_C_TryUnbindFromQuestChanged final
{
public:
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryUnbindFromQuestChanged) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TryUnbindFromQuestChanged");
static_assert(sizeof(TRAP_Trigger_C_TryUnbindFromQuestChanged) == 0x000038, "Wrong size on TRAP_Trigger_C_TryUnbindFromQuestChanged");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryUnbindFromQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'TRAP_Trigger_C_TryUnbindFromQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryEnableTrapCollision
// 0x0003 (0x0003 - 0x0000)
struct TRAP_Trigger_C_TryEnableTrapCollision final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryEnableTrapCollision) == 0x000001, "Wrong alignment on TRAP_Trigger_C_TryEnableTrapCollision");
static_assert(sizeof(TRAP_Trigger_C_TryEnableTrapCollision) == 0x000003, "Wrong size on TRAP_Trigger_C_TryEnableTrapCollision");
static_assert(offsetof(TRAP_Trigger_C_TryEnableTrapCollision, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'TRAP_Trigger_C_TryEnableTrapCollision::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryEnableTrapCollision, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'TRAP_Trigger_C_TryEnableTrapCollision::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryEnableTrapCollision, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'TRAP_Trigger_C_TryEnableTrapCollision::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryCompleteSprungGameEvents
// 0x0048 (0x0048 - 0x0000)
struct TRAP_Trigger_C_TryCompleteSprungGameEvents final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryCompleteSprungGameEvents) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TryCompleteSprungGameEvents");
static_assert(sizeof(TRAP_Trigger_C_TryCompleteSprungGameEvents) == 0x000048, "Wrong size on TRAP_Trigger_C_TryCompleteSprungGameEvents");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, GameInstance) == 0x000000, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::GameInstance' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, CallFunc_Array_Get_Item) == 0x000030, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryCompleteSprungGameEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'TRAP_Trigger_C_TryCompleteSprungGameEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.TryDismantleGroupedTraps
// 0x0020 (0x0020 - 0x0000)
struct TRAP_Trigger_C_TryDismantleGroupedTraps final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTrapGroup_Result;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_TryDismantleGroupedTraps) == 0x000008, "Wrong alignment on TRAP_Trigger_C_TryDismantleGroupedTraps");
static_assert(sizeof(TRAP_Trigger_C_TryDismantleGroupedTraps) == 0x000020, "Wrong size on TRAP_Trigger_C_TryDismantleGroupedTraps");
static_assert(offsetof(TRAP_Trigger_C_TryDismantleGroupedTraps, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'TRAP_Trigger_C_TryDismantleGroupedTraps::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryDismantleGroupedTraps, CallFunc_IsInTrapGroup_Result) == 0x000008, "Member 'TRAP_Trigger_C_TryDismantleGroupedTraps::CallFunc_IsInTrapGroup_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryDismantleGroupedTraps, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'TRAP_Trigger_C_TryDismantleGroupedTraps::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_TryDismantleGroupedTraps, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TRAP_Trigger_C_TryDismantleGroupedTraps::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.SetInteractLocked
// 0x0004 (0x0004 - 0x0000)
struct TRAP_Trigger_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTrapEnabled_StateChanged;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_SetInteractLocked) == 0x000001, "Wrong alignment on TRAP_Trigger_C_SetInteractLocked");
static_assert(sizeof(TRAP_Trigger_C_SetInteractLocked) == 0x000004, "Wrong size on TRAP_Trigger_C_SetInteractLocked");
static_assert(offsetof(TRAP_Trigger_C_SetInteractLocked, Locked) == 0x000000, "Member 'TRAP_Trigger_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_SetInteractLocked, Result) == 0x000001, "Member 'TRAP_Trigger_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'TRAP_Trigger_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_SetInteractLocked, CallFunc_SetTrapEnabled_StateChanged) == 0x000003, "Member 'TRAP_Trigger_C_SetInteractLocked::CallFunc_SetTrapEnabled_StateChanged' has a wrong offset!");

// Function TRAP_Trigger.TRAP_Trigger_C.IsInteractActivated
// 0x0003 (0x0003 - 0x0000)
struct TRAP_Trigger_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTrapBeenTriggered_Result;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRAP_Trigger_C_IsInteractActivated) == 0x000001, "Wrong alignment on TRAP_Trigger_C_IsInteractActivated");
static_assert(sizeof(TRAP_Trigger_C_IsInteractActivated) == 0x000003, "Wrong size on TRAP_Trigger_C_IsInteractActivated");
static_assert(offsetof(TRAP_Trigger_C_IsInteractActivated, Result) == 0x000000, "Member 'TRAP_Trigger_C_IsInteractActivated::Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_IsInteractActivated, CallFunc_HasTrapBeenTriggered_Result) == 0x000001, "Member 'TRAP_Trigger_C_IsInteractActivated::CallFunc_HasTrapBeenTriggered_Result' has a wrong offset!");
static_assert(offsetof(TRAP_Trigger_C_IsInteractActivated, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'TRAP_Trigger_C_IsInteractActivated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


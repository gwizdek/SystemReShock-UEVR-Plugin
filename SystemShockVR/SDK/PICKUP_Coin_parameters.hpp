#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PICKUP_Coin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PICKUP_Coin.PICKUP_Coin_C.OnPrePickup
// 0x00A8 (0x00A8 - 0x0000)
struct PICKUP_Coin_C_OnPrePickup final
{
public:
	class APICKUP_Coin_C*                         CoinActor;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetItem_Result;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetItem_Result_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Coin_C*                         K2Node_DynamicCast_AsPICKUP_Coin;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PICKUP_Coin_C_OnPrePickup) == 0x000008, "Wrong alignment on PICKUP_Coin_C_OnPrePickup");
static_assert(sizeof(PICKUP_Coin_C_OnPrePickup) == 0x0000A8, "Wrong size on PICKUP_Coin_C_OnPrePickup");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CoinActor) == 0x000000, "Member 'PICKUP_Coin_C_OnPrePickup::CoinActor' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PICKUP_Coin_C_OnPrePickup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_GetItem_Result) == 0x000010, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_GetItem_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PICKUP_Coin_C_OnPrePickup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_GetItem_Result_1) == 0x000028, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_GetItem_Result_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, K2Node_MakeArray_Array) == 0x000040, "Member 'PICKUP_Coin_C_OnPrePickup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, K2Node_MakeArray_Array_1) == 0x000050, "Member 'PICKUP_Coin_C_OnPrePickup::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_BoxOverlapActors_OutActors) == 0x000070, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_BoxOverlapActors_ReturnValue) == 0x000080, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Array_Get_Item) == 0x000088, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'PICKUP_Coin_C_OnPrePickup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, K2Node_DynamicCast_AsPICKUP_Coin) == 0x000098, "Member 'PICKUP_Coin_C_OnPrePickup::K2Node_DynamicCast_AsPICKUP_Coin' has a wrong offset!");
static_assert(offsetof(PICKUP_Coin_C_OnPrePickup, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'PICKUP_Coin_C_OnPrePickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SimpleHUD

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"
#include "Slate_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.ExecuteUbergraph_WIDGET_SimpleHUD
// 0x00C0 (0x00C0 - 0x0000)
struct WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsUsingGamepad)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Interactable, class UPrimitiveComponent* Primitive, class FText Description)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD");
static_assert(sizeof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD) == 0x0000C0, "Wrong size on WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, EntryPoint) == 0x000000, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000018, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput) == 0x000040, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_Event_MyGeometry) == 0x000050, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_Event_InDeltaTime) == 0x000088, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000090, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput) == 0x0000A0, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_DynamicCast_AsCON_Hacker) == 0x0000B0, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'WIDGET_SimpleHUD_C_ExecuteUbergraph_WIDGET_SimpleHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_SimpleHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_Tick) == 0x000004, "Wrong alignment on WIDGET_SimpleHUD_C_Tick");
static_assert(sizeof(WIDGET_SimpleHUD_C_Tick) == 0x00003C, "Wrong size on WIDGET_SimpleHUD_C_Tick");
static_assert(offsetof(WIDGET_SimpleHUD_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_SimpleHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_SimpleHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.EVENT_OnScanDataChanged
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged final
{
public:
	class UObject*                                Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Primitive;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged");
static_assert(sizeof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged) == 0x000078, "Wrong size on WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, Interactable) == 0x000000, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::Interactable' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, Primitive) == 0x000008, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::Primitive' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, Description) == 0x000010, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::Description' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000028, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_GetTargetShape_ShapeComponent) == 0x000040, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000050, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000058, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000061, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000068, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000070, "Member 'WIDGET_SimpleHUD_C_EVENT_OnScanDataChanged::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.SetCursorVisibilty
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_SimpleHUD_C_SetCursorVisibilty final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_SetCursorVisibilty) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_SetCursorVisibilty");
static_assert(sizeof(WIDGET_SimpleHUD_C_SetCursorVisibilty) == 0x000005, "Wrong size on WIDGET_SimpleHUD_C_SetCursorVisibilty");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetCursorVisibilty, Visible) == 0x000000, "Member 'WIDGET_SimpleHUD_C_SetCursorVisibilty::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetCursorVisibilty, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_SimpleHUD_C_SetCursorVisibilty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetCursorVisibilty, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_SimpleHUD_C_SetCursorVisibilty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetCursorVisibilty, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_SimpleHUD_C_SetCursorVisibilty::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetCursorVisibilty, K2Node_Select_Default) == 0x000004, "Member 'WIDGET_SimpleHUD_C_SetCursorVisibilty::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.UpdateMouseCursor
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_SimpleHUD_C_UpdateMouseCursor final
{
public:
	struct FVector2D                              CallFunc_GetVirtualMouseViewportLocation_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_UpdateMouseCursor) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_UpdateMouseCursor");
static_assert(sizeof(WIDGET_SimpleHUD_C_UpdateMouseCursor) == 0x000020, "Wrong size on WIDGET_SimpleHUD_C_UpdateMouseCursor");
static_assert(offsetof(WIDGET_SimpleHUD_C_UpdateMouseCursor, CallFunc_GetVirtualMouseViewportLocation_ReturnValue) == 0x000000, "Member 'WIDGET_SimpleHUD_C_UpdateMouseCursor::CallFunc_GetVirtualMouseViewportLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_UpdateMouseCursor, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WIDGET_SimpleHUD_C_UpdateMouseCursor::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_UpdateMouseCursor, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WIDGET_SimpleHUD_C_UpdateMouseCursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_UpdateMouseCursor, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000018, "Member 'WIDGET_SimpleHUD_C_UpdateMouseCursor::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.EVENT_OnUsingGamepadChanged
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged final
{
public:
	bool                                          IsUsingGamepad;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0038(0x0010)(NoDestructor)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged");
static_assert(sizeof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged) == 0x000058, "Wrong size on WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, IsUsingGamepad) == 0x000000, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue_2) == 0x000018, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetViewportSize_SizeX) == 0x000020, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetViewportSize_SizeY) == 0x000024, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000034, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, K2Node_MakeStruct_Anchors) == 0x000038, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetMainMenuWidget_Result) == 0x000048, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WIDGET_SimpleHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.GetSubtitleWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimpleHUD_C_GetSubtitleWidget final
{
public:
	class UWIDGET_Subtitles_C*                    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_GetSubtitleWidget) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_GetSubtitleWidget");
static_assert(sizeof(WIDGET_SimpleHUD_C_GetSubtitleWidget) == 0x000008, "Wrong size on WIDGET_SimpleHUD_C_GetSubtitleWidget");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetSubtitleWidget, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_GetSubtitleWidget::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.InvokeNavManager
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_SimpleHUD_C_InvokeNavManager final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_InvokeNavManager) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_InvokeNavManager");
static_assert(sizeof(WIDGET_SimpleHUD_C_InvokeNavManager) == 0x000004, "Wrong size on WIDGET_SimpleHUD_C_InvokeNavManager");
static_assert(offsetof(WIDGET_SimpleHUD_C_InvokeNavManager, InputState) == 0x000000, "Member 'WIDGET_SimpleHUD_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_InvokeNavManager, InputType) == 0x000001, "Member 'WIDGET_SimpleHUD_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_InvokeNavManager, Result) == 0x000002, "Member 'WIDGET_SimpleHUD_C_InvokeNavManager::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WIDGET_SimpleHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.GetCameraPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimpleHUD_C_GetCameraPanelWidget final
{
public:
	class UCameraPanelWidget*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_GetCameraPanelWidget");
static_assert(sizeof(WIDGET_SimpleHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong size on WIDGET_SimpleHUD_C_GetCameraPanelWidget");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetCameraPanelWidget, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_GetCameraPanelWidget::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.GetMainMenuWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimpleHUD_C_GetMainMenuWidget final
{
public:
	class UWIDGET_MainMenu_InGame_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_GetMainMenuWidget) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_GetMainMenuWidget");
static_assert(sizeof(WIDGET_SimpleHUD_C_GetMainMenuWidget) == 0x000008, "Wrong size on WIDGET_SimpleHUD_C_GetMainMenuWidget");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetMainMenuWidget, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_GetMainMenuWidget::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.GetTutorialWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimpleHUD_C_GetTutorialWidget final
{
public:
	class UWIDGET_TutorialMessage_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_GetTutorialWidget) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_GetTutorialWidget");
static_assert(sizeof(WIDGET_SimpleHUD_C_GetTutorialWidget) == 0x000008, "Wrong size on WIDGET_SimpleHUD_C_GetTutorialWidget");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetTutorialWidget, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_GetTutorialWidget::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.OnCharacterRespawned
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SimpleHUD_C_OnCharacterRespawned final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_OnCharacterRespawned) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_OnCharacterRespawned");
static_assert(sizeof(WIDGET_SimpleHUD_C_OnCharacterRespawned) == 0x000001, "Wrong size on WIDGET_SimpleHUD_C_OnCharacterRespawned");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnCharacterRespawned, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_OnCharacterRespawned::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.OnCharacterDied
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_SimpleHUD_C_OnCharacterDied final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_OnCharacterDied) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_OnCharacterDied");
static_assert(sizeof(WIDGET_SimpleHUD_C_OnCharacterDied) == 0x000030, "Wrong size on WIDGET_SimpleHUD_C_OnCharacterDied");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnCharacterDied, DamageInstance) == 0x000000, "Member 'WIDGET_SimpleHUD_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnCharacterDied, Result) == 0x000028, "Member 'WIDGET_SimpleHUD_C_OnCharacterDied::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.SetGameLockedForMenus
// 0x00A0 (0x00A0 - 0x0000)
struct WIDGET_SimpleHUD_C_SetGameLockedForMenus final
{
public:
	bool                                          LockGame;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0004(0x0010)(NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0030(0x0010)(NoDestructor)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_SetGameLockedForMenus) == 0x000008, "Wrong alignment on WIDGET_SimpleHUD_C_SetGameLockedForMenus");
static_assert(sizeof(WIDGET_SimpleHUD_C_SetGameLockedForMenus) == 0x0000A0, "Wrong size on WIDGET_SimpleHUD_C_SetGameLockedForMenus");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, LockGame) == 0x000000, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::LockGame' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, Result) == 0x000001, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, K2Node_MakeStruct_Anchors) == 0x000004, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_2) == 0x000028, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, K2Node_MakeStruct_Anchors_1) == 0x000030, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, K2Node_DynamicCast_AsCON_Hacker) == 0x000040, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_3) == 0x000050, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_IsUsingGamepad_Result) == 0x000058, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetViewportSize_SizeX) == 0x00005C, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetViewportSize_SizeY) == 0x000060, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_Divide_IntInt_ReturnValue) == 0x000064, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000068, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000070, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000078, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_4) == 0x000080, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_5) == 0x000088, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_GetPlayerController_ReturnValue_6) == 0x000090, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue) == 0x000098, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue_1) == 0x000099, "Member 'WIDGET_SimpleHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.OnStartedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SimpleHUD_C_OnStartedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_OnStartedLoadingGame");
static_assert(sizeof(WIDGET_SimpleHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong size on WIDGET_SimpleHUD_C_OnStartedLoadingGame");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnStartedLoadingGame, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_OnStartedLoadingGame::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.GetMFDState
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_SimpleHUD_C_GetMFDState final
{
public:
	bool                                          IsMFDOpen;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CurrentMFDTab;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimpleHUD_C_GetMFDState) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_GetMFDState");
static_assert(sizeof(WIDGET_SimpleHUD_C_GetMFDState) == 0x000002, "Wrong size on WIDGET_SimpleHUD_C_GetMFDState");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetMFDState, IsMFDOpen) == 0x000000, "Member 'WIDGET_SimpleHUD_C_GetMFDState::IsMFDOpen' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_GetMFDState, CurrentMFDTab) == 0x000001, "Member 'WIDGET_SimpleHUD_C_GetMFDState::CurrentMFDTab' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.OnFinishedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SimpleHUD_C_OnFinishedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_OnFinishedLoadingGame");
static_assert(sizeof(WIDGET_SimpleHUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong size on WIDGET_SimpleHUD_C_OnFinishedLoadingGame");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnFinishedLoadingGame, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_OnFinishedLoadingGame::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.OnPersistentMapMove
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SimpleHUD_C_OnPersistentMapMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_OnPersistentMapMove) == 0x000001, "Wrong alignment on WIDGET_SimpleHUD_C_OnPersistentMapMove");
static_assert(sizeof(WIDGET_SimpleHUD_C_OnPersistentMapMove) == 0x000001, "Wrong size on WIDGET_SimpleHUD_C_OnPersistentMapMove");
static_assert(offsetof(WIDGET_SimpleHUD_C_OnPersistentMapMove, Result) == 0x000000, "Member 'WIDGET_SimpleHUD_C_OnPersistentMapMove::Result' has a wrong offset!");

// Function WIDGET_SimpleHUD.WIDGET_SimpleHUD_C.SetHoldInteractionProgress
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimpleHUD_C_SetHoldInteractionProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimpleHUD_C_SetHoldInteractionProgress) == 0x000004, "Wrong alignment on WIDGET_SimpleHUD_C_SetHoldInteractionProgress");
static_assert(sizeof(WIDGET_SimpleHUD_C_SetHoldInteractionProgress) == 0x000008, "Wrong size on WIDGET_SimpleHUD_C_SetHoldInteractionProgress");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetHoldInteractionProgress, Progress) == 0x000000, "Member 'WIDGET_SimpleHUD_C_SetHoldInteractionProgress::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_SimpleHUD_C_SetHoldInteractionProgress, Result) == 0x000004, "Member 'WIDGET_SimpleHUD_C_SetHoldInteractionProgress::Result' has a wrong offset!");

}


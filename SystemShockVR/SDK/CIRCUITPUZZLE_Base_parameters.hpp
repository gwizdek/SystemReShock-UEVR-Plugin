#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CIRCUITPUZZLE_Base

#include "Basic.hpp"

#include "ENUM_GeneratedCircuitType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_PowerState_structs.hpp"
#include "STRUCT_CircuitPuzzle_PuzzleData_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_InteractResultType_structs.hpp"
#include "STRUCT_MeshTransform_structs.hpp"


namespace SDK::Params
{

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.ExecuteUbergraph_CIRCUITPUZZLE_Base
// 0x0008 (0x0008 - 0x0000)
struct CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPuzzleSolved_Result;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base) == 0x000004, "Wrong alignment on CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base) == 0x000008, "Wrong size on CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base, EntryPoint) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base, CallFunc_IsPuzzleSolved_Result) == 0x000004, "Member 'CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base::CallFunc_IsPuzzleSolved_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'CIRCUITPUZZLE_Base_C_ExecuteUbergraph_CIRCUITPUZZLE_Base::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.UserConstructionScript
// 0x0250 (0x0250 - 0x0000)
struct CIRCUITPUZZLE_Base_C_UserConstructionScript final
{
public:
	float                                         CellSize;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    CurrentCircuitMesh;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FirstCellLocation;                                 // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridDimensions_Result;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridDimensions_Result_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetCircuitMesh_MeshTransform;             // 0x0070(0x0060)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x01BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_UserConstructionScript) == 0x000010, "Wrong alignment on CIRCUITPUZZLE_Base_C_UserConstructionScript");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_UserConstructionScript) == 0x000250, "Wrong size on CIRCUITPUZZLE_Base_C_UserConstructionScript");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CellSize) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CellSize' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CurrentCircuitMesh) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CurrentCircuitMesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, FirstCellLocation) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::FirstCellLocation' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_GetGridDimensions_Result) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_GetGridDimensions_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_GetGridDimensions_Result_1) == 0x00002C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_GetGridDimensions_Result_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000034, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000044, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000048, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00004C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_GetCircuitMesh_MeshTransform) == 0x000070, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_GetCircuitMesh_MeshTransform' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0000D0, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000158, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00015C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000160, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000164, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000168, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00016C, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000170, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_GetChildrenComponents_Children) == 0x000178, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000188, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000198, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A0, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x0001B0, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0001BC, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000248, "Member 'CIRCUITPUZZLE_Base_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.GetCircuitMesh
// 0x1290 (0x1290 - 0x0000)
struct CIRCUITPUZZLE_Base_C_GetCircuitMesh final
{
public:
	class UCOMP_CircuitMesh_C*                    CircuitMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  MeshTransform;                                     // 0x0010(0x0060)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Connections;                                       // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00F0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0xF];                                      // 0x0151(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0160(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0xF];                                      // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x01D0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0240(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0xF];                                      // 0x02A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x02B0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0xF];                                      // 0x0311(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_6;         // 0x0320(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_6;    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0xF];                                      // 0x0381(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_7;         // 0x0390(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_7;    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0xF];                                      // 0x03F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_8;         // 0x0400(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_8;    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0xF];                                      // 0x0461(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_9;         // 0x0470(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_9;    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0xF];                                      // 0x04D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_10;        // 0x04E0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_10;   // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0xE];                                      // 0x0542(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_11;        // 0x0550(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_11;   // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0xF];                                      // 0x05B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_12;        // 0x05C0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_12;   // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_622[0xE];                                      // 0x0622(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_13;        // 0x0630(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_13;   // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_692[0xE];                                      // 0x0692(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_14;        // 0x06A0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_14;   // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702[0xE];                                      // 0x0702(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_15;        // 0x0710(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_15;   // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0773(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_774[0xC];                                      // 0x0774(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_16;        // 0x0780(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_16;   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0xF];                                      // 0x07E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_17;        // 0x07F0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_17;   // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0xF];                                      // 0x0851(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_18;        // 0x0860(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_18;   // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C2[0xE];                                      // 0x08C2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_19;        // 0x08D0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_19;   // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West;                             // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0932(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_933[0xD];                                      // 0x0933(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_20;        // 0x0940(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_20;   // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1[0xF];                                      // 0x09A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_21;        // 0x09B0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_21;   // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South;                           // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A13[0xD];                                      // 0x0A13(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_22;        // 0x0A20(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_22;   // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West_1;                           // 0x0A82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A83[0xD];                                      // 0x0A83(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_23;        // 0x0A90(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_23;   // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF1[0xF];                                      // 0x0AF1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_24;        // 0x0B00(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_24;   // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_1;                         // 0x0B62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0B63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East;                             // 0x0B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B65[0xB];                                      // 0x0B65(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_25;        // 0x0B70(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_25;   // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0xF];                                      // 0x0BD1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_26;        // 0x0BE0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_26;   // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West_2;                           // 0x0C41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_2;                         // 0x0C42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_1;                           // 0x0C43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C44[0xC];                                      // 0x0C44(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_27;        // 0x0C50(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_27;   // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNorth_North;                           // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB2[0xE];                                      // 0x0CB2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_28;        // 0x0CC0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_28;   // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D21[0xF];                                      // 0x0D21(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_29;        // 0x0D30(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_29;   // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_3;                         // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_2;                           // 0x0D92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D93[0xD];                                      // 0x0D93(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_30;        // 0x0DA0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_30;   // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_4;                         // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E02[0xE];                                      // 0x0E02(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_31;        // 0x0E10(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_31;   // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_3;                           // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E72[0xE];                                      // 0x0E72(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_32;        // 0x0E80(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_32;   // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNorth_North_1;                         // 0x0EE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE2[0xE];                                      // 0x0EE2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_33;        // 0x0EF0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_33;   // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_5;                         // 0x0F51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_4;                           // 0x0F52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNorth_North_2;                         // 0x0F53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F54[0xC];                                      // 0x0F54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_34;        // 0x0F60(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_34;   // 0x0FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0FC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC2[0x2];                                      // 0x0FC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWest_West_3;                           // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC9[0x3];                                      // 0x0FC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0FCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSouth_South_6;                         // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD1[0x3];                                      // 0x0FD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0FD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD8[0x8];                                      // 0x0FD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_35;        // 0x0FE0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_35;   // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1041[0x3];                                     // 0x1041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEast_East_5;                           // 0x1048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1049[0x3];                                     // 0x1049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x104C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNorth_North_3;                         // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1051[0xF];                                     // 0x1051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_36;        // 0x1060(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_36;   // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West_4;                           // 0x10C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_7;                         // 0x10C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C3[0xD];                                     // 0x10C3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_37;        // 0x10D0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_37;   // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_6;                           // 0x1131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1132[0xE];                                     // 0x1132(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_38;        // 0x1140(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_38;   // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNorth_North_4;                         // 0x11A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West_5;                           // 0x11A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSouth_South_8;                         // 0x11A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A4[0xC];                                     // 0x11A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_39;        // 0x11B0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_39;   // 0x1210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_7;                           // 0x1211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1212[0xE];                                     // 0x1212(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetDataTableRowFromName_OutRow_40;        // 0x1220(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_40;   // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNorth_North_5;                         // 0x1281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_GetCircuitMesh) == 0x000010, "Wrong alignment on CIRCUITPUZZLE_Base_C_GetCircuitMesh");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_GetCircuitMesh) == 0x001290, "Wrong size on CIRCUITPUZZLE_Base_C_GetCircuitMesh");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CircuitMesh) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CircuitMesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, MeshTransform) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::MeshTransform' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, Connections) == 0x000070, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::Connections' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, Temp_int_Variable) == 0x000074, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000F0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000150, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000160, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0001C0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0001D0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000230, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, Temp_int_Variable_1) == 0x000234, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, Temp_int_Variable_2) == 0x000238, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000240, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x0002A0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x0002B0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x000310, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_6) == 0x000320, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_6) == 0x000380, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_7) == 0x000390, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_7) == 0x0003F0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_8) == 0x000400, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_8) == 0x000460, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_9) == 0x000470, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_9' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_9) == 0x0004D0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_10) == 0x0004E0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_10' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_10) == 0x000540, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000541, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_11) == 0x000550, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_11' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_11) == 0x0005B0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_12) == 0x0005C0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_12' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_12) == 0x000620, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000621, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_13) == 0x000630, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_13' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_13) == 0x000690, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000691, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_14) == 0x0006A0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_14' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_14) == 0x000700, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000701, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_15) == 0x000710, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_15' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_15) == 0x000770, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000771, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000772, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000773, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_16) == 0x000780, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_16' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_16) == 0x0007E0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_17) == 0x0007F0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_17' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_17) == 0x000850, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_18) == 0x000860, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_18' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_18) == 0x0008C0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0008C1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_19) == 0x0008D0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_19' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_19) == 0x000930, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West) == 0x000931, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000932, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_20) == 0x000940, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_20' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_20) == 0x0009A0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_21) == 0x0009B0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_21' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_21) == 0x000A10, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South) == 0x000A11, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000A12, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_22) == 0x000A20, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_22' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_22) == 0x000A80, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000A81, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West_1) == 0x000A82, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_23) == 0x000A90, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_23' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_23) == 0x000AF0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_24) == 0x000B00, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_24' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_24) == 0x000B60, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000B61, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_1) == 0x000B62, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000B63, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East) == 0x000B64, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_25) == 0x000B70, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_25' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_25) == 0x000BD0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_26) == 0x000BE0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_26' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_26) == 0x000C40, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West_2) == 0x000C41, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_2) == 0x000C42, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_1) == 0x000C43, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_27) == 0x000C50, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_27' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_27) == 0x000CB0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North) == 0x000CB1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_28) == 0x000CC0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_28' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_28) == 0x000D20, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_29) == 0x000D30, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_29' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_29) == 0x000D90, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_3) == 0x000D91, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_2) == 0x000D92, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_30) == 0x000DA0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_30' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_30) == 0x000E00, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_4) == 0x000E01, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_31) == 0x000E10, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_31' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_31) == 0x000E70, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_3) == 0x000E71, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_32) == 0x000E80, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_32' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_32) == 0x000EE0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North_1) == 0x000EE1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_33) == 0x000EF0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_33' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_33) == 0x000F50, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_5) == 0x000F51, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_4) == 0x000F52, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North_2) == 0x000F53, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_34) == 0x000F60, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_34' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_34) == 0x000FC0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, K2Node_SwitchInteger_CmpSuccess) == 0x000FC1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, Temp_int_Variable_3) == 0x000FC4, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West_3) == 0x000FC8, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000FCC, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_6) == 0x000FD0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000FD4, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_35) == 0x000FE0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_35' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_35) == 0x001040, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_Add_IntInt_ReturnValue_2) == 0x001044, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_5) == 0x001048, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_Add_IntInt_ReturnValue_3) == 0x00104C, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North_3) == 0x001050, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_36) == 0x001060, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_36' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_36) == 0x0010C0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West_4) == 0x0010C1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_7) == 0x0010C2, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_37) == 0x0010D0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_37' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_37) == 0x001130, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_6) == 0x001131, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_38) == 0x001140, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_38' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_38) == 0x0011A0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North_4) == 0x0011A1, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetWest_West_5) == 0x0011A2, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetWest_West_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetSouth_South_8) == 0x0011A3, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetSouth_South_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_39) == 0x0011B0, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_39' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_39) == 0x001210, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetEast_East_7) == 0x001211, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetEast_East_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_OutRow_40) == 0x001220, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_OutRow_40' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetDataTableRowFromName_ReturnValue_40) == 0x001280, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetDataTableRowFromName_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, CallFunc_GetNorth_North_5) == 0x001281, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::CallFunc_GetNorth_North_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetCircuitMesh, K2Node_SwitchEnum_CmpSuccess) == 0x001282, "Member 'CIRCUITPUZZLE_Base_C_GetCircuitMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.GetConnectedNeighborCells
// 0x00F8 (0x00F8 - 0x0000)
struct CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells final
{
public:
	class UCOMP_CircuitMesh_C*                    CircuitMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCOMP_CircuitMesh_C*>            Neighbors;                                         // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UCOMP_CircuitMesh_C*                    TargetNeighbor;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetNeighborIndex;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCOMP_CircuitMesh_C*>            ReturnCircuits;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridDimensions_Result;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEast_East;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ColumnRowToIndex_Index;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetWest_West;                             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNorth_North;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSouth_South;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ColumnRowToIndex_Index_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWest_West_1;                           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item_2;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh_2;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ColumnRowToIndex_Index_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEast_East_1;                           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSouth_South_1;                         // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item_3;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh_3;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ColumnRowToIndex_Index_3;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNorth_North_1;                         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells) == 0x0000F8, "Wrong size on CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CircuitMesh) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CircuitMesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, Neighbors) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::Neighbors' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, TargetNeighbor) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::TargetNeighbor' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, TargetNeighborIndex) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::TargetNeighborIndex' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, ReturnCircuits) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::ReturnCircuits' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00003C, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetGridDimensions_Result) == 0x000044, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetGridDimensions_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetEast_East) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetEast_East' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Get_Item) == 0x000058, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000060, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000069, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006A, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_BooleanAND_ReturnValue) == 0x00006B, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00006C, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_ColumnRowToIndex_Index) == 0x000070, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_ColumnRowToIndex_Index' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetWest_West) == 0x000075, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetWest_West' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000076, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetNorth_North) == 0x00007C, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetNorth_North' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1) == 0x000088, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000094, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000099, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_BooleanAND_ReturnValue_1) == 0x00009A, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00009C, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetSouth_South) == 0x0000A0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetSouth_South' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_ColumnRowToIndex_Index_1) == 0x0000A4, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_ColumnRowToIndex_Index_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Add_ReturnValue_2) == 0x0000A8, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetWest_West_1) == 0x0000AC, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetWest_West_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Get_Item_2) == 0x0000B0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_AsCOMP_Circuit_Mesh_2) == 0x0000B8, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_AsCOMP_Circuit_Mesh_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C1, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000C2, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C3, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_ColumnRowToIndex_Index_2) == 0x0000C8, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_ColumnRowToIndex_Index_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetEast_East_1) == 0x0000CD, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetEast_East_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CE, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Add_ReturnValue_3) == 0x0000D0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetSouth_South_1) == 0x0000D4, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetSouth_South_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Array_Get_Item_3) == 0x0000D8, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_AsCOMP_Circuit_Mesh_3) == 0x0000E0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_AsCOMP_Circuit_Mesh_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000E9, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0000EA, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_BooleanAND_ReturnValue_3) == 0x0000EB, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_ColumnRowToIndex_Index_3) == 0x0000F0, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_ColumnRowToIndex_Index_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells, CallFunc_GetNorth_North_1) == 0x0000F4, "Member 'CIRCUITPUZZLE_Base_C_GetConnectedNeighborCells::CallFunc_GetNorth_North_1' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.ColumnRowToIndex
// 0x0018 (0x0018 - 0x0000)
struct CIRCUITPUZZLE_Base_C_ColumnRowToIndex final
{
public:
	int32                                         Column;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridDimensions_Result;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex) == 0x000004, "Wrong alignment on CIRCUITPUZZLE_Base_C_ColumnRowToIndex");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex) == 0x000018, "Wrong size on CIRCUITPUZZLE_Base_C_ColumnRowToIndex");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, Column) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::Column' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, Row) == 0x000004, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::Row' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, Index_0) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::Index_0' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, CallFunc_GetGridDimensions_Result) == 0x00000C, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::CallFunc_GetGridDimensions_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, CallFunc_Multiply_IntInt_ReturnValue) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_ColumnRowToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'CIRCUITPUZZLE_Base_C_ColumnRowToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.EVENT_OnTargetStateChanged
// 0x0010 (0x0010 - 0x0000)
struct CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged final
{
public:
	class UCOMP_CircuitMesh_C*                    Circuit;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerState                               PowerState;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJunctionBoxFunctional_Result;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged) == 0x000010, "Wrong size on CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged, Circuit) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged::Circuit' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged, PowerState) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged::PowerState' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged, CallFunc_IsJunctionBoxFunctional_Result) == 0x000009, "Member 'CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged::CallFunc_IsJunctionBoxFunctional_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'CIRCUITPUZZLE_Base_C_EVENT_OnTargetStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.EvaluateCellPower
// 0x0060 (0x0060 - 0x0000)
struct CIRCUITPUZZLE_Base_C_EvaluateCellPower final
{
public:
	TArray<class UCOMP_CircuitMesh_C*>            PowerCells;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_EvaluateCellPower) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_EvaluateCellPower");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_EvaluateCellPower) == 0x000060, "Wrong size on CIRCUITPUZZLE_Base_C_EvaluateCellPower");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, PowerCells) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::PowerCells' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, Temp_int_Array_Index_Variable) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Array_Get_Item) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000030, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_EvaluateCellPower, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'CIRCUITPUZZLE_Base_C_EvaluateCellPower::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.RegisterCircuitCellComponents
// 0x0048 (0x0048 - 0x0000)
struct CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ColumnRowToIndex_Index;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents) == 0x000048, "Wrong size on CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents, CallFunc_ColumnRowToIndex_Index) == 0x000044, "Member 'CIRCUITPUZZLE_Base_C_RegisterCircuitCellComponents::CallFunc_ColumnRowToIndex_Index' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.InteractWithPuzzlePrimitive
// 0x00B8 (0x00B8 - 0x0000)
struct CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractResultType                       Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ResultText;                                        // 0x0010(0x0018)(Parm, OutParm)
	class UCOMP_CircuitMesh_C*                    CircuitCell;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UCOMP_CircuitMesh_C*>              K2Node_MakeSet_Set;                                // 0x0058(0x0050)(ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive) == 0x0000B8, "Wrong size on CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, CursorPrimitive) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, Result) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, ResultText) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::ResultText' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, CircuitCell) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::CircuitCell' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, K2Node_DynamicCast_AsGI_Single_Player) == 0x000048, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, K2Node_MakeSet_Set) == 0x000058, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A8, "Member 'CIRCUITPUZZLE_Base_C_InteractWithPuzzlePrimitive::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.GetPuzzleShape
// 0x00E0 (0x00E0 - 0x0000)
struct CIRCUITPUZZLE_Base_C_GetPuzzleShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        TargetShape;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCellFocusable_Result;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_GetPuzzleShape) == 0x000010, "Wrong alignment on CIRCUITPUZZLE_Base_C_GetPuzzleShape");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_GetPuzzleShape) == 0x0000E0, "Wrong size on CIRCUITPUZZLE_Base_C_GetPuzzleShape");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, CursorPrimitive) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, TargetShape) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::TargetShape' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, CallFunc_IsCellFocusable_Result) == 0x000019, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::CallFunc_IsCellFocusable_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetPuzzleShape, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_GetPuzzleShape::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.CellToIndex
// 0x0030 (0x0030 - 0x0000)
struct CIRCUITPUZZLE_Base_C_CellToIndex final
{
public:
	class UCOMP_CircuitMesh_C*                    CircuitCell;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_CellToIndex) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_CellToIndex");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_CellToIndex) == 0x000030, "Wrong size on CIRCUITPUZZLE_Base_C_CellToIndex");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CircuitCell) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CircuitCell' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, Index_0) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::Index_0' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CurrentIndex) == 0x00000C, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_CellToIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002D, "Member 'CIRCUITPUZZLE_Base_C_CellToIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.InitializePuzzle
// 0x0001 (0x0001 - 0x0000)
struct CIRCUITPUZZLE_Base_C_InitializePuzzle final
{
public:
	bool                                          CallFunc_IsPuzzleSolved_Result;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_InitializePuzzle) == 0x000001, "Wrong alignment on CIRCUITPUZZLE_Base_C_InitializePuzzle");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_InitializePuzzle) == 0x000001, "Wrong size on CIRCUITPUZZLE_Base_C_InitializePuzzle");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_InitializePuzzle, CallFunc_IsPuzzleSolved_Result) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_InitializePuzzle::CallFunc_IsPuzzleSolved_Result' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.GetModifiedCellDirections
// 0x0044 (0x0044 - 0x0000)
struct CIRCUITPUZZLE_Base_C_GetModifiedCellDirections final
{
public:
	uint8                                         Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Rotations;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Directions;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrappedDirectionBits;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirectionBits;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftRight_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections) == 0x000004, "Wrong alignment on CIRCUITPUZZLE_Base_C_GetModifiedCellDirections");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections) == 0x000044, "Wrong size on CIRCUITPUZZLE_Base_C_GetModifiedCellDirections");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, Type) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::Type' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, Rotations) == 0x000001, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::Rotations' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, Directions) == 0x000004, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::Directions' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, WrappedDirectionBits) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::WrappedDirectionBits' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, DirectionBits) == 0x00000C, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::DirectionBits' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BitShiftRight_ReturnValue) == 0x000014, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BitShiftRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001B, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001C, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001D, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00001E, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00001F, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000020, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BitShiftLeft_ReturnValue) == 0x000024, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_Not_Int_ReturnValue) == 0x000028, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_Not_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_And_IntInt_ReturnValue) == 0x00002C, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_Or_IntInt_ReturnValue) == 0x000030, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00003C, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00003D, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_2) == 0x00003E, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_3) == 0x00003F, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_4) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_5) == 0x000041, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_6) == 0x000042, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_GetModifiedCellDirections, CallFunc_BooleanOR_ReturnValue_7) == 0x000043, "Member 'CIRCUITPUZZLE_Base_C_GetModifiedCellDirections::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");

// Function CIRCUITPUZZLE_Base.CIRCUITPUZZLE_Base_C.LoadPuzzleFromDataTable
// 0x00F8 (0x00F8 - 0x0000)
struct CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable final
{
public:
	ENUM_GeneratedCircuitType                     CircuitCellType;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    CurrentCircuitComp;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ModifiedCellIndex;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCellIndex;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_CircuitPuzzle_PuzzleData       PuzzleData;                                        // 0x0018(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_2;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_3;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_4;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_5;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_6;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_7;                              // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_8;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_9;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_10;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_11;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_12;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetCellLocationFromIndex_CellLocation;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCOMP_CircuitMesh_C* Circuit, ENUM_PowerState PowerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	ENUM_GeneratedCircuitType                     Temp_byte_Variable_13;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGridDimensions_Result;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_14;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGridDimensions_Result_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Array_Get_Item_2;                         // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetModifiedCellDirections_Directions;     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GeneratedCircuitType                     K2Node_Select_Default;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetPuzzleRowToUse_PuzzleRow;              // 0x00A8(0x0010)(NoDestructor)
	struct FIntPoint                              CallFunc_GetCellLocationFromIndex_CellLocation_1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_CircuitPuzzle_PuzzleData       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCellIndexFromLocation_Result;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable) == 0x000008, "Wrong alignment on CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable");
static_assert(sizeof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable) == 0x0000F8, "Wrong size on CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CircuitCellType) == 0x000000, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CircuitCellType' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CurrentCircuitComp) == 0x000008, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CurrentCircuitComp' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, ModifiedCellIndex) == 0x000010, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::ModifiedCellIndex' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CurrentCellIndex) == 0x000014, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CurrentCellIndex' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, PuzzleData) == 0x000018, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::PuzzleData' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable) == 0x000038, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_1) == 0x000039, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_2) == 0x00003A, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_3) == 0x00003B, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_4) == 0x00003C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_5) == 0x00003D, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_6) == 0x00003E, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_7) == 0x00003F, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_8) == 0x000040, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_9) == 0x000041, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_10) == 0x000042, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_11) == 0x000043, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_12) == 0x000044, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_int_Variable) == 0x000048, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetCellLocationFromIndex_CellLocation) == 0x000050, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetCellLocationFromIndex_CellLocation' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_13) == 0x00006C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Array_Get_Item) == 0x000070, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x000078, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetGridDimensions_Result) == 0x000084, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetGridDimensions_Result' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, Temp_byte_Variable_14) == 0x000088, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetGridDimensions_Result_1) == 0x00008C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetGridDimensions_Result_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Multiply_IntInt_ReturnValue) == 0x000090, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Subtract_IntInt_ReturnValue) == 0x000094, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000099, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Array_Get_Item_2) == 0x00009A, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetModifiedCellDirections_Directions) == 0x00009C, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetModifiedCellDirections_Directions' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_Select_Default) == 0x0000A0, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetPuzzleRowToUse_PuzzleRow) == 0x0000A8, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetPuzzleRowToUse_PuzzleRow' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetCellLocationFromIndex_CellLocation_1) == 0x0000B8, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetCellLocationFromIndex_CellLocation_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E8, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, K2Node_MakeStruct_IntPoint) == 0x0000EC, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable, CallFunc_GetCellIndexFromLocation_Result) == 0x0000F4, "Member 'CIRCUITPUZZLE_Base_C_LoadPuzzleFromDataTable::CallFunc_GetCellIndexFromLocation_Result' has a wrong offset!");

}


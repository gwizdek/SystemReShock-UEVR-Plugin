#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_TurboBoots_Base

#include "Basic.hpp"

#include "HARDWARE_TurboBoots_Base_classes.hpp"
#include "HARDWARE_TurboBoots_Base_parameters.hpp"


namespace SDK
{

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::OnTurboMechanismStateChanged__DelegateSignature(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "OnTurboMechanismStateChanged__DelegateSignature");

	Params::HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.ExecuteUbergraph_HARDWARE_TurboBoots_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TurboBoots_Base_C::ExecuteUbergraph_HARDWARE_TurboBoots_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "ExecuteUbergraph_HARDWARE_TurboBoots_Base");

	Params::HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetActiveVersionNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   VersionNumber                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TurboBoots_Base_C::GetActiveVersionNumber(int32* VersionNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "GetActiveVersionNumber");

	Params::HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VersionNumber != nullptr)
		*VersionNumber = Parms.VersionNumber;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.UpdateHardwareState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::UpdateHardwareState(bool IsEnabled, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "UpdateHardwareState");

	Params::HARDWARE_TurboBoots_Base_C_UpdateHardwareState Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.CanActivateTurboMechanism
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::CanActivateTurboMechanism(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "CanActivateTurboMechanism");

	Params::HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetEnergyDrainTickRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   VersionNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TurboBoots_Base_C::GetEnergyDrainTickRate(int32 VersionNumber, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "GetEnergyDrainTickRate");

	Params::HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate Parms{};

	Parms.VersionNumber = VersionNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.AddTurboElapsedTime
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TurboBoots_Base_C::AddTurboElapsedTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "AddTurboElapsedTime");

	Params::HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.ActivateTurboMechanism
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Version                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::ActivateTurboMechanism(int32 Version, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "ActivateTurboMechanism");

	Params::HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism Parms{};

	Parms.Version = Version;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.EVENT_OnEnergyDepleted
// (Private, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TurboBoots_Base_C::EVENT_OnEnergyDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "EVENT_OnEnergyDepleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.DeactivateTurboMechanism
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VersionNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::DeactivateTurboMechanism(int32 VersionNumber, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "DeactivateTurboMechanism");

	Params::HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism Parms{};

	Parms.VersionNumber = VersionNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismActivated
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VersionNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::OnTurboMechanismActivated(int32 VersionNumber, bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "OnTurboMechanismActivated");

	Params::HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated Parms{};

	Parms.VersionNumber = VersionNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismDeactivated
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VersionNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Handled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::OnTurboMechanismDeactivated(int32 VersionNumber, bool* Handled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "OnTurboMechanismDeactivated");

	Params::HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated Parms{};

	Parms.VersionNumber = VersionNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Handled != nullptr)
		*Handled = Parms.Handled;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboBootTick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TurboElapsedTime_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TurboBoots_Base_C::OnTurboBootTick(float DeltaTime, float TurboElapsedTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "OnTurboBootTick");

	Params::HARDWARE_TurboBoots_Base_C_OnTurboBootTick Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.TurboElapsedTime_0 = TurboElapsedTime_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.EVENT_OnTurboBootTick
// (Private, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TurboBoots_Base_C::EVENT_OnTurboBootTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "EVENT_OnTurboBootTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetHardwareFeatures
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSTRUCT_HardwareFeature>  Result                                                 (Parm, OutParm)

void UHARDWARE_TurboBoots_Base_C::GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "GetHardwareFeatures");

	Params::HARDWARE_TurboBoots_Base_C_GetHardwareFeatures Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryStartTurboTick
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::TryStartTurboTick(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "TryStartTurboTick");

	Params::HARDWARE_TurboBoots_Base_C_TryStartTurboTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryPlayTurboBootsSound
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLooping                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TurboBoots_Base_C::TryPlayTurboBootsSound(class USoundCue* SoundCue, bool IsLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "TryPlayTurboBootsSound");

	Params::HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound Parms{};

	Parms.SoundCue = SoundCue;
	Parms.IsLooping = IsLooping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryStopTurboBootsLoopingSound
// (Protected, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TurboBoots_Base_C::TryStopTurboBootsLoopingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "TryStopTurboBootsLoopingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TurboBoots_Base_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TurboBoots_Base_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}


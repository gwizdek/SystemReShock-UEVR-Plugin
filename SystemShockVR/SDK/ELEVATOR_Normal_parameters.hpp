#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ELEVATOR_Normal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUC_ElevatorInfo_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"


namespace SDK::Params
{

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.UpdateControlLockState
// 0x0008 (0x0008 - 0x0000)
struct ELEVATOR_Normal_C_UpdateControlLockState final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_UpdateControlLockState) == 0x000004, "Wrong alignment on ELEVATOR_Normal_C_UpdateControlLockState");
static_assert(sizeof(ELEVATOR_Normal_C_UpdateControlLockState) == 0x000008, "Wrong size on ELEVATOR_Normal_C_UpdateControlLockState");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateControlLockState, IsLocked) == 0x000000, "Member 'ELEVATOR_Normal_C_UpdateControlLockState::IsLocked' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateControlLockState, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'ELEVATOR_Normal_C_UpdateControlLockState::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.UpdateEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct ELEVATOR_Normal_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on ELEVATOR_Normal_C_UpdateEmissiveStrength");
static_assert(sizeof(ELEVATOR_Normal_C_UpdateEmissiveStrength) == 0x00000C, "Wrong size on ELEVATOR_Normal_C_UpdateEmissiveStrength");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'ELEVATOR_Normal_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'ELEVATOR_Normal_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000008, "Member 'ELEVATOR_Normal_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.OnCinematicLevelLoaded
// 0x0018 (0x0018 - 0x0000)
struct ELEVATOR_Normal_C_OnCinematicLevelLoaded final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_OnCinematicLevelLoaded) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_OnCinematicLevelLoaded");
static_assert(sizeof(ELEVATOR_Normal_C_OnCinematicLevelLoaded) == 0x000018, "Wrong size on ELEVATOR_Normal_C_OnCinematicLevelLoaded");
static_assert(offsetof(ELEVATOR_Normal_C_OnCinematicLevelLoaded, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ELEVATOR_Normal_C_OnCinematicLevelLoaded::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_OnCinematicLevelLoaded, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'ELEVATOR_Normal_C_OnCinematicLevelLoaded::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.CreateCinematicMoveControl
// 0x00B0 (0x00B0 - 0x0000)
struct ELEVATOR_Normal_C_CreateCinematicMoveControl final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_WorldMove_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Normal_C_CreateCinematicMoveControl) == 0x000010, "Wrong alignment on ELEVATOR_Normal_C_CreateCinematicMoveControl");
static_assert(sizeof(ELEVATOR_Normal_C_CreateCinematicMoveControl) == 0x0000B0, "Wrong size on ELEVATOR_Normal_C_CreateCinematicMoveControl");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_IsPlayerControlled_ReturnValue) == 0x000001, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakTransform_Location) == 0x000040, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_RegisterMoveControl_Result) == 0x000064, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Roll) == 0x00007C, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Pitch) == 0x000080, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Yaw) == 0x000084, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Roll_1) == 0x000094, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Pitch_1) == 0x000098, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_BreakRotator_Yaw_1) == 0x00009C, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_CreateCinematicMoveControl, CallFunc_MakeRotator_ReturnValue) == 0x0000A0, "Member 'ELEVATOR_Normal_C_CreateCinematicMoveControl::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.UpdateCinematicBroadcast
// 0x0030 (0x0030 - 0x0000)
struct ELEVATOR_Normal_C_UpdateCinematicBroadcast final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_BroadcastScreen_C*              BroadcastWidget;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_BroadcastScreen_C*              K2Node_DynamicCast_AsWIDGET_Broadcast_Screen;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateContent_IsFinished;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Normal_C_UpdateCinematicBroadcast) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_UpdateCinematicBroadcast");
static_assert(sizeof(ELEVATOR_Normal_C_UpdateCinematicBroadcast) == 0x000030, "Wrong size on ELEVATOR_Normal_C_UpdateCinematicBroadcast");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, DeltaTime) == 0x000000, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::DeltaTime' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, BroadcastWidget) == 0x000008, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::BroadcastWidget' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000018, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, K2Node_DynamicCast_AsWIDGET_Broadcast_Screen) == 0x000020, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::K2Node_DynamicCast_AsWIDGET_Broadcast_Screen' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCinematicBroadcast, CallFunc_UpdateContent_IsFinished) == 0x00002A, "Member 'ELEVATOR_Normal_C_UpdateCinematicBroadcast::CallFunc_UpdateContent_IsFinished' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.PlayCinematicBroadcast
// 0x0080 (0x0080 - 0x0000)
struct ELEVATOR_Normal_C_PlayCinematicBroadcast final
{
public:
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_BroadcastScreen_C*              K2Node_DynamicCast_AsWIDGET_Broadcast_Screen;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDrawSize_ReturnValue;                  // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBROADCAST_Base_C*                      CallFunc_CreateBroadcast_Result;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_BroadcastScreen_C*              CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_PlayCinematicBroadcast) == 0x000010, "Wrong alignment on ELEVATOR_Normal_C_PlayCinematicBroadcast");
static_assert(sizeof(ELEVATOR_Normal_C_PlayCinematicBroadcast) == 0x000080, "Wrong size on ELEVATOR_Normal_C_PlayCinematicBroadcast");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000000, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, K2Node_DynamicCast_AsWIDGET_Broadcast_Screen) == 0x000008, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::K2Node_DynamicCast_AsWIDGET_Broadcast_Screen' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_GetDrawSize_ReturnValue) == 0x000014, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_GetDrawSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_CreateBroadcast_Result) == 0x000028, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_CreateBroadcast_Result' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_PlayCinematicBroadcast, CallFunc_Create_ReturnValue) == 0x000070, "Member 'ELEVATOR_Normal_C_PlayCinematicBroadcast::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.SetElevatorTargetLevel
// 0x0010 (0x0010 - 0x0000)
struct ELEVATOR_Normal_C_SetElevatorTargetLevel final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewTargetLevel;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_SetElevatorTargetLevel) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_SetElevatorTargetLevel");
static_assert(sizeof(ELEVATOR_Normal_C_SetElevatorTargetLevel) == 0x000010, "Wrong size on ELEVATOR_Normal_C_SetElevatorTargetLevel");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorTargetLevel, CursorPrimitive) == 0x000000, "Member 'ELEVATOR_Normal_C_SetElevatorTargetLevel::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorTargetLevel, NewTargetLevel) == 0x000008, "Member 'ELEVATOR_Normal_C_SetElevatorTargetLevel::NewTargetLevel' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.GetControlsMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct ELEVATOR_Normal_C_GetControlsMeshComponent final
{
public:
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_GetControlsMeshComponent) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_GetControlsMeshComponent");
static_assert(sizeof(ELEVATOR_Normal_C_GetControlsMeshComponent) == 0x000008, "Wrong size on ELEVATOR_Normal_C_GetControlsMeshComponent");
static_assert(offsetof(ELEVATOR_Normal_C_GetControlsMeshComponent, MeshComponent) == 0x000000, "Member 'ELEVATOR_Normal_C_GetControlsMeshComponent::MeshComponent' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.SetElevatorEnabled
// 0x0005 (0x0005 - 0x0000)
struct ELEVATOR_Normal_C_SetElevatorEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_SetElevatorEnabled) == 0x000001, "Wrong alignment on ELEVATOR_Normal_C_SetElevatorEnabled");
static_assert(sizeof(ELEVATOR_Normal_C_SetElevatorEnabled) == 0x000005, "Wrong size on ELEVATOR_Normal_C_SetElevatorEnabled");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorEnabled, Enabled) == 0x000000, "Member 'ELEVATOR_Normal_C_SetElevatorEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorEnabled, Temp_bool_Variable) == 0x000001, "Member 'ELEVATOR_Normal_C_SetElevatorEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorEnabled, Temp_byte_Variable) == 0x000002, "Member 'ELEVATOR_Normal_C_SetElevatorEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorEnabled, Temp_byte_Variable_1) == 0x000003, "Member 'ELEVATOR_Normal_C_SetElevatorEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorEnabled, K2Node_Select_Default) == 0x000004, "Member 'ELEVATOR_Normal_C_SetElevatorEnabled::K2Node_Select_Default' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.SetElevatorVisibility
// 0x0001 (0x0001 - 0x0000)
struct ELEVATOR_Normal_C_SetElevatorVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Normal_C_SetElevatorVisibility) == 0x000001, "Wrong alignment on ELEVATOR_Normal_C_SetElevatorVisibility");
static_assert(sizeof(ELEVATOR_Normal_C_SetElevatorVisibility) == 0x000001, "Wrong size on ELEVATOR_Normal_C_SetElevatorVisibility");
static_assert(offsetof(ELEVATOR_Normal_C_SetElevatorVisibility, VisibilityState) == 0x000000, "Member 'ELEVATOR_Normal_C_SetElevatorVisibility::VisibilityState' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.UpdateCurrentScreenFloorPosition
// 0x0040 (0x0040 - 0x0000)
struct ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDeckSymbolByLevelName_DeckSymbol;      // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition");
static_assert(sizeof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition) == 0x000040, "Wrong size on ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_GetCurrentLevelName_Result) == 0x00001C, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_GetDeckSymbolByLevelName_DeckSymbol) == 0x000028, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_GetDeckSymbolByLevelName_DeckSymbol' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition, CallFunc_Conv_StringToInt_ReturnValue) == 0x000038, "Member 'ELEVATOR_Normal_C_UpdateCurrentScreenFloorPosition::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.SetScreenFloorPosition
// 0x0018 (0x0018 - 0x0000)
struct ELEVATOR_Normal_C_SetScreenFloorPosition final
{
public:
	int32                                         DeckNumber;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Normal_C_SetScreenFloorPosition) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_SetScreenFloorPosition");
static_assert(sizeof(ELEVATOR_Normal_C_SetScreenFloorPosition) == 0x000018, "Wrong size on ELEVATOR_Normal_C_SetScreenFloorPosition");
static_assert(offsetof(ELEVATOR_Normal_C_SetScreenFloorPosition, DeckNumber) == 0x000000, "Member 'ELEVATOR_Normal_C_SetScreenFloorPosition::DeckNumber' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetScreenFloorPosition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'ELEVATOR_Normal_C_SetScreenFloorPosition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetScreenFloorPosition, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'ELEVATOR_Normal_C_SetScreenFloorPosition::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_SetScreenFloorPosition, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ELEVATOR_Normal_C_SetScreenFloorPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.InitializeElevatorControls
// 0x02C0 (0x02C0 - 0x0000)
struct ELEVATOR_Normal_C_InitializeElevatorControls final
{
public:
	class FString                                 DeckSymbol;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonCount;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUC_ElevatorInfo                    ElevatorInfo;                                      // 0x0018(0x0038)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	class FName                                   CallFunc_GetLevelNameByDeckSymbol_LevelName;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FSTRUCT_LevelInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0200(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0210(0x0018)()
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable_2;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_2;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_2;                    // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_3;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUC_ElevatorInfo                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0280(0x0038)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_InitializeElevatorControls) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_InitializeElevatorControls");
static_assert(sizeof(ELEVATOR_Normal_C_InitializeElevatorControls) == 0x0002C0, "Wrong size on ELEVATOR_Normal_C_InitializeElevatorControls");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, DeckSymbol) == 0x000000, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::DeckSymbol' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, ButtonIndex) == 0x000010, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::ButtonIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, ButtonCount) == 0x000014, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::ButtonCount' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, ElevatorInfo) == 0x000018, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::ElevatorInfo' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_bool_Variable) == 0x000050, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_byte_Variable) == 0x000051, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_byte_Variable_1) == 0x000052, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_int_Variable) == 0x000054, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_object_Variable) == 0x000058, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_object_Variable_1) == 0x000060, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_object_Variable_2) == 0x000068, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_object_Variable_3) == 0x000070, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_int_Variable_1) == 0x000078, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_IsEmpty_ReturnValue) == 0x000084, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Not_PreBool_ReturnValue) == 0x000085, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_Select_Default) == 0x000086, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_GetLevelNameByDeckSymbol_LevelName) == 0x0000A0, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_GetLevelNameByDeckSymbol_LevelName' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Conv_StringToFloat_ReturnValue) == 0x0001B4, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B8, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001F8, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_MakeArray_Array) == 0x000200, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Format_ReturnValue) == 0x000210, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_MakeArray_Array_1) == 0x000228, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, Temp_int_Variable_2) == 0x000238, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Array_Get_Item) == 0x000240, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_Select_Default_1) == 0x000248, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, K2Node_Select_Default_2) == 0x000258, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_IsEmpty_ReturnValue_1) == 0x000260, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_SetStaticMesh_ReturnValue) == 0x000261, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Not_PreBool_ReturnValue_1) == 0x000262, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_IsEmpty_ReturnValue_2) == 0x000263, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000264, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Not_PreBool_ReturnValue_2) == 0x000268, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_IsEmpty_ReturnValue_3) == 0x000269, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_IsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x00026C, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Not_PreBool_ReturnValue_3) == 0x000270, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x000274, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue_2) == 0x000278, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000280, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0002B8, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002BC, "Member 'ELEVATOR_Normal_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ELEVATOR_Normal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Normal_C_ReceiveTick) == 0x000004, "Wrong alignment on ELEVATOR_Normal_C_ReceiveTick");
static_assert(sizeof(ELEVATOR_Normal_C_ReceiveTick) == 0x000004, "Wrong size on ELEVATOR_Normal_C_ReceiveTick");
static_assert(offsetof(ELEVATOR_Normal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ELEVATOR_Normal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ELEVATOR_Normal.ELEVATOR_Normal_C.ExecuteUbergraph_ELEVATOR_Normal
// 0x0018 (0x0018 - 0x0000)
struct ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal) == 0x000008, "Wrong alignment on ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal");
static_assert(sizeof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal) == 0x000018, "Wrong size on ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, EntryPoint) == 0x000000, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::EntryPoint' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, CallFunc_GetRenderTarget_ReturnValue) == 0x000008, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::CallFunc_GetRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal, CallFunc_IsValid_ReturnValue_2) == 0x000014, "Member 'ELEVATOR_Normal_C_ExecuteUbergraph_ELEVATOR_Normal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}


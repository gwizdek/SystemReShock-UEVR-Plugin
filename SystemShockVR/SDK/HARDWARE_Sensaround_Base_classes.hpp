#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_Sensaround_Base

#include "Basic.hpp"

#include "AttributeSystem_structs.hpp"
#include "ITEM_HardwareBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HARDWARE_Sensaround_Base.HARDWARE_Sensaround_Base_C
// 0x00C8 (0x0348 - 0x0280)
class UHARDWARE_Sensaround_Base_C : public UITEM_HardwareBase_C
{
public:
	TArray<class FName>                           ItemFilterTags;                                    // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           EnemyFilterTags;                                   // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanScanItems;                                      // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanScanEnemies;                                    // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanScanThroughWalls;                               // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScannerUpdateTime;                                 // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    EnergyDrainModData;                                // 0x02A8(0x00A0)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void UpdateScannerState(bool IsEnabled);
	void UpdateEnergyState(bool IsEnabled);
	void UpdateSensaroundEffects(bool IsEnabled);
	void GetMapFilterTags(TSet<class FName>* Tags);
	void OnUpgradedItem(class UITEM_UpgradeBase_C* PreviousItem, bool* Result);
	void UpdateHardwareState(bool IsEnabled, bool* Result);
	void EVENT_OnEnergyDepleted();
	void CanActivateHardware(bool* Result);
	void GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result);
	void OnBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HARDWARE_Sensaround_Base_C">();
	}
	static class UHARDWARE_Sensaround_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHARDWARE_Sensaround_Base_C>();
	}
};
static_assert(alignof(UHARDWARE_Sensaround_Base_C) == 0x000008, "Wrong alignment on UHARDWARE_Sensaround_Base_C");
static_assert(sizeof(UHARDWARE_Sensaround_Base_C) == 0x000348, "Wrong size on UHARDWARE_Sensaround_Base_C");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, ItemFilterTags) == 0x000280, "Member 'UHARDWARE_Sensaround_Base_C::ItemFilterTags' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, EnemyFilterTags) == 0x000290, "Member 'UHARDWARE_Sensaround_Base_C::EnemyFilterTags' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, CanScanItems) == 0x0002A0, "Member 'UHARDWARE_Sensaround_Base_C::CanScanItems' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, CanScanEnemies) == 0x0002A1, "Member 'UHARDWARE_Sensaround_Base_C::CanScanEnemies' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, CanScanThroughWalls) == 0x0002A2, "Member 'UHARDWARE_Sensaround_Base_C::CanScanThroughWalls' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, ScannerUpdateTime) == 0x0002A4, "Member 'UHARDWARE_Sensaround_Base_C::ScannerUpdateTime' has a wrong offset!");
static_assert(offsetof(UHARDWARE_Sensaround_Base_C, EnergyDrainModData) == 0x0002A8, "Member 'UHARDWARE_Sensaround_Base_C::EnergyDrainModData' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterUtility

#include "Basic.hpp"

#include "ENUM_Axis_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharacterUtility.CharacterUtility_C.GetDistanceToMoveLocation
// 0x0050 (0x0050 - 0x0000)
struct CharacterUtility_C_GetDistanceToMoveLocation final
{
public:
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetValueAsVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterUtility_C_GetDistanceToMoveLocation) == 0x000008, "Wrong alignment on CharacterUtility_C_GetDistanceToMoveLocation");
static_assert(sizeof(CharacterUtility_C_GetDistanceToMoveLocation) == 0x000050, "Wrong size on CharacterUtility_C_GetDistanceToMoveLocation");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, EnemyPawn) == 0x000000, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::EnemyPawn' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, __WorldContext) == 0x000008, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, Distance) == 0x000010, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::Distance' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_MakeLiteralName_ReturnValue) == 0x000014, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_GetValueAsVector_ReturnValue) == 0x000034, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_GetValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetDistanceToMoveLocation, CallFunc_VSize_ReturnValue) == 0x00004C, "Member 'CharacterUtility_C_GetDistanceToMoveLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function CharacterUtility.CharacterUtility_C.IsCharacterLookingAt
// 0x00E8 (0x00E8 - 0x0000)
struct CharacterUtility_C_IsCharacterLookingAt final
{
public:
	class FName                                   HeadSocketName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CharacterMesh;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     ForwardAxis;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForwardIsNegative;                                 // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AcceptableAngle;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLookingAt;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SocketRot;                                         // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ForwardDirection;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     Temp_byte_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterUtility_C_IsCharacterLookingAt) == 0x000008, "Wrong alignment on CharacterUtility_C_IsCharacterLookingAt");
static_assert(sizeof(CharacterUtility_C_IsCharacterLookingAt) == 0x0000E8, "Wrong size on CharacterUtility_C_IsCharacterLookingAt");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, HeadSocketName) == 0x000000, "Member 'CharacterUtility_C_IsCharacterLookingAt::HeadSocketName' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CharacterMesh) == 0x000008, "Member 'CharacterUtility_C_IsCharacterLookingAt::CharacterMesh' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, TargetLocation) == 0x000010, "Member 'CharacterUtility_C_IsCharacterLookingAt::TargetLocation' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, ForwardAxis) == 0x00001C, "Member 'CharacterUtility_C_IsCharacterLookingAt::ForwardAxis' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, ForwardIsNegative) == 0x00001D, "Member 'CharacterUtility_C_IsCharacterLookingAt::ForwardIsNegative' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, AcceptableAngle) == 0x000020, "Member 'CharacterUtility_C_IsCharacterLookingAt::AcceptableAngle' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, __WorldContext) == 0x000028, "Member 'CharacterUtility_C_IsCharacterLookingAt::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, IsLookingAt) == 0x000030, "Member 'CharacterUtility_C_IsCharacterLookingAt::IsLookingAt' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, SocketRot) == 0x000034, "Member 'CharacterUtility_C_IsCharacterLookingAt::SocketRot' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, ForwardDirection) == 0x000040, "Member 'CharacterUtility_C_IsCharacterLookingAt::ForwardDirection' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, Temp_bool_Variable) == 0x00004C, "Member 'CharacterUtility_C_IsCharacterLookingAt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, Temp_float_Variable) == 0x000050, "Member 'CharacterUtility_C_IsCharacterLookingAt::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, Temp_float_Variable_1) == 0x000054, "Member 'CharacterUtility_C_IsCharacterLookingAt::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, K2Node_Select_Default) == 0x000058, "Member 'CharacterUtility_C_IsCharacterLookingAt::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_DoesSocketExist_ReturnValue) == 0x00005C, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_GetSocketLocation_ReturnValue) == 0x000060, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_GetSocketRotation_ReturnValue) == 0x000084, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Acos_ReturnValue) == 0x000094, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_GetUpVector_ReturnValue) == 0x000098, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_RadiansToDegrees_ReturnValue) == 0x0000A4, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_GetRightVector_ReturnValue) == 0x0000AC, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B8, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_GetForwardVector_ReturnValue) == 0x0000BC, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, Temp_byte_Variable) == 0x0000C8, "Member 'CharacterUtility_C_IsCharacterLookingAt::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, K2Node_Select_Default_1) == 0x0000CC, "Member 'CharacterUtility_C_IsCharacterLookingAt::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_IsCharacterLookingAt, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'CharacterUtility_C_IsCharacterLookingAt::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function CharacterUtility.CharacterUtility_C.GetScaledRoundedHealthValue
// 0x0020 (0x0020 - 0x0000)
struct CharacterUtility_C_GetScaledRoundedHealthValue final
{
public:
	int32                                         BaseHealth;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScalePercentage;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundTo;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_MathExpression_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterUtility_C_GetScaledRoundedHealthValue) == 0x000008, "Wrong alignment on CharacterUtility_C_GetScaledRoundedHealthValue");
static_assert(sizeof(CharacterUtility_C_GetScaledRoundedHealthValue) == 0x000020, "Wrong size on CharacterUtility_C_GetScaledRoundedHealthValue");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, BaseHealth) == 0x000000, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::BaseHealth' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, ScalePercentage) == 0x000004, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::ScalePercentage' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, RoundTo) == 0x000008, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::RoundTo' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, __WorldContext) == 0x000010, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, Result) == 0x000018, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::Result' has a wrong offset!");
static_assert(offsetof(CharacterUtility_C_GetScaledRoundedHealthValue, K2Node_MathExpression_ReturnValue) == 0x00001C, "Member 'CharacterUtility_C_GetScaledRoundedHealthValue::K2Node_MathExpression_ReturnValue' has a wrong offset!");

}


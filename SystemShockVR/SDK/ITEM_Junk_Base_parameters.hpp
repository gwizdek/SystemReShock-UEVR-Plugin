#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Junk_Base

#include "Basic.hpp"

#include "STRUCT_HardItemParams_structs.hpp"


namespace SDK::Params
{

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.CanReycleJunkItem
// 0x0006 (0x0006 - 0x0000)
struct ITEM_Junk_Base_C_CanReycleJunkItem final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDestructible_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Junk_Base_C_CanReycleJunkItem) == 0x000001, "Wrong alignment on ITEM_Junk_Base_C_CanReycleJunkItem");
static_assert(sizeof(ITEM_Junk_Base_C_CanReycleJunkItem) == 0x000006, "Wrong size on ITEM_Junk_Base_C_CanReycleJunkItem");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, Result) == 0x000000, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, CallFunc_IsDestructible_Result) == 0x000001, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::CallFunc_IsDestructible_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000002, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000003, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_CanReycleJunkItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'ITEM_Junk_Base_C_CanReycleJunkItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.GetRecycleRewardItemCount
// 0x0038 (0x0038 - 0x0000)
struct ITEM_Junk_Base_C_GetRecycleRewardItemCount final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanReycleJunkItem_Result;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Result;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Junk_Base_C_GetRecycleRewardItemCount) == 0x000008, "Wrong alignment on ITEM_Junk_Base_C_GetRecycleRewardItemCount");
static_assert(sizeof(ITEM_Junk_Base_C_GetRecycleRewardItemCount) == 0x000038, "Wrong size on ITEM_Junk_Base_C_GetRecycleRewardItemCount");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, Class_0) == 0x000000, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::Class_0' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, Count_0) == 0x000008, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::Count_0' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, CallFunc_CanReycleJunkItem_Result) == 0x00000C, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::CallFunc_CanReycleJunkItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, CallFunc_GetCount_Result) == 0x000010, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000028, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_GetRecycleRewardItemCount, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'ITEM_Junk_Base_C_GetRecycleRewardItemCount::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.TryRecycleJunkItem
// 0x0040 (0x0040 - 0x0000)
struct ITEM_Junk_Base_C_TryRecycleJunkItem final
{
public:
	class UITEM_Base_C*                           SalvageRewardItem;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           RewardItem;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetRecycleRewardItemCount_Class;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRecycleRewardItemCount_Count;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0020(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_CreateInventoryItem_Item;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyItem_Result;                       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Junk_Base_C_TryRecycleJunkItem) == 0x000008, "Wrong alignment on ITEM_Junk_Base_C_TryRecycleJunkItem");
static_assert(sizeof(ITEM_Junk_Base_C_TryRecycleJunkItem) == 0x000040, "Wrong size on ITEM_Junk_Base_C_TryRecycleJunkItem");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, SalvageRewardItem) == 0x000000, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::SalvageRewardItem' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, RewardItem) == 0x000008, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::RewardItem' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_GetRecycleRewardItemCount_Class) == 0x000010, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_GetRecycleRewardItemCount_Class' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_GetRecycleRewardItemCount_Count) == 0x000018, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_GetRecycleRewardItemCount_Count' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000020, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_CreateInventoryItem_Item) == 0x000030, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_CreateInventoryItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_IsValidClass_ReturnValue) == 0x000039, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_DestroyItem_Result) == 0x00003A, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_DestroyItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_TryRecycleJunkItem, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'ITEM_Junk_Base_C_TryRecycleJunkItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.VaporizeJunkItem
// 0x0058 (0x0058 - 0x0000)
struct ITEM_Junk_Base_C_VaporizeJunkItem final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviousItemCount;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      PreviousInventory;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DestroyItem_Result;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0040(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Junk_Base_C_VaporizeJunkItem) == 0x000008, "Wrong alignment on ITEM_Junk_Base_C_VaporizeJunkItem");
static_assert(sizeof(ITEM_Junk_Base_C_VaporizeJunkItem) == 0x000058, "Wrong size on ITEM_Junk_Base_C_VaporizeJunkItem");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, Result) == 0x000000, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, PreviousItemCount) == 0x000004, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::PreviousItemCount' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, PreviousInventory) == 0x000008, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::PreviousInventory' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_GetCount_Result) == 0x000010, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_DestroyItem_Result) == 0x000014, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_DestroyItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000028, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000030, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000040, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000050, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_GrantItem_Result) == 0x000051, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_GrantItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Junk_Base_C_VaporizeJunkItem, CallFunc_IsValid_ReturnValue) == 0x000053, "Member 'ITEM_Junk_Base_C_VaporizeJunkItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_Junk_Base_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_Junk_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_Junk_Base_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_Junk_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_Junk_Base_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_Junk_Base_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_Junk_Base_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

// Function ITEM_Junk_Base.ITEM_Junk_Base_C.HasWorldInteraction
// 0x0001 (0x0001 - 0x0000)
struct ITEM_Junk_Base_C_HasWorldInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Junk_Base_C_HasWorldInteraction) == 0x000001, "Wrong alignment on ITEM_Junk_Base_C_HasWorldInteraction");
static_assert(sizeof(ITEM_Junk_Base_C_HasWorldInteraction) == 0x000001, "Wrong size on ITEM_Junk_Base_C_HasWorldInteraction");
static_assert(offsetof(ITEM_Junk_Base_C_HasWorldInteraction, Result) == 0x000000, "Member 'ITEM_Junk_Base_C_HasWorldInteraction::Result' has a wrong offset!");

}


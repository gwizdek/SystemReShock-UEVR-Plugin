#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERF_SplashScreen

#include "Basic.hpp"


namespace SDK::Params
{

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.CanSkipFadeIn
// 0x0001 (0x0001 - 0x0000)
struct INTERF_SplashScreen_C_CanSkipFadeIn final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_CanSkipFadeIn) == 0x000001, "Wrong alignment on INTERF_SplashScreen_C_CanSkipFadeIn");
static_assert(sizeof(INTERF_SplashScreen_C_CanSkipFadeIn) == 0x000001, "Wrong size on INTERF_SplashScreen_C_CanSkipFadeIn");
static_assert(offsetof(INTERF_SplashScreen_C_CanSkipFadeIn, Result) == 0x000000, "Member 'INTERF_SplashScreen_C_CanSkipFadeIn::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.CanSkipSplash
// 0x0001 (0x0001 - 0x0000)
struct INTERF_SplashScreen_C_CanSkipSplash final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_CanSkipSplash) == 0x000001, "Wrong alignment on INTERF_SplashScreen_C_CanSkipSplash");
static_assert(sizeof(INTERF_SplashScreen_C_CanSkipSplash) == 0x000001, "Wrong size on INTERF_SplashScreen_C_CanSkipSplash");
static_assert(offsetof(INTERF_SplashScreen_C_CanSkipSplash, Result) == 0x000000, "Member 'INTERF_SplashScreen_C_CanSkipSplash::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.GetFadeInDuration
// 0x0004 (0x0004 - 0x0000)
struct INTERF_SplashScreen_C_GetFadeInDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_SplashScreen_C_GetFadeInDuration) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_GetFadeInDuration");
static_assert(sizeof(INTERF_SplashScreen_C_GetFadeInDuration) == 0x000004, "Wrong size on INTERF_SplashScreen_C_GetFadeInDuration");
static_assert(offsetof(INTERF_SplashScreen_C_GetFadeInDuration, Duration) == 0x000000, "Member 'INTERF_SplashScreen_C_GetFadeInDuration::Duration' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.GetSplashDuration
// 0x0004 (0x0004 - 0x0000)
struct INTERF_SplashScreen_C_GetSplashDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_SplashScreen_C_GetSplashDuration) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_GetSplashDuration");
static_assert(sizeof(INTERF_SplashScreen_C_GetSplashDuration) == 0x000004, "Wrong size on INTERF_SplashScreen_C_GetSplashDuration");
static_assert(offsetof(INTERF_SplashScreen_C_GetSplashDuration, Duration) == 0x000000, "Member 'INTERF_SplashScreen_C_GetSplashDuration::Duration' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.GetFadeOutDuration
// 0x0004 (0x0004 - 0x0000)
struct INTERF_SplashScreen_C_GetFadeOutDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_SplashScreen_C_GetFadeOutDuration) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_GetFadeOutDuration");
static_assert(sizeof(INTERF_SplashScreen_C_GetFadeOutDuration) == 0x000004, "Wrong size on INTERF_SplashScreen_C_GetFadeOutDuration");
static_assert(offsetof(INTERF_SplashScreen_C_GetFadeOutDuration, Duration) == 0x000000, "Member 'INTERF_SplashScreen_C_GetFadeOutDuration::Duration' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.UpdateFadeIn
// 0x0008 (0x0008 - 0x0000)
struct INTERF_SplashScreen_C_UpdateFadeIn final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_UpdateFadeIn) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_UpdateFadeIn");
static_assert(sizeof(INTERF_SplashScreen_C_UpdateFadeIn) == 0x000008, "Wrong size on INTERF_SplashScreen_C_UpdateFadeIn");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateFadeIn, Progress) == 0x000000, "Member 'INTERF_SplashScreen_C_UpdateFadeIn::Progress' has a wrong offset!");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateFadeIn, Result) == 0x000004, "Member 'INTERF_SplashScreen_C_UpdateFadeIn::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.UpdateSplash
// 0x0008 (0x0008 - 0x0000)
struct INTERF_SplashScreen_C_UpdateSplash final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_UpdateSplash) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_UpdateSplash");
static_assert(sizeof(INTERF_SplashScreen_C_UpdateSplash) == 0x000008, "Wrong size on INTERF_SplashScreen_C_UpdateSplash");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateSplash, Progress) == 0x000000, "Member 'INTERF_SplashScreen_C_UpdateSplash::Progress' has a wrong offset!");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateSplash, Result) == 0x000004, "Member 'INTERF_SplashScreen_C_UpdateSplash::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.UpdateFadeOut
// 0x0008 (0x0008 - 0x0000)
struct INTERF_SplashScreen_C_UpdateFadeOut final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_UpdateFadeOut) == 0x000004, "Wrong alignment on INTERF_SplashScreen_C_UpdateFadeOut");
static_assert(sizeof(INTERF_SplashScreen_C_UpdateFadeOut) == 0x000008, "Wrong size on INTERF_SplashScreen_C_UpdateFadeOut");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateFadeOut, Progress) == 0x000000, "Member 'INTERF_SplashScreen_C_UpdateFadeOut::Progress' has a wrong offset!");
static_assert(offsetof(INTERF_SplashScreen_C_UpdateFadeOut, Result) == 0x000004, "Member 'INTERF_SplashScreen_C_UpdateFadeOut::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.SetPreGameScreen
// 0x0010 (0x0010 - 0x0000)
struct INTERF_SplashScreen_C_SetPreGameScreen final
{
public:
	class UWIDGET_PreGameScreen_C*                PreGameScreen;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_SetPreGameScreen) == 0x000008, "Wrong alignment on INTERF_SplashScreen_C_SetPreGameScreen");
static_assert(sizeof(INTERF_SplashScreen_C_SetPreGameScreen) == 0x000010, "Wrong size on INTERF_SplashScreen_C_SetPreGameScreen");
static_assert(offsetof(INTERF_SplashScreen_C_SetPreGameScreen, PreGameScreen) == 0x000000, "Member 'INTERF_SplashScreen_C_SetPreGameScreen::PreGameScreen' has a wrong offset!");
static_assert(offsetof(INTERF_SplashScreen_C_SetPreGameScreen, Result) == 0x000008, "Member 'INTERF_SplashScreen_C_SetPreGameScreen::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.OnSplashVisible
// 0x0001 (0x0001 - 0x0000)
struct INTERF_SplashScreen_C_OnSplashVisible final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_OnSplashVisible) == 0x000001, "Wrong alignment on INTERF_SplashScreen_C_OnSplashVisible");
static_assert(sizeof(INTERF_SplashScreen_C_OnSplashVisible) == 0x000001, "Wrong size on INTERF_SplashScreen_C_OnSplashVisible");
static_assert(offsetof(INTERF_SplashScreen_C_OnSplashVisible, Result) == 0x000000, "Member 'INTERF_SplashScreen_C_OnSplashVisible::Result' has a wrong offset!");

// Function INTERF_SplashScreen.INTERF_SplashScreen_C.OnSplashHidden
// 0x0001 (0x0001 - 0x0000)
struct INTERF_SplashScreen_C_OnSplashHidden final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_SplashScreen_C_OnSplashHidden) == 0x000001, "Wrong alignment on INTERF_SplashScreen_C_OnSplashHidden");
static_assert(sizeof(INTERF_SplashScreen_C_OnSplashHidden) == 0x000001, "Wrong size on INTERF_SplashScreen_C_OnSplashHidden");
static_assert(offsetof(INTERF_SplashScreen_C_OnSplashHidden, Result) == 0x000000, "Member 'INTERF_SplashScreen_C_OnSplashHidden::Result' has a wrong offset!");

}


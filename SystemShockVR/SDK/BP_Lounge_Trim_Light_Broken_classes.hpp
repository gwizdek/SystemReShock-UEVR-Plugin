#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lounge_Trim_Light_Broken

#include "Basic.hpp"

#include "TILE_BrokenSingleLightPanel_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lounge_Trim_Light_Broken.BP_Lounge_Trim_Light_Broken_C
// 0x0050 (0x0300 - 0x02B0)
class ABP_Lounge_Trim_Light_Broken_C final : public ATILE_BrokenSingleLightPanel_C
{
public:
	class UStaticMeshComponent*                   Glass8;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass7;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass6;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass5;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass4;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass3;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass2;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass1;                                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BrokenGlass;                                       // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lounge_Trim_Light_Broken_C">();
	}
	static class ABP_Lounge_Trim_Light_Broken_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lounge_Trim_Light_Broken_C>();
	}
};
static_assert(alignof(ABP_Lounge_Trim_Light_Broken_C) == 0x000010, "Wrong alignment on ABP_Lounge_Trim_Light_Broken_C");
static_assert(sizeof(ABP_Lounge_Trim_Light_Broken_C) == 0x000300, "Wrong size on ABP_Lounge_Trim_Light_Broken_C");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass8) == 0x0002B0, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass8' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass7) == 0x0002B8, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass7' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass6) == 0x0002C0, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass6' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass5) == 0x0002C8, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass5' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass4) == 0x0002D0, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass4' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass3) == 0x0002D8, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass3' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass2) == 0x0002E0, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass2' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, Glass1) == 0x0002E8, "Member 'ABP_Lounge_Trim_Light_Broken_C::Glass1' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Light_Broken_C, BrokenGlass) == 0x0002F0, "Member 'ABP_Lounge_Trim_Light_Broken_C::BrokenGlass' has a wrong offset!");

}


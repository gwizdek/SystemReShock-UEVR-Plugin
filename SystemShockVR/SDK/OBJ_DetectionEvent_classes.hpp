#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_DetectionEvent

#include "Basic.hpp"

#include "ENUM_DetectionState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass OBJ_DetectionEvent.OBJ_DetectionEvent_C
// 0x0048 (0x0070 - 0x0028)
class UOBJ_DetectionEvent_C final : public UObject
{
public:
	class APAWN_SystemShockCharacter_C*           DetectedPawn;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           DetectionState;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastSeenLocation;                                  // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastHeardLocation;                                 // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDetectionRating;                            // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastSeenTimestamp;                                 // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHeardTimestamp;                                // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetectionDecayRate;                                // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DetectionGrowRate;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnterStateTimestamp;                               // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnterCloseRangeTimestamp;                          // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowthRate_Close;                                  // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrowthRate_Far;                                    // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeDetectionEvent(class APAWN_SystemShockCharacter_C* DetectedPawn_0);
	void ResumeDetectionState();
	void UpdateDetectionEvent(float GameTime, float DeltaTime, float CloseRangeEnter, float CloseRangeExit);
	void SetDetectionState(ENUM_DetectionState NewState);
	void GetLastSeenTimestamp(float* LastSeenTimestamp_0);
	void GetLastHeardTimestamp(float* LastHeardTimestamp_0);
	void GetOwnerActor(class AActor** Result);
	void GetAttribManager(class UAttribManagerComponent** Result);
	void GetDetectionComponent(class UCOMP_EnemyDetection_C** Result);
	void GetDetectedPawn(class APAWN_SystemShockCharacter_C** Pawn);
	void GetCurrentDetectionRating(float* DetectionRating);
	void GetIsIdentified(bool* IsDetected);
	void GetEventLocation(struct FVector* EventLocation);
	void SeePawn(float CurrentTime);
	void SeeEvent(float CurrentTime, const struct FVector& Location);
	void HearPawn(float CurrentTime, float Loudness);
	void GetLastSeenLocation(struct FVector* Result);
	void GetLastHeardLocation(struct FVector* Result);
	void GetTimeInCurrentState(float* Result);
	void GetTimeSinceLastEvent(float CurrentTime, float* Result);
	void GetLastDetectionTimestamp(float* Result);
	void GetDistanceToEvent(float* Distance);
	void GetAlertness(float* Alertness);
	void HearEvent(float CurrentTime, const struct FVector& Location, float Loudness);
	void GetMaxForgetTime(float* Time);
	void GetDetectionState(ENUM_DetectionState* Result);
	void GetTimeInCloseRange(float* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OBJ_DetectionEvent_C">();
	}
	static class UOBJ_DetectionEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOBJ_DetectionEvent_C>();
	}
};
static_assert(alignof(UOBJ_DetectionEvent_C) == 0x000008, "Wrong alignment on UOBJ_DetectionEvent_C");
static_assert(sizeof(UOBJ_DetectionEvent_C) == 0x000070, "Wrong size on UOBJ_DetectionEvent_C");
static_assert(offsetof(UOBJ_DetectionEvent_C, DetectedPawn) == 0x000028, "Member 'UOBJ_DetectionEvent_C::DetectedPawn' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, DetectionState) == 0x000030, "Member 'UOBJ_DetectionEvent_C::DetectionState' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, LastSeenLocation) == 0x000034, "Member 'UOBJ_DetectionEvent_C::LastSeenLocation' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, LastHeardLocation) == 0x000040, "Member 'UOBJ_DetectionEvent_C::LastHeardLocation' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, CurrentDetectionRating) == 0x00004C, "Member 'UOBJ_DetectionEvent_C::CurrentDetectionRating' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, LastSeenTimestamp) == 0x000050, "Member 'UOBJ_DetectionEvent_C::LastSeenTimestamp' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, LastHeardTimestamp) == 0x000054, "Member 'UOBJ_DetectionEvent_C::LastHeardTimestamp' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, DetectionDecayRate) == 0x000058, "Member 'UOBJ_DetectionEvent_C::DetectionDecayRate' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, DetectionGrowRate) == 0x00005C, "Member 'UOBJ_DetectionEvent_C::DetectionGrowRate' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, EnterStateTimestamp) == 0x000060, "Member 'UOBJ_DetectionEvent_C::EnterStateTimestamp' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, EnterCloseRangeTimestamp) == 0x000064, "Member 'UOBJ_DetectionEvent_C::EnterCloseRangeTimestamp' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, GrowthRate_Close) == 0x000068, "Member 'UOBJ_DetectionEvent_C::GrowthRate_Close' has a wrong offset!");
static_assert(offsetof(UOBJ_DetectionEvent_C, GrowthRate_Far) == 0x00006C, "Member 'UOBJ_DetectionEvent_C::GrowthRate_Far' has a wrong offset!");

}


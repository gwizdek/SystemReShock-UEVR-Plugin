#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Maneuver_Base

#include "Basic.hpp"

#include "TASK_Maneuver_Base_classes.hpp"
#include "TASK_Maneuver_Base_parameters.hpp"


namespace SDK
{

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.ExecuteUbergraph_TASK_Maneuver_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Maneuver_Base_C::ExecuteUbergraph_TASK_Maneuver_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "ExecuteUbergraph_TASK_Maneuver_Base");

	Params::TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Maneuver_Base_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "ReceiveExecuteAI");

	Params::TASK_Maneuver_Base_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.EVENT_OnQueryFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FVector4>                 WeightedWorldLocations                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTASK_Maneuver_Base_C::EVENT_OnQueryFinished(bool bResult, TArray<struct FVector4>& WeightedWorldLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "EVENT_OnQueryFinished");

	Params::TASK_Maneuver_Base_C_EVENT_OnQueryFinished Parms{};

	Parms.bResult = bResult;
	Parms.WeightedWorldLocations = std::move(WeightedWorldLocations);

	UObject::ProcessEvent(Func, &Parms);

	WeightedWorldLocations = std::move(Parms.WeightedWorldLocations);
}


// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.DrawWeightedLocations
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FVector4>                 WeightedWorldLocations                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UTASK_Maneuver_Base_C::DrawWeightedLocations(bool Result, TArray<struct FVector4>& WeightedWorldLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "DrawWeightedLocations");

	Params::TASK_Maneuver_Base_C_DrawWeightedLocations Parms{};

	Parms.Result = Result;
	Parms.WeightedWorldLocations = std::move(WeightedWorldLocations);

	UObject::ProcessEvent(Func, &Parms);

	WeightedWorldLocations = std::move(Parms.WeightedWorldLocations);
}


// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.OnLocationFound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          FoundLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTASK_Maneuver_Base_C::OnLocationFound(const struct FVector& FoundLocation, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "OnLocationFound");

	Params::TASK_Maneuver_Base_C_OnLocationFound Parms{};

	Parms.FoundLocation = std::move(FoundLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.GetTargetPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Maneuver_Base_C::GetTargetPawn(class APAWN_SystemShockCharacter_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Maneuver_Base_C", "GetTargetPawn");

	Params::TASK_Maneuver_Base_C_GetTargetPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Mutant

#include "Basic.hpp"

#include "PAWN_Mutant_classes.hpp"
#include "PAWN_Mutant_parameters.hpp"


namespace SDK
{

// Function PAWN_Mutant.PAWN_Mutant_C.ExecuteUbergraph_PAWN_Mutant
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APAWN_Mutant_C::ExecuteUbergraph_PAWN_Mutant(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "ExecuteUbergraph_PAWN_Mutant");

	Params::PAWN_Mutant_C_ExecuteUbergraph_PAWN_Mutant Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PAWN_Mutant.PAWN_Mutant_C.BndEvt__PAWN_Mutant_MouthAudio_K2Node_ComponentBoundEvent_1_OnAudioSingleEnvelopeValue__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class USoundWave*                       PlayingSoundWave                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EnvelopeValue                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APAWN_Mutant_C::BndEvt__PAWN_Mutant_MouthAudio_K2Node_ComponentBoundEvent_1_OnAudioSingleEnvelopeValue__DelegateSignature(const class USoundWave* PlayingSoundWave, const float EnvelopeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "BndEvt__PAWN_Mutant_MouthAudio_K2Node_ComponentBoundEvent_1_OnAudioSingleEnvelopeValue__DelegateSignature");

	Params::PAWN_Mutant_C_BndEvt__PAWN_Mutant_MouthAudio_K2Node_ComponentBoundEvent_1_OnAudioSingleEnvelopeValue__DelegateSignature Parms{};

	Parms.PlayingSoundWave = PlayingSoundWave;
	Parms.EnvelopeValue = EnvelopeValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PAWN_Mutant.PAWN_Mutant_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APAWN_Mutant_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PAWN_Mutant.PAWN_Mutant_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APAWN_Mutant_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PAWN_Mutant.PAWN_Mutant_C.TrySetSpawnData
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APAWN_Mutant_C::TrySetSpawnData(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "TrySetSpawnData");

	Params::PAWN_Mutant_C_TrySetSpawnData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PAWN_Mutant.PAWN_Mutant_C.TryRandomizeMutantVariant
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APAWN_Mutant_C::TryRandomizeMutantVariant(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PAWN_Mutant_C", "TryRandomizeMutantVariant");

	Params::PAWN_Mutant_C_TryRandomizeMutantVariant Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


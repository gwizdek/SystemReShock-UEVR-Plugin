#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_SecurityCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_SecurityCamera.AnimBP_SecurityCamera_C
// 0x0CA0 (0x0F60 - 0x02C0)
class UAnimBP_SecurityCamera_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x02F8(0x0078)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x0370(0x01B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0520(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0540(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x0560(0x0190)()
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x06F0(0x0830)()
	float                                         RotationSpeed;                                     // 0x0F20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastYawSpeed;                                      // 0x0F24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastPitchSpeed;                                    // 0x0F28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLookAtLocation;                              // 0x0F2C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLookAtLocation;                             // 0x0F38(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentLocalRotation;                              // 0x0F44(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetLocalRotation;                               // 0x0F50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasReachedTarget;                                  // 0x0F5C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AnimBP_SecurityCamera(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void UpdateSecurityCamera(float DeltaTime);
	void SetCurrentCameraRotation(float Pitch, float Yaw);
	void SetTargetCameraRotation(float Pitch, float Yaw);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_SecurityCamera_C">();
	}
	static class UAnimBP_SecurityCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_SecurityCamera_C>();
	}
};
static_assert(alignof(UAnimBP_SecurityCamera_C) == 0x000010, "Wrong alignment on UAnimBP_SecurityCamera_C");
static_assert(sizeof(UAnimBP_SecurityCamera_C) == 0x000F60, "Wrong size on UAnimBP_SecurityCamera_C");
static_assert(offsetof(UAnimBP_SecurityCamera_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_SecurityCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_RandomPlayer) == 0x0002F8, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_LookAt) == 0x000370, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_LocalToComponentSpace) == 0x000520, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_ComponentToLocalSpace) == 0x000540, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x000560, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, AnimGraphNode_RigidBody) == 0x0006F0, "Member 'UAnimBP_SecurityCamera_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, RotationSpeed) == 0x000F20, "Member 'UAnimBP_SecurityCamera_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, LastYawSpeed) == 0x000F24, "Member 'UAnimBP_SecurityCamera_C::LastYawSpeed' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, LastPitchSpeed) == 0x000F28, "Member 'UAnimBP_SecurityCamera_C::LastPitchSpeed' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, TargetLookAtLocation) == 0x000F2C, "Member 'UAnimBP_SecurityCamera_C::TargetLookAtLocation' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, CurrentLookAtLocation) == 0x000F38, "Member 'UAnimBP_SecurityCamera_C::CurrentLookAtLocation' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, CurrentLocalRotation) == 0x000F44, "Member 'UAnimBP_SecurityCamera_C::CurrentLocalRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, TargetLocalRotation) == 0x000F50, "Member 'UAnimBP_SecurityCamera_C::TargetLocalRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_SecurityCamera_C, HasReachedTarget) == 0x000F5C, "Member 'UAnimBP_SecurityCamera_C::HasReachedTarget' has a wrong offset!");

}


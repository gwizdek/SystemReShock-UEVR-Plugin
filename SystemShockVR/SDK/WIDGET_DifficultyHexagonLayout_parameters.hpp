#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyHexagonLayout

#include "Basic.hpp"

#include "ENUM_GameDifficultyConfigCategory_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.OnSelectHexLayout__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature final
{
public:
	int32                                         IndexInList_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature, IndexInList_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_OnSelectHexLayout__DelegateSignature::IndexInList_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.ExecuteUbergraph_WIDGET_DifficultyHexagonLayout
// 0x0014 (0x0014 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_IndexInList;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_IndexInList_2;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_IndexInList_1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout) == 0x000014, "Wrong size on WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout, EntryPoint) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout, K2Node_ComponentBoundEvent_IndexInList) == 0x000004, "Member 'WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout::K2Node_ComponentBoundEvent_IndexInList' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout, K2Node_ComponentBoundEvent_IndexInList_2) == 0x00000C, "Member 'WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout::K2Node_ComponentBoundEvent_IndexInList_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout, K2Node_ComponentBoundEvent_IndexInList_1) == 0x000010, "Member 'WIDGET_DifficultyHexagonLayout_C_ExecuteUbergraph_WIDGET_DifficultyHexagonLayout::K2Node_ComponentBoundEvent_IndexInList_1' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature final
{
public:
	int32                                         IndexInList_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature, IndexInList_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton3_K2Node_ComponentBoundEvent_2_OnSelectNewDifficulty__DelegateSignature::IndexInList_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature final
{
public:
	int32                                         IndexInList_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature, IndexInList_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton2_K2Node_ComponentBoundEvent_1_OnSelectNewDifficulty__DelegateSignature::IndexInList_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature final
{
public:
	int32                                         IndexInList_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature, IndexInList_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_BndEvt__WIDGET_DifficultyHexagonLayout_WIDGET_DifficultyHexagonButton1_K2Node_ComponentBoundEvent_0_OnSelectNewDifficulty__DelegateSignature::IndexInList_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_PreConstruct");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonLayout_C_PreConstruct");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetHighlighted
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetHighlighted final
{
public:
	bool                                          Highlighted_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetHighlighted) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetHighlighted");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetHighlighted) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetHighlighted");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetHighlighted, Highlighted_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetHighlighted::Highlighted_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetTextColor
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetTextColor final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetTextColor) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetTextColor");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetTextColor) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetTextColor");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetTextColor, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetTextColor::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetTextColor, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_SetTextColor::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.EVENT_OnMouseOver
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver) == 0x0000A8, "Wrong size on WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver, MyGeometry) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver, MouseEvent) == 0x000038, "Member 'WIDGET_DifficultyHexagonLayout_C_EVENT_OnMouseOver::MouseEvent' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetAsParentInHexagons
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_DifficultyHexagonButton_C*      K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons) == 0x000048, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, CallFunc_Array_Get_Item) == 0x000028, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button) == 0x000038, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WIDGET_DifficultyHexagonLayout_C_SetAsParentInHexagons::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetCategoryText
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetCategoryText final
{
public:
	ENUM_GameDifficultyConfigCategory             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0020(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0038(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0050(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetCategoryText");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText) == 0x000080, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetCategoryText");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, Temp_byte_Variable) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000020, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000038, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000050, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryText, K2Node_Select_Default) == 0x000068, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryText::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetNewDifficulty
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty final
{
public:
	int32                                         HexIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty, HexIndex) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetNewDifficulty::HexIndex' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetDifficultyInHexagons
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons final
{
public:
	int32                                         DifficultyIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons) == 0x000008, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons, DifficultyIndex) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons::DifficultyIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons, CallFunc_Conv_IntToByte_ReturnValue) == 0x000004, "Member 'WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons, CallFunc_GetValidValue_ReturnValue) == 0x000006, "Member 'WIDGET_DifficultyHexagonLayout_C_SetDifficultyInHexagons::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.SetCategoryLabelPanel
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_SetCategoryLabelPanel::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.IncrementDifficulty
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty final
{
public:
	int32                                         StartingIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_DifficultyHexagonButton_C*      K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty) == 0x000030, "Wrong size on WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, StartingIndex) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::StartingIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, Temp_int_Variable) == 0x000004, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, CallFunc_Clamp_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button) == 0x000020, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_DifficultyHexagonLayout_C_IncrementDifficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_DifficultyHexagonLayout.WIDGET_DifficultyHexagonLayout_C.DecrementDifficulty
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_DifficultyHexagonButton_C*      K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty");
static_assert(sizeof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty) == 0x000028, "Wrong size on WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, Temp_int_Variable) == 0x000000, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button) == 0x000018, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::K2Node_DynamicCast_AsWIDGET_Difficulty_Hexagon_Button' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_DifficultyHexagonLayout_C_DecrementDifficulty::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


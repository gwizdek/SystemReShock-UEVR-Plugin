#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BULLORANG_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BULLORANG_Base.BULLORANG_Base_C.ExecuteUbergraph_BULLORANG_Base
// 0x0014 (0x0014 - 0x0000)
struct BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base) == 0x000004, "Wrong alignment on BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base");
static_assert(sizeof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base) == 0x000014, "Wrong size on BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base");
static_assert(offsetof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base, EntryPoint) == 0x000000, "Member 'BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00000C, "Member 'BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BULLORANG_Base_C_ExecuteUbergraph_BULLORANG_Base::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BULLORANG_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BULLORANG_Base_C_ReceiveTick");
static_assert(sizeof(BULLORANG_Base_C_ReceiveTick) == 0x000004, "Wrong size on BULLORANG_Base_C_ReceiveTick");
static_assert(offsetof(BULLORANG_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.UpdateBullorangMovement
// 0x0004 (0x0004 - 0x0000)
struct BULLORANG_Base_C_UpdateBullorangMovement final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Base_C_UpdateBullorangMovement) == 0x000004, "Wrong alignment on BULLORANG_Base_C_UpdateBullorangMovement");
static_assert(sizeof(BULLORANG_Base_C_UpdateBullorangMovement) == 0x000004, "Wrong size on BULLORANG_Base_C_UpdateBullorangMovement");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangMovement, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Base_C_UpdateBullorangMovement::DeltaSeconds' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.UpdateBullorangBladeSpin
// 0x00A4 (0x00A4 - 0x0000)
struct BULLORANG_Base_C_UpdateBullorangBladeSpin final
{
public:
	float                                         Delta_Seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BULLORANG_Base_C_UpdateBullorangBladeSpin) == 0x000004, "Wrong alignment on BULLORANG_Base_C_UpdateBullorangBladeSpin");
static_assert(sizeof(BULLORANG_Base_C_UpdateBullorangBladeSpin) == 0x0000A4, "Wrong size on BULLORANG_Base_C_UpdateBullorangBladeSpin");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, Delta_Seconds) == 0x000000, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateBullorangBladeSpin, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x00001C, "Member 'BULLORANG_Base_C_UpdateBullorangBladeSpin::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.UpdateReturnToOwner
// 0x01F0 (0x01F0 - 0x0000)
struct BULLORANG_Base_C_UpdateReturnToOwner final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToTarget;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetVelocity;                                    // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorToTarget;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToTarget;                                 // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewDesiredLocation;                                // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FrameTranslation;                                  // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketLocation;                                    // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_CyberBully_C*                     K2Node_DynamicCast_AsPAWN_Cyber_Bully;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character_1; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue;           // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue_1;         // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Base_C_UpdateReturnToOwner) == 0x000008, "Wrong alignment on BULLORANG_Base_C_UpdateReturnToOwner");
static_assert(sizeof(BULLORANG_Base_C_UpdateReturnToOwner) == 0x0001F0, "Wrong size on BULLORANG_Base_C_UpdateReturnToOwner");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, DistanceToTarget) == 0x000004, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, TargetVelocity) == 0x000008, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::TargetVelocity' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, VectorToTarget) == 0x000014, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::VectorToTarget' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, DirectionToTarget) == 0x000020, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::DirectionToTarget' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, NewDesiredLocation) == 0x00002C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::NewDesiredLocation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, FrameTranslation) == 0x000038, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::FrameTranslation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, SocketLocation) == 0x000044, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::SocketLocation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x000050, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x00005C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000060, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000E8, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E9, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000EC, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F4, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000108, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_AsPAWN_Cyber_Bully) == 0x000118, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_AsPAWN_Cyber_Bully' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000124, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_ComposeRotators_ReturnValue) == 0x000130, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_MapRangeClamped_ReturnValue) == 0x00013C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000140, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_RInterpTo_ReturnValue) == 0x00014C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000159, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_IsValid_ReturnValue_2) == 0x00015A, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_AsPAWN_System_Shock_Character_1) == 0x000160, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_AsPAWN_System_Shock_Character_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_MapRangeClamped_ReturnValue_1) == 0x00016C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_GetSocketLocation_ReturnValue) == 0x000170, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_VSize_ReturnValue) == 0x00017C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Add_VectorVector_ReturnValue) == 0x00018C, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000198, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Normal_ReturnValue) == 0x0001A4, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_VInterpTo_Constant_ReturnValue) == 0x0001B0, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_VInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001BC, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001C8, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_GetActorScale3D_ReturnValue) == 0x0001D4, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_UpdateReturnToOwner, CallFunc_VInterpTo_Constant_ReturnValue_1) == 0x0001E0, "Member 'BULLORANG_Base_C_UpdateReturnToOwner::CallFunc_VInterpTo_Constant_ReturnValue_1' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.RecallBullorang
// 0x000C (0x000C - 0x0000)
struct BULLORANG_Base_C_RecallBullorang final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Base_C_RecallBullorang) == 0x000004, "Wrong alignment on BULLORANG_Base_C_RecallBullorang");
static_assert(sizeof(BULLORANG_Base_C_RecallBullorang) == 0x00000C, "Wrong size on BULLORANG_Base_C_RecallBullorang");
static_assert(offsetof(BULLORANG_Base_C_RecallBullorang, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'BULLORANG_Base_C_RecallBullorang::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.BullorangDamageTrace
// 0x02D8 (0x02D8 - 0x0000)
struct BULLORANG_Base_C_BullorangDamageTrace final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PassThroughPlayer;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x0010(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         TraceRadius;                                       // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CurrentHit;                                        // 0x009C(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_AttribManager_C*                  AttribMan;                                         // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentHitActor;                                   // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CyberspaceWall_C*                   K2Node_DynamicCast_AsBP_Cyberspace_Wall;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACYBR_Decoy_C*                          K2Node_DynamicCast_AsCYBR_Decoy;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0230(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0248(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Base_C_BullorangDamageTrace) == 0x000008, "Wrong alignment on BULLORANG_Base_C_BullorangDamageTrace");
static_assert(sizeof(BULLORANG_Base_C_BullorangDamageTrace) == 0x0002D8, "Wrong size on BULLORANG_Base_C_BullorangDamageTrace");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, TargetLocation) == 0x000000, "Member 'BULLORANG_Base_C_BullorangDamageTrace::TargetLocation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, PassThroughPlayer) == 0x00000C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::PassThroughPlayer' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, Hit) == 0x000010, "Member 'BULLORANG_Base_C_BullorangDamageTrace::Hit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, TraceRadius) == 0x000098, "Member 'BULLORANG_Base_C_BullorangDamageTrace::TraceRadius' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CurrentHit) == 0x00009C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CurrentHit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, AttribMan) == 0x000128, "Member 'BULLORANG_Base_C_BullorangDamageTrace::AttribMan' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CurrentHitActor) == 0x000130, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CurrentHitActor' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'BULLORANG_Base_C_BullorangDamageTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, Temp_int_Array_Index_Variable) == 0x000140, "Member 'BULLORANG_Base_C_BullorangDamageTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000144, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000145, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_Time) == 0x000148, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_Distance) == 0x00014C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x00015C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000174, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_TraceStart) == 0x0001AC, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0001C8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_IsValid_ReturnValue) == 0x0001D1, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_IsValid_ReturnValue_1) == 0x0001D2, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Not_PreBool_ReturnValue) == 0x0001D3, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_MakeArray_Array) == 0x0001D8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_AsBP_Cyberspace_Wall) == 0x0001F0, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_AsBP_Cyberspace_Wall' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_bSuccess_1) == 0x0001F8, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Array_Contains_ReturnValue) == 0x0001F9, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001FA, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Array_Add_ReturnValue) == 0x0001FC, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_AsCYBR_Decoy) == 0x000200, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_AsCYBR_Decoy' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_bSuccess_2) == 0x000208, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000210, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, K2Node_DynamicCast_bSuccess_3) == 0x000218, "Member 'BULLORANG_Base_C_BullorangDamageTrace::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00021C, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_ApplyMod_ReturnValue) == 0x000228, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_SphereTraceMulti_OutHits) == 0x000230, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_SphereTraceMulti_ReturnValue) == 0x000240, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Array_Get_Item) == 0x000248, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BULLORANG_Base_C_BullorangDamageTrace, CallFunc_Less_IntInt_ReturnValue) == 0x0002D0, "Member 'BULLORANG_Base_C_BullorangDamageTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BULLORANG_Base.BULLORANG_Base_C.ReceiveStunningImpact
// 0x000C (0x000C - 0x0000)
struct BULLORANG_Base_C_ReceiveStunningImpact final
{
public:
	struct FVector                                ReflectionDirection;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Base_C_ReceiveStunningImpact) == 0x000004, "Wrong alignment on BULLORANG_Base_C_ReceiveStunningImpact");
static_assert(sizeof(BULLORANG_Base_C_ReceiveStunningImpact) == 0x00000C, "Wrong size on BULLORANG_Base_C_ReceiveStunningImpact");
static_assert(offsetof(BULLORANG_Base_C_ReceiveStunningImpact, ReflectionDirection) == 0x000000, "Member 'BULLORANG_Base_C_ReceiveStunningImpact::ReflectionDirection' has a wrong offset!");

}


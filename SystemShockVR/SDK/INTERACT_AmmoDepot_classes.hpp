#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_AmmoDepot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_AmmoDepotState_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_AmmoDepot.INTERACT_AmmoDepot_C
// 0x02F8 (0x0600 - 0x0308)
class AINTERACT_AmmoDepot_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_AmmoDepot_C;               // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ScannableObject_C*                COMP_ScannableObject;                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointOfInterestComponent_C*            PointOfInterestComponent;                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan__RightAmmoScreen;                             // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan__LeftAmmoScreen;                              // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_GunCabinet;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_CancelButton;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RightCabinetSpawnNode;                             // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LeftCabinetSpawnNode;                              // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_RightAmmoPanel;                               // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_LeftAmmoPanel;                                // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Scan_CoinSlot;                                     // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_AmmoDepot;                                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DepotFrame;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoCost;                                          // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AmmoPickupClassL;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AmmoPickupClassR;                                  // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGunCabinetOpen;                                  // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          HasBeenInitialized;                                // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	ENUM_AmmoDepotState                           CurrentState;                                      // 0x03AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB[0x5];                                      // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_AMMO_Base_C*                    LeftAmmoPickupActor;                               // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_AMMO_Base_C*                    RightAmmoPickupActor;                              // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   AlreadyPaidMessage;                                // 0x03C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   RequiresPaymentMessage;                            // 0x03E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AcceptedPaymentMessage;                            // 0x03F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UAnimMontage>            LeftPanelOpenMontage;                              // 0x0410(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            RightPanelOpenMontage;                             // 0x0438(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            LeftPanelCloseMontage;                             // 0x0460(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            RightPanelCloseMontage;                            // 0x0488(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FText                                   RefundProcessedMessage;                            // 0x04B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SelectAmmoMessage;                                 // 0x04C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TakeAmmoMessage;                                   // 0x04E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   AmmoDescriptionMessage;                            // 0x04F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ItemSoldOutMessage;                                // 0x0510(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   NoStockMessage;                                    // 0x0528(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UAnimMontage>            GunCabinetOpenMontage;                             // 0x0540(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            GunCabinetCloseMontage;                            // 0x0568(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               PaymentAcceptedSoundCue;                           // 0x0590(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               RefundProcessedSoundCue;                           // 0x05B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CompleteTutorialOnInteract;                        // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    BuyAmmoAchievementHandle;                          // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_INTERACT_AmmoDepot(int32 EntryPoint);
	void BndEvt__INTERACT_AmmoDepot_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeAmmoDepot();
	void HasAnyAmmoInStock(bool* Result);
	void InitializeAttributes();
	void CreateDynamicMaterial();
	void UpdateEmissiveStrength(float Scale);
	void UpdateScreenEmissiveStrength(float Scale);
	void UpdateGunCabinetLightIntensity(float IntensityScale);
	void UpdateAmmoSelectionScreen(int32 ScreenIndex, bool HasStock);
	void UpdateGunCabinetAnimState();
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void UpdateAmmoDepotVisibility(bool VisibilityState);
	void SetAmmoScreenDescription(int32 ScreenIndex, const class FText& Description);
	void OnPaidCost();
	void TryMakePayment(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	void TryRefundPayment(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	void TryOpenAmmoCabinet(int32 CabinetIndex, bool* Result);
	void SpawnAmmoPickupActor(int32 CabinetIndex);
	void TryBindAmmoRemovedEvent(class APICKUP_AMMO_Base_C* AmmoPickupActor);
	void EVENT_OnAmmoPickupRemoved(class AActor* DestroyedActor);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void ToggleGunCabinet();
	void TryCompleteTutorialOnInteract();
	void TryReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void CanReceiveItem(class UITEM_Base_C* Item, bool* Result);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_AmmoDepot_C">();
	}
	static class AINTERACT_AmmoDepot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_AmmoDepot_C>();
	}
};
static_assert(alignof(AINTERACT_AmmoDepot_C) == 0x000008, "Wrong alignment on AINTERACT_AmmoDepot_C");
static_assert(sizeof(AINTERACT_AmmoDepot_C) == 0x000600, "Wrong size on AINTERACT_AmmoDepot_C");
static_assert(offsetof(AINTERACT_AmmoDepot_C, UberGraphFrame_INTERACT_AmmoDepot_C) == 0x000308, "Member 'AINTERACT_AmmoDepot_C::UberGraphFrame_INTERACT_AmmoDepot_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, COMP_AttribManager) == 0x000310, "Member 'AINTERACT_AmmoDepot_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, COMP_ScannableObject) == 0x000318, "Member 'AINTERACT_AmmoDepot_C::COMP_ScannableObject' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, PointOfInterestComponent) == 0x000320, "Member 'AINTERACT_AmmoDepot_C::PointOfInterestComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan__RightAmmoScreen) == 0x000328, "Member 'AINTERACT_AmmoDepot_C::Scan__RightAmmoScreen' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan__LeftAmmoScreen) == 0x000330, "Member 'AINTERACT_AmmoDepot_C::Scan__LeftAmmoScreen' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan_GunCabinet) == 0x000338, "Member 'AINTERACT_AmmoDepot_C::Scan_GunCabinet' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan_CancelButton) == 0x000340, "Member 'AINTERACT_AmmoDepot_C::Scan_CancelButton' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RightCabinetSpawnNode) == 0x000348, "Member 'AINTERACT_AmmoDepot_C::RightCabinetSpawnNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, LeftCabinetSpawnNode) == 0x000350, "Member 'AINTERACT_AmmoDepot_C::LeftCabinetSpawnNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan_RightAmmoPanel) == 0x000358, "Member 'AINTERACT_AmmoDepot_C::Scan_RightAmmoPanel' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan_LeftAmmoPanel) == 0x000360, "Member 'AINTERACT_AmmoDepot_C::Scan_LeftAmmoPanel' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, COMP_VoxelCullable) == 0x000368, "Member 'AINTERACT_AmmoDepot_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, SpotLight) == 0x000370, "Member 'AINTERACT_AmmoDepot_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, Scan_CoinSlot) == 0x000378, "Member 'AINTERACT_AmmoDepot_C::Scan_CoinSlot' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, SK_AmmoDepot) == 0x000380, "Member 'AINTERACT_AmmoDepot_C::SK_AmmoDepot' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, DepotFrame) == 0x000388, "Member 'AINTERACT_AmmoDepot_C::DepotFrame' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AmmoCost) == 0x000390, "Member 'AINTERACT_AmmoDepot_C::AmmoCost' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AmmoPickupClassL) == 0x000398, "Member 'AINTERACT_AmmoDepot_C::AmmoPickupClassL' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AmmoPickupClassR) == 0x0003A0, "Member 'AINTERACT_AmmoDepot_C::AmmoPickupClassR' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, IsGunCabinetOpen) == 0x0003A8, "Member 'AINTERACT_AmmoDepot_C::IsGunCabinetOpen' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, HasBeenInitialized) == 0x0003A9, "Member 'AINTERACT_AmmoDepot_C::HasBeenInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, CurrentState) == 0x0003AA, "Member 'AINTERACT_AmmoDepot_C::CurrentState' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, LeftAmmoPickupActor) == 0x0003B0, "Member 'AINTERACT_AmmoDepot_C::LeftAmmoPickupActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RightAmmoPickupActor) == 0x0003B8, "Member 'AINTERACT_AmmoDepot_C::RightAmmoPickupActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, DynamicMaterial) == 0x0003C0, "Member 'AINTERACT_AmmoDepot_C::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AlreadyPaidMessage) == 0x0003C8, "Member 'AINTERACT_AmmoDepot_C::AlreadyPaidMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RequiresPaymentMessage) == 0x0003E0, "Member 'AINTERACT_AmmoDepot_C::RequiresPaymentMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AcceptedPaymentMessage) == 0x0003F8, "Member 'AINTERACT_AmmoDepot_C::AcceptedPaymentMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, LeftPanelOpenMontage) == 0x000410, "Member 'AINTERACT_AmmoDepot_C::LeftPanelOpenMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RightPanelOpenMontage) == 0x000438, "Member 'AINTERACT_AmmoDepot_C::RightPanelOpenMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, LeftPanelCloseMontage) == 0x000460, "Member 'AINTERACT_AmmoDepot_C::LeftPanelCloseMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RightPanelCloseMontage) == 0x000488, "Member 'AINTERACT_AmmoDepot_C::RightPanelCloseMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RefundProcessedMessage) == 0x0004B0, "Member 'AINTERACT_AmmoDepot_C::RefundProcessedMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, SelectAmmoMessage) == 0x0004C8, "Member 'AINTERACT_AmmoDepot_C::SelectAmmoMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, TakeAmmoMessage) == 0x0004E0, "Member 'AINTERACT_AmmoDepot_C::TakeAmmoMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, AmmoDescriptionMessage) == 0x0004F8, "Member 'AINTERACT_AmmoDepot_C::AmmoDescriptionMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, ItemSoldOutMessage) == 0x000510, "Member 'AINTERACT_AmmoDepot_C::ItemSoldOutMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, NoStockMessage) == 0x000528, "Member 'AINTERACT_AmmoDepot_C::NoStockMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, GunCabinetOpenMontage) == 0x000540, "Member 'AINTERACT_AmmoDepot_C::GunCabinetOpenMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, GunCabinetCloseMontage) == 0x000568, "Member 'AINTERACT_AmmoDepot_C::GunCabinetCloseMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, PaymentAcceptedSoundCue) == 0x000590, "Member 'AINTERACT_AmmoDepot_C::PaymentAcceptedSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, RefundProcessedSoundCue) == 0x0005B8, "Member 'AINTERACT_AmmoDepot_C::RefundProcessedSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, CompleteTutorialOnInteract) == 0x0005E0, "Member 'AINTERACT_AmmoDepot_C::CompleteTutorialOnInteract' has a wrong offset!");
static_assert(offsetof(AINTERACT_AmmoDepot_C, BuyAmmoAchievementHandle) == 0x0005F0, "Member 'AINTERACT_AmmoDepot_C::BuyAmmoAchievementHandle' has a wrong offset!");

}


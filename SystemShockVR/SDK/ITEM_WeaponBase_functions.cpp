#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_WeaponBase

#include "Basic.hpp"

#include "ITEM_WeaponBase_classes.hpp"
#include "ITEM_WeaponBase_parameters.hpp"


namespace SDK
{

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnModeChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_WeaponBase_C*               Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnModeChanged__DelegateSignature(class UITEM_WeaponBase_C* Weapon, int32 OldMode, int32 NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnModeChanged__DelegateSignature");

	Params::ITEM_WeaponBase_C_OnModeChanged__DelegateSignature Parms{};

	Parms.Weapon = Weapon;
	Parms.OldMode = OldMode;
	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnHolsterFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::OnHolsterFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnHolsterFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnModkitInstalled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_WeaponBase_C*               Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UITEM_WeaponModKit_Base_C*        ModKit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnModkitInstalled__DelegateSignature(class UITEM_WeaponBase_C* Weapon, class UITEM_WeaponModKit_Base_C* ModKit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnModkitInstalled__DelegateSignature");

	Params::ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature Parms{};

	Parms.Weapon = Weapon;
	Parms.ModKit = ModKit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ExecuteUbergraph_ITEM_WeaponBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::ExecuteUbergraph_ITEM_WeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ExecuteUbergraph_ITEM_WeaponBase");

	Params::ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.BlockingLoadHolsterMontage
// (BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::BlockingLoadHolsterMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "BlockingLoadHolsterMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.BlockingLoadDrawMontage
// (BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::BlockingLoadDrawMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "BlockingLoadDrawMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.StreamWeaponMontages
// (BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::StreamWeaponMontages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "StreamWeaponMontages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.StreamCurrentWeaponModeAssets
// (BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::StreamCurrentWeaponModeAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "StreamCurrentWeaponModeAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.StreamWeaponAssets
// (BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::StreamWeaponAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "StreamWeaponAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08");

	Params::ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_F95A27484EEBCA2C60555B9F4C909E23
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_F95A27484EEBCA2C60555B9F4C909E23(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_F95A27484EEBCA2C60555B9F4C909E23");

	Params::ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_982DF01C4672B4DF3610A791CBB18814
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_982DF01C4672B4DF3610A791CBB18814(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_982DF01C4672B4DF3610A791CBB18814");

	Params::ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_E731026D4682628E706B3E9E5E5543CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_E731026D4682628E706B3E9E5E5543CE(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_E731026D4682628E706B3E9E5E5543CE");

	Params::ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00");

	Params::ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_78FD906845BE6D6089755093C72A442C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::OnLoaded_78FD906845BE6D6089755093C72A442C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnLoaded_78FD906845BE6D6089755093C72A442C");

	Params::ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetEquipSlotActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::SetEquipSlotActive(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetEquipSlotActive");

	Params::ITEM_WeaponBase_C_SetEquipSlotActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EnableDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::EnableDamage(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "EnableDamage");

	Params::ITEM_WeaponBase_C_EnableDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.DisableDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::DisableDamage(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "DisableDamage");

	Params::ITEM_WeaponBase_C_DisableDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ReceiveAnimationMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::ReceiveAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ReceiveAnimationMessage");

	Params::ITEM_WeaponBase_C_ReceiveAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EVENT_OnHolsterFinished
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::EVENT_OnHolsterFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "EVENT_OnHolsterFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetModeCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetModeCount(int32* Count_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetModeCount");

	Params::ITEM_WeaponBase_C_GetModeCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count_0 != nullptr)
		*Count_0 = Parms.Count_0;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetCurrentMode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSTRUCT_WeaponMode               Mode                                                   (Parm, OutParm, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetCurrentMode(struct FSTRUCT_WeaponMode* Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetCurrentMode");

	Params::ITEM_WeaponBase_C_GetCurrentMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mode != nullptr)
		*Mode = std::move(Parms.Mode);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponModeDefaults
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_WeaponMode               Mode                                                   (Parm, OutParm, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetWeaponModeDefaults(int32 Index_0, struct FSTRUCT_WeaponMode* Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWeaponModeDefaults");

	Params::ITEM_WeaponBase_C_GetWeaponModeDefaults Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Mode != nullptr)
		*Mode = std::move(Parms.Mode);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponMode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_WeaponMode               Mode                                                   (Parm, OutParm, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetWeaponMode(int32 Index_0, struct FSTRUCT_WeaponMode* Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWeaponMode");

	Params::ITEM_WeaponBase_C_GetWeaponMode Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Mode != nullptr)
		*Mode = std::move(Parms.Mode);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponModeDisplayName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ModeIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShortName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Result                                                 (Parm, OutParm)

void UITEM_WeaponBase_C::GetWeaponModeDisplayName(int32 ModeIndex, bool ShortName, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWeaponModeDisplayName");

	Params::ITEM_WeaponBase_C_GetWeaponModeDisplayName Parms{};

	Parms.ModeIndex = ModeIndex;
	Parms.ShortName = ShortName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWeaponModeMaintain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ModeIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsWeaponModeMaintain(int32 ModeIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsWeaponModeMaintain");

	Params::ITEM_WeaponBase_C_IsWeaponModeMaintain Parms{};

	Parms.ModeIndex = ModeIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanCycleToMode
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ModeIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::CanCycleToMode(int32 ModeIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CanCycleToMode");

	Params::ITEM_WeaponBase_C_CanCycleToMode Parms{};

	Parms.ModeIndex = ModeIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetCurrentMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::SetCurrentMode(int32 Mode, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetCurrentMode");

	Params::ITEM_WeaponBase_C_SetCurrentMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CycleCurrentMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::CycleCurrentMode(bool Previous, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CycleCurrentMode");

	Params::ITEM_WeaponBase_C_CycleCurrentMode Parms{};

	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetupMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::SetupMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetupMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EVENT_OnShowDisplayMesh
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::EVENT_OnShowDisplayMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "EVENT_OnShowDisplayMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnWeaponBecameActivatable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowImmediately                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnWeaponBecameActivatable");

	Params::ITEM_WeaponBase_C_OnWeaponBecameActivatable Parms{};

	Parms.Character = Character;
	Parms.ShowImmediately = ShowImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryBecomeActivatableImmediately
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowImmediately                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryBecomeActivatableImmediately(bool ShowImmediately, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryBecomeActivatableImmediately");

	Params::ITEM_WeaponBase_C_TryBecomeActivatableImmediately Parms{};

	Parms.ShowImmediately = ShowImmediately;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetRecoilTemplate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSTRUCT_WeaponRecoilTemplate     Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetRecoilTemplate(struct FSTRUCT_WeaponRecoilTemplate* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetRecoilTemplate");

	Params::ITEM_WeaponBase_C_GetRecoilTemplate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.BeginWaitingToHolster
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterAction_C*               HolsterAction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::BeginWaitingToHolster(class UCharacterAction_C* HolsterAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "BeginWaitingToHolster");

	Params::ITEM_WeaponBase_C_BeginWaitingToHolster Parms{};

	Parms.HolsterAction = HolsterAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ResumeWaitingToHolster
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Inventory_C*                FromInventory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::ResumeWaitingToHolster(class UCOMP_Inventory_C* FromInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ResumeWaitingToHolster");

	Params::ITEM_WeaponBase_C_ResumeWaitingToHolster Parms{};

	Parms.FromInventory = FromInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CancelWaitingToHolster
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::CancelWaitingToHolster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CancelWaitingToHolster");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HandleHolsterFinishedEvents
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::HandleHolsterFinishedEvents(class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "HandleHolsterFinishedEvents");

	Params::ITEM_WeaponBase_C_HandleHolsterFinishedEvents Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWaitingToHolsterInternal
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::SetWaitingToHolsterInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetWaitingToHolsterInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponMeshComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::SetWeaponMeshComponent(class UMeshComponent* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetWeaponMeshComponent");

	Params::ITEM_WeaponBase_C_SetWeaponMeshComponent Parms{};

	Parms.MeshComponent = MeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyAccuracyChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::ApplyAccuracyChange(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ApplyAccuracyChange");

	Params::ITEM_WeaponBase_C_ApplyAccuracyChange Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyRecoil
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasKickback                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::ApplyRecoil(float Scale, bool HasKickback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ApplyRecoil");

	Params::ITEM_WeaponBase_C_ApplyRecoil Parms{};

	Parms.Scale = Scale;
	Parms.HasKickback = HasKickback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeParticleFX
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNiagaraComponent*                SpawnedComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::PlayDischargeParticleFX(bool AutoDestroy, class UNiagaraComponent** SpawnedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayDischargeParticleFX");

	Params::ITEM_WeaponBase_C_PlayDischargeParticleFX Parms{};

	Parms.AutoDestroy = AutoDestroy;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedComponent != nullptr)
		*SpawnedComponent = Parms.SpawnedComponent;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeSoundCue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VolumeScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PitchScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::PlayDischargeSoundCue(class USoundCue* SoundCue, float VolumeScale, float PitchScale, class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayDischargeSoundCue");

	Params::ITEM_WeaponBase_C_PlayDischargeSoundCue Parms{};

	Parms.SoundCue = SoundCue;
	Parms.VolumeScale = VolumeScale;
	Parms.PitchScale = PitchScale;

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeSoundFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   VolumeScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PitchScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::PlayDischargeSoundFX(float VolumeScale, float PitchScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayDischargeSoundFX");

	Params::ITEM_WeaponBase_C_PlayDischargeSoundFX Parms{};

	Parms.VolumeScale = VolumeScale;
	Parms.PitchScale = PitchScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyAccuracyChangeAndRecoil
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasKickback                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::ApplyAccuracyChangeAndRecoil(bool HasKickback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ApplyAccuracyChangeAndRecoil");

	Params::ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil Parms{};

	Parms.HasKickback = HasKickback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeFailSoundFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::PlayDischargeFailSoundFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayDischargeFailSoundFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsHolsterActionPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsHolsterActionPlaying(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsHolsterActionPlaying");

	Params::ITEM_WeaponBase_C_IsHolsterActionPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMeshComponent*                   Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetWeaponMeshComponent(class UMeshComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWeaponMeshComponent");

	Params::ITEM_WeaponBase_C_GetWeaponMeshComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWaitingToHolster
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsWaitingToHolster(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsWaitingToHolster");

	Params::ITEM_WeaponBase_C_IsWaitingToHolster Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWaitingToDrop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsWaitingToDrop(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsWaitingToDrop");

	Params::ITEM_WeaponBase_C_IsWaitingToDrop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HasInstalledAnyModKits
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::HasInstalledAnyModKits(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "HasInstalledAnyModKits");

	Params::ITEM_WeaponBase_C_HasInstalledAnyModKits Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HasInstalledModKitClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ModKitClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::HasInstalledModKitClass(class UClass* ModKitClass, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "HasInstalledModKitClass");

	Params::ITEM_WeaponBase_C_HasInstalledModKitClass Parms{};

	Parms.ModKitClass = ModKitClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetInstalledAppearanceModifiers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UITEM_WeaponModKit_Base_C*>Result                                                 (Parm, OutParm)

void UITEM_WeaponBase_C::GetInstalledAppearanceModifiers(TArray<class UITEM_WeaponModKit_Base_C*>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetInstalledAppearanceModifiers");

	Params::ITEM_WeaponBase_C_GetInstalledAppearanceModifiers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetDrawMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetDrawMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetDrawMontage");

	Params::ITEM_WeaponBase_C_GetDrawMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EquipTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::EquipTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "EquipTick");

	Params::ITEM_WeaponBase_C_EquipTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHolsterMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetHolsterMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetHolsterMontage");

	Params::ITEM_WeaponBase_C_GetHolsterMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanAimWithWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::CanAimWithWeapon(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CanAimWithWeapon");

	Params::ITEM_WeaponBase_C_CanAimWithWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetIdleSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimSequenceBase*                Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetIdleSequence(class UAnimSequenceBase** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetIdleSequence");

	Params::ITEM_WeaponBase_C_GetIdleSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWalkSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimSequenceBase*                Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetWalkSequence(class UAnimSequenceBase** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWalkSequence");

	Params::ITEM_WeaponBase_C_GetWalkSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetSprintSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimSequenceBase*                Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetSprintSequence(class UAnimSequenceBase** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetSprintSequence");

	Params::ITEM_WeaponBase_C_GetSprintSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryBeginReloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryBeginReloading(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryBeginReloading");

	Params::ITEM_WeaponBase_C_TryBeginReloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryInstallWeaponModKit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_WeaponModKit_Base_C*        ModKit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryInstallWeaponModKit(class UITEM_WeaponModKit_Base_C* ModKit, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryInstallWeaponModKit");

	Params::ITEM_WeaponBase_C_TryInstallWeaponModKit Parms{};

	Parms.ModKit = ModKit;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryCreateModKitInstances
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryCreateModKitInstances(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryCreateModKitInstances");

	Params::ITEM_WeaponBase_C_TryCreateModKitInstances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWeaponObstructed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsWeaponObstructed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsWeaponObstructed");

	Params::ITEM_WeaponBase_C_IsWeaponObstructed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponObstructionDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetWeaponObstructionDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetWeaponObstructionDistance");

	Params::ITEM_WeaponBase_C_GetWeaponObstructionDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryUpdateFirstPersonAttachments
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::TryUpdateFirstPersonAttachments(class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryUpdateFirstPersonAttachments");

	Params::ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponObstructed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::SetWeaponObstructed(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetWeaponObstructed");

	Params::ITEM_WeaponBase_C_SetWeaponObstructed Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayForceFeedbackEffect
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedback                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::PlayForceFeedbackEffect(class UForceFeedbackEffect* ForceFeedback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayForceFeedbackEffect");

	Params::ITEM_WeaponBase_C_PlayForceFeedbackEffect Parms{};

	Parms.ForceFeedback = ForceFeedback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeForceFeedback
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::PlayDischargeForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "PlayDischargeForceFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.UpdateDisplayMesh
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::UpdateDisplayMesh(class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "UpdateDisplayMesh");

	Params::ITEM_WeaponBase_C_UpdateDisplayMesh Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponObstructionDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::SetWeaponObstructionDistance(float NewDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetWeaponObstructionDistance");

	Params::ITEM_WeaponBase_C_SetWeaponObstructionDistance Parms{};

	Parms.NewDistance = NewDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetBarrelSocketName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::SetBarrelSocketName(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetBarrelSocketName");

	Params::ITEM_WeaponBase_C_SetBarrelSocketName Parms{};

	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ResultCount                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetHotbarCount(int32* ResultCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetHotbarCount");

	Params::ITEM_WeaponBase_C_GetHotbarCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ResultCount != nullptr)
		*ResultCount = Parms.ResultCount;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         ResultIcon                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetHotbarIcon(class UTexture** ResultIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetHotbarIcon");

	Params::ITEM_WeaponBase_C_GetHotbarIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ResultIcon != nullptr)
		*ResultIcon = Parms.ResultIcon;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ActivateHotbarSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::ActivateHotbarSlot(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "ActivateHotbarSlot");

	Params::ITEM_WeaponBase_C_ActivateHotbarSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.DeactivateHotbarSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::DeactivateHotbarSlot(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "DeactivateHotbarSlot");

	Params::ITEM_WeaponBase_C_DeactivateHotbarSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void UITEM_WeaponBase_C::GetHotbarDisplayName(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetHotbarDisplayName");

	Params::ITEM_WeaponBase_C_GetHotbarDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetEquipState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::GetEquipState(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetEquipState");

	Params::ITEM_WeaponBase_C_GetEquipState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetOwner(class AActor** Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetOwner");

	Params::ITEM_WeaponBase_C_GetOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Owner != nullptr)
		*Owner = Parms.Owner;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryUseConsumable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryUseConsumable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryUseConsumable");

	Params::ITEM_WeaponBase_C_TryUseConsumable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnAddedToInventory
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_WeaponBase_C::OnAddedToInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnAddedToInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.InitializeItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryBag_C*                  Bag_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::InitializeItem(class UInventoryBag_C* Bag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "InitializeItem");

	Params::ITEM_WeaponBase_C_InitializeItem Parms{};

	Parms.Bag_0 = Bag_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnInventoryChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Inventory_C*                PrevInventory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::OnInventoryChanged(class UCOMP_Inventory_C* PrevInventory, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnInventoryChanged");

	Params::ITEM_WeaponBase_C_OnInventoryChanged Parms{};

	Parms.PrevInventory = PrevInventory;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanUnslot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::CanUnslot(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CanUnslot");

	Params::ITEM_WeaponBase_C_CanUnslot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnBecomeActivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::OnBecomeActivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnBecomeActivatable");

	Params::ITEM_WeaponBase_C_OnBecomeActivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnBecomeUnactivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::OnBecomeUnactivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "OnBecomeUnactivatable");

	Params::ITEM_WeaponBase_C_OnBecomeUnactivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetEquipped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::SetEquipped(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "SetEquipped");

	Params::ITEM_WeaponBase_C_SetEquipped Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsEquipped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsEquipped(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsEquipped");

	Params::ITEM_WeaponBase_C_IsEquipped Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetInventoryItemDetailsClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           InventoryItemDetailsWidget                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetInventoryItemDetailsClass(class UClass** InventoryItemDetailsWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetInventoryItemDetailsClass");

	Params::ITEM_WeaponBase_C_GetInventoryItemDetailsClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InventoryItemDetailsWidget != nullptr)
		*InventoryItemDetailsWidget = Parms.InventoryItemDetailsWidget;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanBecomeActivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::CanBecomeActivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "CanBecomeActivatable");

	Params::ITEM_WeaponBase_C_CanBecomeActivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarSlottableObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::GetHotbarSlottableObject(bool* Valid, TScriptInterface<class IINTERF_HotbarSlottable_C>* SlottableObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetHotbarSlottableObject");

	Params::ITEM_WeaponBase_C_GetHotbarSlottableObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (SlottableObject != nullptr)
		*SlottableObject = Parms.SlottableObject;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsEquippable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::IsEquippable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "IsEquippable");

	Params::ITEM_WeaponBase_C_IsEquippable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryHandleDropEvent
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SceneComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        RelativeOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_WeaponBase_C::TryHandleDropEvent(class USceneComponent* SceneComponent, const struct FVector2D& RelativeOffset, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "TryHandleDropEvent");

	Params::ITEM_WeaponBase_C_TryHandleDropEvent Parms{};

	Parms.SceneComponent = SceneComponent;
	Parms.RelativeOffset = std::move(RelativeOffset);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetIconRenderClassCollection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FObjectClassCollection           Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void UITEM_WeaponBase_C::GetIconRenderClassCollection(struct FObjectClassCollection* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_WeaponBase_C", "GetIconRenderClassCollection");

	Params::ITEM_WeaponBase_C_GetIconRenderClassCollection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootTableFunctionLibrary

#include "Basic.hpp"

#include "LootTableFunctionLibrary_classes.hpp"
#include "LootTableFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GetLootEntryHasContent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSTRUCT_LootTableEntry           LootEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULootTableFunctionLibrary_C::GetLootEntryHasContent(struct FSTRUCT_LootTableEntry& LootEntry, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GetLootEntryHasContent");

	Params::LootTableFunctionLibrary_C_GetLootEntryHasContent Parms{};

	Parms.LootEntry = std::move(LootEntry);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LootEntry = std::move(Parms.LootEntry);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.CanLootItemReceiveBonus
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULootTableFunctionLibrary_C::CanLootItemReceiveBonus(class UClass* ItemClass, const struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "CanLootItemReceiveBonus");

	Params::LootTableFunctionLibrary_C_CanLootItemReceiveBonus Parms{};

	Parms.ItemClass = ItemClass;
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GetLootItemCountWithBonusData
// (Static, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// struct FSTRUCT_LootTableEntry           LootEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GetLootItemCountWithBonusData(class UClass* ItemClass, struct FRandomStream& RandomStream, struct FSTRUCT_LootTableEntry& LootEntry, struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GetLootItemCountWithBonusData");

	Params::LootTableFunctionLibrary_C_GetLootItemCountWithBonusData Parms{};

	Parms.ItemClass = ItemClass;
	Parms.RandomStream = std::move(RandomStream);
	Parms.LootEntry = std::move(LootEntry);
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RandomStream = std::move(Parms.RandomStream);
	LootEntry = std::move(Parms.LootEntry);
	BonusData = std::move(Parms.BonusData);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GetRandomSelectionFromLootEntries
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_LootTableEntry>   LootEntries                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ResultIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GetRandomSelectionFromLootEntries(TArray<struct FSTRUCT_LootTableEntry>& LootEntries, struct FRandomStream& RandomStream, class UObject* __WorldContext, int32* ResultIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GetRandomSelectionFromLootEntries");

	Params::LootTableFunctionLibrary_C_GetRandomSelectionFromLootEntries Parms{};

	Parms.LootEntries = std::move(LootEntries);
	Parms.RandomStream = std::move(RandomStream);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LootEntries = std::move(Parms.LootEntries);
	RandomStream = std::move(Parms.RandomStream);

	if (ResultIndex != nullptr)
		*ResultIndex = Parms.ResultIndex;
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GenerateRandomSelectionsFromLootEntries
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_LootTableEntry>   LootEntries                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// int32                                   SelectionCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           ResultIndices                                          (Parm, OutParm)

void ULootTableFunctionLibrary_C::GenerateRandomSelectionsFromLootEntries(TArray<struct FSTRUCT_LootTableEntry>& LootEntries, struct FRandomStream& RandomStream, int32 SelectionCount, class UObject* __WorldContext, TArray<int32>* ResultIndices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GenerateRandomSelectionsFromLootEntries");

	Params::LootTableFunctionLibrary_C_GenerateRandomSelectionsFromLootEntries Parms{};

	Parms.LootEntries = std::move(LootEntries);
	Parms.RandomStream = std::move(RandomStream);
	Parms.SelectionCount = SelectionCount;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LootEntries = std::move(Parms.LootEntries);
	RandomStream = std::move(Parms.RandomStream);

	if (ResultIndices != nullptr)
		*ResultIndices = std::move(Parms.ResultIndices);
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GetLootEntriesFromDataTable
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       LootTable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSTRUCT_LootTableEntry>   ResultEntries                                          (Parm, OutParm)

void ULootTableFunctionLibrary_C::GetLootEntriesFromDataTable(class UDataTable* LootTable, class UObject* __WorldContext, TArray<struct FSTRUCT_LootTableEntry>* ResultEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GetLootEntriesFromDataTable");

	Params::LootTableFunctionLibrary_C_GetLootEntriesFromDataTable Parms{};

	Parms.LootTable = LootTable;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ResultEntries != nullptr)
		*ResultEntries = std::move(Parms.ResultEntries);
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GenerateLootFromDataTable
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       LootTable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// int32                                   SelectionCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCOMP_Inventory_C*                Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GenerateLootFromDataTable(class UDataTable* LootTable, struct FRandomStream& RandomStream, int32 SelectionCount, class UCOMP_Inventory_C* Inventory, const struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GenerateLootFromDataTable");

	Params::LootTableFunctionLibrary_C_GenerateLootFromDataTable Parms{};

	Parms.LootTable = LootTable;
	Parms.RandomStream = std::move(RandomStream);
	Parms.SelectionCount = SelectionCount;
	Parms.Inventory = Inventory;
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RandomStream = std::move(Parms.RandomStream);
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GenerateLootFromEmbeddedTable
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTRUCT_EmbeddedLootTable        EmbeddedTable                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// class UCOMP_Inventory_C*                Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GenerateLootFromEmbeddedTable(struct FSTRUCT_EmbeddedLootTable& EmbeddedTable, struct FRandomStream& RandomStream, class UCOMP_Inventory_C* Inventory, const struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GenerateLootFromEmbeddedTable");

	Params::LootTableFunctionLibrary_C_GenerateLootFromEmbeddedTable Parms{};

	Parms.EmbeddedTable = std::move(EmbeddedTable);
	Parms.RandomStream = std::move(RandomStream);
	Parms.Inventory = Inventory;
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	EmbeddedTable = std::move(Parms.EmbeddedTable);
	RandomStream = std::move(Parms.RandomStream);
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GenerateLootFromLootEntries
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_LootTableEntry>   LootEntries                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// int32                                   SelectionCount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCOMP_Inventory_C*                Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GenerateLootFromLootEntries(TArray<struct FSTRUCT_LootTableEntry>& LootEntries, struct FRandomStream& RandomStream, int32 SelectionCount, class UCOMP_Inventory_C* Inventory, struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GenerateLootFromLootEntries");

	Params::LootTableFunctionLibrary_C_GenerateLootFromLootEntries Parms{};

	Parms.LootEntries = std::move(LootEntries);
	Parms.RandomStream = std::move(RandomStream);
	Parms.SelectionCount = SelectionCount;
	Parms.Inventory = Inventory;
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LootEntries = std::move(Parms.LootEntries);
	RandomStream = std::move(Parms.RandomStream);
	BonusData = std::move(Parms.BonusData);
}


// Function LootTableFunctionLibrary.LootTableFunctionLibrary_C.GenerateLootFromSelectedEntry
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_LootTableEntry>   LootEntries                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRandomStream                    RandomStream                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// int32                                   SelectedIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCOMP_Inventory_C*                Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_LootBonusData            BonusData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULootTableFunctionLibrary_C::GenerateLootFromSelectedEntry(TArray<struct FSTRUCT_LootTableEntry>& LootEntries, struct FRandomStream& RandomStream, int32 SelectedIndex, class UCOMP_Inventory_C* Inventory, struct FSTRUCT_LootBonusData& BonusData, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LootTableFunctionLibrary_C", "GenerateLootFromSelectedEntry");

	Params::LootTableFunctionLibrary_C_GenerateLootFromSelectedEntry Parms{};

	Parms.LootEntries = std::move(LootEntries);
	Parms.RandomStream = std::move(RandomStream);
	Parms.SelectedIndex = SelectedIndex;
	Parms.Inventory = Inventory;
	Parms.BonusData = std::move(BonusData);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LootEntries = std::move(Parms.LootEntries);
	RandomStream = std::move(Parms.RandomStream);
	BonusData = std::move(Parms.BonusData);
}

}


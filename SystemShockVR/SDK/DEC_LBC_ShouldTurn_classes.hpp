#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_LBC_ShouldTurn

#include "Basic.hpp"

#include "ENUM_LBC_DirectionBehavior_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DEC_LBC_ShouldTurn.DEC_LBC_ShouldTurn_C
// 0x0010 (0x00B0 - 0x00A0)
class UDEC_LBC_ShouldTurn_C final : public UBTDecorator_BlueprintBase
{
public:
	class APAWN_Enemy_C*                          Pawn;                                              // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LBC_DirectionBehavior                    ConditionToCheck;                                  // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheck(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DEC_LBC_ShouldTurn_C">();
	}
	static class UDEC_LBC_ShouldTurn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDEC_LBC_ShouldTurn_C>();
	}
};
static_assert(alignof(UDEC_LBC_ShouldTurn_C) == 0x000008, "Wrong alignment on UDEC_LBC_ShouldTurn_C");
static_assert(sizeof(UDEC_LBC_ShouldTurn_C) == 0x0000B0, "Wrong size on UDEC_LBC_ShouldTurn_C");
static_assert(offsetof(UDEC_LBC_ShouldTurn_C, Pawn) == 0x0000A0, "Member 'UDEC_LBC_ShouldTurn_C::Pawn' has a wrong offset!");
static_assert(offsetof(UDEC_LBC_ShouldTurn_C, ConditionToCheck) == 0x0000A8, "Member 'UDEC_LBC_ShouldTurn_C::ConditionToCheck' has a wrong offset!");

}


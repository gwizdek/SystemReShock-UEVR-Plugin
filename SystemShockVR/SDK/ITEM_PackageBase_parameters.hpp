#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_PackageBase

#include "Basic.hpp"

#include "STRUCT_SoftItemParams_structs.hpp"


namespace SDK::Params
{

// Function ITEM_PackageBase.ITEM_PackageBase_C.OpenPackageIntoInventory
// 0x0020 (0x0020 - 0x0000)
struct ITEM_PackageBase_C_OpenPackageIntoInventory final
{
public:
	class UCOMP_Inventory_C*                      DestInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyItem_Result;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItemsFromPackage_Result;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_PackageBase_C_OpenPackageIntoInventory) == 0x000008, "Wrong alignment on ITEM_PackageBase_C_OpenPackageIntoInventory");
static_assert(sizeof(ITEM_PackageBase_C_OpenPackageIntoInventory) == 0x000020, "Wrong size on ITEM_PackageBase_C_OpenPackageIntoInventory");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoInventory, DestInventory) == 0x000000, "Member 'ITEM_PackageBase_C_OpenPackageIntoInventory::DestInventory' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoInventory, Result) == 0x000008, "Member 'ITEM_PackageBase_C_OpenPackageIntoInventory::Result' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoInventory, CallFunc_DestroyItem_Result) == 0x000009, "Member 'ITEM_PackageBase_C_OpenPackageIntoInventory::CallFunc_DestroyItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoInventory, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'ITEM_PackageBase_C_OpenPackageIntoInventory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoInventory, CallFunc_GrantItemsFromPackage_Result) == 0x000018, "Member 'ITEM_PackageBase_C_OpenPackageIntoInventory::CallFunc_GrantItemsFromPackage_Result' has a wrong offset!");

// Function ITEM_PackageBase.ITEM_PackageBase_C.OpenPackageIntoBag
// 0x0020 (0x0020 - 0x0000)
struct ITEM_PackageBase_C_OpenPackageIntoBag final
{
public:
	class UInventoryBag_C*                        DestBag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyItem_Result;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItemsFromPackage_Result;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_PackageBase_C_OpenPackageIntoBag) == 0x000008, "Wrong alignment on ITEM_PackageBase_C_OpenPackageIntoBag");
static_assert(sizeof(ITEM_PackageBase_C_OpenPackageIntoBag) == 0x000020, "Wrong size on ITEM_PackageBase_C_OpenPackageIntoBag");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoBag, DestBag) == 0x000000, "Member 'ITEM_PackageBase_C_OpenPackageIntoBag::DestBag' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoBag, Result) == 0x000008, "Member 'ITEM_PackageBase_C_OpenPackageIntoBag::Result' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoBag, CallFunc_DestroyItem_Result) == 0x000009, "Member 'ITEM_PackageBase_C_OpenPackageIntoBag::CallFunc_DestroyItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoBag, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'ITEM_PackageBase_C_OpenPackageIntoBag::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_OpenPackageIntoBag, CallFunc_GrantItemsFromPackage_Result) == 0x000018, "Member 'ITEM_PackageBase_C_OpenPackageIntoBag::CallFunc_GrantItemsFromPackage_Result' has a wrong offset!");

// Function ITEM_PackageBase.ITEM_PackageBase_C.GetItemCountInPackage
// 0x0078 (0x0078 - 0x0000)
struct ITEM_PackageBase_C_GetItemCountInPackage final
{
public:
	TSoftClassPtr<class UClass>                   ItemClass;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_SoftItemParams                 CallFunc_Array_Get_Item;                           // 0x0040(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_PackageBase_C_GetItemCountInPackage) == 0x000008, "Wrong alignment on ITEM_PackageBase_C_GetItemCountInPackage");
static_assert(sizeof(ITEM_PackageBase_C_GetItemCountInPackage) == 0x000078, "Wrong size on ITEM_PackageBase_C_GetItemCountInPackage");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, ItemClass) == 0x000000, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::ItemClass' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, Result) == 0x000028, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, CallFunc_Array_Get_Item) == 0x000040, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_PackageBase_C_GetItemCountInPackage, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000071, "Member 'ITEM_PackageBase_C_GetItemCountInPackage::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");

}


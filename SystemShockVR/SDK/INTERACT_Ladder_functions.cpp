#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Ladder

#include "Basic.hpp"

#include "INTERACT_Ladder_classes.hpp"
#include "INTERACT_Ladder_parameters.hpp"


namespace SDK
{

// Function INTERACT_Ladder.INTERACT_Ladder_C.ExecuteUbergraph_INTERACT_Ladder
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::ExecuteUbergraph_INTERACT_Ladder(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "ExecuteUbergraph_INTERACT_Ladder");

	Params::INTERACT_Ladder_C_ExecuteUbergraph_INTERACT_Ladder Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "ReceiveTick");

	Params::INTERACT_Ladder_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_Ladder_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.InitializeLadder
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Ladder_C::InitializeLadder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "InitializeLadder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.ResumeMounting
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::ResumeMounting(class APAWN_Hacker_Simple_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "ResumeMounting");

	Params::INTERACT_Ladder_C_ResumeMounting Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.BeginMounting
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMountingFromTop                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Ladder_C::BeginMounting(class APAWN_Hacker_Simple_C* Player, bool IsMountingFromTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "BeginMounting");

	Params::INTERACT_Ladder_C_BeginMounting Parms{};

	Parms.Player = Player;
	Parms.IsMountingFromTop = IsMountingFromTop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.FinishDismounting
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMOVECONTROL_Base_C*              MoveControl                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::FinishDismounting(class UMOVECONTROL_Base_C* MoveControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "FinishDismounting");

	Params::INTERACT_Ladder_C_FinishDismounting Parms{};

	Parms.MoveControl = MoveControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.CreateLadderMoveControl
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurnToFaceLadder                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          MountLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MountDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::CreateLadderMoveControl(class APAWN_Hacker_Simple_C* Player, bool TurnToFaceLadder, const struct FVector& MountLocation, float MountDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "CreateLadderMoveControl");

	Params::INTERACT_Ladder_C_CreateLadderMoveControl Parms{};

	Parms.Player = Player;
	Parms.TurnToFaceLadder = TurnToFaceLadder;
	Parms.MountLocation = std::move(MountLocation);
	Parms.MountDuration = MountDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.OnEnterGrabVolume
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Overlapped_Component                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Other_Comp                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Other_Body_Index                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    From_Sweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       Sweep_Result                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AINTERACT_Ladder_C::OnEnterGrabVolume(class UPrimitiveComponent* Overlapped_Component, class AActor* Other_Actor, class UPrimitiveComponent* Other_Comp, int32 Other_Body_Index, bool From_Sweep, struct FHitResult& Sweep_Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "OnEnterGrabVolume");

	Params::INTERACT_Ladder_C_OnEnterGrabVolume Parms{};

	Parms.Overlapped_Component = Overlapped_Component;
	Parms.Other_Actor = Other_Actor;
	Parms.Other_Comp = Other_Comp;
	Parms.Other_Body_Index = Other_Body_Index;
	Parms.From_Sweep = From_Sweep;
	Parms.Sweep_Result = std::move(Sweep_Result);

	UObject::ProcessEvent(Func, &Parms);

	Sweep_Result = std::move(Parms.Sweep_Result);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.CanMountLadder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMountingFromTop                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Ladder_C::CanMountLadder(class APAWN_SystemShockCharacter_C* Character, bool IsMountingFromTop, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "CanMountLadder");

	Params::INTERACT_Ladder_C_CanMountLadder Parms{};

	Parms.Character = Character;
	Parms.IsMountingFromTop = IsMountingFromTop;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.IsCharacterBusy
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Ladder_C::IsCharacterBusy(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "IsCharacterBusy");

	Params::INTERACT_Ladder_C_IsCharacterBusy Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetRungLocationFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RungIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetRungLocationFromIndex(int32 RungIndex, struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetRungLocationFromIndex");

	Params::INTERACT_Ladder_C_GetRungLocationFromIndex Parms{};

	Parms.RungIndex = RungIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetBestMountRungIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rung_index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetBestMountRungIndex(class APAWN_SystemShockCharacter_C* Character, int32* Rung_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetBestMountRungIndex");

	Params::INTERACT_Ladder_C_GetBestMountRungIndex Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Rung_index != nullptr)
		*Rung_index = Parms.Rung_index;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.FinishMounting
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMOVECONTROL_Base_C*              MoveControl                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::FinishMounting(class UMOVECONTROL_Base_C* MoveControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "FinishMounting");

	Params::INTERACT_Ladder_C_FinishMounting Parms{};

	Parms.MoveControl = MoveControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.FinishClimbing
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMOVECONTROL_Base_C*              MoveControl                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::FinishClimbing(class UMOVECONTROL_Base_C* MoveControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "FinishClimbing");

	Params::INTERACT_Ladder_C_FinishClimbing Parms{};

	Parms.MoveControl = MoveControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetFallingMountTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Gravity                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetFallingMountTime(float Speed, float Height, float Gravity, float* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetFallingMountTime");

	Params::INTERACT_Ladder_C_GetFallingMountTime Parms{};

	Parms.Speed = Speed;
	Parms.Height = Height;
	Parms.Gravity = Gravity;

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GenerateLadderMeshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Ladder_C::GenerateLadderMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GenerateLadderMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.DestroyRungMeshComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Ladder_C::DestroyRungMeshComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "DestroyRungMeshComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.FinishInteracting
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::FinishInteracting(class APAWN_Hacker_Simple_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "FinishInteracting");

	Params::INTERACT_Ladder_C_FinishInteracting Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.ResumeChannelingInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::ResumeChannelingInteraction(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "ResumeChannelingInteraction");

	Params::INTERACT_Ladder_C_ResumeChannelingInteraction Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetMountHeightOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetMountHeightOffset(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetMountHeightOffset");

	Params::INTERACT_Ladder_C_GetMountHeightOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetClimbSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsFastClimbing                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetClimbSpeed(bool IsFastClimbing, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetClimbSpeed");

	Params::INTERACT_Ladder_C_GetClimbSpeed Parms{};

	Parms.IsFastClimbing = IsFastClimbing;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetRungTraversalTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsFastClimbing                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetRungTraversalTime(bool IsFastClimbing, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetRungTraversalTime");

	Params::INTERACT_Ladder_C_GetRungTraversalTime Parms{};

	Parms.IsFastClimbing = IsFastClimbing;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetJumpDismountSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetJumpDismountSpeed(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetJumpDismountSpeed");

	Params::INTERACT_Ladder_C_GetJumpDismountSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Ladder_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "GetTargetShape");

	Params::INTERACT_Ladder_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.StopChanneling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewChannelingInteract                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Ladder_C::StopChanneling(class AActor* NewChannelingInteract, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "StopChanneling");

	Params::INTERACT_Ladder_C_StopChanneling Parms{};

	Parms.NewChannelingInteract = NewChannelingInteract;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Ladder.INTERACT_Ladder_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_Ladder_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Ladder_C", "TryInteract");

	Params::INTERACT_Ladder_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemySpawnpoint

#include "Basic.hpp"

#include "STRUCT_EnemyClassWeight_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemy
// 0x0018 (0x0018 - 0x0000)
struct EnemySpawnPoint_C_SpawnEnemy final
{
public:
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpawnEnemies_Result;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_SpawnEnemyFromTypes_Enemy;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemySpawnPoint_C_SpawnEnemy) == 0x000008, "Wrong alignment on EnemySpawnPoint_C_SpawnEnemy");
static_assert(sizeof(EnemySpawnPoint_C_SpawnEnemy) == 0x000018, "Wrong size on EnemySpawnPoint_C_SpawnEnemy");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemy, Enemy) == 0x000000, "Member 'EnemySpawnPoint_C_SpawnEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemy, CallFunc_CanSpawnEnemies_Result) == 0x000008, "Member 'EnemySpawnPoint_C_SpawnEnemy::CallFunc_CanSpawnEnemies_Result' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemy, CallFunc_SpawnEnemyFromTypes_Enemy) == 0x000010, "Member 'EnemySpawnPoint_C_SpawnEnemy::CallFunc_SpawnEnemyFromTypes_Enemy' has a wrong offset!");

// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemyFromClass
// 0x0070 (0x0070 - 0x0000)
struct EnemySpawnPoint_C_SpawnEnemyFromClass final
{
public:
	class UClass*                                 EnemyClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          SpawnedEnemy;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpawnedEnemyName_EnemyName;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class APAWN_Enemy_C*                          CallFunc_SpawnActorInLevelWithName_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemySpawnPoint_C_SpawnEnemyFromClass) == 0x000010, "Wrong alignment on EnemySpawnPoint_C_SpawnEnemyFromClass");
static_assert(sizeof(EnemySpawnPoint_C_SpawnEnemyFromClass) == 0x000070, "Wrong size on EnemySpawnPoint_C_SpawnEnemyFromClass");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, EnemyClass) == 0x000000, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::EnemyClass' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, Enemy) == 0x000008, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::Enemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, SpawnedEnemy) == 0x000010, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, CallFunc_GetSpawnedEnemyName_EnemyName) == 0x00001C, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::CallFunc_GetSpawnedEnemyName_EnemyName' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, CallFunc_GetActorLevel_ReturnValue) == 0x000028, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromClass, CallFunc_SpawnActorInLevelWithName_ReturnValue) == 0x000060, "Member 'EnemySpawnPoint_C_SpawnEnemyFromClass::CallFunc_SpawnActorInLevelWithName_ReturnValue' has a wrong offset!");

// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemyFromTypes
// 0x0058 (0x0058 - 0x0000)
struct EnemySpawnPoint_C_SpawnEnemyFromTypes final
{
public:
	TArray<struct FSTRUCT_EnemyClassWeight>       ChosenEnemyTypes;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ChosenEnemyClass;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChosenEnemyIndex;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_SpawnEnemyFromClass_Enemy;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomEnemyIndex_EnemyIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPAWN_Enemy;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemySpawnPoint_C_SpawnEnemyFromTypes) == 0x000008, "Wrong alignment on EnemySpawnPoint_C_SpawnEnemyFromTypes");
static_assert(sizeof(EnemySpawnPoint_C_SpawnEnemyFromTypes) == 0x000058, "Wrong size on EnemySpawnPoint_C_SpawnEnemyFromTypes");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, ChosenEnemyTypes) == 0x000000, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::ChosenEnemyTypes' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, Enemy) == 0x000010, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::Enemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, ChosenEnemyClass) == 0x000018, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::ChosenEnemyClass' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, ChosenEnemyIndex) == 0x000020, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::ChosenEnemyIndex' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, CallFunc_SpawnEnemyFromClass_Enemy) == 0x000028, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::CallFunc_SpawnEnemyFromClass_Enemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, CallFunc_GetRandomEnemyIndex_EnemyIndex) == 0x000030, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::CallFunc_GetRandomEnemyIndex_EnemyIndex' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000038, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, K2Node_ClassDynamicCast_AsPAWN_Enemy) == 0x000040, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::K2Node_ClassDynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, K2Node_ClassDynamicCast_bSuccess) == 0x000048, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_SpawnEnemyFromTypes, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'EnemySpawnPoint_C_SpawnEnemyFromTypes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function EnemySpawnpoint.EnemySpawnPoint_C.CanSpawnEnemies
// 0x0028 (0x0028 - 0x0000)
struct EnemySpawnPoint_C_CanSpawnEnemies final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyByType_Difficulty;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemySpawnPoint_C_CanSpawnEnemies) == 0x000008, "Wrong alignment on EnemySpawnPoint_C_CanSpawnEnemies");
static_assert(sizeof(EnemySpawnPoint_C_CanSpawnEnemies) == 0x000028, "Wrong size on EnemySpawnPoint_C_CanSpawnEnemies");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, Result) == 0x000000, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::Result' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_GetDifficultyByType_Difficulty) == 0x00001A, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_GetDifficultyByType_Difficulty' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00001C, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_CanSpawnEnemies, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'EnemySpawnPoint_C_CanSpawnEnemies::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function EnemySpawnpoint.EnemySpawnPoint_C.GetRandomEnemyIndex
// 0x0018 (0x0018 - 0x0000)
struct EnemySpawnPoint_C_GetRandomEnemyIndex final
{
public:
	TArray<struct FSTRUCT_EnemyClassWeight>       ChosenEnemyTypes;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         EnemyIndex;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeightedRandomIndexFromStructArray_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemySpawnPoint_C_GetRandomEnemyIndex) == 0x000008, "Wrong alignment on EnemySpawnPoint_C_GetRandomEnemyIndex");
static_assert(sizeof(EnemySpawnPoint_C_GetRandomEnemyIndex) == 0x000018, "Wrong size on EnemySpawnPoint_C_GetRandomEnemyIndex");
static_assert(offsetof(EnemySpawnPoint_C_GetRandomEnemyIndex, ChosenEnemyTypes) == 0x000000, "Member 'EnemySpawnPoint_C_GetRandomEnemyIndex::ChosenEnemyTypes' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetRandomEnemyIndex, EnemyIndex) == 0x000010, "Member 'EnemySpawnPoint_C_GetRandomEnemyIndex::EnemyIndex' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetRandomEnemyIndex, CallFunc_GetWeightedRandomIndexFromStructArray_ReturnValue) == 0x000014, "Member 'EnemySpawnPoint_C_GetRandomEnemyIndex::CallFunc_GetWeightedRandomIndexFromStructArray_ReturnValue' has a wrong offset!");

// Function EnemySpawnpoint.EnemySpawnPoint_C.GetSpawnedEnemyName
// 0x0030 (0x0030 - 0x0000)
struct EnemySpawnPoint_C_GetSpawnedEnemyName final
{
public:
	class UClass*                                 EnemyClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnemyName;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_RequestNewSpawnedEnemyName_EnemyName;     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemySpawnPoint_C_GetSpawnedEnemyName) == 0x000008, "Wrong alignment on EnemySpawnPoint_C_GetSpawnedEnemyName");
static_assert(sizeof(EnemySpawnPoint_C_GetSpawnedEnemyName) == 0x000030, "Wrong size on EnemySpawnPoint_C_GetSpawnedEnemyName");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, EnemyClass) == 0x000000, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::EnemyClass' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, EnemyName) == 0x000008, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::EnemyName' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EnemySpawnPoint_C_GetSpawnedEnemyName, CallFunc_RequestNewSpawnedEnemyName_EnemyName) == 0x000024, "Member 'EnemySpawnPoint_C_GetSpawnedEnemyName::CallFunc_RequestNewSpawnedEnemyName_EnemyName' has a wrong offset!");

}


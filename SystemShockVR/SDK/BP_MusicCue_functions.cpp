#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicCue

#include "Basic.hpp"

#include "BP_MusicCue_classes.hpp"
#include "BP_MusicCue_parameters.hpp"


namespace SDK
{

// Function BP_MusicCue.BP_MusicCue_C.OnMusicFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MusicCue_C*                   MusicCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::OnMusicFinished__DelegateSignature(class UBP_MusicCue_C* MusicCue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "OnMusicFinished__DelegateSignature");

	Params::BP_MusicCue_C_OnMusicFinished__DelegateSignature Parms{};

	Parms.MusicCue = MusicCue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.OnMeasure__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentExploreMusicIntensity                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentCombatMusicIntensity                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::OnMeasure__DelegateSignature(int32 NumBars, float CurrentExploreMusicIntensity, float CurrentCombatMusicIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "OnMeasure__DelegateSignature");

	Params::BP_MusicCue_C_OnMeasure__DelegateSignature Parms{};

	Parms.NumBars = NumBars;
	Parms.CurrentExploreMusicIntensity = CurrentExploreMusicIntensity;
	Parms.CurrentCombatMusicIntensity = CurrentCombatMusicIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.IsMusicPlaying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MusicCue_C::IsMusicPlaying(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "IsMusicPlaying");

	Params::BP_MusicCue_C_IsMusicPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.GetCurrentPlayState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_MusicPlayState                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetCurrentPlayState(ENUM_MusicPlayState* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetCurrentPlayState");

	Params::BP_MusicCue_C_GetCurrentPlayState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.GetCurrentVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetCurrentVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetCurrentVolume");

	Params::BP_MusicCue_C_GetCurrentVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.GetMillisecondsOfMeasures
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RetriggerTimeInMeasures                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MillisecondsPerBar                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetMillisecondsOfMeasures(int32 RetriggerTimeInMeasures, int32* MillisecondsPerBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetMillisecondsOfMeasures");

	Params::BP_MusicCue_C_GetMillisecondsOfMeasures Parms{};

	Parms.RetriggerTimeInMeasures = RetriggerTimeInMeasures;

	UObject::ProcessEvent(Func, &Parms);

	if (MillisecondsPerBar != nullptr)
		*MillisecondsPerBar = Parms.MillisecondsPerBar;
}


// Function BP_MusicCue.BP_MusicCue_C.GetRealTimeInMilliseconds
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetRealTimeInMilliseconds(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetRealTimeInMilliseconds");

	Params::BP_MusicCue_C_GetRealTimeInMilliseconds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.GetElapsedTimeInCurrentPlayState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetElapsedTimeInCurrentPlayState(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetElapsedTimeInCurrentPlayState");

	Params::BP_MusicCue_C_GetElapsedTimeInCurrentPlayState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.GetShouldRetrigger
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSTRUCT_MusicCue_Layer           Layer                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    bShouldRetrigger                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MusicCue_C::GetShouldRetrigger(struct FSTRUCT_MusicCue_Layer& Layer, bool* bShouldRetrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetShouldRetrigger");

	Params::BP_MusicCue_C_GetShouldRetrigger Parms{};

	Parms.Layer = std::move(Layer);

	UObject::ProcessEvent(Func, &Parms);

	Layer = std::move(Parms.Layer);

	if (bShouldRetrigger != nullptr)
		*bShouldRetrigger = Parms.bShouldRetrigger;
}


// Function BP_MusicCue.BP_MusicCue_C.SetPlaybackState
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MusicPlayState                     PlaybackState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::SetPlaybackState(ENUM_MusicPlayState PlaybackState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "SetPlaybackState");

	Params::BP_MusicCue_C_SetPlaybackState Parms{};

	Parms.PlaybackState = PlaybackState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.SetFadeInBypassList
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::SetFadeInBypassList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "SetFadeInBypassList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.GetShouldComponentFadeIn
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAudioComponent*                  AudioComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShouldFadeIn                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MusicCue_C::GetShouldComponentFadeIn(class UAudioComponent*& AudioComponent, bool* bShouldFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetShouldComponentFadeIn");

	Params::BP_MusicCue_C_GetShouldComponentFadeIn Parms{};

	Parms.AudioComponent = AudioComponent;

	UObject::ProcessEvent(Func, &Parms);

	AudioComponent = Parms.AudioComponent;

	if (bShouldFadeIn != nullptr)
		*bShouldFadeIn = Parms.bShouldFadeIn;
}


// Function BP_MusicCue.BP_MusicCue_C.CreateMusicLayerObjects
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::CreateMusicLayerObjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "CreateMusicLayerObjects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.GetMusicLayerByName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicLayer_C*                 Layer                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetMusicLayerByName(class FName& Name_0, class UBP_MusicLayer_C** Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetMusicLayerByName");

	Params::BP_MusicCue_C_GetMusicLayerByName Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	Name_0 = Parms.Name_0;

	if (Layer != nullptr)
		*Layer = Parms.Layer;
}


// Function BP_MusicCue.BP_MusicCue_C.GetLayerOfAudioComponent
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  Audio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MusicLayer_C*                 Layer                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetLayerOfAudioComponent(class UAudioComponent*& Audio, class UBP_MusicLayer_C** Layer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetLayerOfAudioComponent");

	Params::BP_MusicCue_C_GetLayerOfAudioComponent Parms{};

	Parms.Audio = Audio;

	UObject::ProcessEvent(Func, &Parms);

	Audio = Parms.Audio;

	if (Layer != nullptr)
		*Layer = Parms.Layer;
}


// Function BP_MusicCue.BP_MusicCue_C.PrintCurrentAudioComponents
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::PrintCurrentAudioComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "PrintCurrentAudioComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.ValidateSegmentVirtualizationType
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::ValidateSegmentVirtualizationType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "ValidateSegmentVirtualizationType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.ValidatedUniqueLayerNames
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::ValidatedUniqueLayerNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "ValidatedUniqueLayerNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.PrintFadeBypassedNames
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::PrintFadeBypassedNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "PrintFadeBypassedNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.InitializeMusicCue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ExploreIntensity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::InitializeMusicCue(float ExploreIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "InitializeMusicCue");

	Params::BP_MusicCue_C_InitializeMusicCue Parms{};

	Parms.ExploreIntensity = ExploreIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.InitClock
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::InitClock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "InitClock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.PlayMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::PlayMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "PlayMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.UpdateMusic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::UpdateMusic(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "UpdateMusic");

	Params::BP_MusicCue_C_UpdateMusic Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.FadeInMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::FadeInMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "FadeInMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.FadeOutMusic
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::FadeOutMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "FadeOutMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.ForceStopMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::ForceStopMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "ForceStopMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.StopMusic
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::StopMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "StopMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.StopMusicInternal
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::StopMusicInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "StopMusicInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.UpdateExplorationIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::UpdateExplorationIntensity(float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "UpdateExplorationIntensity");

	Params::BP_MusicCue_C_UpdateExplorationIntensity Parms{};

	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.UpdateFadeVolume
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      FadeCurve                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::UpdateFadeVolume(class UCurveFloat*& FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "UpdateFadeVolume");

	Params::BP_MusicCue_C_UpdateFadeVolume Parms{};

	Parms.FadeCurve = FadeCurve;

	UObject::ProcessEvent(Func, &Parms);

	FadeCurve = Parms.FadeCurve;
}


// Function BP_MusicCue.BP_MusicCue_C.OnFadeFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::OnFadeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "OnFadeFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.RemoveInactiveAudioComponents
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::RemoveInactiveAudioComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "RemoveInactiveAudioComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.GetQuartzBeatType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EQuartzTimeSignatureQuantization        Quantization                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::GetQuartzBeatType(EQuartzTimeSignatureQuantization* Quantization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "GetQuartzBeatType");

	Params::BP_MusicCue_C_GetQuartzBeatType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quantization != nullptr)
		*Quantization = Parms.Quantization;
}


// Function BP_MusicCue.BP_MusicCue_C.EVENT_OnQuartzBar
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClockName_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EQuartzCommandQuantization              QuantizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NumBars                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Beat                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BeatFraction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::EVENT_OnQuartzBar(class FName ClockName_0, EQuartzCommandQuantization QuantizationType, int32 NumBars, int32 Beat, float BeatFraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "EVENT_OnQuartzBar");

	Params::BP_MusicCue_C_EVENT_OnQuartzBar Parms{};

	Parms.ClockName_0 = ClockName_0;
	Parms.QuantizationType = QuantizationType;
	Parms.NumBars = NumBars;
	Parms.Beat = Beat;
	Parms.BeatFraction = BeatFraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MusicCue.BP_MusicCue_C.PrintCurrentExploreIntensity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MusicCue_C::PrintCurrentExploreIntensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "PrintCurrentExploreIntensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MusicCue.BP_MusicCue_C.IsMusicDebugLoggingEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MusicCue_C::IsMusicDebugLoggingEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "IsMusicDebugLoggingEnabled");

	Params::BP_MusicCue_C_IsMusicDebugLoggingEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MusicCue.BP_MusicCue_C.UpdateCombatIntensity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MusicCue_C::UpdateCombatIntensity(float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MusicCue_C", "UpdateCombatIntensity");

	Params::BP_MusicCue_C_UpdateCombatIntensity Parms{};

	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}

}


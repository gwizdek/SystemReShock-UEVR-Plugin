#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_DoorBase

#include "Basic.hpp"

#include "INTERACT_DoorBase_classes.hpp"
#include "INTERACT_DoorBase_parameters.hpp"


namespace SDK
{

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_DoorBase_C*             Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_DoorState                          State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::OnDoorStateChanged__DelegateSignature(class AINTERACT_DoorBase_C* Door, ENUM_DoorState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnDoorStateChanged__DelegateSignature");

	Params::INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature Parms{};

	Parms.Door = Door;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ExecuteUbergraph_INTERACT_DoorBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::ExecuteUbergraph_INTERACT_DoorBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ExecuteUbergraph_INTERACT_DoorBase");

	Params::INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AINTERACT_DoorBase_C::BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_DoorBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::InitializeDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InitializeDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoorState
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::InitializeDoorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InitializeDoorState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoorLockState
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::InitializeDoorLockState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InitializeDoorLockState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeAttributes
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::InitializeAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InitializeAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ValidateLockStates
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::ValidateLockStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ValidateLockStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryAutoCloseDoor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::TryAutoCloseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryAutoCloseDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsSafeToClose
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsSafeToClose(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsSafeToClose");

	Params::INTERACT_DoorBase_C_IsSafeToClose Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsDoorFunctional
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsDoorFunctional(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsDoorFunctional");

	Params::INTERACT_DoorBase_C_IsDoorFunctional Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsLocationInFrontOfDoor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsLocationInFrontOfDoor(const struct FVector& Location, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsLocationInFrontOfDoor");

	Params::INTERACT_DoorBase_C_IsLocationInFrontOfDoor Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsAnyHostileEnemyNearDoor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsAnyHostileEnemyNearDoor(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsAnyHostileEnemyNearDoor");

	Params::INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CanActorBlockDoorway
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::CanActorBlockDoorway(class AActor* Actor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "CanActorBlockDoorway");

	Params::INTERACT_DoorBase_C_CanActorBlockDoorway Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetDoorEmissiveStrength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::GetDoorEmissiveStrength(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetDoorEmissiveStrength");

	Params::INTERACT_DoorBase_C_GetDoorEmissiveStrength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.HasCompletedRequiredQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::HasCompletedRequiredQuests(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "HasCompletedRequiredQuests");

	Params::INTERACT_DoorBase_C_HasCompletedRequiredQuests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.StartAutoCloseTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::StartAutoCloseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "StartAutoCloseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OpenDoor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::OpenDoor(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OpenDoor");

	Params::INTERACT_DoorBase_C_OpenDoor Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CloseDoor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::CloseDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "CloseDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FinishedUnlocking
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::FinishedUnlocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "FinishedUnlocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UnlockDoor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoOpen                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::UnlockDoor(bool AutoOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UnlockDoor");

	Params::INTERACT_DoorBase_C_UnlockDoor Parms{};

	Parms.AutoOpen = AutoOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnStateFinished
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::EVENT_OnStateFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "EVENT_OnStateFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnSecurityLevelChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSecurityLevel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::EVENT_OnSecurityLevelChanged(int32 NewSecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "EVENT_OnSecurityLevelChanged");

	Params::INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged Parms{};

	Parms.NewSecurityLevel = NewSecurityLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnStoryQuestChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StoryQuestName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::EVENT_OnStoryQuestChanged(class FName StoryQuestName, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "EVENT_OnStoryQuestChanged");

	Params::INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged Parms{};

	Parms.StoryQuestName = StoryQuestName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FinishLocking
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::FinishLocking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "FinishLocking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.LockDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CloseDoor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::LockDoor(bool CloseDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "LockDoor");

	Params::INTERACT_DoorBase_C_LockDoor Parms{};

	Parms.CloseDoor = CloseDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetTargetShape");

	Params::INTERACT_DoorBase_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryQueueDoorToggle
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::TryQueueDoorToggle(class AActor* SourceActor, ENUM_InteractionType InteractionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryQueueDoorToggle");

	Params::INTERACT_DoorBase_C_TryQueueDoorToggle Parms{};

	Parms.SourceActor = SourceActor;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryHandleQueuedToggle
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::TryHandleQueuedToggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryHandleQueuedToggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_Broken
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::FailedAction_Broken(class UPrimitiveComponent* CursorPrimitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "FailedAction_Broken");

	Params::INTERACT_DoorBase_C_FailedAction_Broken Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_Locked
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::FailedAction_Locked(class UPrimitiveComponent* CursorPrimitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "FailedAction_Locked");

	Params::INTERACT_DoorBase_C_FailedAction_Locked Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InteractOnOpening
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::InteractOnOpening(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InteractOnOpening");

	Params::INTERACT_DoorBase_C_InteractOnOpening Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InteractOnClosing
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::InteractOnClosing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "InteractOnClosing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetInteractLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Locked                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::SetInteractLocked(bool Locked, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetInteractLocked");

	Params::INTERACT_DoorBase_C_SetInteractLocked Parms{};

	Parms.Locked = Locked;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetStopMeshTicksTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::SetStopMeshTicksTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetStopMeshTicksTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.StartMeshComponentTicks
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::StartMeshComponentTicks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "StartMeshComponentTicks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryStopMeshComponentTicks
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::TryStopMeshComponentTicks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryStopMeshComponentTicks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.PlayDoorMontage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MontageDuration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::PlayDoorMontage(class UAnimMontage* Montage, float StartTime, float* MontageDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "PlayDoorMontage");

	Params::INTERACT_DoorBase_C_PlayDoorMontage Parms{};

	Parms.Montage = Montage;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

	if (MontageDuration != nullptr)
		*MontageDuration = Parms.MontageDuration;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateHackerDisplayMeshForScan
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::UpdateHackerDisplayMeshForScan(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UpdateHackerDisplayMeshForScan");

	Params::INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnAccesscardScanned
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::OnAccesscardScanned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnAccesscardScanned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetDoorLockAnimationState
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::SetDoorLockAnimationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetDoorLockAnimationState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ReverseDoorMontage
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ElapsedTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MontageDuration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::ReverseDoorMontage(float* ElapsedTime, float* MontageDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ReverseDoorMontage");

	Params::INTERACT_DoorBase_C_ReverseDoorMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;

	if (MontageDuration != nullptr)
		*MontageDuration = Parms.MontageDuration;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ResumeDoorMontage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ElapsedTime                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MontageDuration                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::ResumeDoorMontage(float* ElapsedTime, float* MontageDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ResumeDoorMontage");

	Params::INTERACT_DoorBase_C_ResumeDoorMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ElapsedTime != nullptr)
		*ElapsedTime = Parms.ElapsedTime;

	if (MontageDuration != nullptr)
		*MontageDuration = Parms.MontageDuration;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_DoorMontageFinished
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInterrupted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::EVENT_DoorMontageFinished(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "EVENT_DoorMontageFinished");

	Params::INTERACT_DoorBase_C_EVENT_DoorMontageFinished Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibleState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::UpdateDoorVisibility(bool VisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UpdateDoorVisibility");

	Params::INTERACT_DoorBase_C_UpdateDoorVisibility Parms{};

	Parms.VisibleState = VisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetDoorButtonColorType
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_ButtonColorType                    Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::SetDoorButtonColorType(ENUM_ButtonColorType Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetDoorButtonColorType");

	Params::INTERACT_DoorBase_C_SetDoorButtonColorType Parms{};

	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorButtonColor
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::UpdateDoorButtonColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UpdateDoorButtonColor");

	Params::INTERACT_DoorBase_C_UpdateDoorButtonColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetScreenIcon
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_DoorIcons                          DoorIcon                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::SetScreenIcon(ENUM_DoorIcons DoorIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetScreenIcon");

	Params::INTERACT_DoorBase_C_SetScreenIcon Parms{};

	Parms.DoorIcon = DoorIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetScreenDisabled
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::SetScreenDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetScreenDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TickButtonPulse
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::TickButtonPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TickButtonPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.StartButtonPulse
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::StartButtonPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "StartButtonPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetButtonMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::GetButtonMesh(class UMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetButtonMesh");

	Params::INTERACT_DoorBase_C_GetButtonMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorwayBlocked
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           BlockingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::OnDoorwayBlocked(class AActor* BlockingActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnDoorwayBlocked");

	Params::INTERACT_DoorBase_C_OnDoorwayBlocked Parms{};

	Parms.BlockingActor = BlockingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorwayUnblocked
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           UnblockingActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::OnDoorwayUnblocked(class AActor* UnblockingActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnDoorwayUnblocked");

	Params::INTERACT_DoorBase_C_OnDoorwayUnblocked Parms{};

	Parms.UnblockingActor = UnblockingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsHiddenInteractablePrimitive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsHiddenInteractablePrimitive(class APAWN_SystemShockCharacter_C* Character, class UPrimitiveComponent* CursorPrimitive, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsHiddenInteractablePrimitive");

	Params::INTERACT_DoorBase_C_IsHiddenInteractablePrimitive Parms{};

	Parms.Character = Character;
	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsDoorCollisionPrimitive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsDoorCollisionPrimitive(class UPrimitiveComponent* PrimitiveComponent, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsDoorCollisionPrimitive");

	Params::INTERACT_DoorBase_C_IsDoorCollisionPrimitive Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsInteractActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::IsInteractActivated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "IsInteractActivated");

	Params::INTERACT_DoorBase_C_IsInteractActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractLocked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             LockMessage                                            (Parm, OutParm)

void AINTERACT_DoorBase_C::GetInteractLocked(class AActor* SourceActor, bool* Result, class FText* LockMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetInteractLocked");

	Params::INTERACT_DoorBase_C_GetInteractLocked Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (LockMessage != nullptr)
		*LockMessage = std::move(Parms.LockMessage);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractBroken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             BrokenMessage_0                                        (Parm, OutParm)

void AINTERACT_DoorBase_C::GetInteractBroken(bool* Result, class FText* BrokenMessage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetInteractBroken");

	Params::INTERACT_DoorBase_C_GetInteractBroken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (BrokenMessage_0 != nullptr)
		*BrokenMessage_0 = std::move(Parms.BrokenMessage_0);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractBusy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             BusyMessage_0                                          (Parm, OutParm)

void AINTERACT_DoorBase_C::GetInteractBusy(bool* Result, class FText* BusyMessage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetInteractBusy");

	Params::INTERACT_DoorBase_C_GetInteractBusy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (BusyMessage_0 != nullptr)
		*BusyMessage_0 = std::move(Parms.BusyMessage_0);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateCanNavAgentsUnblock
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::UpdateCanNavAgentsUnblock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UpdateCanNavAgentsUnblock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ReceiveAnimationMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::ReceiveAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ReceiveAnimationMessage");

	Params::INTERACT_DoorBase_C_ReceiveAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetClosestTargetShape
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::GetClosestTargetShape(class APAWN_SystemShockCharacter_C* Character, class UShapeComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "GetClosestTargetShape");

	Params::INTERACT_DoorBase_C_GetClosestTargetShape Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ResumeChannelingSequence
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsWaitingToHolster                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::ResumeChannelingSequence(class APAWN_Hacker_Simple_C* HackerPawn, bool* IsWaitingToHolster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "ResumeChannelingSequence");

	Params::INTERACT_DoorBase_C_ResumeChannelingSequence Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (IsWaitingToHolster != nullptr)
		*IsWaitingToHolster = Parms.IsWaitingToHolster;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CreateChannelingMoveControl
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMOVECONTROL_Base_C*              Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::CreateChannelingMoveControl(class APAWN_Hacker_Simple_C* HackerPawn, class UMOVECONTROL_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "CreateChannelingMoveControl");

	Params::INTERACT_DoorBase_C_CreateChannelingMoveControl Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnChannelingMontageStarted
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::OnChannelingMontageStarted(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnChannelingMontageStarted");

	Params::INTERACT_DoorBase_C_OnChannelingMontageStarted Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnRestoreInventoryAfterSequence
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::OnRestoreInventoryAfterSequence(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "OnRestoreInventoryAfterSequence");

	Params::INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetInteractPowered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::SetInteractPowered(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "SetInteractPowered");

	Params::INTERACT_DoorBase_C_SetInteractPowered Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorEmissiveStrength
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Strength                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::UpdateDoorEmissiveStrength(float Scale, float* Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "UpdateDoorEmissiveStrength");

	Params::INTERACT_DoorBase_C_UpdateDoorEmissiveStrength Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (Strength != nullptr)
		*Strength = Parms.Strength;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_NotFunctional
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::FailedAction_NotFunctional(class UPrimitiveComponent* CursorPrimitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "FailedAction_NotFunctional");

	Params::INTERACT_DoorBase_C_FailedAction_NotFunctional Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "EVENT_OnDisableAttribChanged");

	Params::INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CanModifyInteractPower
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_DoorBase_C::CanModifyInteractPower(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "CanModifyInteractPower");

	Params::INTERACT_DoorBase_C_CanModifyInteractPower Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryFixOverlappingActorPhysics
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::TryFixOverlappingActorPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryFixOverlappingActorPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.DisableSafetySensorTemporarily
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::DisableSafetySensorTemporarily()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "DisableSafetySensorTemporarily");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.RestoreSafetySensorOverlaps
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_DoorBase_C::RestoreSafetySensorOverlaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "RestoreSafetySensorOverlaps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_DoorBase_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_DoorBase_C", "TryInteract");

	Params::INTERACT_DoorBase_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}

}


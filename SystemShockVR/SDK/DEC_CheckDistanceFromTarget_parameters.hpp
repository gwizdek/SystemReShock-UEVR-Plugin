#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_CheckDistanceFromTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DEC_CheckDistanceFromTarget.DEC_CheckDistanceFromTarget_C.PerformConditionCheckAI
// 0x00B8 (0x00B8 - 0x0000)
struct DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToTarget;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPredictedTargetLocation_PredictedLocation; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI");
static_assert(sizeof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI) == 0x0000B8, "Wrong size on DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, TargetLocation) == 0x000014, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::TargetLocation' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, DistanceToTarget) == 0x000020, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, Enemy) == 0x000028, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::Enemy' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000030, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_GetTarget_Target) == 0x000040, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_GetPredictedTargetLocation_PredictedLocation) == 0x000048, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_GetPredictedTargetLocation_PredictedLocation' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_X) == 0x000058, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_Y) == 0x00005C, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_Z) == 0x000060, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_X_1) == 0x000070, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_GetTarget_Target_1) == 0x000088, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000091, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess) == 0x000092, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000093, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000094, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000A0, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A4, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, CallFunc_Vector_Distance_ReturnValue) == 0x0000B0, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000B4, "Member 'DEC_CheckDistanceFromTarget_C_PerformConditionCheckAI::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}


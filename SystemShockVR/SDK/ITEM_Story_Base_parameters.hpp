#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Story_Base

#include "Basic.hpp"

#include "STRUCT_MissionDifficultySettings_structs.hpp"


namespace SDK::Params
{

// Function ITEM_Story_Base.ITEM_Story_Base_C.HasCompletedStoryQuest
// 0x0028 (0x0028 - 0x0000)
struct ITEM_Story_Base_C_HasCompletedStoryQuest final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Story_Base_C_HasCompletedStoryQuest) == 0x000008, "Wrong alignment on ITEM_Story_Base_C_HasCompletedStoryQuest");
static_assert(sizeof(ITEM_Story_Base_C_HasCompletedStoryQuest) == 0x000028, "Wrong size on ITEM_Story_Base_C_HasCompletedStoryQuest");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, Result) == 0x000000, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_HasCompletedStoryQuest, CallFunc_HasCompletedStoryQuest_Completed) == 0x000021, "Member 'ITEM_Story_Base_C_HasCompletedStoryQuest::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");

// Function ITEM_Story_Base.ITEM_Story_Base_C.SetStoryItemInUse
// 0x0001 (0x0001 - 0x0000)
struct ITEM_Story_Base_C_SetStoryItemInUse final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Story_Base_C_SetStoryItemInUse) == 0x000001, "Wrong alignment on ITEM_Story_Base_C_SetStoryItemInUse");
static_assert(sizeof(ITEM_Story_Base_C_SetStoryItemInUse) == 0x000001, "Wrong size on ITEM_Story_Base_C_SetStoryItemInUse");
static_assert(offsetof(ITEM_Story_Base_C_SetStoryItemInUse, State) == 0x000000, "Member 'ITEM_Story_Base_C_SetStoryItemInUse::State' has a wrong offset!");

// Function ITEM_Story_Base.ITEM_Story_Base_C.CanUnslot
// 0x0004 (0x0004 - 0x0000)
struct ITEM_Story_Base_C_CanUnslot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUnslot_Result;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Story_Base_C_CanUnslot) == 0x000001, "Wrong alignment on ITEM_Story_Base_C_CanUnslot");
static_assert(sizeof(ITEM_Story_Base_C_CanUnslot) == 0x000004, "Wrong size on ITEM_Story_Base_C_CanUnslot");
static_assert(offsetof(ITEM_Story_Base_C_CanUnslot, Result) == 0x000000, "Member 'ITEM_Story_Base_C_CanUnslot::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanUnslot, CallFunc_CanUnslot_Result) == 0x000001, "Member 'ITEM_Story_Base_C_CanUnslot::CallFunc_CanUnslot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanUnslot, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ITEM_Story_Base_C_CanUnslot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanUnslot, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ITEM_Story_Base_C_CanUnslot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_Story_Base.ITEM_Story_Base_C.CanDropItem
// 0x0098 (0x0098 - 0x0000)
struct ITEM_Story_Base_C_CanDropItem final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        StoryBag;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDropItem_Result;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Result;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MissionDifficultySettings      CallFunc_GetMissionDifficultySettings_Settings;    // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_Story_Base_C_CanDropItem) == 0x000008, "Wrong alignment on ITEM_Story_Base_C_CanDropItem");
static_assert(sizeof(ITEM_Story_Base_C_CanDropItem) == 0x000098, "Wrong size on ITEM_Story_Base_C_CanDropItem");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, Result) == 0x000000, "Member 'ITEM_Story_Base_C_CanDropItem::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, StoryBag) == 0x000008, "Member 'ITEM_Story_Base_C_CanDropItem::StoryBag' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_CanAddItem_Result) == 0x000010, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetBag_Result) == 0x000018, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetInventory_Inventory) == 0x000028, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_CanDropItem_Result) == 0x000030, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_CanDropItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000040, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetBagByType_Bag) == 0x000068, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetItemCount_Result) == 0x000070, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000074, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_HasCompletedStoryQuest_Result) == 0x000075, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_HasCompletedStoryQuest_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'ITEM_Story_Base_C_CanDropItem::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ITEM_Story_Base_C_CanDropItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Story_Base_C_CanDropItem, CallFunc_GetMissionDifficultySettings_Settings) == 0x00008C, "Member 'ITEM_Story_Base_C_CanDropItem::CallFunc_GetMissionDifficultySettings_Settings' has a wrong offset!");

// Function ITEM_Story_Base.ITEM_Story_Base_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_Story_Base_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_Story_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_Story_Base_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_Story_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_Story_Base_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_Story_Base_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_Story_Base_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

// Function ITEM_Story_Base.ITEM_Story_Base_C.HasWorldInteraction
// 0x0001 (0x0001 - 0x0000)
struct ITEM_Story_Base_C_HasWorldInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Story_Base_C_HasWorldInteraction) == 0x000001, "Wrong alignment on ITEM_Story_Base_C_HasWorldInteraction");
static_assert(sizeof(ITEM_Story_Base_C_HasWorldInteraction) == 0x000001, "Wrong size on ITEM_Story_Base_C_HasWorldInteraction");
static_assert(offsetof(ITEM_Story_Base_C_HasWorldInteraction, Result) == 0x000000, "Member 'ITEM_Story_Base_C_HasWorldInteraction::Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_HardwareButton

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.EVENT_OnHardwareBagChanged
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadHardwareItem;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HardwareBase_C*                   ModifiedItem;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ChangedItem;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_FindHardwareBag_Bag;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   K2Node_DynamicCast_AsITEM_Hardware_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged");
static_assert(sizeof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged) == 0x000050, "Wrong size on WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, SlotIndex) == 0x000000, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, HadHardwareItem) == 0x000004, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::HadHardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, ModifiedItem) == 0x000008, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::ModifiedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, ChangedItem) == 0x000010, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::ChangedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_GetIsActivated_Result) == 0x00001A, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_FindHardwareBag_Bag) == 0x000020, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_FindHardwareBag_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_GetSlotItem_Item) == 0x000028, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_AsITEM_Hardware_Base) == 0x000030, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_AsITEM_Hardware_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000040, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged, CallFunc_ClassIsChildOf_ReturnValue) == 0x000048, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareBagChanged::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.InitializeHardwareButton
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_HardwareButton_C_InitializeHardwareButton final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        Bag;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_FindHardwareBag_Bag;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   CallFunc_FindHardwareItem_HardwareItem;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_InitializeHardwareButton) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_InitializeHardwareButton");
static_assert(sizeof(WIDGET_HardwareButton_C_InitializeHardwareButton) == 0x000050, "Wrong size on WIDGET_HardwareButton_C_InitializeHardwareButton");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, PlayerHUD_0) == 0x000000, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, Bag) == 0x000008, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_FindHardwareBag_Bag) == 0x000018, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_FindHardwareBag_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_FindHardwareItem_HardwareItem) == 0x000020, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_FindHardwareItem_HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_GetIsActivated_Result) == 0x000028, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_InitializeHardwareButton, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WIDGET_HardwareButton_C_InitializeHardwareButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.OnHardwareActivated
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_HardwareButton_C_OnHardwareActivated final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_OnHardwareActivated) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_OnHardwareActivated");
static_assert(sizeof(WIDGET_HardwareButton_C_OnHardwareActivated) == 0x000008, "Wrong size on WIDGET_HardwareButton_C_OnHardwareActivated");
static_assert(offsetof(WIDGET_HardwareButton_C_OnHardwareActivated, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WIDGET_HardwareButton_C_OnHardwareActivated::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.OnHardwareDeactivated
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_HardwareButton_C_OnHardwareDeactivated final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_OnHardwareDeactivated) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_OnHardwareDeactivated");
static_assert(sizeof(WIDGET_HardwareButton_C_OnHardwareDeactivated) == 0x000008, "Wrong size on WIDGET_HardwareButton_C_OnHardwareDeactivated");
static_assert(offsetof(WIDGET_HardwareButton_C_OnHardwareDeactivated, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000000, "Member 'WIDGET_HardwareButton_C_OnHardwareDeactivated::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.EVENT_OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_HardwareButton_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_HardwareButton_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_HardwareButton_C_EVENT_OnMouseEnter) == 0x0000A8, "Wrong size on WIDGET_HardwareButton_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.EVENT_OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_HardwareButton_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_HardwareButton_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_HardwareButton_C_EVENT_OnMouseLeave) == 0x000070, "Wrong size on WIDGET_HardwareButton_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.EVENT_OnMouseDown
// 0x0220 (0x0220 - 0x0000)
struct WIDGET_HardwareButton_C_EVENT_OnMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class UITEM_HardwareBase_C*                   Item;                                              // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WIDGET_HardwareButton_C_EVENT_OnMouseDown) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_EVENT_OnMouseDown");
static_assert(sizeof(WIDGET_HardwareButton_C_EVENT_OnMouseDown) == 0x000220, "Wrong size on WIDGET_HardwareButton_C_EVENT_OnMouseDown");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseDown, Item) == 0x000160, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseDown::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WIDGET_HardwareButton_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.OnHardwareStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_HardwareButton_C_OnHardwareStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_OnHardwareStateChanged) == 0x000001, "Wrong alignment on WIDGET_HardwareButton_C_OnHardwareStateChanged");
static_assert(sizeof(WIDGET_HardwareButton_C_OnHardwareStateChanged) == 0x000001, "Wrong size on WIDGET_HardwareButton_C_OnHardwareStateChanged");
static_assert(offsetof(WIDGET_HardwareButton_C_OnHardwareStateChanged, State) == 0x000000, "Member 'WIDGET_HardwareButton_C_OnHardwareStateChanged::State' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.SetHardwareItem
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_HardwareButton_C_SetHardwareItem final
{
public:
	class UITEM_HardwareBase_C*                   Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               IconMaterial;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(bool Activated, bool MagLocked)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Activated, bool MagLocked)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default_2;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_SetHardwareItem) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_SetHardwareItem");
static_assert(sizeof(WIDGET_HardwareButton_C_SetHardwareItem) == 0x000070, "Wrong size on WIDGET_HardwareButton_C_SetHardwareItem");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Item) == 0x000000, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Instant) == 0x000008, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Instant' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, IconMaterial) == 0x000010, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::IconMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_float_Variable) == 0x000018, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_float_Variable_1) == 0x00001C, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_bool_Variable) == 0x000020, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_byte_Variable) == 0x000021, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_byte_Variable_1) == 0x000022, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_byte_Variable_2) == 0x000023, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_bool_Variable_1) == 0x000024, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_1) == 0x000026, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_2) == 0x000027, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_4) == 0x000039, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_bool_Variable_2) == 0x00003A, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, K2Node_Select_Default) == 0x00003C, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_5) == 0x000048, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, K2Node_Select_Default_1) == 0x000049, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_6) == 0x00005C, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_7) == 0x00005D, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00005E, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_Not_PreBool_ReturnValue) == 0x00005F, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, Temp_byte_Variable_3) == 0x000060, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, K2Node_Select_Default_2) == 0x000062, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetHardwareItem, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WIDGET_HardwareButton_C_SetHardwareItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.FindHardwareItem
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_HardwareButton_C_FindHardwareItem final
{
public:
	class UITEM_HardwareBase_C*                   HardwareItem_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   K2Node_DynamicCast_AsITEM_Hardware_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_FindHardwareItem) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_FindHardwareItem");
static_assert(sizeof(WIDGET_HardwareButton_C_FindHardwareItem) == 0x000040, "Wrong size on WIDGET_HardwareButton_C_FindHardwareItem");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, HardwareItem_0) == 0x000000, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::HardwareItem_0' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, CallFunc_GetBagByType_Bag) == 0x000020, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, CallFunc_FindItem_FoundItem) == 0x000028, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, K2Node_DynamicCast_AsITEM_Hardware_Base) == 0x000030, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::K2Node_DynamicCast_AsITEM_Hardware_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareItem, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WIDGET_HardwareButton_C_FindHardwareItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.SetMouseOver
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_HardwareButton_C_SetMouseOver final
{
public:
	bool                                          MouseOver;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instant;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_SetMouseOver) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_SetMouseOver");
static_assert(sizeof(WIDGET_HardwareButton_C_SetMouseOver) == 0x000028, "Wrong size on WIDGET_HardwareButton_C_SetMouseOver");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, MouseOver) == 0x000000, "Member 'WIDGET_HardwareButton_C_SetMouseOver::MouseOver' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Instant) == 0x000001, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Instant' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_bool_Variable) == 0x000002, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_byte_Variable) == 0x000003, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_byte_Variable_1) == 0x000004, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_bool_Variable_1) == 0x000005, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_float_Variable) == 0x000008, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, Temp_float_Variable_1) == 0x00000C, "Member 'WIDGET_HardwareButton_C_SetMouseOver::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_HardwareButton_C_SetMouseOver::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, K2Node_Select_Default) == 0x000018, "Member 'WIDGET_HardwareButton_C_SetMouseOver::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, K2Node_Select_Default_1) == 0x00001C, "Member 'WIDGET_HardwareButton_C_SetMouseOver::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetMouseOver, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WIDGET_HardwareButton_C_SetMouseOver::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.SetActivated
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_HardwareButton_C_SetActivated final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Instant;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_SetActivated) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_SetActivated");
static_assert(sizeof(WIDGET_HardwareButton_C_SetActivated) == 0x000058, "Wrong size on WIDGET_HardwareButton_C_SetActivated");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Activated) == 0x000000, "Member 'WIDGET_HardwareButton_C_SetActivated::Activated' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Instant) == 0x000001, "Member 'WIDGET_HardwareButton_C_SetActivated::Instant' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_object_Variable) == 0x000008, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_bool_Variable) == 0x000010, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_byte_Variable) == 0x000011, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_byte_Variable_1) == 0x000012, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_bool_Variable_1) == 0x000013, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_float_Variable) == 0x000014, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_float_Variable_1) == 0x000018, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_object_Variable_1) == 0x000020, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000028, "Member 'WIDGET_HardwareButton_C_SetActivated::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, K2Node_Select_Default) == 0x000029, "Member 'WIDGET_HardwareButton_C_SetActivated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WIDGET_HardwareButton_C_SetActivated::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, K2Node_Select_Default_1) == 0x000038, "Member 'WIDGET_HardwareButton_C_SetActivated::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, Temp_bool_Variable_2) == 0x00003C, "Member 'WIDGET_HardwareButton_C_SetActivated::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WIDGET_HardwareButton_C_SetActivated::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, K2Node_Select_Default_2) == 0x000048, "Member 'WIDGET_HardwareButton_C_SetActivated::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_SetActivated, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WIDGET_HardwareButton_C_SetActivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.EVENT_OnHardwareStateChanged
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MagLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged) == 0x000001, "Wrong alignment on WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged");
static_assert(sizeof(WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged) == 0x000002, "Wrong size on WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged, Activated) == 0x000000, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged::Activated' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged, MagLocked) == 0x000001, "Member 'WIDGET_HardwareButton_C_EVENT_OnHardwareStateChanged::MagLocked' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.FindHardwareBag
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_HardwareButton_C_FindHardwareBag final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_FindHardwareBag) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_FindHardwareBag");
static_assert(sizeof(WIDGET_HardwareButton_C_FindHardwareBag) == 0x000010, "Wrong size on WIDGET_HardwareButton_C_FindHardwareBag");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareBag, Bag) == 0x000000, "Member 'WIDGET_HardwareButton_C_FindHardwareBag::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_FindHardwareBag, CallFunc_GetBagByType_Bag) == 0x000008, "Member 'WIDGET_HardwareButton_C_FindHardwareBag::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WIDGET_HardwareButton.WIDGET_HardwareButton_C.ToggleHardware
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_HardwareButton_C_ToggleHardware final
{
public:
	class UITEM_HardwareBase_C*                   Item;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ToggleHardware_State;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HardwareBase_C*                   CallFunc_FindHardwareItem_HardwareItem;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareButton_C_ToggleHardware) == 0x000008, "Wrong alignment on WIDGET_HardwareButton_C_ToggleHardware");
static_assert(sizeof(WIDGET_HardwareButton_C_ToggleHardware) == 0x000018, "Wrong size on WIDGET_HardwareButton_C_ToggleHardware");
static_assert(offsetof(WIDGET_HardwareButton_C_ToggleHardware, Item) == 0x000000, "Member 'WIDGET_HardwareButton_C_ToggleHardware::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_ToggleHardware, CallFunc_ToggleHardware_State) == 0x000008, "Member 'WIDGET_HardwareButton_C_ToggleHardware::CallFunc_ToggleHardware_State' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_ToggleHardware, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WIDGET_HardwareButton_C_ToggleHardware::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareButton_C_ToggleHardware, CallFunc_FindHardwareItem_HardwareItem) == 0x000010, "Member 'WIDGET_HardwareButton_C_ToggleHardware::CallFunc_FindHardwareItem_HardwareItem' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Story_Base

#include "Basic.hpp"

#include "ITEM_Story_Base_classes.hpp"
#include "ITEM_Story_Base_parameters.hpp"


namespace SDK
{

// Function ITEM_Story_Base.ITEM_Story_Base_C.HasCompletedStoryQuest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_Story_Base_C::HasCompletedStoryQuest(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "HasCompletedStoryQuest");

	Params::ITEM_Story_Base_C_HasCompletedStoryQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_Story_Base.ITEM_Story_Base_C.SetStoryItemInUse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_Story_Base_C::SetStoryItemInUse(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "SetStoryItemInUse");

	Params::ITEM_Story_Base_C_SetStoryItemInUse Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_Story_Base.ITEM_Story_Base_C.CanUnslot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_Story_Base_C::CanUnslot(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "CanUnslot");

	Params::ITEM_Story_Base_C_CanUnslot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_Story_Base.ITEM_Story_Base_C.CanDropItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_Story_Base_C::CanDropItem(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "CanDropItem");

	Params::ITEM_Story_Base_C_CanDropItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_Story_Base.ITEM_Story_Base_C.GetInventoryItemDetailsClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           InventoryItemDetailsWidget                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_Story_Base_C::GetInventoryItemDetailsClass(class UClass** InventoryItemDetailsWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "GetInventoryItemDetailsClass");

	Params::ITEM_Story_Base_C_GetInventoryItemDetailsClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InventoryItemDetailsWidget != nullptr)
		*InventoryItemDetailsWidget = Parms.InventoryItemDetailsWidget;
}


// Function ITEM_Story_Base.ITEM_Story_Base_C.HasWorldInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_Story_Base_C::HasWorldInteraction(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_Story_Base_C", "HasWorldInteraction");

	Params::ITEM_Story_Base_C_HasWorldInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


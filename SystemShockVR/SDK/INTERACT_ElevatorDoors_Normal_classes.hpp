#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ElevatorDoors_Normal

#include "Basic.hpp"

#include "INTERACT_ElevatorDoors_Base_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_ElevatorDoors_Normal.INTERACT_ElevatorDoors_Normal_C
// 0x00B8 (0x03F8 - 0x0340)
class AINTERACT_ElevatorDoors_Normal_C final : public AINTERACT_ElevatorDoors_Base_C
{
public:
	class UStaticMeshComponent*                   ElevatorDoorFrame;                                 // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileWallBack;                                      // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileFloor;                                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileCeiling;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileWallRight;                                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TileWallLeft;                                      // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TilePillarRight;                                   // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TilePillarLeft;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TopDoorCollision;                                  // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LeftDoorCollision;                                 // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RightDoorCollision;                                // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight7;                                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight6;                                       // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight5;                                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight4;                                       // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight3;                                       // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight2;                                       // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LeftDoorFlapBCollision;                            // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LeftDoorFlapACollision;                            // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RightDoorFlapBCollision;                           // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RightDoorFlapACollision;                           // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void SetTileCollisionEnabled(bool Enable, bool* Result);
	void UpdateEmissiveStrength(float Scale, float* Result);
	void SetElevatorDoorsVisible(bool VisibilityState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_ElevatorDoors_Normal_C">();
	}
	static class AINTERACT_ElevatorDoors_Normal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_ElevatorDoors_Normal_C>();
	}
};
static_assert(alignof(AINTERACT_ElevatorDoors_Normal_C) == 0x000008, "Wrong alignment on AINTERACT_ElevatorDoors_Normal_C");
static_assert(sizeof(AINTERACT_ElevatorDoors_Normal_C) == 0x0003F8, "Wrong size on AINTERACT_ElevatorDoors_Normal_C");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, ElevatorDoorFrame) == 0x000340, "Member 'AINTERACT_ElevatorDoors_Normal_C::ElevatorDoorFrame' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TileWallBack) == 0x000348, "Member 'AINTERACT_ElevatorDoors_Normal_C::TileWallBack' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TileFloor) == 0x000350, "Member 'AINTERACT_ElevatorDoors_Normal_C::TileFloor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TileCeiling) == 0x000358, "Member 'AINTERACT_ElevatorDoors_Normal_C::TileCeiling' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TileWallRight) == 0x000360, "Member 'AINTERACT_ElevatorDoors_Normal_C::TileWallRight' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TileWallLeft) == 0x000368, "Member 'AINTERACT_ElevatorDoors_Normal_C::TileWallLeft' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TilePillarRight) == 0x000370, "Member 'AINTERACT_ElevatorDoors_Normal_C::TilePillarRight' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TilePillarLeft) == 0x000378, "Member 'AINTERACT_ElevatorDoors_Normal_C::TilePillarLeft' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, TopDoorCollision) == 0x000380, "Member 'AINTERACT_ElevatorDoors_Normal_C::TopDoorCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, LeftDoorCollision) == 0x000388, "Member 'AINTERACT_ElevatorDoors_Normal_C::LeftDoorCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, RightDoorCollision) == 0x000390, "Member 'AINTERACT_ElevatorDoors_Normal_C::RightDoorCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight) == 0x000398, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight7) == 0x0003A0, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight7' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight6) == 0x0003A8, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight6' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight5) == 0x0003B0, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight5' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight4) == 0x0003B8, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight4' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight3) == 0x0003C0, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight3' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight2) == 0x0003C8, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight2' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, PointLight1) == 0x0003D0, "Member 'AINTERACT_ElevatorDoors_Normal_C::PointLight1' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, LeftDoorFlapBCollision) == 0x0003D8, "Member 'AINTERACT_ElevatorDoors_Normal_C::LeftDoorFlapBCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, LeftDoorFlapACollision) == 0x0003E0, "Member 'AINTERACT_ElevatorDoors_Normal_C::LeftDoorFlapACollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, RightDoorFlapBCollision) == 0x0003E8, "Member 'AINTERACT_ElevatorDoors_Normal_C::RightDoorFlapBCollision' has a wrong offset!");
static_assert(offsetof(AINTERACT_ElevatorDoors_Normal_C, RightDoorFlapACollision) == 0x0003F0, "Member 'AINTERACT_ElevatorDoors_Normal_C::RightDoorFlapACollision' has a wrong offset!");

}


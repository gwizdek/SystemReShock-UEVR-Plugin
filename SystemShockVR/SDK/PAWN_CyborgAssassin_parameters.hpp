#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_CyborgAssassin

#include "Basic.hpp"

#include "AttributeSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.ExecuteUbergraph_PAWN_CyborgAssassin
// 0x000C (0x000C - 0x0000)
struct PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin) == 0x000004, "Wrong alignment on PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin");
static_assert(sizeof(PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin) == 0x00000C, "Wrong size on PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin");
static_assert(offsetof(PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin, EntryPoint) == 0x000000, "Member 'PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin, CallFunc_IsActive_ReturnValue) == 0x000008, "Member 'PAWN_CyborgAssassin_C_ExecuteUbergraph_PAWN_CyborgAssassin::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PAWN_CyborgAssassin_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyborgAssassin_C_ReceiveTick) == 0x000004, "Wrong alignment on PAWN_CyborgAssassin_C_ReceiveTick");
static_assert(sizeof(PAWN_CyborgAssassin_C_ReceiveTick) == 0x000004, "Wrong size on PAWN_CyborgAssassin_C_ReceiveTick");
static_assert(offsetof(PAWN_CyborgAssassin_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PAWN_CyborgAssassin_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.SetLaserEnabled
// 0x0005 (0x0005 - 0x0000)
struct PAWN_CyborgAssassin_C_SetLaserEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_SetLaserEnabled) == 0x000001, "Wrong alignment on PAWN_CyborgAssassin_C_SetLaserEnabled");
static_assert(sizeof(PAWN_CyborgAssassin_C_SetLaserEnabled) == 0x000005, "Wrong size on PAWN_CyborgAssassin_C_SetLaserEnabled");
static_assert(offsetof(PAWN_CyborgAssassin_C_SetLaserEnabled, IsEnabled) == 0x000000, "Member 'PAWN_CyborgAssassin_C_SetLaserEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_SetLaserEnabled, CallFunc_IsActive_ReturnValue) == 0x000001, "Member 'PAWN_CyborgAssassin_C_SetLaserEnabled::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_SetLaserEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_CyborgAssassin_C_SetLaserEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_SetLaserEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'PAWN_CyborgAssassin_C_SetLaserEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_SetLaserEnabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'PAWN_CyborgAssassin_C_SetLaserEnabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.UpdateLaser
// 0x01A0 (0x01A0 - 0x0000)
struct PAWN_CyborgAssassin_C_UpdateLaser final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CurrentSkillTarget;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyborgAssassin_C_UpdateLaser) == 0x000010, "Wrong alignment on PAWN_CyborgAssassin_C_UpdateLaser");
static_assert(sizeof(PAWN_CyborgAssassin_C_UpdateLaser) == 0x0001A0, "Wrong size on PAWN_CyborgAssassin_C_UpdateLaser");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, TargetLocation) == 0x000000, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::TargetLocation' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CurrentSkillTarget) == 0x000010, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CurrentSkillTarget' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_InverseTransformLocation_ReturnValue) == 0x000060, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_Get_Target_Location_Location) == 0x00006C, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, Temp_object_Variable) == 0x000078, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_GetTarget_Target) == 0x000088, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_LineTraceSingle_OutHit) == 0x000090, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_LineTraceSingle_ReturnValue) == 0x000118, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_ElementIndex) == 0x00017C, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_FaceIndex) == 0x000180, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_TraceStart) == 0x000184, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_UpdateLaser, CallFunc_BreakHitResult_TraceEnd) == 0x000190, "Member 'PAWN_CyborgAssassin_C_UpdateLaser::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.DestroyRifle
// 0x0110 (0x0110 - 0x0000)
struct PAWN_CyborgAssassin_C_DestroyRifle final
{
public:
	bool                                          DuringBeginPlay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_DamagedAssaultRifle_C*          CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0080(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_DestroyRifle) == 0x000010, "Wrong alignment on PAWN_CyborgAssassin_C_DestroyRifle");
static_assert(sizeof(PAWN_CyborgAssassin_C_DestroyRifle) == 0x000110, "Wrong size on PAWN_CyborgAssassin_C_DestroyRifle");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, DuringBeginPlay) == 0x000000, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::DuringBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, SpawnTransform) == 0x000010, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::SpawnTransform' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_GetActorLevel_ReturnValue) == 0x000040, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000048, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000080, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_DestroyRifle, CallFunc_Not_PreBool_ReturnValue) == 0x000109, "Member 'PAWN_CyborgAssassin_C_DestroyRifle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.InitializeCharacterAsDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_CyborgAssassin_C_InitializeCharacterAsDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacterAsDead_Result;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_InitializeCharacterAsDead) == 0x000001, "Wrong alignment on PAWN_CyborgAssassin_C_InitializeCharacterAsDead");
static_assert(sizeof(PAWN_CyborgAssassin_C_InitializeCharacterAsDead) == 0x000002, "Wrong size on PAWN_CyborgAssassin_C_InitializeCharacterAsDead");
static_assert(offsetof(PAWN_CyborgAssassin_C_InitializeCharacterAsDead, Result) == 0x000000, "Member 'PAWN_CyborgAssassin_C_InitializeCharacterAsDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_InitializeCharacterAsDead, CallFunc_InitializeCharacterAsDead_Result) == 0x000001, "Member 'PAWN_CyborgAssassin_C_InitializeCharacterAsDead::CallFunc_InitializeCharacterAsDead_Result' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.OnCharacterDied
// 0x00B0 (0x00B0 - 0x0000)
struct PAWN_CyborgAssassin_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProximityMineProjectile_C*             ProxMineProjectile;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChildrenComponents;                                // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AProximityMineProjectile_C*             K2Node_DynamicCast_AsProximity_Mine_Projectile;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PAWN_CyborgAssassin_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_CyborgAssassin_C_OnCharacterDied");
static_assert(sizeof(PAWN_CyborgAssassin_C_OnCharacterDied) == 0x0000B0, "Wrong size on PAWN_CyborgAssassin_C_OnCharacterDied");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, ProxMineProjectile) == 0x000040, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::ProxMineProjectile' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, ChildrenComponents) == 0x000048, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::ChildrenComponents' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x000058, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_Array_Get_Item) == 0x000068, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, K2Node_DynamicCast_AsProximity_Mine_Projectile) == 0x000080, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::K2Node_DynamicCast_AsProximity_Mine_Projectile' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000090, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000098, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterDied, CallFunc_GetChildrenComponents_Children) == 0x0000A0, "Member 'PAWN_CyborgAssassin_C_OnCharacterDied::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.OnUpdateLaserVisibility
// 0x0005 (0x0005 - 0x0000)
struct PAWN_CyborgAssassin_C_OnUpdateLaserVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyAware_Result;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility) == 0x000001, "Wrong alignment on PAWN_CyborgAssassin_C_OnUpdateLaserVisibility");
static_assert(sizeof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility) == 0x000005, "Wrong size on PAWN_CyborgAssassin_C_OnUpdateLaserVisibility");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility, VisibilityState) == 0x000000, "Member 'PAWN_CyborgAssassin_C_OnUpdateLaserVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility, CallFunc_IsCharacterVisible_Result) == 0x000001, "Member 'PAWN_CyborgAssassin_C_OnUpdateLaserVisibility::CallFunc_IsCharacterVisible_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility, CallFunc_IsEnemyAware_Result) == 0x000002, "Member 'PAWN_CyborgAssassin_C_OnUpdateLaserVisibility::CallFunc_IsEnemyAware_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'PAWN_CyborgAssassin_C_OnUpdateLaserVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnUpdateLaserVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'PAWN_CyborgAssassin_C_OnUpdateLaserVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.OnMagneticDisableStateChanged
// 0x0004 (0x0004 - 0x0000)
struct PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged final
{
public:
	bool                                          DisableState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLowFiVisibilityEnabled_Result;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged) == 0x000001, "Wrong alignment on PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged");
static_assert(sizeof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged) == 0x000004, "Wrong size on PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged, DisableState) == 0x000000, "Member 'PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged::DisableState' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged, CallFunc_IsLowFiVisibilityEnabled_Result) == 0x000001, "Member 'PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged::CallFunc_IsLowFiVisibilityEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'PAWN_CyborgAssassin_C_OnMagneticDisableStateChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_CyborgAssassin.PAWN_CyborgAssassin_C.OnCharacterVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged) == 0x000001, "Wrong alignment on PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged");
static_assert(sizeof(PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged) == 0x000001, "Wrong size on PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged");
static_assert(offsetof(PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged, VisibilityState) == 0x000000, "Member 'PAWN_CyborgAssassin_C_OnCharacterVisibilityChanged::VisibilityState' has a wrong offset!");

}


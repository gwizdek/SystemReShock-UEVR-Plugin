#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_LimbManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_AnimatedLimb_structs.hpp"
#include "STRUCT_DeathBlowData_structs.hpp"
#include "ENUM_Axis_structs.hpp"


namespace SDK::Params
{

// Function COMP_LimbManager.COMP_LimbManager_C.ExecuteUbergraph_COMP_LimbManager
// 0x0028 (0x0028 - 0x0000)
struct COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCustomDeathBehavior_IsFinished;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager");
static_assert(sizeof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager) == 0x000028, "Wrong size on COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, EntryPoint) == 0x000000, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_GetOwnerPawn_Pawn) == 0x000010, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_UpdateCustomDeathBehavior_IsFinished) == 0x000018, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_UpdateCustomDeathBehavior_IsFinished' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000019, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00001C, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000020, "Member 'COMP_LimbManager_C_ExecuteUbergraph_COMP_LimbManager::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_LimbManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_LimbManager_C_ReceiveTick");
static_assert(sizeof(COMP_LimbManager_C_ReceiveTick) == 0x000004, "Wrong size on COMP_LimbManager_C_ReceiveTick");
static_assert(offsetof(COMP_LimbManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_LimbManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.IsLimbImpactedInFront
// 0x0180 (0x0180 - 0x0000)
struct COMP_LimbManager_C_IsLimbImpactedInFront final
{
public:
	struct FSTRUCT_AnimatedLimb                   LimbSettings;                                      // 0x0000(0x0024)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DegreesBetween;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldBoneForward;                                  // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             WorldBoneTransform;                                // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	ENUM_Axis                                     Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenNormals_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_IsLimbImpactedInFront) == 0x000010, "Wrong alignment on COMP_LimbManager_C_IsLimbImpactedInFront");
static_assert(sizeof(COMP_LimbManager_C_IsLimbImpactedInFront) == 0x000180, "Wrong size on COMP_LimbManager_C_IsLimbImpactedInFront");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, LimbSettings) == 0x000000, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::LimbSettings' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, ImpactLocation) == 0x000024, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::ImpactLocation' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, Result) == 0x000030, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, DegreesBetween) == 0x000034, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::DegreesBetween' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, WorldBoneForward) == 0x000038, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::WorldBoneForward' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, ImpactNormal) == 0x000044, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::ImpactNormal' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, WorldBoneTransform) == 0x000050, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::WorldBoneTransform' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, Temp_byte_Variable) == 0x000080, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_Abs_ReturnValue) == 0x000084, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000089, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Location) == 0x00008C, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Scale) == 0x0000A4, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D4, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GetAxes_X) == 0x0000E0, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GetAxes_Y) == 0x0000EC, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GetAxes_Z) == 0x0000F8, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_Normal_ReturnValue) == 0x000104, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_AngleBetweenNormals_ReturnValue) == 0x000110, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_AngleBetweenNormals_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GetLimbMesh_Mesh) == 0x000118, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_GetSocketTransform_ReturnValue) == 0x000120, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_SignOfFloat_ReturnValue) == 0x000150, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_Abs_ReturnValue_1) == 0x000154, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000158, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, K2Node_Select_Default) == 0x00015C, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_IsLimbImpactedInFront, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000168, "Member 'COMP_LimbManager_C_IsLimbImpactedInFront::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.SearchForLimbNameFromBoneName
// 0x00C8 (0x00C8 - 0x0000)
struct COMP_LimbManager_C_SearchForLimbNameFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BestBoneName;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentBoneName;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BestLimbName;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentLimbName;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFoundParentLimb;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CurrentLimb;                                       // 0x0034(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_SearchForLimbNameFromBoneName) == 0x000008, "Wrong alignment on COMP_LimbManager_C_SearchForLimbNameFromBoneName");
static_assert(sizeof(COMP_LimbManager_C_SearchForLimbNameFromBoneName) == 0x0000C8, "Wrong size on COMP_LimbManager_C_SearchForLimbNameFromBoneName");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, BoneName) == 0x000000, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, Result) == 0x000008, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, BestBoneName) == 0x000010, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::BestBoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CurrentBoneName) == 0x000018, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CurrentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, BestLimbName) == 0x000020, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::BestLimbName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CurrentLimbName) == 0x000028, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CurrentLimbName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, HasFoundParentLimb) == 0x000030, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::HasFoundParentLimb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CurrentLimb) == 0x000034, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, LimbMesh) == 0x000058, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, Temp_int_Array_Index_Variable) == 0x000060, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_GetLimbMesh_Mesh) == 0x000068, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_DoesSocketExist_ReturnValue) == 0x000074, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_BoneIsChildOf_ReturnValue) == 0x00007C, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x00007D, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00007E, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A4, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A8, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SearchForLimbNameFromBoneName, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'COMP_LimbManager_C_SearchForLimbNameFromBoneName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbFromBoneName
// 0x007C (0x007C - 0x0000)
struct COMP_LimbManager_C_GetLimbFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   Limb;                                              // 0x0008(0x0024)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbName;                                          // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_SearchForLimbNameFromBoneName_Result;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x004C(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbFromBoneName) == 0x000004, "Wrong alignment on COMP_LimbManager_C_GetLimbFromBoneName");
static_assert(sizeof(COMP_LimbManager_C_GetLimbFromBoneName) == 0x00007C, "Wrong size on COMP_LimbManager_C_GetLimbFromBoneName");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, BoneName) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, Limb) == 0x000008, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::Limb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, LimbName) == 0x00002C, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000034, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_SearchForLimbNameFromBoneName_Result) == 0x000038, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_SearchForLimbNameFromBoneName_Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_Map_Find_Value) == 0x000040, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_GetDataTableRowFromName_OutRow) == 0x00004C, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_Map_Length_ReturnValue) == 0x000074, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbFromBoneName, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'COMP_LimbManager_C_GetLimbFromBoneName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbDamageBonusFromBoneName
// 0x0070 (0x0070 - 0x0000)
struct COMP_LimbManager_C_GetLimbDamageBonusFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BonusPercent;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   LimbSettings;                                      // 0x0018(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLimbImpactedInFront_Result;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb;                 // 0x0048(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName) == 0x000004, "Wrong alignment on COMP_LimbManager_C_GetLimbDamageBonusFromBoneName");
static_assert(sizeof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName) == 0x000070, "Wrong size on COMP_LimbManager_C_GetLimbDamageBonusFromBoneName");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, BoneName) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, ImpactLocation) == 0x000008, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::ImpactLocation' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, BonusPercent) == 0x000014, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::BonusPercent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, LimbSettings) == 0x000018, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::LimbSettings' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_IsLimbImpactedInFront_Result) == 0x00003D, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_IsLimbImpactedInFront_Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00003E, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_GetLimbFromBoneName_Limb) == 0x000048, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_GetLimbFromBoneName_Limb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromBoneName, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromBoneName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetOwnerPawn
// 0x0020 (0x0020 - 0x0000)
struct COMP_LimbManager_C_GetOwnerPawn final
{
public:
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetOwnerPawn) == 0x000008, "Wrong alignment on COMP_LimbManager_C_GetOwnerPawn");
static_assert(sizeof(COMP_LimbManager_C_GetOwnerPawn) == 0x000020, "Wrong size on COMP_LimbManager_C_GetOwnerPawn");
static_assert(offsetof(COMP_LimbManager_C_GetOwnerPawn, Pawn) == 0x000000, "Member 'COMP_LimbManager_C_GetOwnerPawn::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetOwnerPawn, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_GetOwnerPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetOwnerPawn, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'COMP_LimbManager_C_GetOwnerPawn::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetOwnerPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_LimbManager_C_GetOwnerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ReceiveDamage
// 0x00E0 (0x00E0 - 0x0000)
struct COMP_LimbManager_C_ReceiveDamage final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSTRUCT_DeathBlowData                  DeathBlow;                                         // 0x0030(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_DismembermentManager_C*           DismembermentComponent;                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCustomDeathBehavior_Result;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DeathBlowData                  CallFunc_GetDeathBlow_DeathBlow;                   // 0x0080(0x0038)(HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_DismembermentManager_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_LegDismembered;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveDamage_LimbDismembered;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_ReceiveDamage) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ReceiveDamage");
static_assert(sizeof(COMP_LimbManager_C_ReceiveDamage) == 0x0000E0, "Wrong size on COMP_LimbManager_C_ReceiveDamage");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_ReceiveDamage::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, DamageInstance) == 0x000008, "Member 'COMP_LimbManager_C_ReceiveDamage::DamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, DeathBlow) == 0x000030, "Member 'COMP_LimbManager_C_ReceiveDamage::DeathBlow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, Pawn) == 0x000068, "Member 'COMP_LimbManager_C_ReceiveDamage::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, DismembermentComponent) == 0x000070, "Member 'COMP_LimbManager_C_ReceiveDamage::DismembermentComponent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_HasCustomDeathBehavior_Result) == 0x000078, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_HasCustomDeathBehavior_Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000079, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_GetDeathBlow_DeathBlow) == 0x000080, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_GetDeathBlow_DeathBlow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_GetOwnerPawn_Pawn) == 0x0000B8, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D0, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_ReceiveDamage_LegDismembered) == 0x0000D8, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_ReceiveDamage_LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_ReceiveDamage_LimbDismembered) == 0x0000D9, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_ReceiveDamage_LimbDismembered' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveDamage, CallFunc_IsValid_ReturnValue) == 0x0000DA, "Member 'COMP_LimbManager_C_ReceiveDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ReceiveImpulseWhileAlive
// 0x00D0 (0x00D0 - 0x0000)
struct COMP_LimbManager_C_ReceiveImpulseWhileAlive final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         NewLocalVar_0;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_DismembermentManager_C*           DismembermentComponent;                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   ImpactedLimb;                                      // 0x0048(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NetDamage;                                         // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLimbIndex;                                  // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimbHealth;                                        // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbBone;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimbIndex;                                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveImpact_Result;                     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_ReceiveImpulseWhileAlive) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ReceiveImpulseWhileAlive");
static_assert(sizeof(COMP_LimbManager_C_ReceiveImpulseWhileAlive) == 0x0000D0, "Wrong size on COMP_LimbManager_C_ReceiveImpulseWhileAlive");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, DamageInstance) == 0x000008, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::DamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, NewLocalVar_0) == 0x000030, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, Pawn) == 0x000038, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, DismembermentComponent) == 0x000040, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::DismembermentComponent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, ImpactedLimb) == 0x000048, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::ImpactedLimb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, NetDamage) == 0x00006C, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::NetDamage' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CurrentLimbIndex) == 0x000070, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CurrentLimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, LimbHealth) == 0x000074, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::LimbHealth' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, LimbBone) == 0x000078, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::LimbBone' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, LimbIndex) == 0x000080, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::LimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_GetOwnerPawn_Pawn) == 0x0000A0, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000A8, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B0, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x0000B8, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileAlive, CallFunc_ReceiveImpact_Result) == 0x0000C9, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileAlive::CallFunc_ReceiveImpact_Result' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ReceiveImpulseWhileDead
// 0x0040 (0x0040 - 0x0000)
struct COMP_LimbManager_C_ReceiveImpulseWhileDead final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_ReceiveImpulseWhileDead) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ReceiveImpulseWhileDead");
static_assert(sizeof(COMP_LimbManager_C_ReceiveImpulseWhileDead) == 0x000040, "Wrong size on COMP_LimbManager_C_ReceiveImpulseWhileDead");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDead, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDead::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDead, DamageInstance) == 0x000008, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDead::DamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDead, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDead, CallFunc_GetLimbMesh_Mesh) == 0x000038, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDead::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ReceiveImpulseWhileDying
// 0x0030 (0x0030 - 0x0000)
struct COMP_LimbManager_C_ReceiveImpulseWhileDying final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageIntance;                                     // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(COMP_LimbManager_C_ReceiveImpulseWhileDying) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ReceiveImpulseWhileDying");
static_assert(sizeof(COMP_LimbManager_C_ReceiveImpulseWhileDying) == 0x000030, "Wrong size on COMP_LimbManager_C_ReceiveImpulseWhileDying");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDying, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDying::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ReceiveImpulseWhileDying, DamageIntance) == 0x000008, "Member 'COMP_LimbManager_C_ReceiveImpulseWhileDying::DamageIntance' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbMesh
// 0x0030 (0x0030 - 0x0000)
struct COMP_LimbManager_C_GetLimbMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbMesh) == 0x000008, "Wrong alignment on COMP_LimbManager_C_GetLimbMesh");
static_assert(sizeof(COMP_LimbManager_C_GetLimbMesh) == 0x000030, "Wrong size on COMP_LimbManager_C_GetLimbMesh");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, Mesh) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbMesh::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_GetLimbMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'COMP_LimbManager_C_GetLimbMesh::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_LimbManager_C_GetLimbMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000020, "Member 'COMP_LimbManager_C_GetLimbMesh::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbMesh, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'COMP_LimbManager_C_GetLimbMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.StartDeathRattleTransition
// 0x0038 (0x0038 - 0x0000)
struct COMP_LimbManager_C_StartDeathRattleTransition final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_StartDeathRattleTransition) == 0x000008, "Wrong alignment on COMP_LimbManager_C_StartDeathRattleTransition");
static_assert(sizeof(COMP_LimbManager_C_StartDeathRattleTransition) == 0x000038, "Wrong size on COMP_LimbManager_C_StartDeathRattleTransition");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, CallFunc_GetLimbMesh_Mesh) == 0x000008, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_StartDeathRattleTransition, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000034, "Member 'COMP_LimbManager_C_StartDeathRattleTransition::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.SetRagdollEnabled
// 0x0010 (0x0010 - 0x0000)
struct COMP_LimbManager_C_SetRagdollEnabled final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_SetRagdollEnabled) == 0x000008, "Wrong alignment on COMP_LimbManager_C_SetRagdollEnabled");
static_assert(sizeof(COMP_LimbManager_C_SetRagdollEnabled) == 0x000010, "Wrong size on COMP_LimbManager_C_SetRagdollEnabled");
static_assert(offsetof(COMP_LimbManager_C_SetRagdollEnabled, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'COMP_LimbManager_C_SetRagdollEnabled::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_SetRagdollEnabled, CallFunc_GetLimbMesh_Mesh) == 0x000008, "Member 'COMP_LimbManager_C_SetRagdollEnabled::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.OnEndDeathRattleTransition
// 0x0018 (0x0018 - 0x0000)
struct COMP_LimbManager_C_OnEndDeathRattleTransition final
{
public:
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_OnEndDeathRattleTransition) == 0x000008, "Wrong alignment on COMP_LimbManager_C_OnEndDeathRattleTransition");
static_assert(sizeof(COMP_LimbManager_C_OnEndDeathRattleTransition) == 0x000018, "Wrong size on COMP_LimbManager_C_OnEndDeathRattleTransition");
static_assert(offsetof(COMP_LimbManager_C_OnEndDeathRattleTransition, LimbMesh) == 0x000000, "Member 'COMP_LimbManager_C_OnEndDeathRattleTransition::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_OnEndDeathRattleTransition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_OnEndDeathRattleTransition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_OnEndDeathRattleTransition, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'COMP_LimbManager_C_OnEndDeathRattleTransition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_OnEndDeathRattleTransition, CallFunc_GetLimbMesh_Mesh) == 0x000010, "Member 'COMP_LimbManager_C_OnEndDeathRattleTransition::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.UpdateDeathRattle
// 0x0048 (0x0048 - 0x0000)
struct COMP_LimbManager_C_UpdateDeathRattle final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_1;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_2;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_UpdateDeathRattle) == 0x000008, "Wrong alignment on COMP_LimbManager_C_UpdateDeathRattle");
static_assert(sizeof(COMP_LimbManager_C_UpdateDeathRattle) == 0x000048, "Wrong size on COMP_LimbManager_C_UpdateDeathRattle");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, Progress) == 0x000000, "Member 'COMP_LimbManager_C_UpdateDeathRattle::Progress' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GetLimbMesh_Mesh) == 0x000008, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GetLimbMesh_Mesh_1) == 0x000010, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GetLimbMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GetLimbMesh_Mesh_2) == 0x000020, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GetLimbMesh_Mesh_2' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000028, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00002D, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_Ease_ReturnValue) == 0x000030, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000034, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDeathRattle, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'COMP_LimbManager_C_UpdateDeathRattle::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ApplyDeathBlow
// 0x0078 (0x0078 - 0x0000)
struct COMP_LimbManager_C_ApplyDeathBlow final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DeathBlowData                  DeathBlow;                                         // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UCharacterAction_C*                     RagdollAction;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DeathBlowMontage;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_ApplyDeathBlow) == 0x000008, "Wrong alignment on COMP_LimbManager_C_ApplyDeathBlow");
static_assert(sizeof(COMP_LimbManager_C_ApplyDeathBlow) == 0x000078, "Wrong size on COMP_LimbManager_C_ApplyDeathBlow");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, ImpactData) == 0x000000, "Member 'COMP_LimbManager_C_ApplyDeathBlow::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, DeathBlow) == 0x000008, "Member 'COMP_LimbManager_C_ApplyDeathBlow::DeathBlow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, RagdollAction) == 0x000040, "Member 'COMP_LimbManager_C_ApplyDeathBlow::RagdollAction' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, DeathBlowMontage) == 0x000048, "Member 'COMP_LimbManager_C_ApplyDeathBlow::DeathBlowMontage' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, CallFunc_GetOwnerPawn_Pawn) == 0x000050, "Member 'COMP_LimbManager_C_ApplyDeathBlow::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000058, "Member 'COMP_LimbManager_C_ApplyDeathBlow::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, CallFunc_ForceBeginAction_Action) == 0x000060, "Member 'COMP_LimbManager_C_ApplyDeathBlow::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, K2Node_DynamicCast_AsAnim_Montage) == 0x000068, "Member 'COMP_LimbManager_C_ApplyDeathBlow::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'COMP_LimbManager_C_ApplyDeathBlow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ApplyDeathBlow, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'COMP_LimbManager_C_ApplyDeathBlow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.EVENT_OnDeathBlowFinished
// 0x0030 (0x0030 - 0x0000)
struct COMP_LimbManager_C_EVENT_OnDeathBlowFinished final
{
public:
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished) == 0x000008, "Wrong alignment on COMP_LimbManager_C_EVENT_OnDeathBlowFinished");
static_assert(sizeof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished) == 0x000030, "Wrong size on COMP_LimbManager_C_EVENT_OnDeathBlowFinished");
static_assert(offsetof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished, CurrentAction) == 0x000000, "Member 'COMP_LimbManager_C_EVENT_OnDeathBlowFinished::CurrentAction' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_EVENT_OnDeathBlowFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'COMP_LimbManager_C_EVENT_OnDeathBlowFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished, CallFunc_GetOwnerPawn_Pawn) == 0x000020, "Member 'COMP_LimbManager_C_EVENT_OnDeathBlowFinished::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_OnDeathBlowFinished, CallFunc_GetCurrentAction_CurrentAction) == 0x000028, "Member 'COMP_LimbManager_C_EVENT_OnDeathBlowFinished::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.CanBecomeLowFi
// 0x0006 (0x0006 - 0x0000)
struct COMP_LimbManager_C_CanBecomeLowFi final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_CanBecomeLowFi) == 0x000001, "Wrong alignment on COMP_LimbManager_C_CanBecomeLowFi");
static_assert(sizeof(COMP_LimbManager_C_CanBecomeLowFi) == 0x000006, "Wrong size on COMP_LimbManager_C_CanBecomeLowFi");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, Result) == 0x000000, "Member 'COMP_LimbManager_C_CanBecomeLowFi::Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'COMP_LimbManager_C_CanBecomeLowFi::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000002, "Member 'COMP_LimbManager_C_CanBecomeLowFi::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'COMP_LimbManager_C_CanBecomeLowFi::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'COMP_LimbManager_C_CanBecomeLowFi::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_CanBecomeLowFi, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'COMP_LimbManager_C_CanBecomeLowFi::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.UpdateRagdollSettle
// 0x0018 (0x0018 - 0x0000)
struct COMP_LimbManager_C_UpdateRagdollSettle final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyRigidBodyAwake_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_UpdateRagdollSettle) == 0x000008, "Wrong alignment on COMP_LimbManager_C_UpdateRagdollSettle");
static_assert(sizeof(COMP_LimbManager_C_UpdateRagdollSettle) == 0x000018, "Wrong size on COMP_LimbManager_C_UpdateRagdollSettle");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_GetOwnerPawn_Pawn) == 0x000008, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_IsAnyRigidBodyAwake_ReturnValue) == 0x000015, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_IsAnyRigidBodyAwake_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateRagdollSettle, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'COMP_LimbManager_C_UpdateRagdollSettle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbArmorBonusFromBoneName
// 0x0070 (0x0070 - 0x0000)
struct COMP_LimbManager_C_GetLimbArmorBonusFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BonusPercent;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   LimbSettings;                                      // 0x0018(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLimbImpactedInFront_Result;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb;                 // 0x004C(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName) == 0x000004, "Wrong alignment on COMP_LimbManager_C_GetLimbArmorBonusFromBoneName");
static_assert(sizeof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName) == 0x000070, "Wrong size on COMP_LimbManager_C_GetLimbArmorBonusFromBoneName");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, BoneName) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, ImpactLocation) == 0x000008, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::ImpactLocation' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, BonusPercent) == 0x000014, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::BonusPercent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, LimbSettings) == 0x000018, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::LimbSettings' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003C, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00003F, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_IsLimbImpactedInFront_Result) == 0x000048, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_IsLimbImpactedInFront_Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbArmorBonusFromBoneName, CallFunc_GetLimbFromBoneName_Limb) == 0x00004C, "Member 'COMP_LimbManager_C_GetLimbArmorBonusFromBoneName::CallFunc_GetLimbFromBoneName_Limb' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.UpdateDamageImpulse
// 0x0038 (0x0038 - 0x0000)
struct COMP_LimbManager_C_UpdateDamageImpulse final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_1;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_UpdateDamageImpulse) == 0x000008, "Wrong alignment on COMP_LimbManager_C_UpdateDamageImpulse");
static_assert(sizeof(COMP_LimbManager_C_UpdateDamageImpulse) == 0x000038, "Wrong size on COMP_LimbManager_C_UpdateDamageImpulse");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, Progress) == 0x000000, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::Progress' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_GetLimbMesh_Mesh) == 0x000008, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_GetLimbMesh_Mesh_1) == 0x000010, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_GetLimbMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_MakePulsatingValue_ReturnValue) == 0x000018, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_UpdateDamageImpulse, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'COMP_LimbManager_C_UpdateDamageImpulse::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.InitHitReactPhysicsAsset
// 0x0018 (0x0018 - 0x0000)
struct COMP_LimbManager_C_InitHitReactPhysicsAsset final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_Pawn;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_InitHitReactPhysicsAsset) == 0x000008, "Wrong alignment on COMP_LimbManager_C_InitHitReactPhysicsAsset");
static_assert(sizeof(COMP_LimbManager_C_InitHitReactPhysicsAsset) == 0x000018, "Wrong size on COMP_LimbManager_C_InitHitReactPhysicsAsset");
static_assert(offsetof(COMP_LimbManager_C_InitHitReactPhysicsAsset, CallFunc_GetLimbMesh_Mesh) == 0x000000, "Member 'COMP_LimbManager_C_InitHitReactPhysicsAsset::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_InitHitReactPhysicsAsset, CallFunc_GetOwnerPawn_Pawn) == 0x000008, "Member 'COMP_LimbManager_C_InitHitReactPhysicsAsset::CallFunc_GetOwnerPawn_Pawn' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_InitHitReactPhysicsAsset, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'COMP_LimbManager_C_InitHitReactPhysicsAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbDamageBonusFromEpicenter
// 0x01B8 (0x01B8 - 0x0000)
struct COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalWeight;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalWeightedDamageBonus;                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimbDamageBonus;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimbWeight;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbName;                                          // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      LimbWeights;                                       // 0x0030(0x0050)(Edit, BlueprintVisible)
	struct FSTRUCT_AnimatedLimb                   CurrentLimb;                                       // 0x0080(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      CallFunc_GetWeightedDistancesBetweenPointAndBodyInstances_ReturnValue; // 0x0100(0x0050)()
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0160(0x0010)(ReferenceParm)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x018C(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter) == 0x000008, "Wrong alignment on COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter");
static_assert(sizeof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter) == 0x0001B8, "Wrong size on COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, Location) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::Location' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, Radius) == 0x00000C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::Radius' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, Result) == 0x000010, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, TotalWeight) == 0x000014, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::TotalWeight' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, TotalWeightedDamageBonus) == 0x000018, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::TotalWeightedDamageBonus' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, LimbDamageBonus) == 0x00001C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::LimbDamageBonus' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, LimbWeight) == 0x000020, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::LimbWeight' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, LimbName) == 0x000024, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, LimbWeights) == 0x000030, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::LimbWeights' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CurrentLimb) == 0x000080, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, LimbMesh) == 0x0000A8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_GetDisplayName_ReturnValue) == 0x0000C8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Map_Length_ReturnValue) == 0x0000EC, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Map_Find_Value) == 0x0000F4, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_GetWeightedDistancesBetweenPointAndBodyInstances_ReturnValue) == 0x000100, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_GetWeightedDistancesBetweenPointAndBodyInstances_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000150, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000154, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000158, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00015C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Map_Keys_Keys) == 0x000160, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_GetLimbMesh_Mesh) == 0x000170, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Array_Get_Item) == 0x000178, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_SafeDivide_ReturnValue) == 0x000188, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_GetDataTableRowFromName_OutRow) == 0x00018C, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'COMP_LimbManager_C_GetLimbDamageBonusFromEpicenter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.GetLimbDamageAndArmorBonusFromBoneName
// 0x007C (0x007C - 0x0000)
struct COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageBonusPercent;                                // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmorBonusPercent;                                 // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   LimbSettings;                                      // 0x001C(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLimbImpactedInFront_Result;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb;                 // 0x0054(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName) == 0x000004, "Wrong alignment on COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName");
static_assert(sizeof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName) == 0x00007C, "Wrong size on COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, BoneName) == 0x000000, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, ImpactLocation) == 0x000008, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::ImpactLocation' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, DamageBonusPercent) == 0x000014, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::DamageBonusPercent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, ArmorBonusPercent) == 0x000018, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::ArmorBonusPercent' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, LimbSettings) == 0x00001C, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::LimbSettings' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000040, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_IsLimbImpactedInFront_Result) == 0x000041, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_IsLimbImpactedInFront_Result' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000042, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000048, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00004C, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000050, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_GetLimbFromBoneName_Limb) == 0x000054, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_GetLimbFromBoneName_Limb' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'COMP_LimbManager_C_GetLimbDamageAndArmorBonusFromBoneName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.EVENT_StartDeferredDeathRattleTransition
// 0x0040 (0x0040 - 0x0000)
struct COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_1;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_2;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_3;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_4;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_5;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition) == 0x000008, "Wrong alignment on COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition");
static_assert(sizeof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition) == 0x000040, "Wrong size on COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh) == 0x000000, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh_1) == 0x000010, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh_2) == 0x000020, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh_2' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh_3) == 0x000028, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh_3' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh_4) == 0x000030, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh_4' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition, CallFunc_GetLimbMesh_Mesh_5) == 0x000038, "Member 'COMP_LimbManager_C_EVENT_StartDeferredDeathRattleTransition::CallFunc_GetLimbMesh_Mesh_5' has a wrong offset!");

// Function COMP_LimbManager.COMP_LimbManager_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_LimbManager_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_LimbManager_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_LimbManager_C_ShouldSaveComponent");
static_assert(sizeof(COMP_LimbManager_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_LimbManager_C_ShouldSaveComponent");
static_assert(offsetof(COMP_LimbManager_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_LimbManager_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_LimbManager_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LimbManager_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_LimbManager_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BULLORANG_Homing

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BULLORANG_Homing.BULLORANG_Homing_C.ExecuteUbergraph_BULLORANG_Homing
// 0x0060 (0x0060 - 0x0000)
struct BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing) == 0x000008, "Wrong alignment on BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing");
static_assert(sizeof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing) == 0x000060, "Wrong size on BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, EntryPoint) == 0x000000, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::EntryPoint' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000008, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_GetForwardVector_ReturnValue) == 0x000014, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_GetRightVector_ReturnValue) == 0x000020, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00003C, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_RandomFloatInRange_ReturnValue) == 0x000044, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_RandomBool_ReturnValue) == 0x000048, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00004C, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing, CallFunc_RotateAngleAxis_ReturnValue) == 0x000054, "Member 'BULLORANG_Homing_C_ExecuteUbergraph_BULLORANG_Homing::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BULLORANG_Homing_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Homing_C_ReceiveTick) == 0x000004, "Wrong alignment on BULLORANG_Homing_C_ReceiveTick");
static_assert(sizeof(BULLORANG_Homing_C_ReceiveTick) == 0x000004, "Wrong size on BULLORANG_Homing_C_ReceiveTick");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Homing_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.UpdateBullorangMovement
// 0x0208 (0x0208 - 0x0000)
struct BULLORANG_Homing_C_UpdateBullorangMovement final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetRotationSpeedScale;                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetMoveSpeedScale;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetDirection;                                   // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldReturnToBully_Result;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_BullorangDamageTrace_Hit;                 // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_3;      // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetMoveDirection_Directino;         // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Homing_C_UpdateBullorangMovement) == 0x000008, "Wrong alignment on BULLORANG_Homing_C_UpdateBullorangMovement");
static_assert(sizeof(BULLORANG_Homing_C_UpdateBullorangMovement) == 0x000208, "Wrong size on BULLORANG_Homing_C_UpdateBullorangMovement");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, DeltaSeconds) == 0x000000, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, TargetRotationSpeedScale) == 0x000004, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::TargetRotationSpeedScale' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, TargetMoveSpeedScale) == 0x000008, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::TargetMoveSpeedScale' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, TargetDirection) == 0x00000C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::TargetDirection' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_ShouldReturnToBully_Result) == 0x000018, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_ShouldReturnToBully_Result' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000040, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BullorangDamageTrace_Hit) == 0x000058, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BullorangDamageTrace_Hit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E0, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000E1, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_Time) == 0x0000E4, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_Distance) == 0x0000E8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_Location) == 0x0000EC, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_Normal) == 0x000104, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_ImpactNormal) == 0x000110, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_PhysMat) == 0x000120, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_HitActor) == 0x000128, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_HitComponent) == 0x000130, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_HitBoneName) == 0x000138, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_HitItem) == 0x000140, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_ElementIndex) == 0x000144, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_FaceIndex) == 0x000148, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_TraceStart) == 0x00014C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_BreakHitResult_TraceEnd) == 0x000158, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000164, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetReflectionVector_ReturnValue) == 0x000168, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000174, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_FInterpTo_ReturnValue) == 0x000180, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_FInterpTo_ReturnValue_1) == 0x000184, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000188, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x00018C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Dot_VectorVector_ReturnValue) == 0x000198, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorForwardVector_ReturnValue_3) == 0x00019C, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_MapRangeClamped_ReturnValue) == 0x0001A8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Ease_ReturnValue) == 0x0001AC, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0001B0, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0001B4, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetTargetMoveDirection_Directino) == 0x0001B8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetTargetMoveDirection_Directino' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_Ease_ReturnValue_1) == 0x0001C4, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorRightVector_ReturnValue) == 0x0001C8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_GetActorUpVector_ReturnValue) == 0x0001D4, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001E0, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x0001EC, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_RInterpTo_Constant_ReturnValue) == 0x0001F8, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_UpdateBullorangMovement, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000204, "Member 'BULLORANG_Homing_C_UpdateBullorangMovement::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.GetTargetMoveDirection
// 0x00A8 (0x00A8 - 0x0000)
struct BULLORANG_Homing_C_GetTargetMoveDirection final
{
public:
	struct FVector                                Directino;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetDirection;                                   // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Homing_C_GetTargetMoveDirection) == 0x000008, "Wrong alignment on BULLORANG_Homing_C_GetTargetMoveDirection");
static_assert(sizeof(BULLORANG_Homing_C_GetTargetMoveDirection) == 0x0000A8, "Wrong size on BULLORANG_Homing_C_GetTargetMoveDirection");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, Directino) == 0x000000, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::Directino' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, TargetDirection) == 0x00000C, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::TargetDirection' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, TargetLocation) == 0x000018, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::TargetLocation' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000038, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_GetTarget_Target) == 0x000048, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, K2Node_DynamicCast_AsPAWN_Enemy_1) == 0x000050, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::K2Node_DynamicCast_AsPAWN_Enemy_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_GetTarget_Target_1) == 0x000060, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_Get_Target_Location_Location) == 0x000068, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000074, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetMoveDirection, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'BULLORANG_Homing_C_GetTargetMoveDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.GetTargetDistance
// 0x0050 (0x0050 - 0x0000)
struct BULLORANG_Homing_C_GetTargetDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Homing_C_GetTargetDistance) == 0x000008, "Wrong alignment on BULLORANG_Homing_C_GetTargetDistance");
static_assert(sizeof(BULLORANG_Homing_C_GetTargetDistance) == 0x000050, "Wrong size on BULLORANG_Homing_C_GetTargetDistance");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, Distance) == 0x000000, "Member 'BULLORANG_Homing_C_GetTargetDistance::Distance' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, Target) == 0x000008, "Member 'BULLORANG_Homing_C_GetTargetDistance::Target' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BULLORANG_Homing_C_GetTargetDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000020, "Member 'BULLORANG_Homing_C_GetTargetDistance::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BULLORANG_Homing_C_GetTargetDistance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, CallFunc_GetTarget_Target) == 0x000030, "Member 'BULLORANG_Homing_C_GetTargetDistance::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, CallFunc_Get_Target_Location_Location) == 0x000038, "Member 'BULLORANG_Homing_C_GetTargetDistance::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000044, "Member 'BULLORANG_Homing_C_GetTargetDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_GetTargetDistance, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BULLORANG_Homing_C_GetTargetDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.ShouldReturnToBully
// 0x0018 (0x0018 - 0x0000)
struct BULLORANG_Homing_C_ShouldReturnToBully final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToTarget;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetDistance_Distance;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BULLORANG_Homing_C_ShouldReturnToBully) == 0x000004, "Wrong alignment on BULLORANG_Homing_C_ShouldReturnToBully");
static_assert(sizeof(BULLORANG_Homing_C_ShouldReturnToBully) == 0x000018, "Wrong size on BULLORANG_Homing_C_ShouldReturnToBully");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, Result) == 0x000000, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::Result' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, DistanceToTarget) == 0x000004, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_GetTargetDistance_Distance) == 0x00000C, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_GetTargetDistance_Distance' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000015, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000016, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ShouldReturnToBully, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'BULLORANG_Homing_C_ShouldReturnToBully::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BULLORANG_Homing.BULLORANG_Homing_C.ReceiveStunningImpact
// 0x0038 (0x0038 - 0x0000)
struct BULLORANG_Homing_C_ReceiveStunningImpact final
{
public:
	struct FVector                                ReflectionDirection;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BULLORANG_Homing_C_ReceiveStunningImpact) == 0x000004, "Wrong alignment on BULLORANG_Homing_C_ReceiveStunningImpact");
static_assert(sizeof(BULLORANG_Homing_C_ReceiveStunningImpact) == 0x000038, "Wrong size on BULLORANG_Homing_C_ReceiveStunningImpact");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, ReflectionDirection) == 0x000000, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::ReflectionDirection' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, CallFunc_RandomUnitVector_ReturnValue) == 0x000018, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000024, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000030, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BULLORANG_Homing_C_ReceiveStunningImpact, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BULLORANG_Homing_C_ReceiveStunningImpact::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}


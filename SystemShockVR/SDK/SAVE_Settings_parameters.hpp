#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SAVE_Settings

#include "Basic.hpp"

#include "ENUM_InputCategory_structs.hpp"
#include "ENUM_OffLowMediumHigh_structs.hpp"
#include "ENUM_SmallMediumLarge_structs.hpp"
#include "Engine_structs.hpp"
#include "DLSSBlueprint_structs.hpp"
#include "ENUM_HotbarStyle_structs.hpp"
#include "ENUM_OffReducedNormal_structs.hpp"
#include "ENUM_QualitySetting_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_BoundInputActionPair_structs.hpp"


namespace SDK::Params
{

// Function SAVE_Settings.SAVE_Settings_C.AreAllSettingsSaved
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_AreAllSettingsSaved final
{
public:
	bool                                          IsDefault;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_AreAllSettingsSaved) == 0x000001, "Wrong alignment on SAVE_Settings_C_AreAllSettingsSaved");
static_assert(sizeof(SAVE_Settings_C_AreAllSettingsSaved) == 0x000001, "Wrong size on SAVE_Settings_C_AreAllSettingsSaved");
static_assert(offsetof(SAVE_Settings_C_AreAllSettingsSaved, IsDefault) == 0x000000, "Member 'SAVE_Settings_C_AreAllSettingsSaved::IsDefault' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHUDCurvature
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetHUDCurvature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHUDCurvature) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetHUDCurvature");
static_assert(sizeof(SAVE_Settings_C_SetHUDCurvature) == 0x000008, "Wrong size on SAVE_Settings_C_SetHUDCurvature");
static_assert(offsetof(SAVE_Settings_C_SetHUDCurvature, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHUDCurvature::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHUDCurvature, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetHUDCurvature::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDCurvature
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetHUDCurvature final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDCurvature) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetHUDCurvature");
static_assert(sizeof(SAVE_Settings_C_GetHUDCurvature) == 0x000004, "Wrong size on SAVE_Settings_C_GetHUDCurvature");
static_assert(offsetof(SAVE_Settings_C_GetHUDCurvature, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHUDCurvature::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.InitializeSaveSettings
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_InitializeSaveSettings final
{
public:
	class ACON_Hacker_C*                          HackerCon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     SinglePlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_InitializeSaveSettings) == 0x000008, "Wrong alignment on SAVE_Settings_C_InitializeSaveSettings");
static_assert(sizeof(SAVE_Settings_C_InitializeSaveSettings) == 0x000018, "Wrong size on SAVE_Settings_C_InitializeSaveSettings");
static_assert(offsetof(SAVE_Settings_C_InitializeSaveSettings, HackerCon) == 0x000000, "Member 'SAVE_Settings_C_InitializeSaveSettings::HackerCon' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSaveSettings, SinglePlayer) == 0x000008, "Member 'SAVE_Settings_C_InitializeSaveSettings::SinglePlayer' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSaveSettings, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_InitializeSaveSettings::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSaveSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'SAVE_Settings_C_InitializeSaveSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDCurvature
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_ApplyHUDCurvature final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraPanelWidget*                     CameraPanelWidget;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraPanelWidget*                     CallFunc_GetCameraPanelWidget_Result;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyHUDCurvature) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyHUDCurvature");
static_assert(sizeof(SAVE_Settings_C_ApplyHUDCurvature) == 0x000030, "Wrong size on SAVE_Settings_C_ApplyHUDCurvature");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHUDCurvature::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CameraPanelWidget) == 0x000008, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CameraPanelWidget' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CallFunc_GetCameraPanelWidget_Result) == 0x000010, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CallFunc_GetCameraPanelWidget_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDCurvature, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'SAVE_Settings_C_ApplyHUDCurvature::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetMasterVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetMasterVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetMasterVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetMasterVolume");
static_assert(sizeof(SAVE_Settings_C_SetMasterVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetMasterVolume");
static_assert(offsetof(SAVE_Settings_C_SetMasterVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetMasterVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetMasterVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetMasterVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetMasterVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetMasterVolume final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetMasterVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetMasterVolume");
static_assert(sizeof(SAVE_Settings_C_GetMasterVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetMasterVolume");
static_assert(offsetof(SAVE_Settings_C_GetMasterVolume, Result) == 0x000000, "Member 'SAVE_Settings_C_GetMasterVolume::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyMasterVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyMasterVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyMasterVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyMasterVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyMasterVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyMasterVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyMasterVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyMasterVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetMusicVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetMusicVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetMusicVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetMusicVolume");
static_assert(sizeof(SAVE_Settings_C_SetMusicVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetMusicVolume");
static_assert(offsetof(SAVE_Settings_C_SetMusicVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetMusicVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetMusicVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetMusicVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetMusicVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetMusicVolume final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetMusicVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetMusicVolume");
static_assert(sizeof(SAVE_Settings_C_GetMusicVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetMusicVolume");
static_assert(offsetof(SAVE_Settings_C_GetMusicVolume, Result) == 0x000000, "Member 'SAVE_Settings_C_GetMusicVolume::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyMusicVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyMusicVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyMusicVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyMusicVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyMusicVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyMusicVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyMusicVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyMusicVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetVoiceVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetVoiceVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetVoiceVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetVoiceVolume");
static_assert(sizeof(SAVE_Settings_C_SetVoiceVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetVoiceVolume");
static_assert(offsetof(SAVE_Settings_C_SetVoiceVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetVoiceVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetVoiceVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetVoiceVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetVoiceVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetVoiceVolume final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetVoiceVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetVoiceVolume");
static_assert(sizeof(SAVE_Settings_C_GetVoiceVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetVoiceVolume");
static_assert(offsetof(SAVE_Settings_C_GetVoiceVolume, Result) == 0x000000, "Member 'SAVE_Settings_C_GetVoiceVolume::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyVoiceVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyVoiceVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyVoiceVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyVoiceVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyVoiceVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyVoiceVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyVoiceVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyVoiceVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEffectsVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetEffectsVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEffectsVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetEffectsVolume");
static_assert(sizeof(SAVE_Settings_C_SetEffectsVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetEffectsVolume");
static_assert(offsetof(SAVE_Settings_C_SetEffectsVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEffectsVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEffectsVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetEffectsVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEffectsVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetEffectsVolume final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEffectsVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetEffectsVolume");
static_assert(sizeof(SAVE_Settings_C_GetEffectsVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetEffectsVolume");
static_assert(offsetof(SAVE_Settings_C_GetEffectsVolume, Result) == 0x000000, "Member 'SAVE_Settings_C_GetEffectsVolume::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEffectsVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyEffectsVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyEffectsVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyEffectsVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyEffectsVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyEffectsVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEffectsVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEnvironmentVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetEnvironmentVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEnvironmentVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetEnvironmentVolume");
static_assert(sizeof(SAVE_Settings_C_SetEnvironmentVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetEnvironmentVolume");
static_assert(offsetof(SAVE_Settings_C_SetEnvironmentVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEnvironmentVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEnvironmentVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetEnvironmentVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnvironmentVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetEnvironmentVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEnvironmentVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetEnvironmentVolume");
static_assert(sizeof(SAVE_Settings_C_GetEnvironmentVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetEnvironmentVolume");
static_assert(offsetof(SAVE_Settings_C_GetEnvironmentVolume, Volume) == 0x000000, "Member 'SAVE_Settings_C_GetEnvironmentVolume::Volume' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEnvironmentVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyEnvironmentVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyEnvironmentVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyEnvironmentVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyEnvironmentVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyEnvironmentVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyEnvironmentVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEnvironmentVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetDefaultLanguage
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_SetDefaultLanguage final
{
public:
	class FString                                 DefaultLanguage;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_SetDefaultLanguage) == 0x000008, "Wrong alignment on SAVE_Settings_C_SetDefaultLanguage");
static_assert(sizeof(SAVE_Settings_C_SetDefaultLanguage) == 0x000010, "Wrong size on SAVE_Settings_C_SetDefaultLanguage");
static_assert(offsetof(SAVE_Settings_C_SetDefaultLanguage, DefaultLanguage) == 0x000000, "Member 'SAVE_Settings_C_SetDefaultLanguage::DefaultLanguage' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetLanguage
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_SetLanguage final
{
public:
	class FString                                 NewValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetLanguage) == 0x000008, "Wrong alignment on SAVE_Settings_C_SetLanguage");
static_assert(sizeof(SAVE_Settings_C_SetLanguage) == 0x000018, "Wrong size on SAVE_Settings_C_SetLanguage");
static_assert(offsetof(SAVE_Settings_C_SetLanguage, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetLanguage::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetLanguage, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_SetLanguage::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetLanguage
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_GetLanguage final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetLanguage) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetLanguage");
static_assert(sizeof(SAVE_Settings_C_GetLanguage) == 0x000010, "Wrong size on SAVE_Settings_C_GetLanguage");
static_assert(offsetof(SAVE_Settings_C_GetLanguage, Result) == 0x000000, "Member 'SAVE_Settings_C_GetLanguage::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyLanguage
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_ApplyLanguage final
{
public:
	class FString                                 NewValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentCulture_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyLanguage) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyLanguage");
static_assert(sizeof(SAVE_Settings_C_ApplyLanguage) == 0x000018, "Wrong size on SAVE_Settings_C_ApplyLanguage");
static_assert(offsetof(SAVE_Settings_C_ApplyLanguage, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyLanguage::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyLanguage, CallFunc_SetCurrentCulture_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_ApplyLanguage::CallFunc_SetCurrentCulture_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetUIVolume
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetUIVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetUIVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetUIVolume");
static_assert(sizeof(SAVE_Settings_C_SetUIVolume) == 0x000008, "Wrong size on SAVE_Settings_C_SetUIVolume");
static_assert(offsetof(SAVE_Settings_C_SetUIVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetUIVolume::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetUIVolume, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetUIVolume::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetUIVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetUIVolume final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetUIVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetUIVolume");
static_assert(sizeof(SAVE_Settings_C_GetUIVolume) == 0x000004, "Wrong size on SAVE_Settings_C_GetUIVolume");
static_assert(offsetof(SAVE_Settings_C_GetUIVolume, Result) == 0x000000, "Member 'SAVE_Settings_C_GetUIVolume::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyUIVolume
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyUIVolume final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyUIVolume) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyUIVolume");
static_assert(sizeof(SAVE_Settings_C_ApplyUIVolume) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyUIVolume");
static_assert(offsetof(SAVE_Settings_C_ApplyUIVolume, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyUIVolume::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetDLSS
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetDLSS final
{
public:
	EUDLSSMode                                    NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetDLSS) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetDLSS");
static_assert(sizeof(SAVE_Settings_C_SetDLSS) == 0x000002, "Wrong size on SAVE_Settings_C_SetDLSS");
static_assert(offsetof(SAVE_Settings_C_SetDLSS, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetDLSS::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetDLSS, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetDLSS::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDLSS
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetDLSS final
{
public:
	EUDLSSMode                                    Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetDLSS) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetDLSS");
static_assert(sizeof(SAVE_Settings_C_GetDLSS) == 0x000001, "Wrong size on SAVE_Settings_C_GetDLSS");
static_assert(offsetof(SAVE_Settings_C_GetDLSS, Result) == 0x000000, "Member 'SAVE_Settings_C_GetDLSS::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyDLSS
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyDLSS final
{
public:
	EUDLSSMode                                    NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSModeSupported_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUDLSSMode                                    CallFunc_GetDLSSMode_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyDLSS) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyDLSS");
static_assert(sizeof(SAVE_Settings_C_ApplyDLSS) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyDLSS");
static_assert(offsetof(SAVE_Settings_C_ApplyDLSS, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyDLSS::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyDLSS, CallFunc_IsDLSSModeSupported_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_ApplyDLSS::CallFunc_IsDLSSModeSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyDLSS, CallFunc_GetDLSSMode_ReturnValue) == 0x000002, "Member 'SAVE_Settings_C_ApplyDLSS::CallFunc_GetDLSSMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyDLSS, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'SAVE_Settings_C_ApplyDLSS::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetSubtitlesEnabled
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetSubtitlesEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetSubtitlesEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetSubtitlesEnabled");
static_assert(sizeof(SAVE_Settings_C_SetSubtitlesEnabled) == 0x000002, "Wrong size on SAVE_Settings_C_SetSubtitlesEnabled");
static_assert(offsetof(SAVE_Settings_C_SetSubtitlesEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetSubtitlesEnabled::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetSubtitlesEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetSubtitlesEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSubtitlesEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetSubtitlesEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetSubtitlesEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetSubtitlesEnabled");
static_assert(sizeof(SAVE_Settings_C_GetSubtitlesEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_GetSubtitlesEnabled");
static_assert(offsetof(SAVE_Settings_C_GetSubtitlesEnabled, Result) == 0x000000, "Member 'SAVE_Settings_C_GetSubtitlesEnabled::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplySubtitlesEnabled
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_ApplySubtitlesEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_Subtitles_C*                    CallFunc_GetSubtitleWidget_Result;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplySubtitlesEnabled) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplySubtitlesEnabled");
static_assert(sizeof(SAVE_Settings_C_ApplySubtitlesEnabled) == 0x000020, "Wrong size on SAVE_Settings_C_ApplySubtitlesEnabled");
static_assert(offsetof(SAVE_Settings_C_ApplySubtitlesEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplySubtitlesEnabled::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySubtitlesEnabled, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplySubtitlesEnabled::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySubtitlesEnabled, CallFunc_GetSubtitleWidget_Result) == 0x000010, "Member 'SAVE_Settings_C_ApplySubtitlesEnabled::CallFunc_GetSubtitleWidget_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySubtitlesEnabled, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplySubtitlesEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetBrightness
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_SetBrightness final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBrightness_Result;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetBrightness) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetBrightness");
static_assert(sizeof(SAVE_Settings_C_SetBrightness) == 0x000010, "Wrong size on SAVE_Settings_C_SetBrightness");
static_assert(offsetof(SAVE_Settings_C_SetBrightness, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetBrightness::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetBrightness, IsRealspace) == 0x000004, "Member 'SAVE_Settings_C_SetBrightness::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetBrightness, CallFunc_GetBrightness_Result) == 0x000008, "Member 'SAVE_Settings_C_SetBrightness::CallFunc_GetBrightness_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetBrightness, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'SAVE_Settings_C_SetBrightness::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetBrightness
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_GetBrightness final
{
public:
	bool                                          IsRealspace;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetBrightness) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetBrightness");
static_assert(sizeof(SAVE_Settings_C_GetBrightness) == 0x000010, "Wrong size on SAVE_Settings_C_GetBrightness");
static_assert(offsetof(SAVE_Settings_C_GetBrightness, IsRealspace) == 0x000000, "Member 'SAVE_Settings_C_GetBrightness::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightness, Result) == 0x000004, "Member 'SAVE_Settings_C_GetBrightness::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightness, Temp_bool_Variable) == 0x000008, "Member 'SAVE_Settings_C_GetBrightness::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightness, K2Node_Select_Default) == 0x00000C, "Member 'SAVE_Settings_C_GetBrightness::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetGammaFromSpecificBrightness
// 0x0040 (0x0040 - 0x0000)
struct SAVE_Settings_C_GetGammaFromSpecificBrightness final
{
public:
	class UCameraComponent*                       Camera;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Result;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GammaW;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetGammaFromSpecificBrightness) == 0x000010, "Wrong alignment on SAVE_Settings_C_GetGammaFromSpecificBrightness");
static_assert(sizeof(SAVE_Settings_C_GetGammaFromSpecificBrightness) == 0x000040, "Wrong size on SAVE_Settings_C_GetGammaFromSpecificBrightness");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, Camera) == 0x000000, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::Camera' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, Value) == 0x000008, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::Value' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, Result) == 0x000010, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, GammaW) == 0x000020, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::GammaW' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGammaFromSpecificBrightness, CallFunc_MakeVector4_ReturnValue) == 0x000030, "Member 'SAVE_Settings_C_GetGammaFromSpecificBrightness::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDefaultGammaFromCurrentBrightness
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness final
{
public:
	struct FVector4                               Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_GetGammaFromSpecificBrightness_Result;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness) == 0x000010, "Wrong alignment on SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness");
static_assert(sizeof(SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness) == 0x000020, "Wrong size on SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness");
static_assert(offsetof(SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness, Result) == 0x000000, "Member 'SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness, CallFunc_GetGammaFromSpecificBrightness_Result) == 0x000010, "Member 'SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness::CallFunc_GetGammaFromSpecificBrightness_Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyBrightness
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_ApplyBrightness final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyBrightness) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyBrightness");
static_assert(sizeof(SAVE_Settings_C_ApplyBrightness) == 0x000020, "Wrong size on SAVE_Settings_C_ApplyBrightness");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyBrightness::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, IsRealspace) == 0x000004, "Member 'SAVE_Settings_C_ApplyBrightness::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'SAVE_Settings_C_ApplyBrightness::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyBrightness::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'SAVE_Settings_C_ApplyBrightness::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightness, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SAVE_Settings_C_ApplyBrightness::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetWindowMode
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetWindowMode final
{
public:
	EWindowMode                                   NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetWindowMode) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetWindowMode");
static_assert(sizeof(SAVE_Settings_C_SetWindowMode) == 0x000002, "Wrong size on SAVE_Settings_C_SetWindowMode");
static_assert(offsetof(SAVE_Settings_C_SetWindowMode, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetWindowMode::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetWindowMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetWindowMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetWindowMode
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetWindowMode final
{
public:
	EWindowMode                                   Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetWindowMode) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetWindowMode");
static_assert(sizeof(SAVE_Settings_C_GetWindowMode) == 0x000001, "Wrong size on SAVE_Settings_C_GetWindowMode");
static_assert(offsetof(SAVE_Settings_C_GetWindowMode, Result) == 0x000000, "Member 'SAVE_Settings_C_GetWindowMode::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyWindowMode
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_ApplyWindowMode final
{
public:
	EWindowMode                                   NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetDesktopResolution_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyWindowMode) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyWindowMode");
static_assert(sizeof(SAVE_Settings_C_ApplyWindowMode) == 0x000018, "Wrong size on SAVE_Settings_C_ApplyWindowMode");
static_assert(offsetof(SAVE_Settings_C_ApplyWindowMode, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyWindowMode::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyWindowMode, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyWindowMode::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyWindowMode, CallFunc_GetDesktopResolution_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_ApplyWindowMode::CallFunc_GetDesktopResolution_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetResolution
// 0x000C (0x000C - 0x0000)
struct SAVE_Settings_C_SetResolution final
{
public:
	struct FIntPoint                              NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntPointIntPoint_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetResolution) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetResolution");
static_assert(sizeof(SAVE_Settings_C_SetResolution) == 0x00000C, "Wrong size on SAVE_Settings_C_SetResolution");
static_assert(offsetof(SAVE_Settings_C_SetResolution, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetResolution::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetResolution, CallFunc_NotEqual_IntPointIntPoint_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_SetResolution::CallFunc_NotEqual_IntPointIntPoint_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetResolution
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_GetResolution final
{
public:
	struct FIntPoint                              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetResolution) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetResolution");
static_assert(sizeof(SAVE_Settings_C_GetResolution) == 0x000008, "Wrong size on SAVE_Settings_C_GetResolution");
static_assert(offsetof(SAVE_Settings_C_GetResolution, Result) == 0x000000, "Member 'SAVE_Settings_C_GetResolution::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyResolution
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_ApplyResolution final
{
public:
	struct FIntPoint                              NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyResolution) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyResolution");
static_assert(sizeof(SAVE_Settings_C_ApplyResolution) == 0x000010, "Wrong size on SAVE_Settings_C_ApplyResolution");
static_assert(offsetof(SAVE_Settings_C_ApplyResolution, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyResolution::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyResolution, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyResolution::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetResolutionScale
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetResolutionScale final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetResolutionScale) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetResolutionScale");
static_assert(sizeof(SAVE_Settings_C_SetResolutionScale) == 0x000008, "Wrong size on SAVE_Settings_C_SetResolutionScale");
static_assert(offsetof(SAVE_Settings_C_SetResolutionScale, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetResolutionScale::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetResolutionScale, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetResolutionScale::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetResolutionScale
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetResolutionScale final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetResolutionScale) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetResolutionScale");
static_assert(sizeof(SAVE_Settings_C_GetResolutionScale) == 0x000004, "Wrong size on SAVE_Settings_C_GetResolutionScale");
static_assert(offsetof(SAVE_Settings_C_GetResolutionScale, Result) == 0x000000, "Member 'SAVE_Settings_C_GetResolutionScale::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyResolutionScale
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_ApplyResolutionScale final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyResolutionScale) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyResolutionScale");
static_assert(sizeof(SAVE_Settings_C_ApplyResolutionScale) == 0x000010, "Wrong size on SAVE_Settings_C_ApplyResolutionScale");
static_assert(offsetof(SAVE_Settings_C_ApplyResolutionScale, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyResolutionScale::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyResolutionScale, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyResolutionScale::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEnableHDR
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetEnableHDR final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEnableHDR) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetEnableHDR");
static_assert(sizeof(SAVE_Settings_C_SetEnableHDR) == 0x000002, "Wrong size on SAVE_Settings_C_SetEnableHDR");
static_assert(offsetof(SAVE_Settings_C_SetEnableHDR, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEnableHDR::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEnableHDR, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetEnableHDR::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableHDR
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetEnableHDR final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetEnableHDR) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetEnableHDR");
static_assert(sizeof(SAVE_Settings_C_GetEnableHDR) == 0x000001, "Wrong size on SAVE_Settings_C_GetEnableHDR");
static_assert(offsetof(SAVE_Settings_C_GetEnableHDR, Result) == 0x000000, "Member 'SAVE_Settings_C_GetEnableHDR::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableHDR
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_ApplyEnableHDR final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OriginalValue;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHDREnabled_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyEnableHDR) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyEnableHDR");
static_assert(sizeof(SAVE_Settings_C_ApplyEnableHDR) == 0x000018, "Wrong size on SAVE_Settings_C_ApplyEnableHDR");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableHDR, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEnableHDR::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableHDR, OriginalValue) == 0x000001, "Member 'SAVE_Settings_C_ApplyEnableHDR::OriginalValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableHDR, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'SAVE_Settings_C_ApplyEnableHDR::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableHDR, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyEnableHDR::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableHDR, CallFunc_IsHDREnabled_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_ApplyEnableHDR::CallFunc_IsHDREnabled_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEnableMotionBlur
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetEnableMotionBlur final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEnableMotionBlur) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetEnableMotionBlur");
static_assert(sizeof(SAVE_Settings_C_SetEnableMotionBlur) == 0x000002, "Wrong size on SAVE_Settings_C_SetEnableMotionBlur");
static_assert(offsetof(SAVE_Settings_C_SetEnableMotionBlur, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEnableMotionBlur::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEnableMotionBlur, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetEnableMotionBlur::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableMotionBlur
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetEnableMotionBlur final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetEnableMotionBlur) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetEnableMotionBlur");
static_assert(sizeof(SAVE_Settings_C_GetEnableMotionBlur) == 0x000001, "Wrong size on SAVE_Settings_C_GetEnableMotionBlur");
static_assert(offsetof(SAVE_Settings_C_GetEnableMotionBlur, Result) == 0x000000, "Member 'SAVE_Settings_C_GetEnableMotionBlur::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableMotionBlur
// 0x0005 (0x0005 - 0x0000)
struct SAVE_Settings_C_ApplyEnableMotionBlur final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OriginalValue;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPostProccessEnabled_Value;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyEnableMotionBlur) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyEnableMotionBlur");
static_assert(sizeof(SAVE_Settings_C_ApplyEnableMotionBlur) == 0x000005, "Wrong size on SAVE_Settings_C_ApplyEnableMotionBlur");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableMotionBlur, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEnableMotionBlur::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableMotionBlur, OriginalValue) == 0x000001, "Member 'SAVE_Settings_C_ApplyEnableMotionBlur::OriginalValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableMotionBlur, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'SAVE_Settings_C_ApplyEnableMotionBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableMotionBlur, CallFunc_GetPostProccessEnabled_Value) == 0x000003, "Member 'SAVE_Settings_C_ApplyEnableMotionBlur::CallFunc_GetPostProccessEnabled_Value' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableMotionBlur, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_ApplyEnableMotionBlur::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetFOV
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_SetFOV final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFOV_Result;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetFOV) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetFOV");
static_assert(sizeof(SAVE_Settings_C_SetFOV) == 0x000010, "Wrong size on SAVE_Settings_C_SetFOV");
static_assert(offsetof(SAVE_Settings_C_SetFOV, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetFOV::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFOV, IsRealspace) == 0x000004, "Member 'SAVE_Settings_C_SetFOV::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFOV, CallFunc_GetFOV_Result) == 0x000008, "Member 'SAVE_Settings_C_SetFOV::CallFunc_GetFOV_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFOV, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'SAVE_Settings_C_SetFOV::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFOV
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_GetFOV final
{
public:
	bool                                          IsRealspace;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetFOV) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetFOV");
static_assert(sizeof(SAVE_Settings_C_GetFOV) == 0x000010, "Wrong size on SAVE_Settings_C_GetFOV");
static_assert(offsetof(SAVE_Settings_C_GetFOV, IsRealspace) == 0x000000, "Member 'SAVE_Settings_C_GetFOV::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOV, Result) == 0x000004, "Member 'SAVE_Settings_C_GetFOV::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOV, Temp_bool_Variable) == 0x000008, "Member 'SAVE_Settings_C_GetFOV::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOV, K2Node_Select_Default) == 0x00000C, "Member 'SAVE_Settings_C_GetFOV::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFOV
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyFOV final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyFOV) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyFOV");
static_assert(sizeof(SAVE_Settings_C_ApplyFOV) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyFOV");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFOV::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, IsRealspace) == 0x000004, "Member 'SAVE_Settings_C_ApplyFOV::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyFOV::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_ApplyFOV::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000018, "Member 'SAVE_Settings_C_ApplyFOV::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'SAVE_Settings_C_ApplyFOV::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOV, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'SAVE_Settings_C_ApplyFOV::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEnableVSync
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetEnableVSync final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEnableVSync) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetEnableVSync");
static_assert(sizeof(SAVE_Settings_C_SetEnableVSync) == 0x000002, "Wrong size on SAVE_Settings_C_SetEnableVSync");
static_assert(offsetof(SAVE_Settings_C_SetEnableVSync, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEnableVSync::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEnableVSync, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetEnableVSync::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableVSync
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetEnableVSync final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetEnableVSync) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetEnableVSync");
static_assert(sizeof(SAVE_Settings_C_GetEnableVSync) == 0x000001, "Wrong size on SAVE_Settings_C_GetEnableVSync");
static_assert(offsetof(SAVE_Settings_C_GetEnableVSync, Result) == 0x000000, "Member 'SAVE_Settings_C_GetEnableVSync::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableVSync
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_ApplyEnableVSync final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyEnableVSync) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyEnableVSync");
static_assert(sizeof(SAVE_Settings_C_ApplyEnableVSync) == 0x000018, "Wrong size on SAVE_Settings_C_ApplyEnableVSync");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableVSync, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEnableVSync::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableVSync, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyEnableVSync::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableVSync, CallFunc_IsVSyncEnabled_ReturnValue) == 0x000010, "Member 'SAVE_Settings_C_ApplyEnableVSync::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEnableVSync, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'SAVE_Settings_C_ApplyEnableVSync::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetInputBindCountForCategory
// 0x00C0 (0x00C0 - 0x0000)
struct SAVE_Settings_C_GetInputBindCountForCategory final
{
public:
	ENUM_InputCategory                            InputCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default;                             // 0x0010(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_1;                           // 0x0068(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetInputBindCountForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetInputBindCountForCategory");
static_assert(sizeof(SAVE_Settings_C_GetInputBindCountForCategory) == 0x0000C0, "Wrong size on SAVE_Settings_C_GetInputBindCountForCategory");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, InputCategory) == 0x000000, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, IsGamepad) == 0x000001, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, Result) == 0x000004, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, Temp_byte_Variable) == 0x000008, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, Temp_byte_Variable_1) == 0x000009, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, K2Node_Select_Default) == 0x000010, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, CallFunc_Map_Length_ReturnValue) == 0x000060, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, K2Node_Select_Default_1) == 0x000068, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputBindCountForCategory, CallFunc_Map_Length_ReturnValue_1) == 0x0000B8, "Member 'SAVE_Settings_C_GetInputBindCountForCategory::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetInputKeyMapForCategory
// 0x0100 (0x0100 - 0x0000)
struct SAVE_Settings_C_GetInputKeyMapForCategory final
{
public:
	ENUM_InputCategory                            InputCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> Result;                                            // 0x0008(0x0050)(Parm, OutParm)
	ENUM_InputCategory                            Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default;                             // 0x0060(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_1;                           // 0x00B0(0x0050)()
};
static_assert(alignof(SAVE_Settings_C_GetInputKeyMapForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetInputKeyMapForCategory");
static_assert(sizeof(SAVE_Settings_C_GetInputKeyMapForCategory) == 0x000100, "Wrong size on SAVE_Settings_C_GetInputKeyMapForCategory");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, InputCategory) == 0x000000, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, IsGamepad) == 0x000001, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, Result) == 0x000008, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, Temp_byte_Variable) == 0x000058, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, Temp_byte_Variable_1) == 0x000059, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, K2Node_Select_Default) == 0x000060, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetInputKeyMapForCategory, K2Node_Select_Default_1) == 0x0000B0, "Member 'SAVE_Settings_C_GetInputKeyMapForCategory::K2Node_Select_Default_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDefaultBindPairForCategory
// 0x0100 (0x0100 - 0x0000)
struct SAVE_Settings_C_GetDefaultBindPairForCategory final
{
public:
	class FName                                   InputAction;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            InputCategory;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_BoundInputActionPair           Result;                                            // 0x0010(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_BoundInputActionPair           K2Node_MakeStruct_STRUCT_BoundInputActionPair;     // 0x0088(0x0030)(HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_BoundInputActionPair           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetDefaultBindPairForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetDefaultBindPairForCategory");
static_assert(sizeof(SAVE_Settings_C_GetDefaultBindPairForCategory) == 0x000100, "Wrong size on SAVE_Settings_C_GetDefaultBindPairForCategory");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, InputAction) == 0x000000, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::InputAction' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, InputCategory) == 0x000008, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, IsGamepad) == 0x000009, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Result) == 0x000010, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, DataTable) == 0x000040, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::DataTable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable) == 0x000048, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable_1) == 0x000050, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_byte_Variable) == 0x000058, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable_2) == 0x000060, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable_3) == 0x000068, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable_4) == 0x000070, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_object_Variable_5) == 0x000078, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, Temp_byte_Variable_1) == 0x000080, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, K2Node_MakeStruct_STRUCT_BoundInputActionPair) == 0x000088, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::K2Node_MakeStruct_STRUCT_BoundInputActionPair' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, K2Node_Select_Default) == 0x0000B8, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F0, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDefaultBindPairForCategory, K2Node_Select_Default_1) == 0x0000F8, "Member 'SAVE_Settings_C_GetDefaultBindPairForCategory::K2Node_Select_Default_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ValidateAndFixInputBinds
// 0x0240 (0x0240 - 0x0000)
struct SAVE_Settings_C_ValidateAndFixInputBinds final
{
public:
	class FString                                 RealspacePrefix;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CyberspacePrefix;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MinigamePrefix;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result;           // 0x0030(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result_1;         // 0x0080(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result_2;         // 0x00D0(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result_3;         // 0x0120(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_2;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result_4;         // 0x0188(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue_3;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_4;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_5;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result_5;         // 0x01F0(0x0050)()
};
static_assert(alignof(SAVE_Settings_C_ValidateAndFixInputBinds) == 0x000008, "Wrong alignment on SAVE_Settings_C_ValidateAndFixInputBinds");
static_assert(sizeof(SAVE_Settings_C_ValidateAndFixInputBinds) == 0x000240, "Wrong size on SAVE_Settings_C_ValidateAndFixInputBinds");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, RealspacePrefix) == 0x000000, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::RealspacePrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CyberspacePrefix) == 0x000010, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CyberspacePrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, MinigamePrefix) == 0x000020, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::MinigamePrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result) == 0x000030, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result_1) == 0x000080, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result_2) == 0x0000D0, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result_3) == 0x000120, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue) == 0x000170, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue_1) == 0x000174, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue) == 0x000178, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000179, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue_2) == 0x00017C, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000180, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result_4) == 0x000188, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue_3) == 0x0001D8, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue_4) == 0x0001DC, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0001E0, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0001E1, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Map_Length_ReturnValue_5) == 0x0001E4, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Map_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0001E8, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ValidateAndFixInputBinds, CallFunc_BuildDefaultInputKeyMap_Result_5) == 0x0001F0, "Member 'SAVE_Settings_C_ValidateAndFixInputBinds::CallFunc_BuildDefaultInputKeyMap_Result_5' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.BuildDefaultInputKeyMap
// 0x01B0 (0x01B0 - 0x0000)
struct SAVE_Settings_C_BuildDefaultInputKeyMap final
{
public:
	ENUM_InputCategory                            InputCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputActionPrefix;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> Result;                                            // 0x0020(0x0050)(Parm, OutParm)
	class FString                                 ActionString;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> ResultMap;                                         // 0x0090(0x0050)(Edit, BlueprintVisible)
	class UDataTable*                             Temp_object_Variable;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_1;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0140(0x0010)(ReferenceParm)
	ENUM_InputCategory                            Temp_byte_Variable_1;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ReplaceInline_ReturnValue;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_BoundInputActionPair           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0178(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_BuildDefaultInputKeyMap) == 0x000008, "Wrong alignment on SAVE_Settings_C_BuildDefaultInputKeyMap");
static_assert(sizeof(SAVE_Settings_C_BuildDefaultInputKeyMap) == 0x0001B0, "Wrong size on SAVE_Settings_C_BuildDefaultInputKeyMap");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, InputCategory) == 0x000000, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, InputActionPrefix) == 0x000008, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::InputActionPrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, IsGamepad) == 0x000018, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Result) == 0x000020, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, ActionString) == 0x000070, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::ActionString' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, ActionName) == 0x000080, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::ActionName' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, DataTable) == 0x000088, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::DataTable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, ResultMap) == 0x000090, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::ResultMap' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable) == 0x0000E0, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_byte_Variable) == 0x0000E8, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable_1) == 0x0000F0, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable_2) == 0x0000F8, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable_3) == 0x000100, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, K2Node_Select_Default) == 0x000108, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_Conv_NameToString_ReturnValue) == 0x000110, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_int_Array_Index_Variable) == 0x000120, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable_4) == 0x000130, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_object_Variable_5) == 0x000138, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000140, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, Temp_byte_Variable_1) == 0x000150, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_Array_Get_Item) == 0x000154, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, K2Node_Select_Default_1) == 0x000160, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_ReplaceInline_ReturnValue) == 0x000170, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_ReplaceInline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_GetDataTableRowFromName_OutRow) == 0x000178, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A8, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_BuildDefaultInputKeyMap, CallFunc_StartsWith_ReturnValue) == 0x0001A9, "Member 'SAVE_Settings_C_BuildDefaultInputKeyMap::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetOrCreateInputKeyMapForCategory
// 0x0120 (0x0120 - 0x0000)
struct SAVE_Settings_C_GetOrCreateInputKeyMapForCategory final
{
public:
	ENUM_InputCategory                            InputCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputActionPrefix;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> Result;                                            // 0x0020(0x0050)(Parm, OutParm)
	bool                                          IsDefault;                                         // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInputBindCountForCategory_Result;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_BuildDefaultInputKeyMap_Result;           // 0x0080(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CallFunc_GetInputKeyMapForCategory_Result;         // 0x00D0(0x0050)()
};
static_assert(alignof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetOrCreateInputKeyMapForCategory");
static_assert(sizeof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory) == 0x000120, "Wrong size on SAVE_Settings_C_GetOrCreateInputKeyMapForCategory");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, InputCategory) == 0x000000, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, InputActionPrefix) == 0x000008, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::InputActionPrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, IsGamepad) == 0x000018, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, Result) == 0x000020, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, IsDefault) == 0x000070, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::IsDefault' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, CallFunc_GetInputBindCountForCategory_Result) == 0x000074, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::CallFunc_GetInputBindCountForCategory_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, CallFunc_BuildDefaultInputKeyMap_Result) == 0x000080, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::CallFunc_BuildDefaultInputKeyMap_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetOrCreateInputKeyMapForCategory, CallFunc_GetInputKeyMapForCategory_Result) == 0x0000D0, "Member 'SAVE_Settings_C_GetOrCreateInputKeyMapForCategory::CallFunc_GetInputKeyMapForCategory_Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetInputKeyMapForCategory
// 0x0070 (0x0070 - 0x0000)
struct SAVE_Settings_C_SetInputKeyMapForCategory final
{
public:
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> NewKeyMap;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	ENUM_InputCategory                            InputCategory;                                     // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputActionPrefix;                                 // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetInputKeyMapForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_SetInputKeyMapForCategory");
static_assert(sizeof(SAVE_Settings_C_SetInputKeyMapForCategory) == 0x000070, "Wrong size on SAVE_Settings_C_SetInputKeyMapForCategory");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, NewKeyMap) == 0x000000, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::NewKeyMap' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, InputCategory) == 0x000050, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, InputActionPrefix) == 0x000058, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::InputActionPrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, IsGamepad) == 0x000068, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetInputKeyMapForCategory, K2Node_SwitchEnum_CmpSuccess_1) == 0x00006A, "Member 'SAVE_Settings_C_SetInputKeyMapForCategory::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplySavedKeyActionsForCategory
// 0x0430 (0x0430 - 0x0000)
struct SAVE_Settings_C_ApplySavedKeyActionsForCategory final
{
public:
	ENUM_InputCategory                            InputCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InputActionPrefix;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsGamepad;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_BoundInputActionPair           CurrentKeyActionPair;                              // 0x0020(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CurrentIsGamepad;                                  // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentActionString;                               // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CurrentActionName;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         MappedKeys;                                        // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           BoundActionNames;                                  // 0x0080(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ReplaceInline_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_InputCategory                            Temp_byte_Variable;                                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable_1;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0028)()
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default;                             // 0x0120(0x0050)()
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ReplaceInline_ReturnValue_1;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InputCategory                            Temp_byte_Variable_2;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_1;                           // 0x0180(0x0050)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_2;                           // 0x01D8(0x0050)()
	bool                                          Temp_bool_Variable_1;                              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_3;                           // 0x0230(0x0050)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0280(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x02A8(0x0028)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping_1;         // 0x02D8(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_InputCategory                            Temp_byte_Variable_3;                              // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_3;           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_4;                           // 0x0320(0x0050)()
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> K2Node_Select_Default_5;                           // 0x0370(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_BoundInputActionPair           CallFunc_Map_Find_Value;                           // 0x03C8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_4;           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_5;           // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0410(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetActionNames_ActionNames;               // 0x0420(0x0010)(ReferenceParm)
};
static_assert(alignof(SAVE_Settings_C_ApplySavedKeyActionsForCategory) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplySavedKeyActionsForCategory");
static_assert(sizeof(SAVE_Settings_C_ApplySavedKeyActionsForCategory) == 0x000430, "Wrong size on SAVE_Settings_C_ApplySavedKeyActionsForCategory");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, InputCategory) == 0x000000, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::InputCategory' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, InputActionPrefix) == 0x000008, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::InputActionPrefix' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, IsGamepad) == 0x000018, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::IsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CurrentKeyActionPair) == 0x000020, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CurrentKeyActionPair' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CurrentIsGamepad) == 0x000050, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CurrentIsGamepad' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CurrentActionString) == 0x000058, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CurrentActionString' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CurrentActionName) == 0x000068, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CurrentActionName' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, MappedKeys) == 0x000070, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::MappedKeys' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, BoundActionNames) == 0x000080, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::BoundActionNames' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_bool_Variable) == 0x000090, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_ReplaceInline_ReturnValue) == 0x000094, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_ReplaceInline_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Greater_IntInt_ReturnValue) == 0x00009C, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_byte_Variable) == 0x00009D, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0000B0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_byte_Variable_1) == 0x0000D4, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Array_Index_Variable_1) == 0x000100, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Less_IntInt_ReturnValue_1) == 0x000108, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Array_Index_Variable_2) == 0x000110, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Get_Item_1) == 0x000114, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default) == 0x000120, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_StartsWith_ReturnValue) == 0x000170, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_StartsWith_ReturnValue_1) == 0x000171, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_ReplaceInline_ReturnValue_1) == 0x000174, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_ReplaceInline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_byte_Variable_2) == 0x000178, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000179, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default_1) == 0x000180, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue) == 0x0001D0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default_2) == 0x0001D8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_bool_Variable_1) == 0x000228, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default_3) == 0x000230, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Map_Keys_Keys) == 0x000280, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Array_Length_ReturnValue_2) == 0x000298, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue_1) == 0x0002A0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_MakeStruct_InputActionKeyMapping) == 0x0002A8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002D0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_MakeStruct_InputActionKeyMapping_1) == 0x0002D8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_MakeStruct_InputActionKeyMapping_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Not_PreBool_ReturnValue) == 0x000300, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000301, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue_2) == 0x000308, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Not_PreBool_ReturnValue_1) == 0x000310, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_byte_Variable_3) == 0x000311, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue_3) == 0x000318, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default_4) == 0x000320, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, K2Node_Select_Default_5) == 0x000370, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, Temp_int_Loop_Counter_Variable_2) == 0x0003C0, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Map_Find_Value) == 0x0003C8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Map_Find_ReturnValue) == 0x0003F8, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003F9, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003FC, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue_4) == 0x000400, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetInputSettings_ReturnValue_5) == 0x000408, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetInputSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetActionMappingByName_OutMappings) == 0x000410, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplySavedKeyActionsForCategory, CallFunc_GetActionNames_ActionNames) == 0x000420, "Member 'SAVE_Settings_C_ApplySavedKeyActionsForCategory::CallFunc_GetActionNames_ActionNames' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAimAssist
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAimAssist final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAimAssist) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAimAssist");
static_assert(sizeof(SAVE_Settings_C_SetAimAssist) == 0x000002, "Wrong size on SAVE_Settings_C_SetAimAssist");
static_assert(offsetof(SAVE_Settings_C_SetAimAssist, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAimAssist::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAimAssist, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAimAssist::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAimAssist
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAimAssist final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAimAssist) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAimAssist");
static_assert(sizeof(SAVE_Settings_C_GetAimAssist) == 0x000001, "Wrong size on SAVE_Settings_C_GetAimAssist");
static_assert(offsetof(SAVE_Settings_C_GetAimAssist, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAimAssist::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAimAssist
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyAimAssist final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAimAssist) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyAimAssist");
static_assert(sizeof(SAVE_Settings_C_ApplyAimAssist) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyAimAssist");
static_assert(offsetof(SAVE_Settings_C_ApplyAimAssist, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAimAssist::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetFocusAimToggle
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetFocusAimToggle final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetFocusAimToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetFocusAimToggle");
static_assert(sizeof(SAVE_Settings_C_SetFocusAimToggle) == 0x000002, "Wrong size on SAVE_Settings_C_SetFocusAimToggle");
static_assert(offsetof(SAVE_Settings_C_SetFocusAimToggle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetFocusAimToggle::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFocusAimToggle, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetFocusAimToggle::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFocusAimToggle
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetFocusAimToggle final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetFocusAimToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetFocusAimToggle");
static_assert(sizeof(SAVE_Settings_C_GetFocusAimToggle) == 0x000001, "Wrong size on SAVE_Settings_C_GetFocusAimToggle");
static_assert(offsetof(SAVE_Settings_C_GetFocusAimToggle, Result) == 0x000000, "Member 'SAVE_Settings_C_GetFocusAimToggle::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFocusAimToggle
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyFocusAimToggle final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyFocusAimToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyFocusAimToggle");
static_assert(sizeof(SAVE_Settings_C_ApplyFocusAimToggle) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyFocusAimToggle");
static_assert(offsetof(SAVE_Settings_C_ApplyFocusAimToggle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFocusAimToggle::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetCrouchToggle
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetCrouchToggle final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetCrouchToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetCrouchToggle");
static_assert(sizeof(SAVE_Settings_C_SetCrouchToggle) == 0x000002, "Wrong size on SAVE_Settings_C_SetCrouchToggle");
static_assert(offsetof(SAVE_Settings_C_SetCrouchToggle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetCrouchToggle::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetCrouchToggle, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetCrouchToggle::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCrouchToggle
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetCrouchToggle final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetCrouchToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetCrouchToggle");
static_assert(sizeof(SAVE_Settings_C_GetCrouchToggle) == 0x000001, "Wrong size on SAVE_Settings_C_GetCrouchToggle");
static_assert(offsetof(SAVE_Settings_C_GetCrouchToggle, Result) == 0x000000, "Member 'SAVE_Settings_C_GetCrouchToggle::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyCrouchToggle
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyCrouchToggle final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyCrouchToggle) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyCrouchToggle");
static_assert(sizeof(SAVE_Settings_C_ApplyCrouchToggle) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyCrouchToggle");
static_assert(offsetof(SAVE_Settings_C_ApplyCrouchToggle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyCrouchToggle::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAutoPlayMediaLogs
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAutoPlayMediaLogs final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAutoPlayMediaLogs) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAutoPlayMediaLogs");
static_assert(sizeof(SAVE_Settings_C_SetAutoPlayMediaLogs) == 0x000002, "Wrong size on SAVE_Settings_C_SetAutoPlayMediaLogs");
static_assert(offsetof(SAVE_Settings_C_SetAutoPlayMediaLogs, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAutoPlayMediaLogs::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAutoPlayMediaLogs, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAutoPlayMediaLogs::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoPlayMediaLogs
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAutoPlayMediaLogs final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAutoPlayMediaLogs) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAutoPlayMediaLogs");
static_assert(sizeof(SAVE_Settings_C_GetAutoPlayMediaLogs) == 0x000001, "Wrong size on SAVE_Settings_C_GetAutoPlayMediaLogs");
static_assert(offsetof(SAVE_Settings_C_GetAutoPlayMediaLogs, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAutoPlayMediaLogs::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoPlayMediaLogs
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyAutoPlayMediaLogs final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAutoPlayMediaLogs) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyAutoPlayMediaLogs");
static_assert(sizeof(SAVE_Settings_C_ApplyAutoPlayMediaLogs) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyAutoPlayMediaLogs");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoPlayMediaLogs, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAutoPlayMediaLogs::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAutoRotateMinimap
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAutoRotateMinimap final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAutoRotateMinimap) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAutoRotateMinimap");
static_assert(sizeof(SAVE_Settings_C_SetAutoRotateMinimap) == 0x000002, "Wrong size on SAVE_Settings_C_SetAutoRotateMinimap");
static_assert(offsetof(SAVE_Settings_C_SetAutoRotateMinimap, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAutoRotateMinimap::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAutoRotateMinimap, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAutoRotateMinimap::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoRotateMinimap
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAutoRotateMinimap final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAutoRotateMinimap) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAutoRotateMinimap");
static_assert(sizeof(SAVE_Settings_C_GetAutoRotateMinimap) == 0x000001, "Wrong size on SAVE_Settings_C_GetAutoRotateMinimap");
static_assert(offsetof(SAVE_Settings_C_GetAutoRotateMinimap, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAutoRotateMinimap::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoRotateMinimap
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_ApplyAutoRotateMinimap final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAutoRotateMinimap) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyAutoRotateMinimap");
static_assert(sizeof(SAVE_Settings_C_ApplyAutoRotateMinimap) == 0x000018, "Wrong size on SAVE_Settings_C_ApplyAutoRotateMinimap");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoRotateMinimap, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAutoRotateMinimap::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoRotateMinimap, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'SAVE_Settings_C_ApplyAutoRotateMinimap::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoRotateMinimap, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SAVE_Settings_C_ApplyAutoRotateMinimap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetShowTutorials
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetShowTutorials final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetShowTutorials) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetShowTutorials");
static_assert(sizeof(SAVE_Settings_C_SetShowTutorials) == 0x000002, "Wrong size on SAVE_Settings_C_SetShowTutorials");
static_assert(offsetof(SAVE_Settings_C_SetShowTutorials, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetShowTutorials::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetShowTutorials, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetShowTutorials::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShowTutorials
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetShowTutorials final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetShowTutorials) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetShowTutorials");
static_assert(sizeof(SAVE_Settings_C_GetShowTutorials) == 0x000001, "Wrong size on SAVE_Settings_C_GetShowTutorials");
static_assert(offsetof(SAVE_Settings_C_GetShowTutorials, Result) == 0x000000, "Member 'SAVE_Settings_C_GetShowTutorials::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyShowTutorials
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_ApplyShowTutorials final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyShowTutorials) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyShowTutorials");
static_assert(sizeof(SAVE_Settings_C_ApplyShowTutorials) == 0x000002, "Wrong size on SAVE_Settings_C_ApplyShowTutorials");
static_assert(offsetof(SAVE_Settings_C_ApplyShowTutorials, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyShowTutorials::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShowTutorials, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_ApplyShowTutorials::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetFocusOnPuzzles
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetFocusOnPuzzles final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetFocusOnPuzzles) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetFocusOnPuzzles");
static_assert(sizeof(SAVE_Settings_C_SetFocusOnPuzzles) == 0x000002, "Wrong size on SAVE_Settings_C_SetFocusOnPuzzles");
static_assert(offsetof(SAVE_Settings_C_SetFocusOnPuzzles, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetFocusOnPuzzles::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFocusOnPuzzles, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetFocusOnPuzzles::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFocusOnPuzzles
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetFocusOnPuzzles final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetFocusOnPuzzles) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetFocusOnPuzzles");
static_assert(sizeof(SAVE_Settings_C_GetFocusOnPuzzles) == 0x000001, "Wrong size on SAVE_Settings_C_GetFocusOnPuzzles");
static_assert(offsetof(SAVE_Settings_C_GetFocusOnPuzzles, Result) == 0x000000, "Member 'SAVE_Settings_C_GetFocusOnPuzzles::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFocusOnPuzzles
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyFocusOnPuzzles final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyFocusOnPuzzles) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyFocusOnPuzzles");
static_assert(sizeof(SAVE_Settings_C_ApplyFocusOnPuzzles) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyFocusOnPuzzles");
static_assert(offsetof(SAVE_Settings_C_ApplyFocusOnPuzzles, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFocusOnPuzzles::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAutoSlotHotbar
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAutoSlotHotbar final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAutoSlotHotbar) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAutoSlotHotbar");
static_assert(sizeof(SAVE_Settings_C_SetAutoSlotHotbar) == 0x000002, "Wrong size on SAVE_Settings_C_SetAutoSlotHotbar");
static_assert(offsetof(SAVE_Settings_C_SetAutoSlotHotbar, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAutoSlotHotbar::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAutoSlotHotbar, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAutoSlotHotbar::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoSlotHotbar
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAutoSlotHotbar final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAutoSlotHotbar) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAutoSlotHotbar");
static_assert(sizeof(SAVE_Settings_C_GetAutoSlotHotbar) == 0x000001, "Wrong size on SAVE_Settings_C_GetAutoSlotHotbar");
static_assert(offsetof(SAVE_Settings_C_GetAutoSlotHotbar, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAutoSlotHotbar::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoSlotHotbar
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyAutoSlotHotbar final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAutoSlotHotbar) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyAutoSlotHotbar");
static_assert(sizeof(SAVE_Settings_C_ApplyAutoSlotHotbar) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyAutoSlotHotbar");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoSlotHotbar, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAutoSlotHotbar::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAutoReload
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAutoReload final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAutoReload) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAutoReload");
static_assert(sizeof(SAVE_Settings_C_SetAutoReload) == 0x000002, "Wrong size on SAVE_Settings_C_SetAutoReload");
static_assert(offsetof(SAVE_Settings_C_SetAutoReload, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAutoReload::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAutoReload, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAutoReload::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoReload
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAutoReload final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAutoReload) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAutoReload");
static_assert(sizeof(SAVE_Settings_C_GetAutoReload) == 0x000001, "Wrong size on SAVE_Settings_C_GetAutoReload");
static_assert(offsetof(SAVE_Settings_C_GetAutoReload, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAutoReload::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoReload
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_ApplyAutoReload final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ProjectileWeapon_Base_C*          K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAutoReload) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyAutoReload");
static_assert(sizeof(SAVE_Settings_C_ApplyAutoReload) == 0x000020, "Wrong size on SAVE_Settings_C_ApplyAutoReload");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoReload, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAutoReload::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoReload, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_ApplyAutoReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoReload, CallFunc_GetEquippedWeapon_Weapon) == 0x000008, "Member 'SAVE_Settings_C_ApplyAutoReload::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoReload, K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base) == 0x000010, "Member 'SAVE_Settings_C_ApplyAutoReload::K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAutoReload, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SAVE_Settings_C_ApplyAutoReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetRealspaceLookSensitivity
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetRealspaceLookSensitivity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetRealspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetRealspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_SetRealspaceLookSensitivity) == 0x000008, "Wrong size on SAVE_Settings_C_SetRealspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_SetRealspaceLookSensitivity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetRealspaceLookSensitivity::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetRealspaceLookSensitivity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetRealspaceLookSensitivity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceLookSensitivity
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetRealspaceLookSensitivity final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetRealspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetRealspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_GetRealspaceLookSensitivity) == 0x000004, "Wrong size on SAVE_Settings_C_GetRealspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceLookSensitivity, Result) == 0x000000, "Member 'SAVE_Settings_C_GetRealspaceLookSensitivity::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyRealspaceLookSensitivity
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyRealspaceLookSensitivity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyRealspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyRealspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_ApplyRealspaceLookSensitivity) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyRealspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_ApplyRealspaceLookSensitivity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyRealspaceLookSensitivity::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetRealspaceInvertY
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetRealspaceInvertY final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetRealspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetRealspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_SetRealspaceInvertY) == 0x000002, "Wrong size on SAVE_Settings_C_SetRealspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_SetRealspaceInvertY, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetRealspaceInvertY::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetRealspaceInvertY, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetRealspaceInvertY::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceInvertY
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetRealspaceInvertY final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetRealspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetRealspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_GetRealspaceInvertY) == 0x000001, "Wrong size on SAVE_Settings_C_GetRealspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceInvertY, Result) == 0x000000, "Member 'SAVE_Settings_C_GetRealspaceInvertY::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyRealspaceInvertY
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyRealspaceInvertY final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyRealspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyRealspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_ApplyRealspaceInvertY) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyRealspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_ApplyRealspaceInvertY, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyRealspaceInvertY::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetCyberspaceLookSensitivity
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetCyberspaceLookSensitivity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetCyberspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetCyberspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_SetCyberspaceLookSensitivity) == 0x000008, "Wrong size on SAVE_Settings_C_SetCyberspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_SetCyberspaceLookSensitivity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetCyberspaceLookSensitivity::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetCyberspaceLookSensitivity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetCyberspaceLookSensitivity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceLookSensitivity
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetCyberspaceLookSensitivity final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetCyberspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetCyberspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_GetCyberspaceLookSensitivity) == 0x000004, "Wrong size on SAVE_Settings_C_GetCyberspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceLookSensitivity, Value) == 0x000000, "Member 'SAVE_Settings_C_GetCyberspaceLookSensitivity::Value' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyCyberspaceLookSensitivity
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_ApplyCyberspaceLookSensitivity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyCyberspaceLookSensitivity) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyCyberspaceLookSensitivity");
static_assert(sizeof(SAVE_Settings_C_ApplyCyberspaceLookSensitivity) == 0x000004, "Wrong size on SAVE_Settings_C_ApplyCyberspaceLookSensitivity");
static_assert(offsetof(SAVE_Settings_C_ApplyCyberspaceLookSensitivity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyCyberspaceLookSensitivity::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetCyberspaceInvertY
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetCyberspaceInvertY final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetCyberspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetCyberspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_SetCyberspaceInvertY) == 0x000002, "Wrong size on SAVE_Settings_C_SetCyberspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_SetCyberspaceInvertY, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetCyberspaceInvertY::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetCyberspaceInvertY, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetCyberspaceInvertY::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceInvertY
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetCyberspaceInvertY final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetCyberspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetCyberspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_GetCyberspaceInvertY) == 0x000001, "Wrong size on SAVE_Settings_C_GetCyberspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceInvertY, Result) == 0x000000, "Member 'SAVE_Settings_C_GetCyberspaceInvertY::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyCyberspaceInvertY
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyCyberspaceInvertY final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyCyberspaceInvertY) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyCyberspaceInvertY");
static_assert(sizeof(SAVE_Settings_C_ApplyCyberspaceInvertY) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyCyberspaceInvertY");
static_assert(offsetof(SAVE_Settings_C_ApplyCyberspaceInvertY, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyCyberspaceInvertY::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetAmbientOcclusion
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetAmbientOcclusion final
{
public:
	ENUM_OffLowMediumHigh                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetAmbientOcclusion) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetAmbientOcclusion");
static_assert(sizeof(SAVE_Settings_C_SetAmbientOcclusion) == 0x000002, "Wrong size on SAVE_Settings_C_SetAmbientOcclusion");
static_assert(offsetof(SAVE_Settings_C_SetAmbientOcclusion, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetAmbientOcclusion::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetAmbientOcclusion, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetAmbientOcclusion::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAmbientOcclusion
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetAmbientOcclusion final
{
public:
	ENUM_OffLowMediumHigh                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetAmbientOcclusion) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetAmbientOcclusion");
static_assert(sizeof(SAVE_Settings_C_GetAmbientOcclusion) == 0x000001, "Wrong size on SAVE_Settings_C_GetAmbientOcclusion");
static_assert(offsetof(SAVE_Settings_C_GetAmbientOcclusion, Result) == 0x000000, "Member 'SAVE_Settings_C_GetAmbientOcclusion::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyAmbientOcclusion
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_ApplyAmbientOcclusion final
{
public:
	ENUM_OffLowMediumHigh                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_OffLowMediumHigh                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyAmbientOcclusion) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyAmbientOcclusion");
static_assert(sizeof(SAVE_Settings_C_ApplyAmbientOcclusion) == 0x000008, "Wrong size on SAVE_Settings_C_ApplyAmbientOcclusion");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, Temp_byte_Variable) == 0x000001, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, Temp_bool_Variable) == 0x000002, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, Temp_bool_Variable_1) == 0x000003, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, Temp_bool_Variable_2) == 0x000004, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, Temp_bool_Variable_3) == 0x000005, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyAmbientOcclusion, K2Node_Select_Default) == 0x000007, "Member 'SAVE_Settings_C_ApplyAmbientOcclusion::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetFogQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetFogQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetFogQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetFogQuality");
static_assert(sizeof(SAVE_Settings_C_SetFogQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetFogQuality");
static_assert(offsetof(SAVE_Settings_C_SetFogQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetFogQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFogQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetFogQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFogQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetFogQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetFogQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetFogQuality");
static_assert(sizeof(SAVE_Settings_C_GetFogQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetFogQuality");
static_assert(offsetof(SAVE_Settings_C_GetFogQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetFogQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFogQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyFogQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyFogQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyFogQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyFogQuality) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyFogQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyFogQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFogQuality::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetPostProccessingQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetPostProccessingQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetPostProccessingQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetPostProccessingQuality");
static_assert(sizeof(SAVE_Settings_C_SetPostProccessingQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetPostProccessingQuality");
static_assert(offsetof(SAVE_Settings_C_SetPostProccessingQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetPostProccessingQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetPostProccessingQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetPostProccessingQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetPostProccessingQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetPostProccessingQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetPostProccessingQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetPostProccessingQuality");
static_assert(sizeof(SAVE_Settings_C_GetPostProccessingQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetPostProccessingQuality");
static_assert(offsetof(SAVE_Settings_C_GetPostProccessingQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetPostProccessingQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyPostProccessingQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyPostProccessingQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyPostProccessingQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyPostProccessingQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyPostProccessingQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyPostProccessingQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, Temp_byte_Variable) == 0x000014, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyPostProccessingQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyPostProccessingQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetTextureQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetTextureQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetTextureQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetTextureQuality");
static_assert(sizeof(SAVE_Settings_C_SetTextureQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetTextureQuality");
static_assert(offsetof(SAVE_Settings_C_SetTextureQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetTextureQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetTextureQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetTextureQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetTextureQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetTextureQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetTextureQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetTextureQuality");
static_assert(sizeof(SAVE_Settings_C_GetTextureQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetTextureQuality");
static_assert(offsetof(SAVE_Settings_C_GetTextureQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetTextureQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyTextureQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyTextureQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyTextureQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyTextureQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyTextureQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyTextureQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyTextureQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyTextureQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyTextureQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyTextureQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyTextureQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, Temp_byte_Variable) == 0x000014, "Member 'SAVE_Settings_C_ApplyTextureQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyTextureQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyTextureQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyTextureQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetShaderQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetShaderQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetShaderQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetShaderQuality");
static_assert(sizeof(SAVE_Settings_C_SetShaderQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetShaderQuality");
static_assert(offsetof(SAVE_Settings_C_SetShaderQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetShaderQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetShaderQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetShaderQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShaderQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetShaderQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetShaderQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetShaderQuality");
static_assert(sizeof(SAVE_Settings_C_GetShaderQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetShaderQuality");
static_assert(offsetof(SAVE_Settings_C_GetShaderQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetShaderQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyShaderQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyShaderQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyShaderQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyShaderQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyShaderQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyShaderQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyShaderQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, Temp_byte_Variable) == 0x000001, "Member 'SAVE_Settings_C_ApplyShaderQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyShaderQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyShaderQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyShaderQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyShaderQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyShaderQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShaderQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyShaderQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetShadowQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetShadowQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetShadowQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetShadowQuality");
static_assert(sizeof(SAVE_Settings_C_SetShadowQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetShadowQuality");
static_assert(offsetof(SAVE_Settings_C_SetShadowQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetShadowQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetShadowQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetShadowQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShadowQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetShadowQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetShadowQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetShadowQuality");
static_assert(sizeof(SAVE_Settings_C_GetShadowQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetShadowQuality");
static_assert(offsetof(SAVE_Settings_C_GetShadowQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetShadowQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyShadowQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyShadowQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyShadowQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyShadowQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyShadowQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyShadowQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyShadowQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyShadowQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyShadowQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyShadowQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyShadowQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, Temp_byte_Variable) == 0x000014, "Member 'SAVE_Settings_C_ApplyShadowQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyShadowQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyShadowQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyShadowQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetEffectsQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetEffectsQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetEffectsQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetEffectsQuality");
static_assert(sizeof(SAVE_Settings_C_SetEffectsQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetEffectsQuality");
static_assert(offsetof(SAVE_Settings_C_SetEffectsQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetEffectsQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetEffectsQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetEffectsQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEffectsQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetEffectsQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEffectsQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetEffectsQuality");
static_assert(sizeof(SAVE_Settings_C_GetEffectsQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetEffectsQuality");
static_assert(offsetof(SAVE_Settings_C_GetEffectsQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetEffectsQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyEffectsQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyEffectsQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyEffectsQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyEffectsQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyEffectsQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyEffectsQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyEffectsQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyEffectsQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyEffectsQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyEffectsQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyEffectsQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, Temp_byte_Variable) == 0x000014, "Member 'SAVE_Settings_C_ApplyEffectsQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyEffectsQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyEffectsQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyEffectsQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetFoliageQuality
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetFoliageQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetFoliageQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetFoliageQuality");
static_assert(sizeof(SAVE_Settings_C_SetFoliageQuality) == 0x000002, "Wrong size on SAVE_Settings_C_SetFoliageQuality");
static_assert(offsetof(SAVE_Settings_C_SetFoliageQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetFoliageQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetFoliageQuality, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetFoliageQuality::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFoliageQuality
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetFoliageQuality final
{
public:
	ENUM_QualitySetting                           Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetFoliageQuality) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetFoliageQuality");
static_assert(sizeof(SAVE_Settings_C_GetFoliageQuality) == 0x000001, "Wrong size on SAVE_Settings_C_GetFoliageQuality");
static_assert(offsetof(SAVE_Settings_C_GetFoliageQuality, Result) == 0x000000, "Member 'SAVE_Settings_C_GetFoliageQuality::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFoliageQuality
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyFoliageQuality final
{
public:
	ENUM_QualitySetting                           NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyFoliageQuality) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyFoliageQuality");
static_assert(sizeof(SAVE_Settings_C_ApplyFoliageQuality) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyFoliageQuality");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFoliageQuality::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, Temp_int_Variable) == 0x000004, "Member 'SAVE_Settings_C_ApplyFoliageQuality::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, Temp_int_Variable_1) == 0x000008, "Member 'SAVE_Settings_C_ApplyFoliageQuality::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, Temp_int_Variable_2) == 0x00000C, "Member 'SAVE_Settings_C_ApplyFoliageQuality::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, Temp_int_Variable_3) == 0x000010, "Member 'SAVE_Settings_C_ApplyFoliageQuality::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, Temp_byte_Variable) == 0x000014, "Member 'SAVE_Settings_C_ApplyFoliageQuality::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyFoliageQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFoliageQuality, K2Node_Select_Default) == 0x000020, "Member 'SAVE_Settings_C_ApplyFoliageQuality::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHeadbobAmount
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetHeadbobAmount final
{
public:
	ENUM_OffReducedNormal                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHeadbobAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetHeadbobAmount");
static_assert(sizeof(SAVE_Settings_C_SetHeadbobAmount) == 0x000002, "Wrong size on SAVE_Settings_C_SetHeadbobAmount");
static_assert(offsetof(SAVE_Settings_C_SetHeadbobAmount, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHeadbobAmount::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHeadbobAmount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetHeadbobAmount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHeadbobAmount
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetHeadbobAmount final
{
public:
	ENUM_OffReducedNormal                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHeadbobAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetHeadbobAmount");
static_assert(sizeof(SAVE_Settings_C_GetHeadbobAmount) == 0x000001, "Wrong size on SAVE_Settings_C_GetHeadbobAmount");
static_assert(offsetof(SAVE_Settings_C_GetHeadbobAmount, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHeadbobAmount::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHeadbobAmount
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyHeadbobAmount final
{
public:
	ENUM_OffReducedNormal                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyHeadbobAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyHeadbobAmount");
static_assert(sizeof(SAVE_Settings_C_ApplyHeadbobAmount) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyHeadbobAmount");
static_assert(offsetof(SAVE_Settings_C_ApplyHeadbobAmount, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHeadbobAmount::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetGoreAmount
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetGoreAmount final
{
public:
	ENUM_OffReducedNormal                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetGoreAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetGoreAmount");
static_assert(sizeof(SAVE_Settings_C_SetGoreAmount) == 0x000002, "Wrong size on SAVE_Settings_C_SetGoreAmount");
static_assert(offsetof(SAVE_Settings_C_SetGoreAmount, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetGoreAmount::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetGoreAmount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetGoreAmount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetGoreAmount
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetGoreAmount final
{
public:
	ENUM_OffReducedNormal                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetGoreAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetGoreAmount");
static_assert(sizeof(SAVE_Settings_C_GetGoreAmount) == 0x000001, "Wrong size on SAVE_Settings_C_GetGoreAmount");
static_assert(offsetof(SAVE_Settings_C_GetGoreAmount, Result) == 0x000000, "Member 'SAVE_Settings_C_GetGoreAmount::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyGoreAmount
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyGoreAmount final
{
public:
	ENUM_OffReducedNormal                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyGoreAmount) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyGoreAmount");
static_assert(sizeof(SAVE_Settings_C_ApplyGoreAmount) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyGoreAmount");
static_assert(offsetof(SAVE_Settings_C_ApplyGoreAmount, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyGoreAmount::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetDismembermentEnabled
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetDismembermentEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetDismembermentEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetDismembermentEnabled");
static_assert(sizeof(SAVE_Settings_C_SetDismembermentEnabled) == 0x000002, "Wrong size on SAVE_Settings_C_SetDismembermentEnabled");
static_assert(offsetof(SAVE_Settings_C_SetDismembermentEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetDismembermentEnabled::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetDismembermentEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetDismembermentEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDismembermentEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetDismembermentEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetDismembermentEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetDismembermentEnabled");
static_assert(sizeof(SAVE_Settings_C_GetDismembermentEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_GetDismembermentEnabled");
static_assert(offsetof(SAVE_Settings_C_GetDismembermentEnabled, Result) == 0x000000, "Member 'SAVE_Settings_C_GetDismembermentEnabled::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyDismembermentEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyDismembermentEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyDismembermentEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyDismembermentEnabled");
static_assert(sizeof(SAVE_Settings_C_ApplyDismembermentEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyDismembermentEnabled");
static_assert(offsetof(SAVE_Settings_C_ApplyDismembermentEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyDismembermentEnabled::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHUDOpacity
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_SetHUDOpacity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHUDOpacity) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetHUDOpacity");
static_assert(sizeof(SAVE_Settings_C_SetHUDOpacity) == 0x000008, "Wrong size on SAVE_Settings_C_SetHUDOpacity");
static_assert(offsetof(SAVE_Settings_C_SetHUDOpacity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHUDOpacity::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHUDOpacity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'SAVE_Settings_C_SetHUDOpacity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDOpacity
// 0x0004 (0x0004 - 0x0000)
struct SAVE_Settings_C_GetHUDOpacity final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDOpacity) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetHUDOpacity");
static_assert(sizeof(SAVE_Settings_C_GetHUDOpacity) == 0x000004, "Wrong size on SAVE_Settings_C_GetHUDOpacity");
static_assert(offsetof(SAVE_Settings_C_GetHUDOpacity, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHUDOpacity::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDOpacity
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_ApplyHUDOpacity final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyHUDOpacity) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyHUDOpacity");
static_assert(sizeof(SAVE_Settings_C_ApplyHUDOpacity) == 0x000020, "Wrong size on SAVE_Settings_C_ApplyHUDOpacity");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDOpacity, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHUDOpacity::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDOpacity, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyHUDOpacity::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDOpacity, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000010, "Member 'SAVE_Settings_C_ApplyHUDOpacity::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDOpacity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SAVE_Settings_C_ApplyHUDOpacity::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHotbarStyle
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetHotbarStyle final
{
public:
	ENUM_HotbarStyle                              NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHotbarStyle) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetHotbarStyle");
static_assert(sizeof(SAVE_Settings_C_SetHotbarStyle) == 0x000002, "Wrong size on SAVE_Settings_C_SetHotbarStyle");
static_assert(offsetof(SAVE_Settings_C_SetHotbarStyle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHotbarStyle::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHotbarStyle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetHotbarStyle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHotbarStyle
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetHotbarStyle final
{
public:
	ENUM_HotbarStyle                              Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHotbarStyle) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetHotbarStyle");
static_assert(sizeof(SAVE_Settings_C_GetHotbarStyle) == 0x000001, "Wrong size on SAVE_Settings_C_GetHotbarStyle");
static_assert(offsetof(SAVE_Settings_C_GetHotbarStyle, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHotbarStyle::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHotbarStyle
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_ApplyHotbarStyle final
{
public:
	ENUM_HotbarStyle                              NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyHotbarStyle) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyHotbarStyle");
static_assert(sizeof(SAVE_Settings_C_ApplyHotbarStyle) == 0x000020, "Wrong size on SAVE_Settings_C_ApplyHotbarStyle");
static_assert(offsetof(SAVE_Settings_C_ApplyHotbarStyle, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHotbarStyle::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHotbarStyle, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyHotbarStyle::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHotbarStyle, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000010, "Member 'SAVE_Settings_C_ApplyHotbarStyle::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHotbarStyle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SAVE_Settings_C_ApplyHotbarStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetSubtitleSize
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetSubtitleSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetSubtitleSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetSubtitleSize");
static_assert(sizeof(SAVE_Settings_C_SetSubtitleSize) == 0x000002, "Wrong size on SAVE_Settings_C_SetSubtitleSize");
static_assert(offsetof(SAVE_Settings_C_SetSubtitleSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetSubtitleSize::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetSubtitleSize, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetSubtitleSize::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSubtitleSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetSubtitleSize final
{
public:
	ENUM_SmallMediumLarge                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSubtitleSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetSubtitleSize");
static_assert(sizeof(SAVE_Settings_C_GetSubtitleSize) == 0x000001, "Wrong size on SAVE_Settings_C_GetSubtitleSize");
static_assert(offsetof(SAVE_Settings_C_GetSubtitleSize, Result) == 0x000000, "Member 'SAVE_Settings_C_GetSubtitleSize::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplySubtitleSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplySubtitleSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplySubtitleSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplySubtitleSize");
static_assert(sizeof(SAVE_Settings_C_ApplySubtitleSize) == 0x000001, "Wrong size on SAVE_Settings_C_ApplySubtitleSize");
static_assert(offsetof(SAVE_Settings_C_ApplySubtitleSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplySubtitleSize::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetSoundEffectCaptionsEnabled
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetSoundEffectCaptionsEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetSoundEffectCaptionsEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetSoundEffectCaptionsEnabled");
static_assert(sizeof(SAVE_Settings_C_SetSoundEffectCaptionsEnabled) == 0x000002, "Wrong size on SAVE_Settings_C_SetSoundEffectCaptionsEnabled");
static_assert(offsetof(SAVE_Settings_C_SetSoundEffectCaptionsEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetSoundEffectCaptionsEnabled::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetSoundEffectCaptionsEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetSoundEffectCaptionsEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetSoundEffectCaptionsEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetSoundEffectCaptionsEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetSoundEffectCaptionsEnabled");
static_assert(sizeof(SAVE_Settings_C_GetSoundEffectCaptionsEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_GetSoundEffectCaptionsEnabled");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsEnabled, Result) == 0x000000, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsEnabled::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplySoundEffectCaptionsEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplySoundEffectCaptionsEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplySoundEffectCaptionsEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplySoundEffectCaptionsEnabled");
static_assert(sizeof(SAVE_Settings_C_ApplySoundEffectCaptionsEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_ApplySoundEffectCaptionsEnabled");
static_assert(offsetof(SAVE_Settings_C_ApplySoundEffectCaptionsEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplySoundEffectCaptionsEnabled::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetSoundEffectCaptionsSize
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetSoundEffectCaptionsSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetSoundEffectCaptionsSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetSoundEffectCaptionsSize");
static_assert(sizeof(SAVE_Settings_C_SetSoundEffectCaptionsSize) == 0x000002, "Wrong size on SAVE_Settings_C_SetSoundEffectCaptionsSize");
static_assert(offsetof(SAVE_Settings_C_SetSoundEffectCaptionsSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetSoundEffectCaptionsSize::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetSoundEffectCaptionsSize, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetSoundEffectCaptionsSize::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetSoundEffectCaptionsSize final
{
public:
	ENUM_SmallMediumLarge                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSoundEffectCaptionsSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetSoundEffectCaptionsSize");
static_assert(sizeof(SAVE_Settings_C_GetSoundEffectCaptionsSize) == 0x000001, "Wrong size on SAVE_Settings_C_GetSoundEffectCaptionsSize");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsSize, Result) == 0x000000, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsSize::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplySoundEffectCaptionsSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplySoundEffectCaptionsSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplySoundEffectCaptionsSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplySoundEffectCaptionsSize");
static_assert(sizeof(SAVE_Settings_C_ApplySoundEffectCaptionsSize) == 0x000001, "Wrong size on SAVE_Settings_C_ApplySoundEffectCaptionsSize");
static_assert(offsetof(SAVE_Settings_C_ApplySoundEffectCaptionsSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplySoundEffectCaptionsSize::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHUDColorTheme
// 0x000C (0x000C - 0x0000)
struct SAVE_Settings_C_SetHUDColorTheme final
{
public:
	class FName                                   NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHUDColorTheme) == 0x000004, "Wrong alignment on SAVE_Settings_C_SetHUDColorTheme");
static_assert(sizeof(SAVE_Settings_C_SetHUDColorTheme) == 0x00000C, "Wrong size on SAVE_Settings_C_SetHUDColorTheme");
static_assert(offsetof(SAVE_Settings_C_SetHUDColorTheme, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHUDColorTheme::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHUDColorTheme, CallFunc_NotEqual_NameName_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_SetHUDColorTheme::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDColorTheme
// 0x0008 (0x0008 - 0x0000)
struct SAVE_Settings_C_GetHUDColorTheme final
{
public:
	class FName                                   Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDColorTheme) == 0x000004, "Wrong alignment on SAVE_Settings_C_GetHUDColorTheme");
static_assert(sizeof(SAVE_Settings_C_GetHUDColorTheme) == 0x000008, "Wrong size on SAVE_Settings_C_GetHUDColorTheme");
static_assert(offsetof(SAVE_Settings_C_GetHUDColorTheme, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHUDColorTheme::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDColorTheme
// 0x000C (0x000C - 0x0000)
struct SAVE_Settings_C_ApplyHUDColorTheme final
{
public:
	class FName                                   NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyHUDColorTheme) == 0x000004, "Wrong alignment on SAVE_Settings_C_ApplyHUDColorTheme");
static_assert(sizeof(SAVE_Settings_C_ApplyHUDColorTheme) == 0x00000C, "Wrong size on SAVE_Settings_C_ApplyHUDColorTheme");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDColorTheme, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHUDColorTheme::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDColorTheme, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_ApplyHUDColorTheme::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetHUDTextSize
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetHUDTextSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetHUDTextSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetHUDTextSize");
static_assert(sizeof(SAVE_Settings_C_SetHUDTextSize) == 0x000002, "Wrong size on SAVE_Settings_C_SetHUDTextSize");
static_assert(offsetof(SAVE_Settings_C_SetHUDTextSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetHUDTextSize::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetHUDTextSize, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetHUDTextSize::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDTextSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetHUDTextSize final
{
public:
	ENUM_SmallMediumLarge                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDTextSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetHUDTextSize");
static_assert(sizeof(SAVE_Settings_C_GetHUDTextSize) == 0x000001, "Wrong size on SAVE_Settings_C_GetHUDTextSize");
static_assert(offsetof(SAVE_Settings_C_GetHUDTextSize, Result) == 0x000000, "Member 'SAVE_Settings_C_GetHUDTextSize::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDTextSize
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyHUDTextSize final
{
public:
	ENUM_SmallMediumLarge                         NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyHUDTextSize) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyHUDTextSize");
static_assert(sizeof(SAVE_Settings_C_ApplyHUDTextSize) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyHUDTextSize");
static_assert(offsetof(SAVE_Settings_C_ApplyHUDTextSize, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyHUDTextSize::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForHacker
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_InitializeSettingsForHacker final
{
public:
	class APAWN_Hacker_Simple_C*                  PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRealspaceCharacter_Result;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFOV_Result;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBrightness_Result;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_InitializeSettingsForHacker) == 0x000008, "Wrong alignment on SAVE_Settings_C_InitializeSettingsForHacker");
static_assert(sizeof(SAVE_Settings_C_InitializeSettingsForHacker) == 0x000018, "Wrong size on SAVE_Settings_C_InitializeSettingsForHacker");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForHacker, PlayerPawn) == 0x000000, "Member 'SAVE_Settings_C_InitializeSettingsForHacker::PlayerPawn' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForHacker, IsRealspace) == 0x000008, "Member 'SAVE_Settings_C_InitializeSettingsForHacker::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForHacker, CallFunc_IsRealspaceCharacter_Result) == 0x000009, "Member 'SAVE_Settings_C_InitializeSettingsForHacker::CallFunc_IsRealspaceCharacter_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForHacker, CallFunc_GetFOV_Result) == 0x00000C, "Member 'SAVE_Settings_C_InitializeSettingsForHacker::CallFunc_GetFOV_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForHacker, CallFunc_GetBrightness_Result) == 0x000010, "Member 'SAVE_Settings_C_InitializeSettingsForHacker::CallFunc_GetBrightness_Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForPlayerHUD
// 0x0010 (0x0010 - 0x0000)
struct SAVE_Settings_C_InitializeSettingsForPlayerHUD final
{
public:
	TScriptInterface<class IINTERF_HUD_C>         PlayerHUD;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_InitializeSettingsForPlayerHUD) == 0x000008, "Wrong alignment on SAVE_Settings_C_InitializeSettingsForPlayerHUD");
static_assert(sizeof(SAVE_Settings_C_InitializeSettingsForPlayerHUD) == 0x000010, "Wrong size on SAVE_Settings_C_InitializeSettingsForPlayerHUD");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForPlayerHUD, PlayerHUD) == 0x000000, "Member 'SAVE_Settings_C_InitializeSettingsForPlayerHUD::PlayerHUD' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetMasterVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetMasterVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetMasterVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetMasterVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetMasterVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetMasterVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetMasterVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetMasterVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMasterVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetMasterVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMasterVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetMasterVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMasterVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetMasterVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetMusicVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetMusicVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetMusicVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetMusicVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetMusicVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetMusicVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetMusicVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetMusicVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMusicVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetMusicVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMusicVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetMusicVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetMusicVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetMusicVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetVoiceVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetVoiceVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetVoiceVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetVoiceVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetVoiceVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetVoiceVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetVoiceVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetVoiceVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetVoiceVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetVoiceVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetVoiceVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetVoiceVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetVoiceVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetVoiceVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEffectsVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEffectsVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEffectsVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEffectsVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetEffectsVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEffectsVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetEffectsVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEffectsVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEffectsVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEffectsVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEffectsVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnvironmentVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEnvironmentVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEnvironmentVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEnvironmentVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEnvironmentVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEnvironmentVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEnvironmentVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnvironmentVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEnvironmentVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoPlayMediaLogsProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoRotateMinimapProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetAutoRotateMinimapProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAutoRotateMinimapProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetAutoRotateMinimapProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAutoRotateMinimapProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAutoRotateMinimapProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAutoRotateMinimapProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoRotateMinimapProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetAutoRotateMinimapProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShowTutorialsProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetShowTutorialsProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetShowTutorialsProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetShowTutorialsProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetShowTutorialsProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetShowTutorialsProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetShowTutorialsProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetShowTutorialsProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShowTutorialsProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetShowTutorialsProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShowTutorialsProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetShowTutorialsProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShowTutorialsProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetShowTutorialsProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFocusOnPuzzlesProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetFocusOnPuzzlesProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetFocusOnPuzzlesProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetFocusOnPuzzlesProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetFocusOnPuzzlesProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetFocusOnPuzzlesProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetFocusOnPuzzlesProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusOnPuzzlesProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetFocusOnPuzzlesProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoSlotHotbarProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetAutoSlotHotbarProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAutoSlotHotbarProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetAutoSlotHotbarProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAutoSlotHotbarProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAutoSlotHotbarProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAutoSlotHotbarProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoSlotHotbarProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetAutoSlotHotbarProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAutoReloadProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetAutoReloadProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAutoReloadProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAutoReloadProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAutoReloadProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetAutoReloadProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAutoReloadProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAutoReloadProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoReloadProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAutoReloadProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoReloadProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAutoReloadProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAutoReloadProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetAutoReloadProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAimAssistProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetAimAssistProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetAimAssistProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAimAssistProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAimAssistProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetAimAssistProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAimAssistProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAimAssistProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAimAssistProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAimAssistProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAimAssistProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAimAssistProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAimAssistProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetAimAssistProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFocusAimToggleProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetFocusAimToggleProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetFocusAimToggleProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetFocusAimToggleProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetFocusAimToggleProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetFocusAimToggleProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetFocusAimToggleProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetFocusAimToggleProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusAimToggleProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetFocusAimToggleProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusAimToggleProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetFocusAimToggleProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFocusAimToggleProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetFocusAimToggleProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCrouchToggleProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetCrouchToggleProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetCrouchToggleProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetCrouchToggleProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetCrouchToggleProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetCrouchToggleProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetCrouchToggleProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetCrouchToggleProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCrouchToggleProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetCrouchToggleProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCrouchToggleProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetCrouchToggleProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCrouchToggleProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetCrouchToggleProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceLookSensitivityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceInvertYProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetRealspaceInvertYProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetRealspaceInvertYProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetRealspaceInvertYProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetRealspaceInvertYProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetRealspaceInvertYProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceInvertYProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetRealspaceInvertYProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceInvertYProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetRealspaceInvertYProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceInvertYProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetRealspaceInvertYProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetRealspaceInvertYProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetRealspaceInvertYProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceLookSensitivityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceInvertYProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetCyberspaceInvertYProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetCyberspaceInvertYProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetCyberspaceInvertYProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetCyberspaceInvertYProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetCyberspaceInvertYProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetCyberspaceInvertYProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetCyberspaceInvertYProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetCyberspaceInvertYProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyBrightnessForCharacter
// 0x0040 (0x0040 - 0x0000)
struct SAVE_Settings_C_ApplyBrightnessForCharacter final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_GetGammaFromSpecificBrightness_Result;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_ApplyBrightnessForCharacter) == 0x000010, "Wrong alignment on SAVE_Settings_C_ApplyBrightnessForCharacter");
static_assert(sizeof(SAVE_Settings_C_ApplyBrightnessForCharacter) == 0x000040, "Wrong size on SAVE_Settings_C_ApplyBrightnessForCharacter");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, Character) == 0x000008, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::Character' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, Camera) == 0x000010, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::Camera' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, CallFunc_GetGammaFromSpecificBrightness_Result) == 0x000020, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::CallFunc_GetGammaFromSpecificBrightness_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyBrightnessForCharacter, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000034, "Member 'SAVE_Settings_C_ApplyBrightnessForCharacter::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetBrightnessProfileValue
// 0x0040 (0x0040 - 0x0000)
struct SAVE_Settings_C_GetBrightnessProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Result;                                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetBrightnessProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetBrightnessProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetBrightnessProfileValue) == 0x000040, "Wrong size on SAVE_Settings_C_GetBrightnessProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, IsRealspace) == 0x000020, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, Result) == 0x000024, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, Temp_bool_Variable) == 0x000028, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetBrightnessProfileValue, K2Node_Select_Default) == 0x000038, "Member 'SAVE_Settings_C_GetBrightnessProfileValue::K2Node_Select_Default' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetWindowModeProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetWindowModeProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EWindowMode                                   Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetDefaultWindowMode_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetWindowModeProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetWindowModeProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetWindowModeProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetWindowModeProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetWindowModeProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetWindowModeProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetWindowModeProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetWindowModeProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetWindowModeProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetWindowModeProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetWindowModeProfileValue, CallFunc_GetDefaultWindowMode_ReturnValue) == 0x000021, "Member 'SAVE_Settings_C_GetWindowModeProfileValue::CallFunc_GetDefaultWindowMode_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetResolutionProfileValue
// 0x0038 (0x0038 - 0x0000)
struct SAVE_Settings_C_GetResolutionProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FIntPoint                              Result;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetResolutionProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetResolutionProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetResolutionProfileValue) == 0x000038, "Wrong size on SAVE_Settings_C_GetResolutionProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetResolutionProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetResolutionProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetResolutionProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetResolutionProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionProfileValue, CallFunc_GetGameUserSettings_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetResolutionProfileValue::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionProfileValue, CallFunc_GetScreenResolution_ReturnValue) == 0x000030, "Member 'SAVE_Settings_C_GetResolutionProfileValue::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetResolutionScaleProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetResolutionScaleProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetResolutionScaleProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetResolutionScaleProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetResolutionScaleProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetResolutionScaleProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetResolutionScaleProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetResolutionScaleProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionScaleProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetResolutionScaleProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionScaleProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetResolutionScaleProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetResolutionScaleProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetResolutionScaleProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableHDRProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEnableHDRProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEnableHDRProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEnableHDRProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetEnableHDRProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEnableHDRProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetEnableHDRProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEnableHDRProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableHDRProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEnableHDRProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableHDRProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEnableHDRProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableHDRProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEnableHDRProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableMotionBlurProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEnableMotionBlurProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEnableMotionBlurProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEnableMotionBlurProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetEnableMotionBlurProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEnableMotionBlurProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetEnableMotionBlurProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEnableMotionBlurProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableMotionBlurProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEnableMotionBlurProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableMotionBlurProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEnableMotionBlurProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableMotionBlurProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEnableMotionBlurProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyFOVForCharacter
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_ApplyFOVForCharacter final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       PlayerCam;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyFOVForCharacter) == 0x000008, "Wrong alignment on SAVE_Settings_C_ApplyFOVForCharacter");
static_assert(sizeof(SAVE_Settings_C_ApplyFOVForCharacter) == 0x000028, "Wrong size on SAVE_Settings_C_ApplyFOVForCharacter");
static_assert(offsetof(SAVE_Settings_C_ApplyFOVForCharacter, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyFOVForCharacter::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOVForCharacter, Character) == 0x000008, "Member 'SAVE_Settings_C_ApplyFOVForCharacter::Character' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOVForCharacter, PlayerCam) == 0x000010, "Member 'SAVE_Settings_C_ApplyFOVForCharacter::PlayerCam' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOVForCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'SAVE_Settings_C_ApplyFOVForCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_ApplyFOVForCharacter, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'SAVE_Settings_C_ApplyFOVForCharacter::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFOVProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetFOVProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Result;                                            // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetFOVProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetFOVProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetFOVProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetFOVProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetFOVProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetFOVProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOVProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetFOVProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOVProfileValue, IsRealspace) == 0x000020, "Member 'SAVE_Settings_C_GetFOVProfileValue::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOVProfileValue, Result) == 0x000024, "Member 'SAVE_Settings_C_GetFOVProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFOVProfileValue, CallFunc_GetPlatformType_IsConsole) == 0x000028, "Member 'SAVE_Settings_C_GetFOVProfileValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEnableVSyncProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEnableVSyncProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEnableVSyncProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEnableVSyncProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetEnableVSyncProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEnableVSyncProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetEnableVSyncProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEnableVSyncProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableVSyncProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEnableVSyncProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableVSyncProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEnableVSyncProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEnableVSyncProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEnableVSyncProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDLSSProfileValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetDLSSProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EUDLSSMode                                    Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetDLSSProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetDLSSProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetDLSSProfileValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetDLSSProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetDLSSProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetDLSSProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDLSSProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetDLSSProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDLSSProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetDLSSProfileValue::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetAmbientOcclusionProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetAmbientOcclusionProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_OffLowMediumHigh                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetAmbientOcclusionProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetAmbientOcclusionProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetAmbientOcclusionProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetAmbientOcclusionProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetAmbientOcclusionProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetAmbientOcclusionProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAmbientOcclusionProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetAmbientOcclusionProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAmbientOcclusionProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetAmbientOcclusionProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetAmbientOcclusionProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetAmbientOcclusionProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFogQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetFogQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetFogQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetFogQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetFogQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetFogQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetFogQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetFogQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFogQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetFogQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFogQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetFogQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFogQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetFogQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetPostProccessingQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetPostProccessingQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetPostProccessingQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetPostProccessingQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetPostProccessingQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetPostProccessingQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetPostProccessingQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetPostProccessingQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetPostProccessingQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetPostProccessingQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetPostProccessingQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetPostProccessingQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetPostProccessingQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetPostProccessingQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetTextureQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetTextureQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetTextureQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetTextureQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetTextureQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetTextureQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetTextureQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetTextureQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetTextureQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetTextureQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetTextureQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetTextureQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetTextureQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetTextureQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShaderQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetShaderQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetShaderQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetShaderQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetShaderQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetShaderQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetShaderQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetShaderQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShaderQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetShaderQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShaderQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetShaderQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShaderQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetShaderQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetShadowQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetShadowQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetShadowQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetShadowQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetShadowQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetShadowQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetShadowQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetShadowQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShadowQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetShadowQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShadowQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetShadowQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetShadowQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetShadowQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetEffectsQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetEffectsQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetEffectsQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetEffectsQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetEffectsQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetEffectsQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetEffectsQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetEffectsQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetEffectsQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetEffectsQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetEffectsQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetEffectsQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetFoliageQualityProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetFoliageQualityProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_QualitySetting                           Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetFoliageQualityProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetFoliageQualityProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetFoliageQualityProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetFoliageQualityProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetFoliageQualityProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetFoliageQualityProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFoliageQualityProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetFoliageQualityProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFoliageQualityProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetFoliageQualityProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetFoliageQualityProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetFoliageQualityProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetUIVolumeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetUIVolumeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetUIVolumeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetUIVolumeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetUIVolumeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetUIVolumeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetUIVolumeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetUIVolumeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetUIVolumeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetUIVolumeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetUIVolumeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetUIVolumeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetUIVolumeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetUIVolumeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDCurvatureProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetHUDCurvatureProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDCurvatureProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHUDCurvatureProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHUDCurvatureProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetHUDCurvatureProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHUDCurvatureProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHUDCurvatureProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDCurvatureProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHUDCurvatureProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDCurvatureProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHUDCurvatureProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDCurvatureProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetHUDCurvatureProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSubtitlesEnabledProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetSubtitlesEnabledProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetSubtitlesEnabledProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetSubtitlesEnabledProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetSubtitlesEnabledProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetSubtitlesEnabledProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetSubtitlesEnabledProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitlesEnabledProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetSubtitlesEnabledProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetLanguageProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetLanguageProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetLanguageProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetLanguageProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetLanguageProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetLanguageProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetLanguageProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetLanguageProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetLanguageProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetLanguageProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetLanguageProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetLanguageProfleValue::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHeadbobAmountProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetHeadbobAmountProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_OffReducedNormal                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHeadbobAmountProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHeadbobAmountProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHeadbobAmountProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetHeadbobAmountProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHeadbobAmountProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHeadbobAmountProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHeadbobAmountProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHeadbobAmountProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHeadbobAmountProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHeadbobAmountProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHeadbobAmountProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetHeadbobAmountProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetGoreAmountProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetGoreAmountProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_OffReducedNormal                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetGoreAmountProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetGoreAmountProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetGoreAmountProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetGoreAmountProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetGoreAmountProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetGoreAmountProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGoreAmountProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetGoreAmountProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGoreAmountProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetGoreAmountProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetGoreAmountProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetGoreAmountProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetDismembermentEnabledProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetDismembermentEnabledProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetDismembermentEnabledProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetDismembermentEnabledProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetDismembermentEnabledProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetDismembermentEnabledProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetDismembermentEnabledProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetDismembermentEnabledProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDismembermentEnabledProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetDismembermentEnabledProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDismembermentEnabledProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetDismembermentEnabledProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetDismembermentEnabledProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetDismembermentEnabledProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDOpacityProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetHUDOpacityProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDOpacityProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHUDOpacityProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHUDOpacityProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetHUDOpacityProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHUDOpacityProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHUDOpacityProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDOpacityProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHUDOpacityProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDOpacityProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHUDOpacityProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDOpacityProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetHUDOpacityProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHotbarStyleProfleValue
// 0x0028 (0x0028 - 0x0000)
struct SAVE_Settings_C_GetHotbarStyleProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlatformType_IsConsole;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetHotbarStyleProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHotbarStyleProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHotbarStyleProfleValue) == 0x000028, "Wrong size on SAVE_Settings_C_GetHotbarStyleProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHotbarStyleProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHotbarStyleProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHotbarStyleProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHotbarStyleProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHotbarStyleProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHotbarStyleProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHotbarStyleProfleValue, CallFunc_GetPlatformType_IsConsole) == 0x000021, "Member 'SAVE_Settings_C_GetHotbarStyleProfleValue::CallFunc_GetPlatformType_IsConsole' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSubtitleSizeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetSubtitleSizeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_SmallMediumLarge                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSubtitleSizeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetSubtitleSizeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetSubtitleSizeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetSubtitleSizeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetSubtitleSizeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetSubtitleSizeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitleSizeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetSubtitleSizeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitleSizeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetSubtitleSizeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSubtitleSizeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetSubtitleSizeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsEnabledProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsSizeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_SmallMediumLarge                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDColorThemeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetHUDColorThemeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Result;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDColorThemeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHUDColorThemeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHUDColorThemeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetHUDColorThemeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHUDColorThemeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHUDColorThemeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDColorThemeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHUDColorThemeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDColorThemeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHUDColorThemeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDColorThemeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetHUDColorThemeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetHUDTextSizeProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetHUDTextSizeProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ENUM_SmallMediumLarge                         Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetHUDTextSizeProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetHUDTextSizeProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetHUDTextSizeProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetHUDTextSizeProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetHUDTextSizeProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetHUDTextSizeProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDTextSizeProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetHUDTextSizeProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDTextSizeProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetHUDTextSizeProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetHUDTextSizeProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetHUDTextSizeProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetPlatformType
// 0x0020 (0x0020 - 0x0000)
struct SAVE_Settings_C_GetPlatformType final
{
public:
	bool                                          IsConsole;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetPlatformType) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetPlatformType");
static_assert(sizeof(SAVE_Settings_C_GetPlatformType) == 0x000020, "Wrong size on SAVE_Settings_C_GetPlatformType");
static_assert(offsetof(SAVE_Settings_C_GetPlatformType, IsConsole) == 0x000000, "Member 'SAVE_Settings_C_GetPlatformType::IsConsole' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetPlatformType, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'SAVE_Settings_C_GetPlatformType::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetPlatformType, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'SAVE_Settings_C_GetPlatformType::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetReloadCanUseBatteries
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetReloadCanUseBatteries final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetReloadCanUseBatteries) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetReloadCanUseBatteries");
static_assert(sizeof(SAVE_Settings_C_SetReloadCanUseBatteries) == 0x000002, "Wrong size on SAVE_Settings_C_SetReloadCanUseBatteries");
static_assert(offsetof(SAVE_Settings_C_SetReloadCanUseBatteries, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetReloadCanUseBatteries::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetReloadCanUseBatteries, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetReloadCanUseBatteries::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetReloadCanUseBatteries
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetReloadCanUseBatteries final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetReloadCanUseBatteries) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetReloadCanUseBatteries");
static_assert(sizeof(SAVE_Settings_C_GetReloadCanUseBatteries) == 0x000001, "Wrong size on SAVE_Settings_C_GetReloadCanUseBatteries");
static_assert(offsetof(SAVE_Settings_C_GetReloadCanUseBatteries, Result) == 0x000000, "Member 'SAVE_Settings_C_GetReloadCanUseBatteries::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyReloadCanUseBatteries
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyReloadCanUseBatteries final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyReloadCanUseBatteries) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyReloadCanUseBatteries");
static_assert(sizeof(SAVE_Settings_C_ApplyReloadCanUseBatteries) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyReloadCanUseBatteries");
static_assert(offsetof(SAVE_Settings_C_ApplyReloadCanUseBatteries, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyReloadCanUseBatteries::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetReloadCanUseBatteriesProfileValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue");
static_assert(sizeof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue");
static_assert(offsetof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForCurrentSpace
// 0x0018 (0x0018 - 0x0000)
struct SAVE_Settings_C_InitializeSettingsForCurrentSpace final
{
public:
	class APAWN_SystemShockCharacter_C*           ControlledCharacter;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRealspace;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRealspaceCharacter_Result;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBrightness_Result;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOV_Result;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_InitializeSettingsForCurrentSpace) == 0x000008, "Wrong alignment on SAVE_Settings_C_InitializeSettingsForCurrentSpace");
static_assert(sizeof(SAVE_Settings_C_InitializeSettingsForCurrentSpace) == 0x000018, "Wrong size on SAVE_Settings_C_InitializeSettingsForCurrentSpace");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForCurrentSpace, ControlledCharacter) == 0x000000, "Member 'SAVE_Settings_C_InitializeSettingsForCurrentSpace::ControlledCharacter' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForCurrentSpace, IsRealspace) == 0x000008, "Member 'SAVE_Settings_C_InitializeSettingsForCurrentSpace::IsRealspace' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForCurrentSpace, CallFunc_IsRealspaceCharacter_Result) == 0x000009, "Member 'SAVE_Settings_C_InitializeSettingsForCurrentSpace::CallFunc_IsRealspaceCharacter_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForCurrentSpace, CallFunc_GetBrightness_Result) == 0x00000C, "Member 'SAVE_Settings_C_InitializeSettingsForCurrentSpace::CallFunc_GetBrightness_Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_InitializeSettingsForCurrentSpace, CallFunc_GetFOV_Result) == 0x000010, "Member 'SAVE_Settings_C_InitializeSettingsForCurrentSpace::CallFunc_GetFOV_Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.SetControllerVibrationEnabled
// 0x0002 (0x0002 - 0x0000)
struct SAVE_Settings_C_SetControllerVibrationEnabled final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_SetControllerVibrationEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_SetControllerVibrationEnabled");
static_assert(sizeof(SAVE_Settings_C_SetControllerVibrationEnabled) == 0x000002, "Wrong size on SAVE_Settings_C_SetControllerVibrationEnabled");
static_assert(offsetof(SAVE_Settings_C_SetControllerVibrationEnabled, NewValue) == 0x000000, "Member 'SAVE_Settings_C_SetControllerVibrationEnabled::NewValue' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_SetControllerVibrationEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'SAVE_Settings_C_SetControllerVibrationEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetControllerVibrationEnabled
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_GetControllerVibrationEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_GetControllerVibrationEnabled) == 0x000001, "Wrong alignment on SAVE_Settings_C_GetControllerVibrationEnabled");
static_assert(sizeof(SAVE_Settings_C_GetControllerVibrationEnabled) == 0x000001, "Wrong size on SAVE_Settings_C_GetControllerVibrationEnabled");
static_assert(offsetof(SAVE_Settings_C_GetControllerVibrationEnabled, Result) == 0x000000, "Member 'SAVE_Settings_C_GetControllerVibrationEnabled::Result' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.ApplyControllerVibrationSetting
// 0x0001 (0x0001 - 0x0000)
struct SAVE_Settings_C_ApplyControllerVibrationSetting final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SAVE_Settings_C_ApplyControllerVibrationSetting) == 0x000001, "Wrong alignment on SAVE_Settings_C_ApplyControllerVibrationSetting");
static_assert(sizeof(SAVE_Settings_C_ApplyControllerVibrationSetting) == 0x000001, "Wrong size on SAVE_Settings_C_ApplyControllerVibrationSetting");
static_assert(offsetof(SAVE_Settings_C_ApplyControllerVibrationSetting, NewValue) == 0x000000, "Member 'SAVE_Settings_C_ApplyControllerVibrationSetting::NewValue' has a wrong offset!");

// Function SAVE_Settings.SAVE_Settings_C.GetControllerVibrationProfleValue
// 0x0030 (0x0030 - 0x0000)
struct SAVE_Settings_C_GetControllerVibrationProfleValue final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Platform;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SAVE_Settings_C_GetControllerVibrationProfleValue) == 0x000008, "Wrong alignment on SAVE_Settings_C_GetControllerVibrationProfleValue");
static_assert(sizeof(SAVE_Settings_C_GetControllerVibrationProfleValue) == 0x000030, "Wrong size on SAVE_Settings_C_GetControllerVibrationProfleValue");
static_assert(offsetof(SAVE_Settings_C_GetControllerVibrationProfleValue, Culture) == 0x000000, "Member 'SAVE_Settings_C_GetControllerVibrationProfleValue::Culture' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetControllerVibrationProfleValue, Platform) == 0x000010, "Member 'SAVE_Settings_C_GetControllerVibrationProfleValue::Platform' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetControllerVibrationProfleValue, Result) == 0x000020, "Member 'SAVE_Settings_C_GetControllerVibrationProfleValue::Result' has a wrong offset!");
static_assert(offsetof(SAVE_Settings_C_GetControllerVibrationProfleValue, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'SAVE_Settings_C_GetControllerVibrationProfleValue::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

}


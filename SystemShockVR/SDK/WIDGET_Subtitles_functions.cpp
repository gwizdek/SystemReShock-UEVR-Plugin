#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Subtitles

#include "Basic.hpp"

#include "WIDGET_Subtitles_classes.hpp"
#include "WIDGET_Subtitles_parameters.hpp"


namespace SDK
{

// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ExecuteUbergraph_WIDGET_Subtitles
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::ExecuteUbergraph_WIDGET_Subtitles(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ExecuteUbergraph_WIDGET_Subtitles");

	Params::WIDGET_Subtitles_C_ExecuteUbergraph_WIDGET_Subtitles Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "Tick");

	Params::WIDGET_Subtitles_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_Subtitles_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SequenceEvent_0
// (BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::SequenceEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "SequenceEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.InitilalizeSubtitleWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_MediaDisplay_C*           MediaDisplay_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HUD_C>   Player_HUD                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::InitilalizeSubtitleWidget(class UWIDGET_MediaDisplay_C* MediaDisplay_0, TScriptInterface<class IINTERF_HUD_C> Player_HUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "InitilalizeSubtitleWidget");

	Params::WIDGET_Subtitles_C_InitilalizeSubtitleWidget Parms{};

	Parms.MediaDisplay_0 = MediaDisplay_0;
	Parms.Player_HUD = Player_HUD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ClearSubtitles
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::ClearSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ClearSubtitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SetSubtitlesEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::SetSubtitlesEnabled(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "SetSubtitlesEnabled");

	Params::WIDGET_Subtitles_C_SetSubtitlesEnabled Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplayNewSubtitles
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextString                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplayNewSubtitles(const class FString& ContextString, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplayNewSubtitles");

	Params::WIDGET_Subtitles_C_DisplayNewSubtitles Parms{};

	Parms.ContextString = std::move(ContextString);
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromMediaItemClass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           MediaItemClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplaySubtitleFromMediaItemClass(class UClass* MediaItemClass, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplaySubtitleFromMediaItemClass");

	Params::WIDGET_Subtitles_C_DisplaySubtitleFromMediaItemClass Parms{};

	Parms.MediaItemClass = MediaItemClass;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromCutscene
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SubtitleRowName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplaySubtitleFromCutscene(class FName SubtitleRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplaySubtitleFromCutscene");

	Params::WIDGET_Subtitles_C_DisplaySubtitleFromCutscene Parms{};

	Parms.SubtitleRowName = SubtitleRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromAtmospherics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SubtitleRowName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplaySubtitleFromAtmospherics(class FName SubtitleRowName, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplaySubtitleFromAtmospherics");

	Params::WIDGET_Subtitles_C_DisplaySubtitleFromAtmospherics Parms{};

	Parms.SubtitleRowName = SubtitleRowName;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromTaunt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTRUCT_MediaObject              Media_Data                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplaySubtitleFromTaunt(const struct FSTRUCT_MediaObject& Media_Data, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplaySubtitleFromTaunt");

	Params::WIDGET_Subtitles_C_DisplaySubtitleFromTaunt Parms{};

	Parms.Media_Data = std::move(Media_Data);
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.DisplaySubtitleFromDialogueCaption
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTRUCT_DialogueCaptionObject    DialogueCaption                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::DisplaySubtitleFromDialogueCaption(const struct FSTRUCT_DialogueCaptionObject& DialogueCaption, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "DisplaySubtitleFromDialogueCaption");

	Params::WIDGET_Subtitles_C_DisplaySubtitleFromDialogueCaption Parms{};

	Parms.DialogueCaption = std::move(DialogueCaption);
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryAdvanceSubtitlesToStartTime
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   StartTimeOnLine                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::TryAdvanceSubtitlesToStartTime(float StartTime, bool* Result, float* StartTimeOnLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "TryAdvanceSubtitlesToStartTime");

	Params::WIDGET_Subtitles_C_TryAdvanceSubtitlesToStartTime Parms{};

	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (StartTimeOnLine != nullptr)
		*StartTimeOnLine = Parms.StartTimeOnLine;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ParseTranscriptionText
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextString                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::ParseTranscriptionText(const class FString& ContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ParseTranscriptionText");

	Params::WIDGET_Subtitles_C_ParseTranscriptionText Parms{};

	Parms.ContextString = std::move(ContextString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.CreateSubtitleLineStruct
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BuiltString                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           BuiltTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           InterruptSpeaker                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::CreateSubtitleLineStruct(const class FString& BuiltString, const class FString& BuiltTime, const class FString& InterruptSpeaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "CreateSubtitleLineStruct");

	Params::WIDGET_Subtitles_C_CreateSubtitleLineStruct Parms{};

	Parms.BuiltString = std::move(BuiltString);
	Parms.BuiltTime = std::move(BuiltTime);
	Parms.InterruptSpeaker = std::move(InterruptSpeaker);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.UpdateSpeakerText
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::UpdateSpeakerText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "UpdateSpeakerText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryUpdateSubtitleText
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartTimeOnLine                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::TryUpdateSubtitleText(float StartTimeOnLine, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "TryUpdateSubtitleText");

	Params::WIDGET_Subtitles_C_TryUpdateSubtitleText Parms{};

	Parms.StartTimeOnLine = StartTimeOnLine;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.RevealSubtitles
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::RevealSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "RevealSubtitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.HideSubtitles
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::HideSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "HideSubtitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowParseError
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextString                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::ThrowParseError(const class FString& ContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ThrowParseError");

	Params::WIDGET_Subtitles_C_ThrowParseError Parms{};

	Parms.ContextString = std::move(ContextString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowMissingSubtitlesError
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ContextString                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::ThrowMissingSubtitlesError(const class FString& ContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ThrowMissingSubtitlesError");

	Params::WIDGET_Subtitles_C_ThrowMissingSubtitlesError Parms{};

	Parms.ContextString = std::move(ContextString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ThrowMissingSpeakerError
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::ThrowMissingSpeakerError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ThrowMissingSpeakerError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryHideSubtitlesForSoundCue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::TryHideSubtitlesForSoundCue(class USoundCue* SoundCue, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "TryHideSubtitlesForSoundCue");

	Params::WIDGET_Subtitles_C_TryHideSubtitlesForSoundCue Parms{};

	Parms.SoundCue = SoundCue;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TryHideSubtitlesForMediaHandle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              MediaHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::TryHideSubtitlesForMediaHandle(const struct FDataTableRowHandle& MediaHandle, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "TryHideSubtitlesForMediaHandle");

	Params::WIDGET_Subtitles_C_TryHideSubtitlesForMediaHandle Parms{};

	Parms.MediaHandle = std::move(MediaHandle);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SetLineTransition
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::SetLineTransition(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "SetLineTransition");

	Params::WIDGET_Subtitles_C_SetLineTransition Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.TickSubtitles
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Subtitles_C::TickSubtitles(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "TickSubtitles");

	Params::WIDGET_Subtitles_C_TickSubtitles Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.IsDisplayingSubtitles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::IsDisplayingSubtitles(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "IsDisplayingSubtitles");

	Params::WIDGET_Subtitles_C_IsDisplayingSubtitles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.ShouldDisplaySubtitles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Subtitles_C::ShouldDisplaySubtitles(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "ShouldDisplaySubtitles");

	Params::WIDGET_Subtitles_C_ShouldDisplaySubtitles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Subtitles.WIDGET_Subtitles_C.SequenceEvent__ENTRYPOINTWIDGET_Subtitles_0
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Subtitles_C::SequenceEvent__ENTRYPOINTWIDGET_Subtitles_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Subtitles_C", "SequenceEvent__ENTRYPOINTWIDGET_Subtitles_0");

	UObject::ProcessEvent(Func, nullptr);
}

}


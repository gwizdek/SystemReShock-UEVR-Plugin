#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TargetID_Display

#include "Basic.hpp"

#include "ENUM_TargetID_TargetStatus_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_EnemyType_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"
#include "UMG_classes.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_TargetID_Display.WIDGET_TargetID_Display_C
// 0x00C0 (0x0320 - 0x0260)
class UWIDGET_TargetID_Display_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_AcquireTarget;                                // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Divider;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_TargetCategory;                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_TargetEnergy;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_TargetHealth;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_TargetID;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_TargetName;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ButtonLegend_Button_C*          WIDGET_HackButton;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_TargetID_TargetingReticle_C*    WIDGET_TargetID_TargetingReticle;                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_TargetID_TargetStatus_C*        WIDGET_TargetID_TargetStatus;                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        HardwareBag;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_TargetIdentifier_Base_C*      TargetIdentifierItem;                              // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentTargetActor;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_TargetID_TargetStatus                    TargetStatus;                                      // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           LastTargetDetectionState;                          // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetHealth;                                      // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetEnergy;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDistance;                                    // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHoldTime;                                   // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           StartHackDelayTimerHandle;                         // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Material_Mutant;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Material_Robot;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Material_Cyborg;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Material_HeavyCyborg;                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              Material_Enemy;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_TargetID_Display(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void InitializeTargetDisplay(class UWIDGET_PlayerHUD_C* PlayerHUD_0);
	void InitializeTargetHardware();
	void InitializeTargetStatus();
	void ToggleTargetIDVisibility();
	void UpdateTargetIdentifierVersion();
	void SetTargetActor(class AActor* Actor);
	void SetTargetStatus(ENUM_TargetID_TargetStatus Status);
	void UpdateTargetEventBindings();
	void ClearTargetEventBindings();
	void UpdateTargetName();
	void UpdateTargetCategory();
	void EVENT_OnHardwareBagChanged(int32 SlotIndex);
	void EVENT_OnTargetCharacterDied(class APAWN_SystemShockCharacter_C* Character);
	void EVENT_OnDestructibleDestroyed();
	void EVENT_OnTargetActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
	void EVENT_OnTargetHealthChanged(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType);
	void EVENT_OnTargetEnergyChanged(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType);
	void EVENT_OnTargetAlertnessChanged(float CurrValue, float LastValue);
	void EVENT_OnTargetDisabledStateChanged(float CurrValue, float LastValue);
	void EVENT_OnTargetDetectionStateChanged(class APAWN_SystemShockCharacter_C* Character, const struct FVector& EventLocation, ENUM_DetectionState NewState, ENUM_DetectionState OldState);
	void UpdateTargetStatusFromDetectionState(bool CheckScrambling);
	void EVENT_OnCandidateUpdate(class AActor* Actor);
	void SetTargetIDHardwareEventBindings();
	void EVENT_OnTargetUpdate(class AActor* Actor);
	void TryAcquireEnemy(bool InputState);
	void OnTargetActorLost();
	void SetHackIndicatorVisibility(bool HackPossible);
	void TryShowWeakspotReticle();
	void EVENT_OnStartHackDelayFinished();
	void TryHideWeakspotReticle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_TargetID_Display_C">();
	}
	static class UWIDGET_TargetID_Display_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_TargetID_Display_C>();
	}
};
static_assert(alignof(UWIDGET_TargetID_Display_C) == 0x000008, "Wrong alignment on UWIDGET_TargetID_Display_C");
static_assert(sizeof(UWIDGET_TargetID_Display_C) == 0x000320, "Wrong size on UWIDGET_TargetID_Display_C");
static_assert(offsetof(UWIDGET_TargetID_Display_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_TargetID_Display_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, ANIM_AcquireTarget) == 0x000268, "Member 'UWIDGET_TargetID_Display_C::ANIM_AcquireTarget' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, MESH_Divider) == 0x000270, "Member 'UWIDGET_TargetID_Display_C::MESH_Divider' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, MESH_TargetCategory) == 0x000278, "Member 'UWIDGET_TargetID_Display_C::MESH_TargetCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, MESH_TargetEnergy) == 0x000280, "Member 'UWIDGET_TargetID_Display_C::MESH_TargetEnergy' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, MESH_TargetHealth) == 0x000288, "Member 'UWIDGET_TargetID_Display_C::MESH_TargetHealth' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, PANEL_TargetID) == 0x000290, "Member 'UWIDGET_TargetID_Display_C::PANEL_TargetID' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TEXT_TargetName) == 0x000298, "Member 'UWIDGET_TargetID_Display_C::TEXT_TargetName' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, WIDGET_HackButton) == 0x0002A0, "Member 'UWIDGET_TargetID_Display_C::WIDGET_HackButton' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, WIDGET_TargetID_TargetingReticle) == 0x0002A8, "Member 'UWIDGET_TargetID_Display_C::WIDGET_TargetID_TargetingReticle' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, WIDGET_TargetID_TargetStatus) == 0x0002B0, "Member 'UWIDGET_TargetID_Display_C::WIDGET_TargetID_TargetStatus' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, PlayerHUD) == 0x0002B8, "Member 'UWIDGET_TargetID_Display_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, HardwareBag) == 0x0002C0, "Member 'UWIDGET_TargetID_Display_C::HardwareBag' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TargetIdentifierItem) == 0x0002C8, "Member 'UWIDGET_TargetID_Display_C::TargetIdentifierItem' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, CurrentTargetActor) == 0x0002D0, "Member 'UWIDGET_TargetID_Display_C::CurrentTargetActor' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TargetStatus) == 0x0002D8, "Member 'UWIDGET_TargetID_Display_C::TargetStatus' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, LastTargetDetectionState) == 0x0002D9, "Member 'UWIDGET_TargetID_Display_C::LastTargetDetectionState' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TargetHealth) == 0x0002DC, "Member 'UWIDGET_TargetID_Display_C::TargetHealth' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TargetEnergy) == 0x0002E0, "Member 'UWIDGET_TargetID_Display_C::TargetEnergy' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, TargetDistance) == 0x0002E4, "Member 'UWIDGET_TargetID_Display_C::TargetDistance' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, CurrentHoldTime) == 0x0002E8, "Member 'UWIDGET_TargetID_Display_C::CurrentHoldTime' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, StartHackDelayTimerHandle) == 0x0002F0, "Member 'UWIDGET_TargetID_Display_C::StartHackDelayTimerHandle' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, Material_Mutant) == 0x0002F8, "Member 'UWIDGET_TargetID_Display_C::Material_Mutant' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, Material_Robot) == 0x000300, "Member 'UWIDGET_TargetID_Display_C::Material_Robot' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, Material_Cyborg) == 0x000308, "Member 'UWIDGET_TargetID_Display_C::Material_Cyborg' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, Material_HeavyCyborg) == 0x000310, "Member 'UWIDGET_TargetID_Display_C::Material_HeavyCyborg' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_Display_C, Material_Enemy) == 0x000318, "Member 'UWIDGET_TargetID_Display_C::Material_Enemy' has a wrong offset!");

}


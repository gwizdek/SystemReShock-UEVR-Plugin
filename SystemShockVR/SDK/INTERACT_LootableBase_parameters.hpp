#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_LootableBase

#include "Basic.hpp"

#include "STRUCT_HardItemParams_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.ExecuteUbergraph_INTERACT_LootableBase
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase) == 0x000004, "Wrong alignment on INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase");
static_assert(sizeof(INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase) == 0x000004, "Wrong size on INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase");
static_assert(offsetof(INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase, EntryPoint) == 0x000000, "Member 'INTERACT_LootableBase_C_ExecuteUbergraph_INTERACT_LootableBase::EntryPoint' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.IsLootableOpened
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LootableBase_C_IsLootableOpened final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_IsLootableOpened) == 0x000001, "Wrong alignment on INTERACT_LootableBase_C_IsLootableOpened");
static_assert(sizeof(INTERACT_LootableBase_C_IsLootableOpened) == 0x000001, "Wrong size on INTERACT_LootableBase_C_IsLootableOpened");
static_assert(offsetof(INTERACT_LootableBase_C_IsLootableOpened, Result) == 0x000000, "Member 'INTERACT_LootableBase_C_IsLootableOpened::Result' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.ShouldCloseLootWindow
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_LootableBase_C_ShouldCloseLootWindow final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_ShouldCloseLootWindow) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_ShouldCloseLootWindow");
static_assert(sizeof(INTERACT_LootableBase_C_ShouldCloseLootWindow) == 0x000020, "Wrong size on INTERACT_LootableBase_C_ShouldCloseLootWindow");
static_assert(offsetof(INTERACT_LootableBase_C_ShouldCloseLootWindow, NewChannelingInteract) == 0x000000, "Member 'INTERACT_LootableBase_C_ShouldCloseLootWindow::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_ShouldCloseLootWindow, Result) == 0x000008, "Member 'INTERACT_LootableBase_C_ShouldCloseLootWindow::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_ShouldCloseLootWindow, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'INTERACT_LootableBase_C_ShouldCloseLootWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_ShouldCloseLootWindow, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'INTERACT_LootableBase_C_ShouldCloseLootWindow::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_ShouldCloseLootWindow, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'INTERACT_LootableBase_C_ShouldCloseLootWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.GetLootableDisplayName
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_LootableBase_C_GetLootableDisplayName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(INTERACT_LootableBase_C_GetLootableDisplayName) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_GetLootableDisplayName");
static_assert(sizeof(INTERACT_LootableBase_C_GetLootableDisplayName) == 0x000018, "Wrong size on INTERACT_LootableBase_C_GetLootableDisplayName");
static_assert(offsetof(INTERACT_LootableBase_C_GetLootableDisplayName, Text) == 0x000000, "Member 'INTERACT_LootableBase_C_GetLootableDisplayName::Text' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.GetLootableMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LootableBase_C_GetLootableMeshComponent final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LootableBase_C_GetLootableMeshComponent) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_GetLootableMeshComponent");
static_assert(sizeof(INTERACT_LootableBase_C_GetLootableMeshComponent) == 0x000010, "Wrong size on INTERACT_LootableBase_C_GetLootableMeshComponent");
static_assert(offsetof(INTERACT_LootableBase_C_GetLootableMeshComponent, MeshComponent) == 0x000000, "Member 'INTERACT_LootableBase_C_GetLootableMeshComponent::MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_GetLootableMeshComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'INTERACT_LootableBase_C_GetLootableMeshComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.TryCompleteGameEvent
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_LootableBase_C_TryCompleteGameEvent final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_TryCompleteGameEvent) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_TryCompleteGameEvent");
static_assert(sizeof(INTERACT_LootableBase_C_TryCompleteGameEvent) == 0x000020, "Wrong size on INTERACT_LootableBase_C_TryCompleteGameEvent");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, GameInstance) == 0x000000, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, CallFunc_NotEqual_NameName_ReturnValue) == 0x000019, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryCompleteGameEvent, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'INTERACT_LootableBase_C_TryCompleteGameEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.CanResumeChannelingInteraction
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_LootableBase_C_CanResumeChannelingInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_CanResumeChannelingInteraction) == 0x000001, "Wrong alignment on INTERACT_LootableBase_C_CanResumeChannelingInteraction");
static_assert(sizeof(INTERACT_LootableBase_C_CanResumeChannelingInteraction) == 0x000001, "Wrong size on INTERACT_LootableBase_C_CanResumeChannelingInteraction");
static_assert(offsetof(INTERACT_LootableBase_C_CanResumeChannelingInteraction, Result) == 0x000000, "Member 'INTERACT_LootableBase_C_CanResumeChannelingInteraction::Result' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.TryGrantBadgeItem
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_LootableBase_C_TryGrantBadgeItem final
{
public:
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGeneratedLoot_Result;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_CreateInventoryItem_Item;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Badge_C*                          K2Node_DynamicCast_AsITEM_Badge;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_TryGrantBadgeItem) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_TryGrantBadgeItem");
static_assert(sizeof(INTERACT_LootableBase_C_TryGrantBadgeItem) == 0x000030, "Wrong size on INTERACT_LootableBase_C_TryGrantBadgeItem");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_NotEqual_NameName_ReturnValue) == 0x000000, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_HasGeneratedLoot_Result) == 0x000001, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_HasGeneratedLoot_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000008, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_CreateInventoryItem_Item) == 0x000018, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_CreateInventoryItem_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, K2Node_DynamicCast_AsITEM_Badge) == 0x000020, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::K2Node_DynamicCast_AsITEM_Badge' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryGrantBadgeItem, CallFunc_AddItem_Result) == 0x000029, "Member 'INTERACT_LootableBase_C_TryGrantBadgeItem::CallFunc_AddItem_Result' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.OnLootStateChanged
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_LootableBase_C_OnLootStateChanged final
{
public:
	bool                                          OnBeginPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEmpty;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetLootableMeshComponent_MeshComponent;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLootInventoryEmpty_Result;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGeneratedLoot_Result;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInventoryDescriptionText_ResultMessage; // 0x0028(0x0018)()
};
static_assert(alignof(INTERACT_LootableBase_C_OnLootStateChanged) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_OnLootStateChanged");
static_assert(sizeof(INTERACT_LootableBase_C_OnLootStateChanged) == 0x000040, "Wrong size on INTERACT_LootableBase_C_OnLootStateChanged");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, OnBeginPlay) == 0x000000, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, IsEmpty) == 0x000001, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::IsEmpty' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_GetLootableMeshComponent_MeshComponent) == 0x000008, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_GetLootableMeshComponent_MeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000011, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_NotEqual_NameName_ReturnValue) == 0x000019, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_IsLootInventoryEmpty_Result) == 0x00001C, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_IsLootInventoryEmpty_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_HasGeneratedLoot_Result) == 0x00001E, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_HasGeneratedLoot_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001F, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_BooleanOR_ReturnValue_1) == 0x000021, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_OnLootStateChanged, CallFunc_GetInventoryDescriptionText_ResultMessage) == 0x000028, "Member 'INTERACT_LootableBase_C_OnLootStateChanged::CallFunc_GetInventoryDescriptionText_ResultMessage' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.SetLootableDisplayName
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_LootableBase_C_SetLootableDisplayName final
{
public:
	class FText                                   NewName;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(INTERACT_LootableBase_C_SetLootableDisplayName) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_SetLootableDisplayName");
static_assert(sizeof(INTERACT_LootableBase_C_SetLootableDisplayName) == 0x000018, "Wrong size on INTERACT_LootableBase_C_SetLootableDisplayName");
static_assert(offsetof(INTERACT_LootableBase_C_SetLootableDisplayName, NewName) == 0x000000, "Member 'INTERACT_LootableBase_C_SetLootableDisplayName::NewName' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_LootableBase_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_LootableBase_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_GetTargetShape");
static_assert(sizeof(INTERACT_LootableBase_C_GetTargetShape) == 0x000010, "Wrong size on INTERACT_LootableBase_C_GetTargetShape");
static_assert(offsetof(INTERACT_LootableBase_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_LootableBase_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_LootableBase_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.TryInteract
// 0x00D0 (0x00D0 - 0x0000)
struct INTERACT_LootableBase_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0058(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00A8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_TryInteract");
static_assert(sizeof(INTERACT_LootableBase_C_TryInteract) == 0x0000D0, "Wrong size on INTERACT_LootableBase_C_TryInteract");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_LootableBase_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_LootableBase_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_LootableBase_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_LootableBase_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_LootableBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000058, "Member 'INTERACT_LootableBase_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'INTERACT_LootableBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000098, "Member 'INTERACT_LootableBase_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'INTERACT_LootableBase_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'INTERACT_LootableBase_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000A8, "Member 'INTERACT_LootableBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'INTERACT_LootableBase_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_LootableBase.INTERACT_LootableBase_C.StopChanneling
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_LootableBase_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldCloseLootWindow_Result;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_LootableBase_C_StopChanneling) == 0x000008, "Wrong alignment on INTERACT_LootableBase_C_StopChanneling");
static_assert(sizeof(INTERACT_LootableBase_C_StopChanneling) == 0x000028, "Wrong size on INTERACT_LootableBase_C_StopChanneling");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'INTERACT_LootableBase_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, Result) == 0x000008, "Member 'INTERACT_LootableBase_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'INTERACT_LootableBase_C_StopChanneling::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'INTERACT_LootableBase_C_StopChanneling::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_LootableBase_C_StopChanneling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_LootableBase_C_StopChanneling, CallFunc_ShouldCloseLootWindow_Result) == 0x000021, "Member 'INTERACT_LootableBase_C_StopChanneling::CallFunc_ShouldCloseLootWindow_Result' has a wrong offset!");

}


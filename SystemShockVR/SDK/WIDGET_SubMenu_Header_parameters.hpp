#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SubMenu_Header

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SubMenu_Header.WIDGET_SubMenu_Header_C.SetPageLabel
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_SubMenu_Header_C_SetPageLabel final
{
public:
	class FText                                   PageLabelText;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0040(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubMenu_Header_C_SetPageLabel) == 0x000008, "Wrong alignment on WIDGET_SubMenu_Header_C_SetPageLabel");
static_assert(sizeof(WIDGET_SubMenu_Header_C_SetPageLabel) == 0x000060, "Wrong size on WIDGET_SubMenu_Header_C_SetPageLabel");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, PageLabelText) == 0x000000, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::PageLabelText' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, Temp_bool_Variable) == 0x000018, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, Temp_byte_Variable) == 0x000019, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, Temp_byte_Variable_1) == 0x00001A, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, CallFunc_GetEmptyText_ReturnValue) == 0x000040, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetPageLabel, K2Node_Select_Default) == 0x000058, "Member 'WIDGET_SubMenu_Header_C_SetPageLabel::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SubMenu_Header.WIDGET_SubMenu_Header_C.SetBreadcrumb
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_SubMenu_Header_C_SetBreadcrumb final
{
public:
	class FText                                   BreadcrumbText;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_2;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubMenu_Header_C_SetBreadcrumb) == 0x000008, "Wrong alignment on WIDGET_SubMenu_Header_C_SetBreadcrumb");
static_assert(sizeof(WIDGET_SubMenu_Header_C_SetBreadcrumb) == 0x000020, "Wrong size on WIDGET_SubMenu_Header_C_SetBreadcrumb");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetBreadcrumb, BreadcrumbText) == 0x000000, "Member 'WIDGET_SubMenu_Header_C_SetBreadcrumb::BreadcrumbText' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetBreadcrumb, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WIDGET_SubMenu_Header_C_SetBreadcrumb::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetBreadcrumb, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WIDGET_SubMenu_Header_C_SetBreadcrumb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetBreadcrumb, CallFunc_TextIsEmpty_ReturnValue_1) == 0x00001A, "Member 'WIDGET_SubMenu_Header_C_SetBreadcrumb::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_SetBreadcrumb, CallFunc_TextIsEmpty_ReturnValue_2) == 0x00001B, "Member 'WIDGET_SubMenu_Header_C_SetBreadcrumb::CallFunc_TextIsEmpty_ReturnValue_2' has a wrong offset!");

// Function WIDGET_SubMenu_Header.WIDGET_SubMenu_Header_C.ToggleExtraText
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SubMenu_Header_C_ToggleExtraText final
{
public:
	bool                                          EnableExtraText_0;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TextToDisplay;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubMenu_Header_C_ToggleExtraText) == 0x000008, "Wrong alignment on WIDGET_SubMenu_Header_C_ToggleExtraText");
static_assert(sizeof(WIDGET_SubMenu_Header_C_ToggleExtraText) == 0x000018, "Wrong size on WIDGET_SubMenu_Header_C_ToggleExtraText");
static_assert(offsetof(WIDGET_SubMenu_Header_C_ToggleExtraText, EnableExtraText_0) == 0x000000, "Member 'WIDGET_SubMenu_Header_C_ToggleExtraText::EnableExtraText_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SubMenu_Header_C_ToggleExtraText, TextToDisplay) == 0x000008, "Member 'WIDGET_SubMenu_Header_C_ToggleExtraText::TextToDisplay' has a wrong offset!");

// Function WIDGET_SubMenu_Header.WIDGET_SubMenu_Header_C.ClearSubMenuHeader
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SubMenu_Header_C_ClearSubMenuHeader final
{
public:
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0000(0x0018)()
};
static_assert(alignof(WIDGET_SubMenu_Header_C_ClearSubMenuHeader) == 0x000008, "Wrong alignment on WIDGET_SubMenu_Header_C_ClearSubMenuHeader");
static_assert(sizeof(WIDGET_SubMenu_Header_C_ClearSubMenuHeader) == 0x000018, "Wrong size on WIDGET_SubMenu_Header_C_ClearSubMenuHeader");
static_assert(offsetof(WIDGET_SubMenu_Header_C_ClearSubMenuHeader, CallFunc_GetEmptyText_ReturnValue) == 0x000000, "Member 'WIDGET_SubMenu_Header_C_ClearSubMenuHeader::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");

}


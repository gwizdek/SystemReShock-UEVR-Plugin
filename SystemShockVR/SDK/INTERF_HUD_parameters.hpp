#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERF_HUD

#include "Basic.hpp"

#include "ENUM_MenuNavigationInput_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function INTERF_HUD.INTERF_HUD_C.SetGameLockedForMenus
// 0x0002 (0x0002 - 0x0000)
struct INTERF_HUD_C_SetGameLockedForMenus final
{
public:
	bool                                          LockGame;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_SetGameLockedForMenus) == 0x000001, "Wrong alignment on INTERF_HUD_C_SetGameLockedForMenus");
static_assert(sizeof(INTERF_HUD_C_SetGameLockedForMenus) == 0x000002, "Wrong size on INTERF_HUD_C_SetGameLockedForMenus");
static_assert(offsetof(INTERF_HUD_C_SetGameLockedForMenus, LockGame) == 0x000000, "Member 'INTERF_HUD_C_SetGameLockedForMenus::LockGame' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_SetGameLockedForMenus, Result) == 0x000001, "Member 'INTERF_HUD_C_SetGameLockedForMenus::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.OnCharacterDied
// 0x0030 (0x0030 - 0x0000)
struct INTERF_HUD_C_OnCharacterDied final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_OnCharacterDied) == 0x000008, "Wrong alignment on INTERF_HUD_C_OnCharacterDied");
static_assert(sizeof(INTERF_HUD_C_OnCharacterDied) == 0x000030, "Wrong size on INTERF_HUD_C_OnCharacterDied");
static_assert(offsetof(INTERF_HUD_C_OnCharacterDied, DamageInstance) == 0x000000, "Member 'INTERF_HUD_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_OnCharacterDied, Result) == 0x000028, "Member 'INTERF_HUD_C_OnCharacterDied::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.OnCharacterRespawned
// 0x0001 (0x0001 - 0x0000)
struct INTERF_HUD_C_OnCharacterRespawned final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_OnCharacterRespawned) == 0x000001, "Wrong alignment on INTERF_HUD_C_OnCharacterRespawned");
static_assert(sizeof(INTERF_HUD_C_OnCharacterRespawned) == 0x000001, "Wrong size on INTERF_HUD_C_OnCharacterRespawned");
static_assert(offsetof(INTERF_HUD_C_OnCharacterRespawned, Result) == 0x000000, "Member 'INTERF_HUD_C_OnCharacterRespawned::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.OnStartedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct INTERF_HUD_C_OnStartedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_OnStartedLoadingGame) == 0x000001, "Wrong alignment on INTERF_HUD_C_OnStartedLoadingGame");
static_assert(sizeof(INTERF_HUD_C_OnStartedLoadingGame) == 0x000001, "Wrong size on INTERF_HUD_C_OnStartedLoadingGame");
static_assert(offsetof(INTERF_HUD_C_OnStartedLoadingGame, Result) == 0x000000, "Member 'INTERF_HUD_C_OnStartedLoadingGame::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.OnFinishedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct INTERF_HUD_C_OnFinishedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong alignment on INTERF_HUD_C_OnFinishedLoadingGame");
static_assert(sizeof(INTERF_HUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong size on INTERF_HUD_C_OnFinishedLoadingGame");
static_assert(offsetof(INTERF_HUD_C_OnFinishedLoadingGame, Result) == 0x000000, "Member 'INTERF_HUD_C_OnFinishedLoadingGame::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.OnPersistentMapMove
// 0x0001 (0x0001 - 0x0000)
struct INTERF_HUD_C_OnPersistentMapMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_OnPersistentMapMove) == 0x000001, "Wrong alignment on INTERF_HUD_C_OnPersistentMapMove");
static_assert(sizeof(INTERF_HUD_C_OnPersistentMapMove) == 0x000001, "Wrong size on INTERF_HUD_C_OnPersistentMapMove");
static_assert(offsetof(INTERF_HUD_C_OnPersistentMapMove, Result) == 0x000000, "Member 'INTERF_HUD_C_OnPersistentMapMove::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.GetTutorialWidget
// 0x0008 (0x0008 - 0x0000)
struct INTERF_HUD_C_GetTutorialWidget final
{
public:
	class UWIDGET_TutorialMessage_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_HUD_C_GetTutorialWidget) == 0x000008, "Wrong alignment on INTERF_HUD_C_GetTutorialWidget");
static_assert(sizeof(INTERF_HUD_C_GetTutorialWidget) == 0x000008, "Wrong size on INTERF_HUD_C_GetTutorialWidget");
static_assert(offsetof(INTERF_HUD_C_GetTutorialWidget, Result) == 0x000000, "Member 'INTERF_HUD_C_GetTutorialWidget::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.GetMainMenuWidget
// 0x0008 (0x0008 - 0x0000)
struct INTERF_HUD_C_GetMainMenuWidget final
{
public:
	class UWIDGET_MainMenu_InGame_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_HUD_C_GetMainMenuWidget) == 0x000008, "Wrong alignment on INTERF_HUD_C_GetMainMenuWidget");
static_assert(sizeof(INTERF_HUD_C_GetMainMenuWidget) == 0x000008, "Wrong size on INTERF_HUD_C_GetMainMenuWidget");
static_assert(offsetof(INTERF_HUD_C_GetMainMenuWidget, Result) == 0x000000, "Member 'INTERF_HUD_C_GetMainMenuWidget::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.GetCameraPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct INTERF_HUD_C_GetCameraPanelWidget final
{
public:
	class UCameraPanelWidget*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_HUD_C_GetCameraPanelWidget) == 0x000008, "Wrong alignment on INTERF_HUD_C_GetCameraPanelWidget");
static_assert(sizeof(INTERF_HUD_C_GetCameraPanelWidget) == 0x000008, "Wrong size on INTERF_HUD_C_GetCameraPanelWidget");
static_assert(offsetof(INTERF_HUD_C_GetCameraPanelWidget, Result) == 0x000000, "Member 'INTERF_HUD_C_GetCameraPanelWidget::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.InvokeNavManager
// 0x0003 (0x0003 - 0x0000)
struct INTERF_HUD_C_InvokeNavManager final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_InvokeNavManager) == 0x000001, "Wrong alignment on INTERF_HUD_C_InvokeNavManager");
static_assert(sizeof(INTERF_HUD_C_InvokeNavManager) == 0x000003, "Wrong size on INTERF_HUD_C_InvokeNavManager");
static_assert(offsetof(INTERF_HUD_C_InvokeNavManager, InputState) == 0x000000, "Member 'INTERF_HUD_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_InvokeNavManager, InputType) == 0x000001, "Member 'INTERF_HUD_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_InvokeNavManager, Result) == 0x000002, "Member 'INTERF_HUD_C_InvokeNavManager::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.GetSubtitleWidget
// 0x0008 (0x0008 - 0x0000)
struct INTERF_HUD_C_GetSubtitleWidget final
{
public:
	class UWIDGET_Subtitles_C*                    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_HUD_C_GetSubtitleWidget) == 0x000008, "Wrong alignment on INTERF_HUD_C_GetSubtitleWidget");
static_assert(sizeof(INTERF_HUD_C_GetSubtitleWidget) == 0x000008, "Wrong size on INTERF_HUD_C_GetSubtitleWidget");
static_assert(offsetof(INTERF_HUD_C_GetSubtitleWidget, Result) == 0x000000, "Member 'INTERF_HUD_C_GetSubtitleWidget::Result' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.GetMFDState
// 0x0002 (0x0002 - 0x0000)
struct INTERF_HUD_C_GetMFDState final
{
public:
	bool                                          IsMFDOpen;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CurrentMFDTab;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERF_HUD_C_GetMFDState) == 0x000001, "Wrong alignment on INTERF_HUD_C_GetMFDState");
static_assert(sizeof(INTERF_HUD_C_GetMFDState) == 0x000002, "Wrong size on INTERF_HUD_C_GetMFDState");
static_assert(offsetof(INTERF_HUD_C_GetMFDState, IsMFDOpen) == 0x000000, "Member 'INTERF_HUD_C_GetMFDState::IsMFDOpen' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_GetMFDState, CurrentMFDTab) == 0x000001, "Member 'INTERF_HUD_C_GetMFDState::CurrentMFDTab' has a wrong offset!");

// Function INTERF_HUD.INTERF_HUD_C.SetHoldInteractionProgress
// 0x0008 (0x0008 - 0x0000)
struct INTERF_HUD_C_SetHoldInteractionProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERF_HUD_C_SetHoldInteractionProgress) == 0x000004, "Wrong alignment on INTERF_HUD_C_SetHoldInteractionProgress");
static_assert(sizeof(INTERF_HUD_C_SetHoldInteractionProgress) == 0x000008, "Wrong size on INTERF_HUD_C_SetHoldInteractionProgress");
static_assert(offsetof(INTERF_HUD_C_SetHoldInteractionProgress, Progress) == 0x000000, "Member 'INTERF_HUD_C_SetHoldInteractionProgress::Progress' has a wrong offset!");
static_assert(offsetof(INTERF_HUD_C_SetHoldInteractionProgress, Result) == 0x000004, "Member 'INTERF_HUD_C_SetHoldInteractionProgress::Result' has a wrong offset!");

}


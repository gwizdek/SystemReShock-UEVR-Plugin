#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SplashScreen_Loading

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_SplashScreen_Loading.WIDGET_SplashScreen_Loading_C
// 0x0050 (0x02B0 - 0x0260)
class UWIDGET_SplashScreen_Loading_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IMG_Black;                                         // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_LoadingScreen_C*                WIDGET_LoadingScreen;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         EllipseDuration;                                   // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextEllipseTimestamp;                              // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EllipseCount;                                      // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoadingText;                                       // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWIDGET_PreGameScreen_C*                PreGameScreen;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartedLoadingLevel;                               // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WIDGET_SplashScreen_Loading(int32 EntryPoint);
	void Construct();
	void UpdateFadeOut(float Progress, bool* Result);
	void UpdateSplash(float Progress, bool* Result);
	void UpdateFadeIn(float Progress, bool* Result);
	void GetFadeOutDuration(float* Duration);
	void GetSplashDuration(float* Duration);
	void GetFadeInDuration(float* Duration);
	void CanSkipSplash(bool* Result);
	void CanSkipFadeIn(bool* Result);
	void SetPreGameScreen(class UWIDGET_PreGameScreen_C* PreGameScreen_0, bool* Result);
	void OnSplashVisible(bool* Result);
	void OnSplashHidden(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_SplashScreen_Loading_C">();
	}
	static class UWIDGET_SplashScreen_Loading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_SplashScreen_Loading_C>();
	}
};
static_assert(alignof(UWIDGET_SplashScreen_Loading_C) == 0x000008, "Wrong alignment on UWIDGET_SplashScreen_Loading_C");
static_assert(sizeof(UWIDGET_SplashScreen_Loading_C) == 0x0002B0, "Wrong size on UWIDGET_SplashScreen_Loading_C");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_SplashScreen_Loading_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, IMG_Black) == 0x000268, "Member 'UWIDGET_SplashScreen_Loading_C::IMG_Black' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, WIDGET_LoadingScreen) == 0x000270, "Member 'UWIDGET_SplashScreen_Loading_C::WIDGET_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, EllipseDuration) == 0x000278, "Member 'UWIDGET_SplashScreen_Loading_C::EllipseDuration' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, NextEllipseTimestamp) == 0x00027C, "Member 'UWIDGET_SplashScreen_Loading_C::NextEllipseTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, EllipseCount) == 0x000280, "Member 'UWIDGET_SplashScreen_Loading_C::EllipseCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, LoadingText) == 0x000288, "Member 'UWIDGET_SplashScreen_Loading_C::LoadingText' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, PreGameScreen) == 0x0002A0, "Member 'UWIDGET_SplashScreen_Loading_C::PreGameScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_SplashScreen_Loading_C, StartedLoadingLevel) == 0x0002A8, "Member 'UWIDGET_SplashScreen_Loading_C::StartedLoadingLevel' has a wrong offset!");

}


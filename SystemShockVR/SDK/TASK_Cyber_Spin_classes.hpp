#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Cyber_Spin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Cyber_Spin.TASK_Cyber_Spin_C
// 0x0020 (0x00C8 - 0x00A8)
class UTASK_Cyber_Spin_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          EnableCustomSpin;                                  // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomSpinRate;                                    // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitToMatchCustomSpin;                             // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_CyberEnemy_C*                     CyberPawn;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_Cyber_Spin(int32 EntryPoint);
	void ReceiveTick(class AActor* OwnerActor, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Cyber_Spin_C">();
	}
	static class UTASK_Cyber_Spin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Cyber_Spin_C>();
	}
};
static_assert(alignof(UTASK_Cyber_Spin_C) == 0x000008, "Wrong alignment on UTASK_Cyber_Spin_C");
static_assert(sizeof(UTASK_Cyber_Spin_C) == 0x0000C8, "Wrong size on UTASK_Cyber_Spin_C");
static_assert(offsetof(UTASK_Cyber_Spin_C, UberGraphFrame) == 0x0000A8, "Member 'UTASK_Cyber_Spin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTASK_Cyber_Spin_C, EnableCustomSpin) == 0x0000B0, "Member 'UTASK_Cyber_Spin_C::EnableCustomSpin' has a wrong offset!");
static_assert(offsetof(UTASK_Cyber_Spin_C, CustomSpinRate) == 0x0000B4, "Member 'UTASK_Cyber_Spin_C::CustomSpinRate' has a wrong offset!");
static_assert(offsetof(UTASK_Cyber_Spin_C, WaitToMatchCustomSpin) == 0x0000B8, "Member 'UTASK_Cyber_Spin_C::WaitToMatchCustomSpin' has a wrong offset!");
static_assert(offsetof(UTASK_Cyber_Spin_C, CyberPawn) == 0x0000C0, "Member 'UTASK_Cyber_Spin_C::CyberPawn' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Snacktron

#include "Basic.hpp"

#include "ENUM_FailSucceedIgnore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.ExecuteUbergraph_INTERACT_Snacktron
// 0x0138 (0x0138 - 0x0000)
struct INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  K2Node_ComponentBoundEvent_DamageInstance;         // 0x0010(0x0028)()
	class UObject*                                K2Node_ComponentBoundEvent_UserParams;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_ImpactData_C*                      K2Node_DynamicCast_AsOBJ_Impact_Data;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0070(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron");
static_assert(sizeof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron) == 0x000138, "Wrong size on INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, EntryPoint) == 0x000000, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000008, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_DamageInstance) == 0x000010, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_UserParams) == 0x000038, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_UserParams' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_DynamicCast_AsOBJ_Impact_Data) == 0x000040, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_DynamicCast_AsOBJ_Impact_Data' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000050, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_OtherActor) == 0x000058, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_OtherComp) == 0x000060, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000068, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_bFromSweep) == 0x00006C, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_ComponentBoundEvent_SweepResult) == 0x000070, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_DynamicCast_AsPawn) == 0x0000F8, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000104, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000108, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00011C, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_RandomFloatInRange_ReturnValue) == 0x000120, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000124, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_Less_FloatFloat_ReturnValue) == 0x000130, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron, CallFunc_BooleanOR_ReturnValue) == 0x000131, "Member 'INTERACT_Snacktron_C_ExecuteUbergraph_INTERACT_Snacktron::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'INTERACT_Snacktron_C_BndEvt__ProximityDetector_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(sizeof(INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000038, "Wrong size on INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, DamageInstance) == 0x000008, "Member 'INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, UserParams) == 0x000030, "Member 'INTERACT_Snacktron_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::UserParams' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Snacktron_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_Snacktron_C_UserConstructionScript final
{
public:
	bool                                          IsFunctional;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default_1;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_UserConstructionScript) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_UserConstructionScript");
static_assert(sizeof(INTERACT_Snacktron_C_UserConstructionScript) == 0x000050, "Wrong size on INTERACT_Snacktron_C_UserConstructionScript");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, IsFunctional) == 0x000000, "Member 'INTERACT_Snacktron_C_UserConstructionScript::IsFunctional' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000018, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_object_Variable_2) == 0x000020, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, Temp_object_Variable_3) == 0x000028, "Member 'INTERACT_Snacktron_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000030, "Member 'INTERACT_Snacktron_C_UserConstructionScript::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'INTERACT_Snacktron_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, K2Node_Select_Default) == 0x000038, "Member 'INTERACT_Snacktron_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000040, "Member 'INTERACT_Snacktron_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000048, "Member 'INTERACT_Snacktron_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.InitializeVendingMachine
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Snacktron_C_InitializeVendingMachine final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomizeBits_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_InitializeVendingMachine) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_InitializeVendingMachine");
static_assert(sizeof(INTERACT_Snacktron_C_InitializeVendingMachine) == 0x000038, "Wrong size on INTERACT_Snacktron_C_InitializeVendingMachine");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, Temp_bool_Variable) == 0x000000, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, Temp_int_Variable) == 0x000004, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_IsValidClass_ReturnValue) == 0x000028, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, K2Node_Select_Default) == 0x00002C, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeVendingMachine, CallFunc_RandomizeBits_ReturnValue) == 0x000030, "Member 'INTERACT_Snacktron_C_InitializeVendingMachine::CallFunc_RandomizeBits_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.InitializeKeypadComponents
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Snacktron_C_InitializeKeypadComponents final
{
public:
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_Snacktron_C_InitializeKeypadComponents) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_InitializeKeypadComponents");
static_assert(sizeof(INTERACT_Snacktron_C_InitializeKeypadComponents) == 0x000010, "Wrong size on INTERACT_Snacktron_C_InitializeKeypadComponents");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeKeypadComponents, K2Node_MakeArray_Array) == 0x000000, "Member 'INTERACT_Snacktron_C_InitializeKeypadComponents::K2Node_MakeArray_Array' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Snacktron_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_InitializeAttributes");
static_assert(sizeof(INTERACT_Snacktron_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_Snacktron_C_InitializeAttributes");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_Snacktron_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_Snacktron_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateSmallScreen
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Snacktron_C_UpdateSmallScreen final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateSmallScreen) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_UpdateSmallScreen");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateSmallScreen) == 0x000028, "Wrong size on INTERACT_Snacktron_C_UpdateSmallScreen");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, State) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, Temp_object_Variable) == 0x000008, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, Temp_object_Variable_1) == 0x000010, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSmallScreen, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_UpdateSmallScreen::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateStockScreen
// 0x0100 (0x0100 - 0x0000)
struct INTERACT_Snacktron_C_UpdateStockScreen final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               SnackIndices;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BitIndex;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetStockItemClassByIndex_StockClass;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetItemHotbarRenderTargetForItemClass_Result; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSetBitIndices_ReturnValue;             // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateStockScreen) == 0x000010, "Wrong alignment on INTERACT_Snacktron_C_UpdateStockScreen");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateStockScreen) == 0x000100, "Wrong size on INTERACT_Snacktron_C_UpdateStockScreen");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, State) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, SnackIndices) == 0x000010, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::SnackIndices' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, SlotIndex) == 0x000020, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::SlotIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, BitIndex) == 0x000024, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::BitIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, DynamicMaterial) == 0x000028, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, Temp_bool_Variable) == 0x000030, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, Temp_object_Variable) == 0x000038, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, Temp_object_Variable_1) == 0x000040, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, Temp_int_Array_Index_Variable) == 0x000048, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, K2Node_DynamicCast_AsGI_Single_Player) == 0x000068, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_GetStockItemClassByIndex_StockClass) == 0x000090, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_GetStockItemClassByIndex_StockClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_GetItemHotbarRenderTargetForItemClass_Result) == 0x000098, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_GetItemHotbarRenderTargetForItemClass_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_BreakVector4_X) == 0x0000A0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_BreakVector4_Y) == 0x0000A4, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_BreakVector4_Z) == 0x0000A8, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_BreakVector4_W) == 0x0000AC, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_MakeColor_ReturnValue) == 0x0000B0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_GetSetBitIndices_ReturnValue) == 0x0000D0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_GetSetBitIndices_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, K2Node_Select_Default) == 0x0000E8, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000F0, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateStockScreen, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'INTERACT_Snacktron_C_UpdateStockScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateSnacktronScreen
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Snacktron_C_UpdateSnacktronScreen final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateSnacktronScreen) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_UpdateSnacktronScreen");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateSnacktronScreen) == 0x000030, "Wrong size on INTERACT_Snacktron_C_UpdateSnacktronScreen");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, State) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, Temp_object_Variable) == 0x000008, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, Temp_object_Variable_1) == 0x000010, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, CallFunc_RandomFloat_ReturnValue) == 0x000018, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, K2Node_Select_Default) == 0x000020, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateSnacktronScreen, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000028, "Member 'INTERACT_Snacktron_C_UpdateSnacktronScreen::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.IsSnacktronFunctional
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_Snacktron_C_IsSnacktronFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSnacktronDisabled_Result;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_IsSnacktronFunctional) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_IsSnacktronFunctional");
static_assert(sizeof(INTERACT_Snacktron_C_IsSnacktronFunctional) == 0x000003, "Wrong size on INTERACT_Snacktron_C_IsSnacktronFunctional");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronFunctional, Result) == 0x000000, "Member 'INTERACT_Snacktron_C_IsSnacktronFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronFunctional, CallFunc_IsSnacktronDisabled_Result) == 0x000001, "Member 'INTERACT_Snacktron_C_IsSnacktronFunctional::CallFunc_IsSnacktronDisabled_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronFunctional, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_Snacktron_C_IsSnacktronFunctional::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.IsSnacktronDisabled
// 0x000C (0x000C - 0x0000)
struct INTERACT_Snacktron_C_IsSnacktronDisabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_IsSnacktronDisabled) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_IsSnacktronDisabled");
static_assert(sizeof(INTERACT_Snacktron_C_IsSnacktronDisabled) == 0x00000C, "Wrong size on INTERACT_Snacktron_C_IsSnacktronDisabled");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronDisabled, Result) == 0x000000, "Member 'INTERACT_Snacktron_C_IsSnacktronDisabled::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronDisabled, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_Snacktron_C_IsSnacktronDisabled::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnacktronDisabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_IsSnacktronDisabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.IsSnackInStockByIndex
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Snacktron_C_IsSnackInStockByIndex final
{
public:
	int32                                         SnackIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_IsSnackInStockByIndex) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_IsSnackInStockByIndex");
static_assert(sizeof(INTERACT_Snacktron_C_IsSnackInStockByIndex) == 0x000014, "Wrong size on INTERACT_Snacktron_C_IsSnackInStockByIndex");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnackInStockByIndex, SnackIndex) == 0x000000, "Member 'INTERACT_Snacktron_C_IsSnackInStockByIndex::SnackIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnackInStockByIndex, Result) == 0x000004, "Member 'INTERACT_Snacktron_C_IsSnackInStockByIndex::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnackInStockByIndex, CallFunc_BitShiftLeft_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_IsSnackInStockByIndex::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnackInStockByIndex, CallFunc_And_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_Snacktron_C_IsSnackInStockByIndex::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_IsSnackInStockByIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_Snacktron_C_IsSnackInStockByIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.HasAnyAvailableSnacks
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Snacktron_C_HasAnyAvailableSnacks final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_HasAnyAvailableSnacks) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_HasAnyAvailableSnacks");
static_assert(sizeof(INTERACT_Snacktron_C_HasAnyAvailableSnacks) == 0x000002, "Wrong size on INTERACT_Snacktron_C_HasAnyAvailableSnacks");
static_assert(offsetof(INTERACT_Snacktron_C_HasAnyAvailableSnacks, Result) == 0x000000, "Member 'INTERACT_Snacktron_C_HasAnyAvailableSnacks::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HasAnyAvailableSnacks, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'INTERACT_Snacktron_C_HasAnyAvailableSnacks::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.GetStockItemClassByIndex
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Snacktron_C_GetStockItemClassByIndex final
{
public:
	int32                                         StockIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 StockClass;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_GetStockItemClassByIndex) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_GetStockItemClassByIndex");
static_assert(sizeof(INTERACT_Snacktron_C_GetStockItemClassByIndex) == 0x000028, "Wrong size on INTERACT_Snacktron_C_GetStockItemClassByIndex");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, StockIndex) == 0x000000, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::StockIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, StockClass) == 0x000008, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::StockClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_IsValidClass_ReturnValue) == 0x000024, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000025, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetStockItemClassByIndex, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'INTERACT_Snacktron_C_GetStockItemClassByIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateKeypad
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Snacktron_C_UpdateKeypad final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateKeypad) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_UpdateKeypad");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateKeypad) == 0x000014, "Wrong size on INTERACT_Snacktron_C_UpdateKeypad");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateKeypad, Temp_bool_Variable) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateKeypad::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateKeypad, Temp_int_Variable) == 0x000004, "Member 'INTERACT_Snacktron_C_UpdateKeypad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateKeypad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_UpdateKeypad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateKeypad, K2Node_Select_Default) == 0x00000C, "Member 'INTERACT_Snacktron_C_UpdateKeypad::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateKeypad, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'INTERACT_Snacktron_C_UpdateKeypad::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateLightVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_UpdateLightVisibility final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateLightVisibility) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_UpdateLightVisibility");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateLightVisibility) == 0x000001, "Wrong size on INTERACT_Snacktron_C_UpdateLightVisibility");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateLightVisibility, State) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateLightVisibility::State' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateVendingMachineVisibility
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Snacktron_C_UpdateVendingMachineVisibility final
{
public:
	bool                                          VisibleState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateVendingMachineVisibility) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_UpdateVendingMachineVisibility");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateVendingMachineVisibility) == 0x000002, "Wrong size on INTERACT_Snacktron_C_UpdateVendingMachineVisibility");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateVendingMachineVisibility, VisibleState) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateVendingMachineVisibility::VisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateVendingMachineVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'INTERACT_Snacktron_C_UpdateVendingMachineVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.GetTargetShape
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Snacktron_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CursorShapeComponent;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        K2Node_DynamicCast_AsShape_Component;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_GetTargetShape");
static_assert(sizeof(INTERACT_Snacktron_C_GetTargetShape) == 0x000048, "Wrong size on INTERACT_Snacktron_C_GetTargetShape");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Snacktron_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Snacktron_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CursorShapeComponent) == 0x000010, "Member 'INTERACT_Snacktron_C_GetTargetShape::CursorShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_ShouldFocusOnInteract_Result) == 0x000028, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, K2Node_DynamicCast_AsShape_Component) == 0x000030, "Member 'INTERACT_Snacktron_C_GetTargetShape::K2Node_DynamicCast_AsShape_Component' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_Snacktron_C_GetTargetShape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetTargetShape, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'INTERACT_Snacktron_C_GetTargetShape::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryInteract
// 0x0298 (0x0298 - 0x0000)
struct INTERACT_Snacktron_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0048(0x0020)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0078(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyAvailableSnacks_Result;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00A0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSnacktronFunctional_Result;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_FailSucceedIgnore                        CallFunc_HandleKeypadNumEntry_DispensedSnack;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00F8(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple_1;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginFocusInteraction_Result;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0160(0x0020)(HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0188(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryFindAndAcceptCoin_Success;             // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x01B0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x01D0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x01F0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_8;        // 0x0210(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_9;        // 0x0230(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_10;       // 0x0250(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_11;       // 0x0270(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryInteract");
static_assert(sizeof(INTERACT_Snacktron_C_TryInteract) == 0x000298, "Wrong size on INTERACT_Snacktron_C_TryInteract");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Snacktron_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Snacktron_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Snacktron_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Snacktron_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, Character) == 0x000038, "Member 'INTERACT_Snacktron_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000048, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x000068, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000078, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_HasAnyAvailableSnacks_Result) == 0x000098, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_HasAnyAvailableSnacks_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000A0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_IsSnacktronFunctional_Result) == 0x0000C0, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_IsSnacktronFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_HandleKeypadNumEntry_DispensedSnack) == 0x0000D0, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_HandleKeypadNumEntry_DispensedSnack' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x0000D1, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000D8, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000E8, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000F8, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple_1) == 0x000118, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_TryBeginFocusInteraction_Result) == 0x000121, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_TryBeginFocusInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_GetController_ReturnValue) == 0x000128, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_CreateDelegate_OutputDelegate) == 0x000130, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_ShouldFocusOnInteract_Result) == 0x000140, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000148, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_CreateDelegate_OutputDelegate_1) == 0x000150, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000160, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000180, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000188, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0001A8, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_TryFindAndAcceptCoin_Success) == 0x0001A9, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_TryFindAndAcceptCoin_Success' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x0001B0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x0001D0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x0001F0, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_8) == 0x000210, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_8' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_9) == 0x000230, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_9' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_10) == 0x000250, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_10' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_11) == 0x000270, "Member 'INTERACT_Snacktron_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_11' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000290, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000291, "Member 'INTERACT_Snacktron_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.UpdateMeshEmissiveStrength
// 0x001C (0x001C - 0x0000)
struct INTERACT_Snacktron_C_UpdateMeshEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_UpdateMeshEmissiveStrength");
static_assert(sizeof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength) == 0x00001C, "Wrong size on INTERACT_Snacktron_C_UpdateMeshEmissiveStrength");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, Temp_bool_Variable) == 0x000004, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, Temp_float_Variable) == 0x000008, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, K2Node_Select_Default) == 0x000010, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000014, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_UpdateMeshEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'INTERACT_Snacktron_C_UpdateMeshEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.ClearKeycode
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_ClearKeycode final
{
public:
	bool                                          ClearHighlight;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_ClearKeycode) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_ClearKeycode");
static_assert(sizeof(INTERACT_Snacktron_C_ClearKeycode) == 0x000001, "Wrong size on INTERACT_Snacktron_C_ClearKeycode");
static_assert(offsetof(INTERACT_Snacktron_C_ClearKeycode, ClearHighlight) == 0x000000, "Member 'INTERACT_Snacktron_C_ClearKeycode::ClearHighlight' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.GetKeyFromPrimitive
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Snacktron_C_GetKeyFromPrimitive final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Key;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_8;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_9;    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_GetKeyFromPrimitive) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_GetKeyFromPrimitive");
static_assert(sizeof(INTERACT_Snacktron_C_GetKeyFromPrimitive) == 0x000018, "Wrong size on INTERACT_Snacktron_C_GetKeyFromPrimitive");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CursorPrimitive) == 0x000000, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, Key) == 0x000008, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::Key' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00000D, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00000E, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00000F, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000010, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000011, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x000012, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x000013, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_8) == 0x000014, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetKeyFromPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue_9) == 0x000015, "Member 'INTERACT_Snacktron_C_GetKeyFromPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue_9' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.HandleKeypadClearEntry
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Snacktron_C_HandleKeypadClearEntry final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_HandleKeypadClearEntry) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_HandleKeypadClearEntry");
static_assert(sizeof(INTERACT_Snacktron_C_HandleKeypadClearEntry) == 0x000028, "Wrong size on INTERACT_Snacktron_C_HandleKeypadClearEntry");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadClearEntry, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_Snacktron_C_HandleKeypadClearEntry::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadClearEntry, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_HandleKeypadClearEntry::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadClearEntry, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_Snacktron_C_HandleKeypadClearEntry::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadClearEntry, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Snacktron_C_HandleKeypadClearEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.HandleKeypadNumEntry
// 0x0170 (0x0170 - 0x0000)
struct INTERACT_Snacktron_C_HandleKeypadNumEntry final
{
public:
	class UPrimitiveComponent*                    KeyPrimitive;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_FailSucceedIgnore                        DispensedSnack;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PickupClass;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SnackClass;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SnackIndex;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewKey;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetKeyFromPrimitive_Key;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_3;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetStockItemClassByIndex_StockClass;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSnackInStockByIndex_Result;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	class APICKUP_Base_C*                         CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPICKUP_Base;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_HandleKeypadNumEntry) == 0x000010, "Wrong alignment on INTERACT_Snacktron_C_HandleKeypadNumEntry");
static_assert(sizeof(INTERACT_Snacktron_C_HandleKeypadNumEntry) == 0x000170, "Wrong size on INTERACT_Snacktron_C_HandleKeypadNumEntry");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, KeyPrimitive) == 0x000000, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::KeyPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, DispensedSnack) == 0x000008, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::DispensedSnack' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, PickupClass) == 0x000010, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::PickupClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, SnackClass) == 0x000018, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::SnackClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, SnackIndex) == 0x000020, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::SnackIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, NewKey) == 0x000024, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::NewKey' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetKeyFromPrimitive_Key) == 0x000028, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetKeyFromPrimitive_Key' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetGameInstance_ReturnValue_1) == 0x000038, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000050, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000088, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000090, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000A0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x0000A8, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000B4, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000C0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_AsGI_Single_Player_3) == 0x0000C8, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_AsGI_Single_Player_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000D4, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_BitShiftLeft_ReturnValue) == 0x0000E0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetStockItemClassByIndex_StockClass) == 0x0000E8, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetStockItemClassByIndex_StockClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_Not_Int_ReturnValue) == 0x0000F0, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_Not_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_IsSnackInStockByIndex_Result) == 0x0000F4, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_IsSnackInStockByIndex_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_And_IntInt_ReturnValue) == 0x0000F8, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0000FC, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GetActorLevel_ReturnValue) == 0x000108, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000110, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000140, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000148, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_ClassDynamicCast_AsPICKUP_Base) == 0x000150, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_ClassDynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, K2Node_ClassDynamicCast_bSuccess) == 0x000158, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_IsValidClass_ReturnValue) == 0x000159, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_Multiply_IntInt_ReturnValue) == 0x00015C, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000164, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_HandleKeypadNumEntry, CallFunc_Subtract_IntInt_ReturnValue) == 0x000168, "Member 'INTERACT_Snacktron_C_HandleKeypadNumEntry::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryFindAndAcceptCoin
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Snacktron_C_TryFindAndAcceptCoin final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CoinItem;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Coin_C*                           K2Node_DynamicCast_AsITEM_Coin;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryAcceptCoin_Success;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_TryFindAndAcceptCoin) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryFindAndAcceptCoin");
static_assert(sizeof(INTERACT_Snacktron_C_TryFindAndAcceptCoin) == 0x000038, "Wrong size on INTERACT_Snacktron_C_TryFindAndAcceptCoin");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, Character) == 0x000000, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, Success) == 0x000008, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::Success' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, CoinItem) == 0x000010, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::CoinItem' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, CallFunc_GetInventoryComponent_Inventory) == 0x000018, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, K2Node_DynamicCast_AsITEM_Coin) == 0x000020, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::K2Node_DynamicCast_AsITEM_Coin' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, CallFunc_TryAcceptCoin_Success) == 0x00002A, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::CallFunc_TryAcceptCoin_Success' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryFindAndAcceptCoin, CallFunc_FindItem_FoundItem) == 0x000030, "Member 'INTERACT_Snacktron_C_TryFindAndAcceptCoin::CallFunc_FindItem_FoundItem' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryAcceptCoin
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_Snacktron_C_TryAcceptCoin final
{
public:
	class UITEM_Coin_C*                           CoinItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryAcceptCoin) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryAcceptCoin");
static_assert(sizeof(INTERACT_Snacktron_C_TryAcceptCoin) == 0x000068, "Wrong size on INTERACT_Snacktron_C_TryAcceptCoin");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CoinItem) == 0x000000, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CoinItem' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, Success) == 0x000008, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::Success' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_RandomFloatInRange_ReturnValue) == 0x00000C, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_GetBag_Result) == 0x000050, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_RemoveItemCount_RemovedItem) == 0x000058, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryAcceptCoin, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'INTERACT_Snacktron_C_TryAcceptCoin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryDamageScreen
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_Snacktron_C_TryDamageScreen final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExplosiveDamage;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryDamageScreen) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryDamageScreen");
static_assert(sizeof(INTERACT_Snacktron_C_TryDamageScreen) == 0x000050, "Wrong size on INTERACT_Snacktron_C_TryDamageScreen");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, DamageInstance) == 0x000000, "Member 'INTERACT_Snacktron_C_TryDamageScreen::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, ImpactData) == 0x000028, "Member 'INTERACT_Snacktron_C_TryDamageScreen::ImpactData' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, HitComponent) == 0x000030, "Member 'INTERACT_Snacktron_C_TryDamageScreen::HitComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, IsExplosiveDamage) == 0x000038, "Member 'INTERACT_Snacktron_C_TryDamageScreen::IsExplosiveDamage' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_Round_ReturnValue) == 0x000040, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_IsValid_ReturnValue) == 0x000045, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000046, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000047, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000049, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_BooleanOR_ReturnValue_1) == 0x00004A, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00004B, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDamageScreen, CallFunc_BooleanOR_ReturnValue_2) == 0x00004C, "Member 'INTERACT_Snacktron_C_TryDamageScreen::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnHighlightFinished
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnHighlightFinished final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnHighlightFinished) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnHighlightFinished");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnHighlightFinished) == 0x000003, "Wrong size on INTERACT_Snacktron_C_EVENT_OnHighlightFinished");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnHighlightFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnHighlightFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnHighlightFinished, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'INTERACT_Snacktron_C_EVENT_OnHighlightFinished::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnHighlightFinished, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'INTERACT_Snacktron_C_EVENT_OnHighlightFinished::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryReceiveItem
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Snacktron_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Coin_C*                           K2Node_DynamicCast_AsITEM_Coin;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryAcceptCoin_Success;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryReceiveItem) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryReceiveItem");
static_assert(sizeof(INTERACT_Snacktron_C_TryReceiveItem) == 0x000020, "Wrong size on INTERACT_Snacktron_C_TryReceiveItem");
static_assert(offsetof(INTERACT_Snacktron_C_TryReceiveItem, Item) == 0x000000, "Member 'INTERACT_Snacktron_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryReceiveItem, Result) == 0x000008, "Member 'INTERACT_Snacktron_C_TryReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryReceiveItem, K2Node_DynamicCast_AsITEM_Coin) == 0x000010, "Member 'INTERACT_Snacktron_C_TryReceiveItem::K2Node_DynamicCast_AsITEM_Coin' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryReceiveItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Snacktron_C_TryReceiveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryReceiveItem, CallFunc_TryAcceptCoin_Success) == 0x000019, "Member 'INTERACT_Snacktron_C_TryReceiveItem::CallFunc_TryAcceptCoin_Success' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnDispenseSnack
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnDispenseSnack final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_GetDispenseSoundCueForPickup_SoundCue;    // 0x0008(0x0028)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnDispenseSnack");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack) == 0x000070, "Wrong size on INTERACT_Snacktron_C_EVENT_OnDispenseSnack");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_GetDispenseSoundCueForPickup_SoundCue) == 0x000008, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_GetDispenseSoundCueForPickup_SoundCue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDispenseSnack, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'INTERACT_Snacktron_C_EVENT_OnDispenseSnack::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnPlayGreetingVoiceOver
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver final
{
public:
	bool                                          CallFunc_TryPlayVoiceOverAudio_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver) == 0x000001, "Wrong size on INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver, CallFunc_TryPlayVoiceOverAudio_Result) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnPlayGreetingVoiceOver::CallFunc_TryPlayVoiceOverAudio_Result' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnPlayGoodbyeVoiceOver
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver final
{
public:
	bool                                          CallFunc_TryPlayVoiceOverAudio_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver) == 0x000001, "Wrong size on INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver, CallFunc_TryPlayVoiceOverAudio_Result) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnPlayGoodbyeVoiceOver::CallFunc_TryPlayVoiceOverAudio_Result' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnPlaySelectionVoiceOver
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver final
{
public:
	bool                                          CallFunc_TryPlayVoiceOverAudio_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver) == 0x000001, "Wrong size on INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver, CallFunc_TryPlayVoiceOverAudio_Result) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnPlaySelectionVoiceOver::CallFunc_TryPlayVoiceOverAudio_Result' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnPlayNoFundsVoiceOver
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver final
{
public:
	bool                                          CallFunc_TryPlayVoiceOverAudio_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver) == 0x000001, "Wrong size on INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver, CallFunc_TryPlayVoiceOverAudio_Result) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnPlayNoFundsVoiceOver::CallFunc_TryPlayVoiceOverAudio_Result' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.GetDispenseSoundCueForPickup
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_Snacktron_C_GetDispenseSoundCueForPickup final
{
public:
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         StockIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ItemClass;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default;                             // 0x0050(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_GetDispenseSoundCueForPickup");
static_assert(sizeof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup) == 0x000088, "Wrong size on INTERACT_Snacktron_C_GetDispenseSoundCueForPickup");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, PickupActor) == 0x000000, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::PickupActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, SoundCue) == 0x000008, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::SoundCue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, StockIndex) == 0x000030, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::StockIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, ItemClass) == 0x000038, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::ItemClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, Temp_int_Variable) == 0x000040, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, CallFunc_Percent_IntInt_ReturnValue) == 0x000044, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, K2Node_Select_Default) == 0x000050, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000078, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, CallFunc_Array_Find_ReturnValue) == 0x00007C, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetDispenseSoundCueForPickup, CallFunc_GetItemClass_Result) == 0x000080, "Member 'INTERACT_Snacktron_C_GetDispenseSoundCueForPickup::CallFunc_GetItemClass_Result' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.GetFocusWorldTransform
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Snacktron_C_GetFocusWorldTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_GetFocusWorldTransform) == 0x000010, "Wrong alignment on INTERACT_Snacktron_C_GetFocusWorldTransform");
static_assert(sizeof(INTERACT_Snacktron_C_GetFocusWorldTransform) == 0x000060, "Wrong size on INTERACT_Snacktron_C_GetFocusWorldTransform");
static_assert(offsetof(INTERACT_Snacktron_C_GetFocusWorldTransform, Transform) == 0x000000, "Member 'INTERACT_Snacktron_C_GetFocusWorldTransform::Transform' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_GetFocusWorldTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'INTERACT_Snacktron_C_GetFocusWorldTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.CycleFocusedPrimitiveComponent
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vertical;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Previous;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CycleIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CycleAdjustment;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CycleDirection;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetBoxIndex;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  TargetBoxes;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntOnce_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent");
static_assert(sizeof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent) == 0x0000A0, "Wrong size on INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CursorPrimitive) == 0x000000, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Vertical) == 0x000008, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Vertical' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Previous) == 0x000009, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Previous' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CycleIndex) == 0x00000C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CycleIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CycleAdjustment) == 0x000010, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CycleAdjustment' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CycleDirection) == 0x000014, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CycleDirection' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, TargetBoxIndex) == 0x000018, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::TargetBoxIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, TargetBoxes) == 0x000020, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::TargetBoxes' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable) == 0x000030, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_int_Variable) == 0x000034, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_1) == 0x000038, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable_1) == 0x00003C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable_2) == 0x00003D, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_2) == 0x000040, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_bool_Variable_3) == 0x000044, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_3) == 0x000048, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, Temp_int_Variable_4) == 0x00004C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000052, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanOR_ReturnValue) == 0x000054, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x000055, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x000056, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000057, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000058, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x000059, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanAND_ReturnValue_3) == 0x00005A, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanOR_ReturnValue_2) == 0x00005B, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default) == 0x000060, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default_1) == 0x000068, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x00006D, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Get_Item) == 0x000078, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_BooleanXOR_ReturnValue) == 0x000080, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_WrapIntOnce_ReturnValue) == 0x000088, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_WrapIntOnce_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default_2) == 0x00008C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000090, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, K2Node_Select_Default_3) == 0x000094, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Multiply_IntInt_ReturnValue) == 0x000098, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent, CallFunc_Array_Find_ReturnValue) == 0x00009C, "Member 'INTERACT_Snacktron_C_CycleFocusedPrimitiveComponent::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryDispenseSpecialSnack
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Snacktron_C_TryDispenseSpecialSnack final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteBinaryAchievement_Result;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Explosive_Base_C*               K2Node_DynamicCast_AsPICKUP_Explosive_Base;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryDispenseSpecialSnack) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryDispenseSpecialSnack");
static_assert(sizeof(INTERACT_Snacktron_C_TryDispenseSpecialSnack) == 0x000038, "Wrong size on INTERACT_Snacktron_C_TryDispenseSpecialSnack");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, CallFunc_TryCompleteBinaryAchievement_Result) == 0x000011, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::CallFunc_TryCompleteBinaryAchievement_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, CallFunc_NotEqual_NameName_ReturnValue) == 0x000012, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, CallFunc_GetItemClass_Result) == 0x000018, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::CallFunc_GetItemClass_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, K2Node_DynamicCast_AsPICKUP_Explosive_Base) == 0x000028, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::K2Node_DynamicCast_AsPICKUP_Explosive_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryDispenseSpecialSnack, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_Snacktron_C_TryDispenseSpecialSnack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.CanReceiveItem
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Snacktron_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Coin_C*                           K2Node_DynamicCast_AsITEM_Coin;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_CanReceiveItem) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_CanReceiveItem");
static_assert(sizeof(INTERACT_Snacktron_C_CanReceiveItem) == 0x000020, "Wrong size on INTERACT_Snacktron_C_CanReceiveItem");
static_assert(offsetof(INTERACT_Snacktron_C_CanReceiveItem, Item) == 0x000000, "Member 'INTERACT_Snacktron_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CanReceiveItem, Result) == 0x000008, "Member 'INTERACT_Snacktron_C_CanReceiveItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CanReceiveItem, K2Node_DynamicCast_AsITEM_Coin) == 0x000010, "Member 'INTERACT_Snacktron_C_CanReceiveItem::K2Node_DynamicCast_AsITEM_Coin' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_CanReceiveItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Snacktron_C_CanReceiveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.EVENT_OnDisableAttribChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged) == 0x000010, "Wrong size on INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Snacktron_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryToggleSpecialTrigger
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_Snacktron_C_TryToggleSpecialTrigger final
{
public:
	class UClass*                                 PurchasedItemClass;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0018(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryToggleSpecialTrigger) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryToggleSpecialTrigger");
static_assert(sizeof(INTERACT_Snacktron_C_TryToggleSpecialTrigger) == 0x000040, "Wrong size on INTERACT_Snacktron_C_TryToggleSpecialTrigger");
static_assert(offsetof(INTERACT_Snacktron_C_TryToggleSpecialTrigger, PurchasedItemClass) == 0x000000, "Member 'INTERACT_Snacktron_C_TryToggleSpecialTrigger::PurchasedItemClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryToggleSpecialTrigger, CallFunc_TryInteract_self_CastInput) == 0x000008, "Member 'INTERACT_Snacktron_C_TryToggleSpecialTrigger::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryToggleSpecialTrigger, CallFunc_TryInteract_InteractResults) == 0x000018, "Member 'INTERACT_Snacktron_C_TryToggleSpecialTrigger::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryToggleSpecialTrigger, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'INTERACT_Snacktron_C_TryToggleSpecialTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryToggleSpecialTrigger, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000039, "Member 'INTERACT_Snacktron_C_TryToggleSpecialTrigger::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.TryPlayVoiceOverAudio
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_Snacktron_C_TryPlayVoiceOverAudio final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSnacktronFunctional_Result;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSoundPlaying_ReturnValue;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio) == 0x000008, "Wrong alignment on INTERACT_Snacktron_C_TryPlayVoiceOverAudio");
static_assert(sizeof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio) == 0x000050, "Wrong size on INTERACT_Snacktron_C_TryPlayVoiceOverAudio");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, SoundCue) == 0x000000, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::SoundCue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, Result) == 0x000028, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, CallFunc_IsSnacktronFunctional_Result) == 0x000029, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::CallFunc_IsSnacktronFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00002A, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, CallFunc_IsSoundPlaying_ReturnValue) == 0x00002B, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::CallFunc_IsSoundPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_TryPlayVoiceOverAudio, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_Snacktron_C_TryPlayVoiceOverAudio::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.SetInteractPowered
// 0x000C (0x000C - 0x0000)
struct INTERACT_Snacktron_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Snacktron_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_Snacktron_C_SetInteractPowered");
static_assert(sizeof(INTERACT_Snacktron_C_SetInteractPowered) == 0x00000C, "Wrong size on INTERACT_Snacktron_C_SetInteractPowered");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_Snacktron_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_Snacktron_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'INTERACT_Snacktron_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'INTERACT_Snacktron_C_SetInteractPowered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_Snacktron_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Snacktron_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Snacktron_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Snacktron.INTERACT_Snacktron_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Snacktron_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Snacktron_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_Snacktron_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_Snacktron_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_Snacktron_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_Snacktron_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_Snacktron_C_CanModifyInteractPower::Result' has a wrong offset!");

}


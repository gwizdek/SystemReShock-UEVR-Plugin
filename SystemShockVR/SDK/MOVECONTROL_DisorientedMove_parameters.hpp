#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MOVECONTROL_DisorientedMove

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_MoveControlParams_structs.hpp"


namespace SDK::Params
{

// Function MOVECONTROL_DisorientedMove.MOVECONTROL_DisorientedMove_C.InitializeMoveControl
// 0x0060 (0x0060 - 0x0000)
struct MOVECONTROL_DisorientedMove_C_InitializeMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              InitialControlParams;                              // 0x000C(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeMoveControl_Result;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_DisorientedMove_C_InitializeMoveControl");
static_assert(sizeof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl) == 0x000060, "Wrong size on MOVECONTROL_DisorientedMove_C_InitializeMoveControl");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Player_0) == 0x000000, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Player_0' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, GameTime) == 0x000008, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::GameTime' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, InitialControlParams) == 0x00000C, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::InitialControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Result) == 0x000034, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_bool_Variable) == 0x000035, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, CallFunc_InitializeMoveControl_Result) == 0x000036, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::CallFunc_InitializeMoveControl_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_float_Variable) == 0x000038, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_float_Variable_1) == 0x00003C, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_bool_Variable_1) == 0x000040, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_float_Variable_2) == 0x000044, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, Temp_float_Variable_3) == 0x000048, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, CallFunc_RandomBool_ReturnValue) == 0x00004C, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, CallFunc_RandomBool_ReturnValue_1) == 0x00004D, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, K2Node_Select_Default) == 0x000050, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, K2Node_Select_Default_1) == 0x000054, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_InitializeMoveControl, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'MOVECONTROL_DisorientedMove_C_InitializeMoveControl::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function MOVECONTROL_DisorientedMove.MOVECONTROL_DisorientedMove_C.UpdateMoveControl
// 0x0168 (0x0168 - 0x0000)
struct MOVECONTROL_DisorientedMove_C_UpdateMoveControl final
{
public:
	struct FVector2D                              MoveInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LookInput;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              ControlParams;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ActionInputValues;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         MoveInputScale;                                    // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExpire;                                      // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveMagnitude;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VerticalDirectionChange;                           // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HorizontalDirectionChange;                         // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VerticalSwayRatio;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HorizontalSwayRatio;                               // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue_1;         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_DisorientedMove_C_UpdateMoveControl");
static_assert(sizeof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl) == 0x000168, "Wrong size on MOVECONTROL_DisorientedMove_C_UpdateMoveControl");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, MoveInput) == 0x000000, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::MoveInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, LookInput) == 0x000008, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::LookInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, ControlParams) == 0x000010, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::ControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, ActionInputValues) == 0x000038, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::ActionInputValues' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, MoveInputScale) == 0x000048, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::MoveInputScale' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, Delta_Time) == 0x00004C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::Delta_Time' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, ShouldExpire) == 0x000050, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::ShouldExpire' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, MoveMagnitude) == 0x000054, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::MoveMagnitude' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, VerticalDirectionChange) == 0x000058, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::VerticalDirectionChange' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, HorizontalDirectionChange) == 0x000059, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::HorizontalDirectionChange' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, VerticalSwayRatio) == 0x00005C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::VerticalSwayRatio' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, HorizontalSwayRatio) == 0x000060, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::HorizontalSwayRatio' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, ElapsedTime) == 0x000064, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::ElapsedTime' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, Temp_bool_Variable) == 0x000068, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, Temp_bool_Variable_1) == 0x000069, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00006C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X) == 0x000070, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y_1) == 0x00007C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000084, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000088, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakeVector2D_ReturnValue) == 0x00008C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000094, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakeVector2D_ReturnValue_1) == 0x00009C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000A4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Normal2D_ReturnValue) == 0x0000AC, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000B4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000BC, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000C4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0000C8, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X_2) == 0x0000D4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y_2) == 0x0000D8, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, K2Node_Select_Default) == 0x0000DC, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000E0, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BooleanOR_ReturnValue) == 0x0000E4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X_3) == 0x0000E8, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y_3) == 0x0000EC, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, K2Node_Select_Default_1) == 0x0000F0, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000F4, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000F8, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X_4) == 0x000100, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y_4) == 0x000104, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000108, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000109, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00010A, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x00010B, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00010C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakeVector2D_ReturnValue_3) == 0x000110, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Add_FloatFloat_ReturnValue) == 0x000118, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x00011C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakePulsatingValue_ReturnValue) == 0x000124, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000128, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_MakePulsatingValue_ReturnValue_1) == 0x00012C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_MakePulsatingValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000130, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000134, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000138, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000140, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000144, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000148, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000150, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_DisorientedMove_C_UpdateMoveControl, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x000158, "Member 'MOVECONTROL_DisorientedMove_C_UpdateMoveControl::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Maneuver_NearbyLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TASK_Maneuver_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_PreferredCombatStyle_structs.hpp"
#include "LevelVoxelization_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Maneuver_NearbyLocation.TASK_Maneuver_NearbyLocation_C
// 0x0038 (0x0100 - 0x00C8)
class UTASK_Maneuver_NearbyLocation_C final : public UTASK_Maneuver_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TASK_Maneuver_NearbyLocation_C;     // 0x00C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         MinDistance;                                       // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDistance;                                       // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepTargetVisible;                                 // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TryStayInIdealAttackRange;                         // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x00DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     SkillTarget;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           TargetCharacter;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveMinimalDistance;                               // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TASK_Maneuver_NearbyLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Maneuver_NearbyLocation_C">();
	}
	static class UTASK_Maneuver_NearbyLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Maneuver_NearbyLocation_C>();
	}
};
static_assert(alignof(UTASK_Maneuver_NearbyLocation_C) == 0x000008, "Wrong alignment on UTASK_Maneuver_NearbyLocation_C");
static_assert(sizeof(UTASK_Maneuver_NearbyLocation_C) == 0x000100, "Wrong size on UTASK_Maneuver_NearbyLocation_C");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, UberGraphFrame_TASK_Maneuver_NearbyLocation_C) == 0x0000C8, "Member 'UTASK_Maneuver_NearbyLocation_C::UberGraphFrame_TASK_Maneuver_NearbyLocation_C' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, MinDistance) == 0x0000D0, "Member 'UTASK_Maneuver_NearbyLocation_C::MinDistance' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, MaxDistance) == 0x0000D4, "Member 'UTASK_Maneuver_NearbyLocation_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, KeepTargetVisible) == 0x0000D8, "Member 'UTASK_Maneuver_NearbyLocation_C::KeepTargetVisible' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, TryStayInIdealAttackRange) == 0x0000D9, "Member 'UTASK_Maneuver_NearbyLocation_C::TryStayInIdealAttackRange' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, TargetLocation) == 0x0000DC, "Member 'UTASK_Maneuver_NearbyLocation_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, SkillTarget) == 0x0000E8, "Member 'UTASK_Maneuver_NearbyLocation_C::SkillTarget' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, TargetCharacter) == 0x0000F0, "Member 'UTASK_Maneuver_NearbyLocation_C::TargetCharacter' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_NearbyLocation_C, MoveMinimalDistance) == 0x0000F8, "Member 'UTASK_Maneuver_NearbyLocation_C::MoveMinimalDistance' has a wrong offset!");

}


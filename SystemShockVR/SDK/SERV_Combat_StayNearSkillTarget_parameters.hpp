#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SERV_Combat_StayNearSkillTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_MoveSpeed_structs.hpp"
#include "ENUM_SpeedType_structs.hpp"


namespace SDK::Params
{

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ExecuteUbergraph_SERV_Combat_StayNearSkillTarget
// 0x0050 (0x0050 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget) == 0x000050, "Wrong size on SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, EntryPoint) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_OwnerController_2) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_OwnerController_1) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_ControlledPawn_1) == 0x000028, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000030, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_OwnerController) == 0x000040, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget, K2Node_Event_ControlledPawn) == 0x000048, "Member 'SERV_Combat_StayNearSkillTarget_C_ExecuteUbergraph_SERV_Combat_StayNearSkillTarget::K2Node_Event_ControlledPawn' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI) == 0x000010, "Wrong size on SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetOrCreateMoveDirectionTarget
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget final
{
public:
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget, Target) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget::Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateMoveDirectionTarget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetOrCreateManeuverTarget
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget final
{
public:
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget, Target) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget::Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetOrCreateManeuverTarget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.IsMoving
// 0x000C (0x000C - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_IsMoving final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MoveSpeed                                CallFunc_GetTargetMoveSpeed_MoveSpeed;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_SpeedType                                CallFunc_GetTargetMoveSpeed_ChangeRate;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_IsMoving) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_IsMoving");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_IsMoving) == 0x00000C, "Wrong size on SERV_Combat_StayNearSkillTarget_C_IsMoving");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, Result) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_GetTargetMoveSpeed_MoveSpeed) == 0x000001, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_GetTargetMoveSpeed_MoveSpeed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_GetTargetMoveSpeed_ChangeRate) == 0x000002, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_GetTargetMoveSpeed_ChangeRate' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_GetUnscaledMoveSpeedCurrent_MoveSpeedCurrent' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsMoving, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'SERV_Combat_StayNearSkillTarget_C_IsMoving::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetSkillTargetAgentLocation
// 0x0048 (0x0048 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     SkillTarget;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation) == 0x000048, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, TargetLocation) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, SkillTarget) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::SkillTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_GetTargetCharacter_Character) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_GetShockAgentLocation_Location) == 0x000024, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_GetTargetCharacter_Character_1) == 0x000030, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_GetTarget_Target) == 0x000038, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSkillTargetAgentLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMovingCloser
// 0x001C (0x001C - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser final
{
public:
	float                                         DistanceToSkillTarget;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWalkDistance_Distance;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed_1; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetJogDistance_Distance;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed_2; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser) == 0x00001C, "Wrong size on SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, DistanceToSkillTarget) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::DistanceToSkillTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_SetMoveDirection_RotationSpeed_Changed) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_SetMoveDirection_RotationSpeed_Changed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_GetWalkDistance_Distance) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_GetWalkDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_SetMoveDirection_RotationSpeed_Changed_1) == 0x00000C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_SetMoveDirection_RotationSpeed_Changed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000D, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_GetJogDistance_Distance) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_GetJogDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser, CallFunc_SetMoveDirection_RotationSpeed_Changed_2) == 0x000019, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingCloser::CallFunc_SetMoveDirection_RotationSpeed_Changed_2' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMovingAway
// 0x0028 (0x0028 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway final
{
public:
	float                                         DistanceToNavTarget;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed;   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed_1; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed_2; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetJogDistance_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetOrCreateManeuverTarget_Target;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWalkDistance_Distance;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToNavTarget_Distance;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway) == 0x000028, "Wrong size on SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, DistanceToNavTarget) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::DistanceToNavTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_SetMoveDirection_RotationSpeed_Changed) == 0x000005, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_SetMoveDirection_RotationSpeed_Changed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_SetMoveDirection_RotationSpeed_Changed_1) == 0x000006, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_SetMoveDirection_RotationSpeed_Changed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_SetMoveDirection_RotationSpeed_Changed_2) == 0x000007, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_SetMoveDirection_RotationSpeed_Changed_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_GetJogDistance_Distance) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_GetJogDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_GetOrCreateManeuverTarget_Target) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_GetOrCreateManeuverTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_GetWalkDistance_Distance) == 0x00001C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_GetWalkDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_GetDistanceToNavTarget_Distance) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_GetDistanceToNavTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000024, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMovingAway::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateStopping
// 0x0044 (0x0044 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_UpdateStopping final
{
public:
	float                                         PerfectDistanceOffset;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving_Result;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistance_Distance;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMoveDirection_RotationSpeed_Changed;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistanceBufferRange_BufferRange_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPerfectDistance_Distance_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance_1;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPawnTouchingDistance_Distance;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToSkillTarget_Distance_2;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_UpdateStopping");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping) == 0x000044, "Wrong size on SERV_Combat_StayNearSkillTarget_C_UpdateStopping");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, PerfectDistanceOffset) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::PerfectDistanceOffset' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_IsMoving_Result) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_IsMoving_Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetPerfectDistanceBufferRange_BufferRange) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetPerfectDistanceBufferRange_BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetPerfectDistance_Distance) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetPerfectDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetDistanceToSkillTarget_Distance) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetDistanceToSkillTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_SetMoveDirection_RotationSpeed_Changed) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_SetMoveDirection_RotationSpeed_Changed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetPerfectDistanceBufferRange_BufferRange_1) == 0x000024, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetPerfectDistanceBufferRange_BufferRange_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000029, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetPerfectDistance_Distance_1) == 0x00002C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetPerfectDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetDistanceToSkillTarget_Distance_1) == 0x000030, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetDistanceToSkillTarget_Distance_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetPawnTouchingDistance_Distance) == 0x000038, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetPawnTouchingDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_GetDistanceToSkillTarget_Distance_2) == 0x00003C, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_GetDistanceToSkillTarget_Distance_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateStopping, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateStopping::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateMoveSpeed
// 0x0020 (0x0020 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed final
{
public:
	float                                         DistanceToTarget;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetOrCreateManeuverTarget_Target;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed) == 0x000020, "Wrong size on SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, DistanceToTarget) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, CallFunc_GetOrCreateManeuverTarget_Target) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::CallFunc_GetOrCreateManeuverTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, CallFunc_GetTarget_Target) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001B, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateMoveSpeed::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.ShouldMove
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_ShouldMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPawnTouchingDistance_Distance;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceToNavTarget_Distance;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_ShouldMove) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_ShouldMove");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_ShouldMove) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_ShouldMove");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, Result) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_GetPawnTouchingDistance_Distance) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_GetPawnTouchingDistance_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_GetTarget_Target) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_GetDistanceToNavTarget_Distance) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_GetDistanceToNavTarget_Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000015, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_ShouldMove, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'SERV_Combat_StayNearSkillTarget_C_ShouldMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceToSkillTarget
// 0x0020 (0x0020 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkillTargetAgentLocation_TargetLocation; // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget) == 0x000020, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget, CallFunc_GetSkillTargetAgentLocation_TargetLocation) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget::CallFunc_GetSkillTargetAgentLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x00001C, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToSkillTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceToNavTarget
// 0x0070 (0x0070 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     NavTarget;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location_1;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShockAgentLocation_Location_2;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget) == 0x000070, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, NavTarget) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::NavTarget' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetTargetCharacter_Character) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetShockAgentLocation_Location_1) == 0x000028, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetShockAgentLocation_Location_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetTargetCharacter_Character_1) == 0x000038, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x000040, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetShockAgentLocation_Location_2) == 0x000048, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetShockAgentLocation_Location_2' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_Get_Target_Location_Location) == 0x000054, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x000064, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget, CallFunc_GetTarget_Target) == 0x000068, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceToNavTarget::CallFunc_GetTarget_Target' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetDistanceFromNavToSkillTarget
// 0x0038 (0x0038 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location_1;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget) == 0x000038, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, CallFunc_GetTarget_Target) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, CallFunc_GetTarget_Target_1) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, CallFunc_Get_Target_Location_Location) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, CallFunc_Get_Target_Location_Location_1) == 0x000024, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::CallFunc_Get_Target_Location_Location_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget, CallFunc_Vector_Distance2D_ReturnValue) == 0x000030, "Member 'SERV_Combat_StayNearSkillTarget_C_GetDistanceFromNavToSkillTarget::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPawnTouchingDistance
// 0x0048 (0x0048 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           TargetPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloseDistance;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance) == 0x000048, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, TargetPawn) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::TargetPawn' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CloseDistance) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CloseDistance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_GetTarget_Target) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_GetTarget_Target_1) == 0x000028, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_GetTargetCharacter_Character) == 0x000038, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPawnTouchingDistance::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPerfectDistance
// 0x001C (0x001C - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPreferredDistanceMinMax_PreferredDistance; // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance) == 0x00001C, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, CallFunc_GetPreferredDistanceMinMax_PreferredDistance) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::CallFunc_GetPreferredDistanceMinMax_PreferredDistance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetWalkDistance
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetWalkDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetWalkDistance");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetWalkDistance");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, CallFunc_GetMoveSpeedValue_Speed_1) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::CallFunc_GetMoveSpeedValue_Speed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetWalkDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_GetWalkDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetJogDistance
// 0x0018 (0x0018 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetJogDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetJogDistance");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance) == 0x000018, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetJogDistance");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, CallFunc_GetMoveSpeedValue_Speed_1) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::CallFunc_GetMoveSpeedValue_Speed_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetJogDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'SERV_Combat_StayNearSkillTarget_C_GetJogDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetSprintDistance
// 0x0008 (0x0008 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetSprintDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveSpeedValue_Speed;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetSprintDistance) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetSprintDistance");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetSprintDistance) == 0x000008, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetSprintDistance");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSprintDistance, Distance) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSprintDistance::Distance' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetSprintDistance, CallFunc_GetMoveSpeedValue_Speed) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetSprintDistance::CallFunc_GetMoveSpeedValue_Speed' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.IsNavigatingDirectlyToSkillTarget
// 0x0030 (0x0030 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget) == 0x000030, "Wrong size on SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, Result) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::Result' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTarget_Target) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTarget_Target_1) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTargetCharacter_Character) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, CallFunc_GetTargetCharacter_Character_1) == 0x000020, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'SERV_Combat_StayNearSkillTarget_C_IsNavigatingDirectlyToSkillTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.UpdateBodyRotation
// 0x0020 (0x0020 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation final
{
public:
	class UOBJ_EnemyTarget_C*                     CallFunc_GetOrCreateMoveDirectionTarget_Target;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetBodyRotateSpeed_Changed;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetBodyRotateSpeed_Changed_1;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation) == 0x000008, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation) == 0x000020, "Wrong size on SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation, CallFunc_GetOrCreateMoveDirectionTarget_Target) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation::CallFunc_GetOrCreateMoveDirectionTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation, CallFunc_SetBodyRotateSpeed_Changed) == 0x000008, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation::CallFunc_SetBodyRotateSpeed_Changed' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation, CallFunc_GetTarget_Target) == 0x000010, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation, CallFunc_SetBodyRotateSpeed_Changed_1) == 0x000018, "Member 'SERV_Combat_StayNearSkillTarget_C_UpdateBodyRotation::CallFunc_SetBodyRotateSpeed_Changed_1' has a wrong offset!");

// Function SERV_Combat_StayNearSkillTarget.SERV_Combat_StayNearSkillTarget_C.GetPerfectDistanceBufferRange
// 0x0008 (0x0008 - 0x0000)
struct SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange final
{
public:
	float                                         BufferRange;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange) == 0x000004, "Wrong alignment on SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange");
static_assert(sizeof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange) == 0x000008, "Wrong size on SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange, BufferRange) == 0x000000, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange::BufferRange' has a wrong offset!");
static_assert(offsetof(SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000004, "Member 'SERV_Combat_StayNearSkillTarget_C_GetPerfectDistanceBufferRange::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");

}


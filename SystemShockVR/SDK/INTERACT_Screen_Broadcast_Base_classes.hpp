#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Screen_Broadcast_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_Screen_Broadcast_Base.INTERACT_Screen_Broadcast_Base_C
// 0x0188 (0x0490 - 0x0308)
class AINTERACT_Screen_Broadcast_Base_C : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_Screen_Broadcast_Base_C;   // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     BroadcastVoxelAudio;                               // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelObserver_C*                  COMP_VoxelObserver;                                // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MonitorMesh;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         ScreenMaterialIndex;                               // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentContentIndex;                               // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScreenStartsActive;                                // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ScreenIsCritical;                                  // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ScreenIsActive;                                    // 0x033A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          ScreenIsBroken;                                    // 0x033B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          ScreenIsPowered;                                   // 0x033C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ScreenHasInitialized;                              // 0x033D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          IsPublicAddressActive;                             // 0x033E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsVisibleToPlayerFrustum;                          // 0x033F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BrokenTextureScale;                                // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WidgetDrawSize;                                    // 0x0344(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BroadcastWidgetTransform;                          // 0x0350(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               ScreenMaterial;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetActive;                                      // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentActive;                                     // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBROADCAST_Base_C*                      CurrentBroadcastContent;                           // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetStatic;                                      // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentStatic;                                     // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ParameterRate;                                     // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnWorldEventTriggered;                             // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class USoundCue>               ScreenOnSoundCue;                                  // 0x03B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ScreenOffSoundCue;                                 // 0x03E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UWidgetComponent*                       BroadcastWidgetComponent;                          // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CameraRenderTarget;                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_ScreenCamera_C*               TargetCamera;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DefaultScreenTexture;                              // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultRowCount;                                   // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultColCount;                                   // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultFrameRate;                                  // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTintColor;                                  // 0x0434(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    BroadcastHandle;                                   // 0x0448(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    KeycodeHandle;                                     // 0x0458(0x0010)(Edit, BlueprintVisible, NoDestructor)
	TSoftObjectPtr<class USoundCue>               ScreenBreakSoundCue;                               // 0x0468(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnWorldEventTriggered__DelegateSignature();
	void ExecuteUbergraph_INTERACT_Screen_Broadcast_Base(int32 EntryPoint);
	void BndEvt__INTERACT_Screen_Broadcast_Base_COMP_VoxelObserver_K2Node_ComponentBoundEvent_4_ObserverFrustumStateSignature__DelegateSignature(bool bVisibleToFrustum);
	void BndEvt__INTERACT_Screen_Broadcast_Base_COMP_VoxelObserver_K2Node_ComponentBoundEvent_3_CullableAudibilitySignature__DelegateSignature(bool bAudibleState);
	void BndEvt__INTERACT_Screen_Broadcast_Base_COMP_VoxelObserver_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void AsyncLoadPublicAddressPortrait(TSoftObjectPtr<class UTexture2D> PortraitTexture, int32 RowCount, int32 ColCount, int32 FrameRate, float Delay);
	void UpdateScreenRenderTarget();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnLoaded_90F5C4264F7326CC7BFFE9AEC0BB8507(class UObject* Loaded);
	void UserConstructionScript();
	void InitializeScreenState();
	void InitializeAttributes();
	void SetStaticParameter(float Value, bool SetCurrent, bool SetTarget);
	void SetActiveParameter(float Value, bool SetCurrent, bool SetTarget);
	void SetScreenActive(bool ScreenActive);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void PlayBroadcast(TSoftClassPtr<class UClass> ContentClass);
	void StopBroadcast();
	void TryCreateBroadcastComponent();
	void TryDestroyBroadcastComponent();
	void TryUpdateCameraRegistration();
	void TryPlayCurrentContent(bool* Result);
	void SetBroadcastTexture(class UTexture* Texture, int32 RowCount, int32 ColCount, int32 FrameRate);
	void ResetBroadcastTexture();
	void UpdateBroadcast(float DeltaTime);
	void UpdateScreenVisibility(bool IsVisible);
	void GetBroadcastTexture(class UTexture** Result);
	void GetBroadcastData(struct FSTRUCT_BroadcastData* Data);
	void GetBroadcastScreenWidget(class UWIDGET_BroadcastScreen_C** Screen);
	void UpdateScreenAudibility(bool AudibilityState);
	void UpdateScreenBrokenState(bool BeginPlay);
	void UpdateScreenEmissiveStrength(float Scale);
	void OnVisibilityToPlayerFrustumChanged(bool State);
	void UpdatePublicAddressBindings(bool EnableBinds);
	void UpdateMaterialParameters(float DeltaTime);
	void IsContentDisplayed(bool* Result);
	void HasFinishedContent(bool* Result);
	void EVENT_ModifyScreenStatic(float TargetValue, bool Instant);
	void OnPublicAddressMediaChanged(bool Active);
	void OnTriggerWorldEvent();
	void IsInteractActivated(bool* Result);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	void EVENT_OnPublicAddressStateChanged(class USoundCue* SoundCue, TSoftObjectPtr<class UTexture2D> PortraitTexture, int32 RowCount, int32 ColCount, int32 FrameRate);
	void EVENT_OnScreenCameraDestroyed();
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void SetInteractPowered(bool State, bool* Result);
	void CanModifyInteractPower(bool* Result);
	void EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_Screen_Broadcast_Base_C">();
	}
	static class AINTERACT_Screen_Broadcast_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_Screen_Broadcast_Base_C>();
	}
};
static_assert(alignof(AINTERACT_Screen_Broadcast_Base_C) == 0x000010, "Wrong alignment on AINTERACT_Screen_Broadcast_Base_C");
static_assert(sizeof(AINTERACT_Screen_Broadcast_Base_C) == 0x000490, "Wrong size on AINTERACT_Screen_Broadcast_Base_C");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, UberGraphFrame_INTERACT_Screen_Broadcast_Base_C) == 0x000308, "Member 'AINTERACT_Screen_Broadcast_Base_C::UberGraphFrame_INTERACT_Screen_Broadcast_Base_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, COMP_AttribManager) == 0x000310, "Member 'AINTERACT_Screen_Broadcast_Base_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, BroadcastVoxelAudio) == 0x000318, "Member 'AINTERACT_Screen_Broadcast_Base_C::BroadcastVoxelAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, COMP_VoxelObserver) == 0x000320, "Member 'AINTERACT_Screen_Broadcast_Base_C::COMP_VoxelObserver' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, MonitorMesh) == 0x000328, "Member 'AINTERACT_Screen_Broadcast_Base_C::MonitorMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenMaterialIndex) == 0x000330, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenMaterialIndex' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, CurrentContentIndex) == 0x000334, "Member 'AINTERACT_Screen_Broadcast_Base_C::CurrentContentIndex' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenStartsActive) == 0x000338, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenStartsActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenIsCritical) == 0x000339, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenIsCritical' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenIsActive) == 0x00033A, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenIsActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenIsBroken) == 0x00033B, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenIsBroken' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenIsPowered) == 0x00033C, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenIsPowered' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenHasInitialized) == 0x00033D, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenHasInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, IsPublicAddressActive) == 0x00033E, "Member 'AINTERACT_Screen_Broadcast_Base_C::IsPublicAddressActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, IsVisibleToPlayerFrustum) == 0x00033F, "Member 'AINTERACT_Screen_Broadcast_Base_C::IsVisibleToPlayerFrustum' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, BrokenTextureScale) == 0x000340, "Member 'AINTERACT_Screen_Broadcast_Base_C::BrokenTextureScale' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, WidgetDrawSize) == 0x000344, "Member 'AINTERACT_Screen_Broadcast_Base_C::WidgetDrawSize' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, BroadcastWidgetTransform) == 0x000350, "Member 'AINTERACT_Screen_Broadcast_Base_C::BroadcastWidgetTransform' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenMaterial) == 0x000380, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, TargetActive) == 0x000388, "Member 'AINTERACT_Screen_Broadcast_Base_C::TargetActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, CurrentActive) == 0x00038C, "Member 'AINTERACT_Screen_Broadcast_Base_C::CurrentActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, CurrentBroadcastContent) == 0x000390, "Member 'AINTERACT_Screen_Broadcast_Base_C::CurrentBroadcastContent' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, TargetStatic) == 0x000398, "Member 'AINTERACT_Screen_Broadcast_Base_C::TargetStatic' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, CurrentStatic) == 0x00039C, "Member 'AINTERACT_Screen_Broadcast_Base_C::CurrentStatic' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ParameterRate) == 0x0003A0, "Member 'AINTERACT_Screen_Broadcast_Base_C::ParameterRate' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, OnWorldEventTriggered) == 0x0003A8, "Member 'AINTERACT_Screen_Broadcast_Base_C::OnWorldEventTriggered' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenOnSoundCue) == 0x0003B8, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenOnSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenOffSoundCue) == 0x0003E0, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenOffSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, BroadcastWidgetComponent) == 0x000408, "Member 'AINTERACT_Screen_Broadcast_Base_C::BroadcastWidgetComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, CameraRenderTarget) == 0x000410, "Member 'AINTERACT_Screen_Broadcast_Base_C::CameraRenderTarget' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, TargetCamera) == 0x000418, "Member 'AINTERACT_Screen_Broadcast_Base_C::TargetCamera' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, DefaultScreenTexture) == 0x000420, "Member 'AINTERACT_Screen_Broadcast_Base_C::DefaultScreenTexture' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, DefaultRowCount) == 0x000428, "Member 'AINTERACT_Screen_Broadcast_Base_C::DefaultRowCount' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, DefaultColCount) == 0x00042C, "Member 'AINTERACT_Screen_Broadcast_Base_C::DefaultColCount' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, DefaultFrameRate) == 0x000430, "Member 'AINTERACT_Screen_Broadcast_Base_C::DefaultFrameRate' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, DefaultTintColor) == 0x000434, "Member 'AINTERACT_Screen_Broadcast_Base_C::DefaultTintColor' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, BroadcastHandle) == 0x000448, "Member 'AINTERACT_Screen_Broadcast_Base_C::BroadcastHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, KeycodeHandle) == 0x000458, "Member 'AINTERACT_Screen_Broadcast_Base_C::KeycodeHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_Screen_Broadcast_Base_C, ScreenBreakSoundCue) == 0x000468, "Member 'AINTERACT_Screen_Broadcast_Base_C::ScreenBreakSoundCue' has a wrong offset!");

}


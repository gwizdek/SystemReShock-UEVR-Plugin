#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERF_ANIM_Hacker

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "ENUM_LeftRight_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERF_ANIM_Hacker.INTERF_ANIM_Hacker_C
// 0x0000 (0x0028 - 0x0028)
class IINTERF_ANIM_Hacker_C final : public IInterface
{
public:
	void SetWalkPhase(float FootstepProgress, int32 FootstepSign, bool* Result);
	void SetEquippedItem(class UITEM_WeaponBase_C* Item, bool* Result);
	void SetMovementParameters(float Speed, const struct FVector2D& Direction, float CrouchProgress, bool* Result);
	void SetIsSprinting(bool State, bool* Result);
	void SetLeanProgress(float SignedProgress, bool* Result);
	void SetCameraTarget(const struct FRotator& LookRotation, const struct FVector& HeadLocation, bool* Result);
	void SetOverrideIdleSequence(class UAnimSequenceBase* OverrideIdleSequence, bool IsCinematic, bool* Result);
	void SetWeaponOffset(const struct FVector& Offset, bool* Result);
	void SetUseIK(bool UseIK, bool* Result);
	void GetCameraRootPos(struct FVector* Location);
	void SetLadderParams(bool IsMounted, ENUM_LeftRight RestingFootDown, bool* Result);
	void GetOverrideIdleSequence(class UAnimSequenceBase** Result);
	void SetIsGrounded(bool IsGrounded, bool* Result);
	void SetAirLandingScale(float Scale, bool* Result);
	void SetAimProgress(float Progress, bool* Result);
	void UpdateEquippedItemSequences(bool* Result);
	void SetWeaponObstructed(bool Obstructed, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERF_ANIM_Hacker_C">();
	}
	static class IINTERF_ANIM_Hacker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IINTERF_ANIM_Hacker_C>();
	}
};
static_assert(alignof(IINTERF_ANIM_Hacker_C) == 0x000008, "Wrong alignment on IINTERF_ANIM_Hacker_C");
static_assert(sizeof(IINTERF_ANIM_Hacker_C) == 0x000028, "Wrong size on IINTERF_ANIM_Hacker_C");

}


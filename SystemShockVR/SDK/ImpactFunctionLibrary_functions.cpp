#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImpactFunctionLibrary

#include "Basic.hpp"

#include "ImpactFunctionLibrary_classes.hpp"
#include "ImpactFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.CreateImpactEffects
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       ImpactTable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SurfaceDirection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                Physical_Material                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     Player_Owner                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DetectionRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSTRUCT_EffectParams             SoundParameters                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSTRUCT_EffectParams             EffectParameters                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_ImpactEffectResults      Results                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::CreateImpactEffects(class UDataTable* ImpactTable, const struct FVector& ImpactLocation, const struct FVector& ImpactDirection, const struct FVector& SurfaceDirection, class UPhysicalMaterial* Physical_Material, class AActor* HitActor, class UPrimitiveComponent* HitComponent, class FName BoneName, class APAWN_SystemShockCharacter_C* Player_Owner, float DetectionRadius, const struct FAttribDamageInstance& DamageInstance, const struct FSTRUCT_EffectParams& SoundParameters, const struct FSTRUCT_EffectParams& EffectParameters, class UObject* __WorldContext, bool* Success, struct FSTRUCT_ImpactEffectResults* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "CreateImpactEffects");

	Params::ImpactFunctionLibrary_C_CreateImpactEffects Parms{};

	Parms.ImpactTable = ImpactTable;
	Parms.ImpactLocation = std::move(ImpactLocation);
	Parms.ImpactDirection = std::move(ImpactDirection);
	Parms.SurfaceDirection = std::move(SurfaceDirection);
	Parms.Physical_Material = Physical_Material;
	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.Player_Owner = Player_Owner;
	Parms.DetectionRadius = DetectionRadius;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.SoundParameters = std::move(SoundParameters);
	Parms.EffectParameters = std::move(EffectParameters);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Results != nullptr)
		*Results = std::move(Parms.Results);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.CreateImpactEffectsWithEvent
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       ImpactTable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SurfaceDirection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPhysicalMaterial*                Physical_Material                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     Player_Owner                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DetectionRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSTRUCT_EffectParams             SoundParameters                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSTRUCT_EffectParams             EffectParameters                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FLatentObjectEventHandle         OnEffectsSpawned                                       (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_ImpactEffectResults      Results                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::CreateImpactEffectsWithEvent(class UDataTable* ImpactTable, const struct FVector& ImpactLocation, const struct FVector& ImpactDirection, const struct FVector& SurfaceDirection, class UPhysicalMaterial* Physical_Material, class AActor* HitActor, class UPrimitiveComponent* HitComponent, class FName BoneName, class APAWN_SystemShockCharacter_C* Player_Owner, float DetectionRadius, const struct FAttribDamageInstance& DamageInstance, const struct FSTRUCT_EffectParams& SoundParameters, const struct FSTRUCT_EffectParams& EffectParameters, const struct FLatentObjectEventHandle& OnEffectsSpawned, class UObject* __WorldContext, bool* Success, struct FSTRUCT_ImpactEffectResults* Results)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "CreateImpactEffectsWithEvent");

	Params::ImpactFunctionLibrary_C_CreateImpactEffectsWithEvent Parms{};

	Parms.ImpactTable = ImpactTable;
	Parms.ImpactLocation = std::move(ImpactLocation);
	Parms.ImpactDirection = std::move(ImpactDirection);
	Parms.SurfaceDirection = std::move(SurfaceDirection);
	Parms.Physical_Material = Physical_Material;
	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.Player_Owner = Player_Owner;
	Parms.DetectionRadius = DetectionRadius;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.SoundParameters = std::move(SoundParameters);
	Parms.EffectParameters = std::move(EffectParameters);
	Parms.OnEffectsSpawned = std::move(OnEffectsSpawned);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Results != nullptr)
		*Results = std::move(Parms.Results);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.CreateSoundDetectionEvent
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     SourcePawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::CreateSoundDetectionEvent(class APAWN_SystemShockCharacter_C* SourcePawn, const struct FVector& Location, float Radius, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "CreateSoundDetectionEvent");

	Params::ImpactFunctionLibrary_C_CreateSoundDetectionEvent Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.CreateVisualDetectionEvent
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     SourcePawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxDistance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::CreateVisualDetectionEvent(class APAWN_SystemShockCharacter_C* SourcePawn, const struct FVector& Location, float MaxDistance, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "CreateVisualDetectionEvent");

	Params::ImpactFunctionLibrary_C_CreateVisualDetectionEvent Parms{};

	Parms.SourcePawn = SourcePawn;
	Parms.Location = std::move(Location);
	Parms.MaxDistance = MaxDistance;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.TriangulateRayDirection
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CameraLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CameraDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BarrelLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxTraceDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TriangulatedDirection                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::TriangulateRayDirection(const struct FVector& CameraLocation, const struct FVector& CameraDirection, const struct FVector& BarrelLocation, float MaxTraceDistance, class AActor* OwnerActor, class UObject* __WorldContext, struct FVector* TriangulatedDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "TriangulateRayDirection");

	Params::ImpactFunctionLibrary_C_TriangulateRayDirection Parms{};

	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraDirection = std::move(CameraDirection);
	Parms.BarrelLocation = std::move(BarrelLocation);
	Parms.MaxTraceDistance = MaxTraceDistance;
	Parms.OwnerActor = OwnerActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TriangulatedDirection != nullptr)
		*TriangulatedDirection = std::move(Parms.TriangulatedDirection);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.TriangulateImpactLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CameraLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CameraDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BarrelLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxTraceDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HitSomething                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       HitResult                                              (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          TriangulatedDirection                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::TriangulateImpactLocation(const struct FVector& CameraLocation, const struct FVector& CameraDirection, const struct FVector& BarrelLocation, float Radius, float MaxTraceDistance, class AActor* OwnerActor, class UObject* __WorldContext, bool* HitSomething, struct FHitResult* HitResult, struct FVector* TriangulatedDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "TriangulateImpactLocation");

	Params::ImpactFunctionLibrary_C_TriangulateImpactLocation Parms{};

	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraDirection = std::move(CameraDirection);
	Parms.BarrelLocation = std::move(BarrelLocation);
	Parms.Radius = Radius;
	Parms.MaxTraceDistance = MaxTraceDistance;
	Parms.OwnerActor = OwnerActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HitSomething != nullptr)
		*HitSomething = Parms.HitSomething;

	if (HitResult != nullptr)
		*HitResult = std::move(Parms.HitResult);

	if (TriangulatedDirection != nullptr)
		*TriangulatedDirection = std::move(Parms.TriangulatedDirection);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.GetImpactParamsForSurfaceType
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       ImpactTable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_ImpactParams             Result                                                 (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::GetImpactParamsForSurfaceType(class UDataTable* ImpactTable, EPhysicalSurface SurfaceType, class UObject* __WorldContext, bool* Found, struct FSTRUCT_ImpactParams* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "GetImpactParamsForSurfaceType");

	Params::ImpactFunctionLibrary_C_GetImpactParamsForSurfaceType Parms{};

	Parms.ImpactTable = ImpactTable;
	Parms.SurfaceType = SurfaceType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.GetComponentToImpact
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              ResultComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCOMP_SkinnedDecalSampler_C*      ResultSkinnedDecalSampler                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::GetComponentToImpact(class AActor* HitActor, class UPrimitiveComponent* HitComponent, class UObject* __WorldContext, class UPrimitiveComponent** ResultComponent, class UCOMP_SkinnedDecalSampler_C** ResultSkinnedDecalSampler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "GetComponentToImpact");

	Params::ImpactFunctionLibrary_C_GetComponentToImpact Parms{};

	Parms.HitActor = HitActor;
	Parms.HitComponent = HitComponent;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ResultComponent != nullptr)
		*ResultComponent = Parms.ResultComponent;

	if (ResultSkinnedDecalSampler != nullptr)
		*ResultSkinnedDecalSampler = Parms.ResultSkinnedDecalSampler;
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.CreateImpactDataFromHit
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOBJ_ImpactData_C*                ImpactData                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::CreateImpactDataFromHit(const struct FHitResult& Hit, float ImpulseStrength, class UObject* __WorldContext, class UOBJ_ImpactData_C** ImpactData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "CreateImpactDataFromHit");

	Params::ImpactFunctionLibrary_C_CreateImpactDataFromHit Parms{};

	Parms.Hit = std::move(Hit);
	Parms.ImpulseStrength = ImpulseStrength;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ImpactData != nullptr)
		*ImpactData = Parms.ImpactData;
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisFragmentsInVolumeFromTemplate
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UBoxComponent*                    SpawnVolume                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ConeHalfAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisFragmentsInVolumeFromTemplate(const struct FDataTableRowHandle& Template, class UBoxComponent* SpawnVolume, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisFragmentsInVolumeFromTemplate");

	Params::ImpactFunctionLibrary_C_SpawnDebrisFragmentsInVolumeFromTemplate Parms{};

	Parms.Template = std::move(Template);
	Parms.SpawnVolume = SpawnVolume;
	Parms.ImpulseStrength = ImpulseStrength;
	Parms.ConeHalfAngle = ConeHalfAngle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisFragmentsFromTemplate
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class USceneComponent*                  ParentComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RelativeHalfExtents                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ForwardVector                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ConeHalfAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisFragmentsFromTemplate(const struct FDataTableRowHandle& Template, class USceneComponent* ParentComponent, const struct FVector& RelativeLocation, const struct FVector& RelativeHalfExtents, const struct FVector& ForwardVector, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisFragmentsFromTemplate");

	Params::ImpactFunctionLibrary_C_SpawnDebrisFragmentsFromTemplate Parms{};

	Parms.Template = std::move(Template);
	Parms.ParentComponent = ParentComponent;
	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.RelativeHalfExtents = std::move(RelativeHalfExtents);
	Parms.ForwardVector = std::move(ForwardVector);
	Parms.ImpulseStrength = ImpulseStrength;
	Parms.ConeHalfAngle = ConeHalfAngle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisFragmentsInVolume
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMesh*>              MeshFragments                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UBoxComponent*                    SpawnVolume                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ConeHalfAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisFragmentsInVolume(TArray<class UStaticMesh*>& MeshFragments, class UBoxComponent* SpawnVolume, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisFragmentsInVolume");

	Params::ImpactFunctionLibrary_C_SpawnDebrisFragmentsInVolume Parms{};

	Parms.MeshFragments = std::move(MeshFragments);
	Parms.SpawnVolume = SpawnVolume;
	Parms.ImpulseStrength = ImpulseStrength;
	Parms.ConeHalfAngle = ConeHalfAngle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MeshFragments = std::move(Parms.MeshFragments);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisFragments
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMesh*>              MeshFragments                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class USceneComponent*                  ParentComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RelativeLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RelativeHalfExtents                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ForwardVector                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpulseStrength                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ConeHalfAngle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisFragments(TArray<class UStaticMesh*>& MeshFragments, class USceneComponent* ParentComponent, const struct FVector& RelativeLocation, const struct FVector& RelativeHalfExtents, const struct FVector& ForwardVector, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisFragments");

	Params::ImpactFunctionLibrary_C_SpawnDebrisFragments Parms{};

	Parms.MeshFragments = std::move(MeshFragments);
	Parms.ParentComponent = ParentComponent;
	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.RelativeHalfExtents = std::move(RelativeHalfExtents);
	Parms.ForwardVector = std::move(ForwardVector);
	Parms.ImpulseStrength = ImpulseStrength;
	Parms.ConeHalfAngle = ConeHalfAngle;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	MeshFragments = std::move(Parms.MeshFragments);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisGib
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ADismembermentHeroGib_Static_Debris_C*Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisGib(class AActor* SourceActor, class UStaticMesh* StaticMesh, const struct FTransform& SpawnTransform, class UObject* __WorldContext, class ADismembermentHeroGib_Static_Debris_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisGib");

	Params::ImpactFunctionLibrary_C_SpawnDebrisGib Parms{};

	Parms.SourceActor = SourceActor;
	Parms.StaticMesh = StaticMesh;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisGibs
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       WorldTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// TArray<class UStaticMesh*>              GoreMeshes                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisGibs(class AActor* SourceActor, const struct FTransform& WorldTransform, TArray<class UStaticMesh*>& GoreMeshes, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisGibs");

	Params::ImpactFunctionLibrary_C_SpawnDebrisGibs Parms{};

	Parms.SourceActor = SourceActor;
	Parms.WorldTransform = std::move(WorldTransform);
	Parms.GoreMeshes = std::move(GoreMeshes);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GoreMeshes = std::move(Parms.GoreMeshes);
}


// Function ImpactFunctionLibrary.ImpactFunctionLibrary_C.SpawnDebrisGibsWithTransforms
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  SourceComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UStaticMesh*>              GoreMeshes                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FTransform>               GoreTransforms                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UImpactFunctionLibrary_C::SpawnDebrisGibsWithTransforms(class USceneComponent* SourceComponent, TArray<class UStaticMesh*>& GoreMeshes, TArray<struct FTransform>& GoreTransforms, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ImpactFunctionLibrary_C", "SpawnDebrisGibsWithTransforms");

	Params::ImpactFunctionLibrary_C_SpawnDebrisGibsWithTransforms Parms{};

	Parms.SourceComponent = SourceComponent;
	Parms.GoreMeshes = std::move(GoreMeshes);
	Parms.GoreTransforms = std::move(GoreTransforms);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GoreMeshes = std::move(Parms.GoreMeshes);
	GoreTransforms = std::move(Parms.GoreTransforms);
}

}


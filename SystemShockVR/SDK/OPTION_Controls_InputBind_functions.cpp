#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Controls_InputBind

#include "Basic.hpp"

#include "OPTION_Controls_InputBind_classes.hpp"
#include "OPTION_Controls_InputBind_parameters.hpp"


namespace SDK
{

// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.OnInputBindChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::OnInputBindChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "OnInputBindChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ExecuteUbergraph_OPTION_Controls_InputBind
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOPTION_Controls_InputBind_C::ExecuteUbergraph_OPTION_Controls_InputBind(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "ExecuteUbergraph_OPTION_Controls_InputBind");

	Params::OPTION_Controls_InputBind_C_ExecuteUbergraph_OPTION_Controls_InputBind Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "PreConstruct");

	Params::OPTION_Controls_InputBind_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SetIsHighlighted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHighlightedState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForceInstant                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::SetIsHighlighted(bool NewHighlightedState, bool ForceInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "SetIsHighlighted");

	Params::OPTION_Controls_InputBind_C_SetIsHighlighted Parms{};

	Parms.NewHighlightedState = NewHighlightedState;
	Parms.ForceInstant = ForceInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseDownPrimary
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UOPTION_Controls_InputBind_C::EVENT_OnMouseDownPrimary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseDownPrimary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseDownPrimary Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseDownSecondary
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UOPTION_Controls_InputBind_C::EVENT_OnMouseDownSecondary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseDownSecondary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseDownSecondary Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnterPrimary
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseEnterPrimary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseEnterPrimary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseEnterPrimary Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExitPrimary
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseExitPrimary(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseExitPrimary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseExitPrimary Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnterSecondary
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseEnterSecondary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseEnterSecondary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseEnterSecondary Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExitSecondary
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseExitSecondary(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseExitSecondary");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseExitSecondary Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UOPTION_Controls_InputBind_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "OnKeyDown");

	Params::OPTION_Controls_InputBind_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseEnter_Background
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseEnter_Background(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseEnter_Background");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseEnter_Background Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.EVENT_OnMouseExit_Background
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UOPTION_Controls_InputBind_C::EVENT_OnMouseExit_Background(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "EVENT_OnMouseExit_Background");

	Params::OPTION_Controls_InputBind_C_EVENT_OnMouseExit_Background Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SetOptionListeningForInput
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsListening                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::SetOptionListeningForInput(bool IsListening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "SetOptionListeningForInput");

	Params::OPTION_Controls_InputBind_C_SetOptionListeningForInput Parms{};

	Parms.IsListening = IsListening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.CycleButtonHighlightLeft
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::CycleButtonHighlightLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "CycleButtonHighlightLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.CycleButtonHighlightRight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::CycleButtonHighlightRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "CycleButtonHighlightRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.TryStopListeningForInput
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::TryStopListeningForInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "TryStopListeningForInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsKeyInCorrectBindScope
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::IsKeyInCorrectBindScope(const struct FKey& Key, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "IsKeyInCorrectBindScope");

	Params::OPTION_Controls_InputBind_C_IsKeyInCorrectBindScope Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.UpdateVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.SelectDefaultValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::SelectDefaultValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "SelectDefaultValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::ReceiveNavLeft(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "ReceiveNavLeft");

	Params::OPTION_Controls_InputBind_C_ReceiveNavLeft Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ApplyCleanValue
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::ApplyCleanValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "ApplyCleanValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.UpdateCurrentVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::UpdateCurrentVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "UpdateCurrentVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.TryUnhighlightOption
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Controls_InputBind_C::TryUnhighlightOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "TryUnhighlightOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnyOptionListeningForInput
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::IsAnyOptionListeningForInput(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "IsAnyOptionListeningForInput");

	Params::OPTION_Controls_InputBind_C_IsAnyOptionListeningForInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnythingHighlightedOrListening
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::IsAnythingHighlightedOrListening(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "IsAnythingHighlightedOrListening");

	Params::OPTION_Controls_InputBind_C_IsAnythingHighlightedOrListening Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.StartListeningForInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_PrimarySecondary                   Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOPTION_Controls_InputBind_C::StartListeningForInput(ENUM_PrimarySecondary Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "StartListeningForInput");

	Params::OPTION_Controls_InputBind_C_StartListeningForInput Parms{};

	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.StashInputBind
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UOPTION_Controls_InputBind_C::StashInputBind(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "StashInputBind");

	Params::OPTION_Controls_InputBind_C_StashInputBind Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.GetMouseButtonFromPointerEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKey                             Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void UOPTION_Controls_InputBind_C::GetMouseButtonFromPointerEvent(const struct FPointerEvent& PointerEvent, struct FKey* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "GetMouseButtonFromPointerEvent");

	Params::OPTION_Controls_InputBind_C_GetMouseButtonFromPointerEvent Parms{};

	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.IsAnythingHovered
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::IsAnythingHovered(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "IsAnythingHovered");

	Params::OPTION_Controls_InputBind_C_IsAnythingHovered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::ReceiveNavRight(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "ReceiveNavRight");

	Params::OPTION_Controls_InputBind_C_ReceiveNavRight Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Controls_InputBind.OPTION_Controls_InputBind_C.ReceiveNavAccept
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Controls_InputBind_C::ReceiveNavAccept(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Controls_InputBind_C", "ReceiveNavAccept");

	Params::OPTION_Controls_InputBind_C_ReceiveNavAccept Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


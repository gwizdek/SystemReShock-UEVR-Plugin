#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_ForceBridge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_ForceBridge.AnimBP_ForceBridge_C
// 0x04A0 (0x0760 - 0x02C0)
class UAnimBP_ForceBridge_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0340(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x03E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0460(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x04E0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x05E8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0608(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0628(0x0108)()
	bool                                          IsExtended;                                        // 0x0730(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TransitionProgress;                                // 0x0734(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionDuration;                                // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GeneratorYawRotation;                              // 0x073C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxYawRotationSpeed;                               // 0x0740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeftGeneratorRotation;                             // 0x0744(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               RightGeneratorRotation;                            // 0x0750(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_AnimBP_ForceBridge(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void StartForceBridgeTransition(bool Extended);
	void ResumeForceBridgeTransition(bool Extended, float StartTimeOffset);
	void SetForceBridgeExtended(bool State);
	void UpdateGeneratorRotation(float DeltaTime);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_ForceBridge_C">();
	}
	static class UAnimBP_ForceBridge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_ForceBridge_C>();
	}
};
static_assert(alignof(UAnimBP_ForceBridge_C) == 0x000010, "Wrong alignment on UAnimBP_ForceBridge_C");
static_assert(sizeof(UAnimBP_ForceBridge_C) == 0x000760, "Wrong size on UAnimBP_ForceBridge_C");
static_assert(offsetof(UAnimBP_ForceBridge_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_ForceBridge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_BlendListByBool) == 0x000340, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_SequencePlayer_1) == 0x0003E0, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_SequencePlayer) == 0x000460, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_ModifyBone_1) == 0x0004E0, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_ComponentToLocalSpace) == 0x0005E8, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_LocalToComponentSpace) == 0x000608, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, AnimGraphNode_ModifyBone) == 0x000628, "Member 'UAnimBP_ForceBridge_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, IsExtended) == 0x000730, "Member 'UAnimBP_ForceBridge_C::IsExtended' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, TransitionProgress) == 0x000734, "Member 'UAnimBP_ForceBridge_C::TransitionProgress' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, TransitionDuration) == 0x000738, "Member 'UAnimBP_ForceBridge_C::TransitionDuration' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, GeneratorYawRotation) == 0x00073C, "Member 'UAnimBP_ForceBridge_C::GeneratorYawRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, MaxYawRotationSpeed) == 0x000740, "Member 'UAnimBP_ForceBridge_C::MaxYawRotationSpeed' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, LeftGeneratorRotation) == 0x000744, "Member 'UAnimBP_ForceBridge_C::LeftGeneratorRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_ForceBridge_C, RightGeneratorRotation) == 0x000750, "Member 'UAnimBP_ForceBridge_C::RightGeneratorRotation' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DebugMenu

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.ExecuteUbergraph_WIDGET_DebugMenu
// 0x0140 (0x0140 - 0x0000)
struct WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry;               // 0x0070(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent;             // 0x00A8(0x0070)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
};
static_assert(alignof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu");
static_assert(sizeof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu) == 0x000140, "Wrong size on WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, EntryPoint) == 0x000000, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, K2Node_ComponentBoundEvent_Geometry) == 0x000070, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::K2Node_ComponentBoundEvent_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, K2Node_ComponentBoundEvent_InputEvent) == 0x0000A8, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::K2Node_ComponentBoundEvent_InputEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, K2Node_MakeArray_Array) == 0x000118, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WIDGET_DebugMenu_C_ExecuteUbergraph_WIDGET_DebugMenu::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_DebugMenu_C_BndEvt__WIDGET_DebugMenu_WIDGET_ButtonLegend_BackButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.InitializeMenu
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_DebugMenu_C_InitializeMenu final
{
public:
	class UWIDGET_MenuBase_C*                     ParentMenuWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DebugMenu_C_InitializeMenu) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_InitializeMenu");
static_assert(sizeof(WIDGET_DebugMenu_C_InitializeMenu) == 0x000008, "Wrong size on WIDGET_DebugMenu_C_InitializeMenu");
static_assert(offsetof(WIDGET_DebugMenu_C_InitializeMenu, ParentMenuWidget) == 0x000000, "Member 'WIDGET_DebugMenu_C_InitializeMenu::ParentMenuWidget' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.SetMainMenu
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_DebugMenu_C_SetMainMenu final
{
public:
	class UUserWidget*                            MainMenu_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DebugMenu_C_SetMainMenu) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_SetMainMenu");
static_assert(sizeof(WIDGET_DebugMenu_C_SetMainMenu) == 0x000008, "Wrong size on WIDGET_DebugMenu_C_SetMainMenu");
static_assert(offsetof(WIDGET_DebugMenu_C_SetMainMenu, MainMenu_0) == 0x000000, "Member 'WIDGET_DebugMenu_C_SetMainMenu::MainMenu_0' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.InvokeNavManager
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_DebugMenu_C_InvokeNavManager final
{
public:
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DebugMenu_C_InvokeNavManager) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_InvokeNavManager");
static_assert(sizeof(WIDGET_DebugMenu_C_InvokeNavManager) == 0x000018, "Wrong size on WIDGET_DebugMenu_C_InvokeNavManager");
static_assert(offsetof(WIDGET_DebugMenu_C_InvokeNavManager, InputType) == 0x000000, "Member 'WIDGET_DebugMenu_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_InvokeNavManager, InputState) == 0x000001, "Member 'WIDGET_DebugMenu_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_InvokeNavManager, K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game) == 0x000008, "Member 'WIDGET_DebugMenu_C_InvokeNavManager::K2Node_DynamicCast_AsWIDGET_Main_Menu_in_Game' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_InvokeNavManager, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_DebugMenu_C_InvokeNavManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WIDGET_DebugMenu_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.OnMenuOpen
// 0x0238 (0x0238 - 0x0000)
struct WIDGET_DebugMenu_C_OnMenuOpen final
{
public:
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0000(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText; // 0x0010(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0028(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_1; // 0x0038(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_2;            // 0x0050(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_2; // 0x0060(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_3;            // 0x0078(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_3; // 0x0088(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_4;            // 0x00A0(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_4; // 0x00B0(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_5;            // 0x00C8(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_5; // 0x00D8(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_6;            // 0x00F0(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_6; // 0x0100(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_7;            // 0x0118(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_7; // 0x0128(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_8;            // 0x0140(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_8; // 0x0150(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_9;            // 0x0168(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_9; // 0x0178(0x0018)()
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_10;           // 0x0198(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_11;           // 0x01A8(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_10; // 0x01B8(0x0018)()
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_11; // 0x01D0(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_12;           // 0x01E8(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_12; // 0x01F8(0x0018)()
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_13;           // 0x0210(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetAchievementData_FormattedAchievementText_13; // 0x0220(0x0018)()
};
static_assert(alignof(WIDGET_DebugMenu_C_OnMenuOpen) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_OnMenuOpen");
static_assert(sizeof(WIDGET_DebugMenu_C_OnMenuOpen) == 0x000238, "Wrong size on WIDGET_DebugMenu_C_OnMenuOpen");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle) == 0x000000, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText) == 0x000010, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000028, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_1) == 0x000038, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_2) == 0x000050, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_2) == 0x000060, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_3) == 0x000078, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_3' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_3) == 0x000088, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_3' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_4) == 0x0000A0, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_4' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_4) == 0x0000B0, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_4' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_5) == 0x0000C8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_5' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_5) == 0x0000D8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_5' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_6) == 0x0000F0, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_6' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_6) == 0x000100, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_6' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_7) == 0x000118, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_7' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_7) == 0x000128, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_7' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_8) == 0x000140, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_8' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_8) == 0x000150, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_8' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_9) == 0x000168, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_9' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_9) == 0x000178, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_9' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000190, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_10) == 0x000198, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_10' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_11) == 0x0001A8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_11' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_10) == 0x0001B8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_10' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_11) == 0x0001D0, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_11' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_12) == 0x0001E8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_12' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_12) == 0x0001F8, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_12' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, K2Node_MakeStruct_DataTableRowHandle_13) == 0x000210, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::K2Node_MakeStruct_DataTableRowHandle_13' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_OnMenuOpen, CallFunc_GetAchievementData_FormattedAchievementText_13) == 0x000220, "Member 'WIDGET_DebugMenu_C_OnMenuOpen::CallFunc_GetAchievementData_FormattedAchievementText_13' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.GetAchievementData
// 0x0158 (0x0158 - 0x0000)
struct WIDGET_DebugMenu_C_GetAchievementData final
{
public:
	struct FDataTableRowHandle                    AchievementHandle;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   FormattedAchievementText;                          // 0x0010(0x0018)(Parm, OutParm)
	class FName                                   NewLocalVar_0;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCount;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLinearAchievementProgress_MaxCount;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLinearAchievementProgress_CurrentCount; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLinearAchievementProgress_AchivementHandleName; // 0x0058(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
};
static_assert(alignof(WIDGET_DebugMenu_C_GetAchievementData) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_GetAchievementData");
static_assert(sizeof(WIDGET_DebugMenu_C_GetAchievementData) == 0x000158, "Wrong size on WIDGET_DebugMenu_C_GetAchievementData");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, AchievementHandle) == 0x000000, "Member 'WIDGET_DebugMenu_C_GetAchievementData::AchievementHandle' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, FormattedAchievementText) == 0x000010, "Member 'WIDGET_DebugMenu_C_GetAchievementData::FormattedAchievementText' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, NewLocalVar_0) == 0x000028, "Member 'WIDGET_DebugMenu_C_GetAchievementData::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, MaxCount) == 0x000030, "Member 'WIDGET_DebugMenu_C_GetAchievementData::MaxCount' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'WIDGET_DebugMenu_C_GetAchievementData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, CallFunc_GetLinearAchievementProgress_MaxCount) == 0x00004C, "Member 'WIDGET_DebugMenu_C_GetAchievementData::CallFunc_GetLinearAchievementProgress_MaxCount' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, CallFunc_GetLinearAchievementProgress_CurrentCount) == 0x000050, "Member 'WIDGET_DebugMenu_C_GetAchievementData::CallFunc_GetLinearAchievementProgress_CurrentCount' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, CallFunc_GetLinearAchievementProgress_AchivementHandleName) == 0x000058, "Member 'WIDGET_DebugMenu_C_GetAchievementData::CallFunc_GetLinearAchievementProgress_AchivementHandleName' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, K2Node_MakeArray_Array) == 0x000130, "Member 'WIDGET_DebugMenu_C_GetAchievementData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_GetAchievementData, CallFunc_Format_ReturnValue) == 0x000140, "Member 'WIDGET_DebugMenu_C_GetAchievementData::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_DebugMenu.WIDGET_DebugMenu_C.SetAchievementGranting
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_DebugMenu_C_SetAchievementGranting final
{
public:
	bool                                          AchievementGranting;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DebugMenu_C_SetAchievementGranting) == 0x000008, "Wrong alignment on WIDGET_DebugMenu_C_SetAchievementGranting");
static_assert(sizeof(WIDGET_DebugMenu_C_SetAchievementGranting) == 0x000038, "Wrong size on WIDGET_DebugMenu_C_SetAchievementGranting");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, AchievementGranting) == 0x000000, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::AchievementGranting' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, Temp_byte_Variable) == 0x000001, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, Temp_byte_Variable_1) == 0x000019, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, Temp_bool_Variable) == 0x00001A, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, K2Node_Select_Default) == 0x00001B, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00001C, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_DebugMenu_C_SetAchievementGranting, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_DebugMenu_C_SetAchievementGranting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


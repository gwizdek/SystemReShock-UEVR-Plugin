#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MOVECONTROL_FreeMove

#include "Basic.hpp"

#include "MOVECONTROL_FreeMove_classes.hpp"
#include "MOVECONTROL_FreeMove_parameters.hpp"


namespace SDK
{

// Function MOVECONTROL_FreeMove.MOVECONTROL_FreeMove_C.UpdateMoveControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MoveInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        LookInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_MoveControlParams        ControlParams                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<float>                           ActionInputValues                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   MoveInputScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Delta_Time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldExpire                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMOVECONTROL_FreeMove_C::UpdateMoveControl(const struct FVector2D& MoveInput, const struct FVector2D& LookInput, const struct FSTRUCT_MoveControlParams& ControlParams, TArray<float>& ActionInputValues, float MoveInputScale, float Delta_Time, bool* ShouldExpire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MOVECONTROL_FreeMove_C", "UpdateMoveControl");

	Params::MOVECONTROL_FreeMove_C_UpdateMoveControl Parms{};

	Parms.MoveInput = std::move(MoveInput);
	Parms.LookInput = std::move(LookInput);
	Parms.ControlParams = std::move(ControlParams);
	Parms.ActionInputValues = std::move(ActionInputValues);
	Parms.MoveInputScale = MoveInputScale;
	Parms.Delta_Time = Delta_Time;

	UObject::ProcessEvent(Func, &Parms);

	ActionInputValues = std::move(Parms.ActionInputValues);

	if (ShouldExpire != nullptr)
		*ShouldExpire = Parms.ShouldExpire;
}

}


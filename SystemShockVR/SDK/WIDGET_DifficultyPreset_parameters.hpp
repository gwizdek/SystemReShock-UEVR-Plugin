#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyPreset

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_DifficultyPreset.WIDGET_DifficultyPreset_C.ExecuteUbergraph_WIDGET_DifficultyPreset
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset) == 0x000004, "Wrong alignment on WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset");
static_assert(sizeof(WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset) == 0x000004, "Wrong size on WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset");
static_assert(offsetof(WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset, EntryPoint) == 0x000000, "Member 'WIDGET_DifficultyPreset_C_ExecuteUbergraph_WIDGET_DifficultyPreset::EntryPoint' has a wrong offset!");

// Function WIDGET_DifficultyPreset.WIDGET_DifficultyPreset_C.SetHighlighted
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyPreset_C_SetHighlighted final
{
public:
	bool                                          Highlighted_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyPreset_C_SetHighlighted) == 0x000001, "Wrong alignment on WIDGET_DifficultyPreset_C_SetHighlighted");
static_assert(sizeof(WIDGET_DifficultyPreset_C_SetHighlighted) == 0x000001, "Wrong size on WIDGET_DifficultyPreset_C_SetHighlighted");
static_assert(offsetof(WIDGET_DifficultyPreset_C_SetHighlighted, Highlighted_0) == 0x000000, "Member 'WIDGET_DifficultyPreset_C_SetHighlighted::Highlighted_0' has a wrong offset!");

// Function WIDGET_DifficultyPreset.WIDGET_DifficultyPreset_C.HighlightHandler
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyPreset_C_HighlightHandler final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyPreset_C_HighlightHandler) == 0x000008, "Wrong alignment on WIDGET_DifficultyPreset_C_HighlightHandler");
static_assert(sizeof(WIDGET_DifficultyPreset_C_HighlightHandler) == 0x000010, "Wrong size on WIDGET_DifficultyPreset_C_HighlightHandler");
static_assert(offsetof(WIDGET_DifficultyPreset_C_HighlightHandler, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyPreset_C_HighlightHandler::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyPreset_C_HighlightHandler, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyPreset_C_HighlightHandler::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyPreset.WIDGET_DifficultyPreset_C.On_MESH_InputRegion_MouseEnter_0
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0) == 0x000008, "Wrong alignment on WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0");
static_assert(sizeof(WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0) == 0x0000A8, "Wrong size on WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0");
static_assert(offsetof(WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0, MyGeometry) == 0x000000, "Member 'WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0, MouseEvent) == 0x000038, "Member 'WIDGET_DifficultyPreset_C_On_MESH_InputRegion_MouseEnter_0::MouseEvent' has a wrong offset!");

}


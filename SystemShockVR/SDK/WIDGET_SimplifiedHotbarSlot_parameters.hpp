#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SimplifiedHotbarSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot) == 0x000050, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot, EntryPoint) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000048, "Member 'WIDGET_SimplifiedHotbarSlot_C_ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_Tick) == 0x000004, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_Tick");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_Tick) == 0x00003C, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_Tick");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_SimplifiedHotbarSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetSlotNumber
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber) == 0x000070, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, Number) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::Number' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetSlotNumber::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.GetSlotIndex
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexFromNumber_Index;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex) == 0x000004, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex) == 0x000008, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex, SlotIndex) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex, CallFunc_GetSlotIndexFromNumber_Index) == 0x000004, "Member 'WIDGET_SimplifiedHotbarSlot_C_GetSlotIndex::CallFunc_GetSlotIndexFromNumber_Index' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.BindSlotToHotbar
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar final
{
public:
	class UWIDGET_HotbarSlot_C*                   HotbarSlot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar) == 0x000018, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar, HotbarSlot) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar::HotbarSlot' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_SimplifiedHotbarSlot_C_BindSlotToHotbar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetItemCount
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetItemCount final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetItemCount) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetItemCount");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetItemCount) == 0x000028, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetItemCount");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemCount, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemCount::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemCount, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetItemName
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetItemName final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetItemName) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetItemName");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetItemName) == 0x000028, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetItemName");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemName, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemName, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemName::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemName, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetItemIcon
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetItemIcon final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetItemIcon");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon) == 0x000028, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetItemIcon");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemIcon::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000008, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemIcon::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemIcon::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetItemIcon, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x000020, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetItemIcon::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetTextColor
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetTextColor final
{
public:
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetTextColor) == 0x000004, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetTextColor");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetTextColor) == 0x000008, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetTextColor");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetTextColor, CallFunc_GetMeshUIColor_Color) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetTextColor, CallFunc_GetMeshUIColor_Color_1) == 0x000004, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetTextColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");

// Function WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C.SetFrameColor
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_SimplifiedHotbarSlot_C_SetFrameColor final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor) == 0x000008, "Wrong alignment on WIDGET_SimplifiedHotbarSlot_C_SetFrameColor");
static_assert(sizeof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor) == 0x000020, "Wrong size on WIDGET_SimplifiedHotbarSlot_C_SetFrameColor");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetFrameColor::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetFrameColor::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetFrameColor::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SimplifiedHotbarSlot_C_SetFrameColor, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'WIDGET_SimplifiedHotbarSlot_C_SetFrameColor::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

}


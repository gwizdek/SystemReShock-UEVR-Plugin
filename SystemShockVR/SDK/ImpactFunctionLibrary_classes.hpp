#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ImpactFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ImpactFunctionLibrary.ImpactFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UImpactFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void CreateImpactEffects(class UDataTable* ImpactTable, const struct FVector& ImpactLocation, const struct FVector& ImpactDirection, const struct FVector& SurfaceDirection, class UPhysicalMaterial* Physical_Material, class AActor* HitActor, class UPrimitiveComponent* HitComponent, class FName BoneName, class APAWN_SystemShockCharacter_C* Player_Owner, float DetectionRadius, const struct FAttribDamageInstance& DamageInstance, const struct FSTRUCT_EffectParams& SoundParameters, const struct FSTRUCT_EffectParams& EffectParameters, class UObject* __WorldContext, bool* Success, struct FSTRUCT_ImpactEffectResults* Results);
	static void CreateImpactEffectsWithEvent(class UDataTable* ImpactTable, const struct FVector& ImpactLocation, const struct FVector& ImpactDirection, const struct FVector& SurfaceDirection, class UPhysicalMaterial* Physical_Material, class AActor* HitActor, class UPrimitiveComponent* HitComponent, class FName BoneName, class APAWN_SystemShockCharacter_C* Player_Owner, float DetectionRadius, const struct FAttribDamageInstance& DamageInstance, const struct FSTRUCT_EffectParams& SoundParameters, const struct FSTRUCT_EffectParams& EffectParameters, const struct FLatentObjectEventHandle& OnEffectsSpawned, class UObject* __WorldContext, bool* Success, struct FSTRUCT_ImpactEffectResults* Results);
	static void CreateSoundDetectionEvent(class APAWN_SystemShockCharacter_C* SourcePawn, const struct FVector& Location, float Radius, class UObject* __WorldContext);
	static void CreateVisualDetectionEvent(class APAWN_SystemShockCharacter_C* SourcePawn, const struct FVector& Location, float MaxDistance, class UObject* __WorldContext);
	static void TriangulateRayDirection(const struct FVector& CameraLocation, const struct FVector& CameraDirection, const struct FVector& BarrelLocation, float MaxTraceDistance, class AActor* OwnerActor, class UObject* __WorldContext, struct FVector* TriangulatedDirection);
	static void TriangulateImpactLocation(const struct FVector& CameraLocation, const struct FVector& CameraDirection, const struct FVector& BarrelLocation, float Radius, float MaxTraceDistance, class AActor* OwnerActor, class UObject* __WorldContext, bool* HitSomething, struct FHitResult* HitResult, struct FVector* TriangulatedDirection);
	static void GetImpactParamsForSurfaceType(class UDataTable* ImpactTable, EPhysicalSurface SurfaceType, class UObject* __WorldContext, bool* Found, struct FSTRUCT_ImpactParams* Result);
	static void GetComponentToImpact(class AActor* HitActor, class UPrimitiveComponent* HitComponent, class UObject* __WorldContext, class UPrimitiveComponent** ResultComponent, class UCOMP_SkinnedDecalSampler_C** ResultSkinnedDecalSampler);
	static void CreateImpactDataFromHit(const struct FHitResult& Hit, float ImpulseStrength, class UObject* __WorldContext, class UOBJ_ImpactData_C** ImpactData);
	static void SpawnDebrisFragmentsInVolumeFromTemplate(const struct FDataTableRowHandle& Template, class UBoxComponent* SpawnVolume, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext);
	static void SpawnDebrisFragmentsFromTemplate(const struct FDataTableRowHandle& Template, class USceneComponent* ParentComponent, const struct FVector& RelativeLocation, const struct FVector& RelativeHalfExtents, const struct FVector& ForwardVector, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext);
	static void SpawnDebrisFragmentsInVolume(TArray<class UStaticMesh*>& MeshFragments, class UBoxComponent* SpawnVolume, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext);
	static void SpawnDebrisFragments(TArray<class UStaticMesh*>& MeshFragments, class USceneComponent* ParentComponent, const struct FVector& RelativeLocation, const struct FVector& RelativeHalfExtents, const struct FVector& ForwardVector, float ImpulseStrength, float ConeHalfAngle, class UObject* __WorldContext);
	static void SpawnDebrisGib(class AActor* SourceActor, class UStaticMesh* StaticMesh, const struct FTransform& SpawnTransform, class UObject* __WorldContext, class ADismembermentHeroGib_Static_Debris_C** Result);
	static void SpawnDebrisGibs(class AActor* SourceActor, const struct FTransform& WorldTransform, TArray<class UStaticMesh*>& GoreMeshes, class UObject* __WorldContext);
	static void SpawnDebrisGibsWithTransforms(class USceneComponent* SourceComponent, TArray<class UStaticMesh*>& GoreMeshes, TArray<struct FTransform>& GoreTransforms, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ImpactFunctionLibrary_C">();
	}
	static class UImpactFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UImpactFunctionLibrary_C>();
	}
};
static_assert(alignof(UImpactFunctionLibrary_C) == 0x000008, "Wrong alignment on UImpactFunctionLibrary_C");
static_assert(sizeof(UImpactFunctionLibrary_C) == 0x000028, "Wrong size on UImpactFunctionLibrary_C");

}


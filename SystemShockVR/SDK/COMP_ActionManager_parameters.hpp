#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_ActionManager

#include "Basic.hpp"

#include "ENUM_ActionPriority_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "CoreGame_structs.hpp"
#include "STRUCT_CharacterActionParams_structs.hpp"


namespace SDK::Params
{

// Function COMP_ActionManager.COMP_ActionManager_C.OnActionInterruptible__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_OnActionInterruptible__DelegateSignature final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_OnActionInterruptible__DelegateSignature) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnActionInterruptible__DelegateSignature");
static_assert(sizeof(COMP_ActionManager_C_OnActionInterruptible__DelegateSignature) == 0x000008, "Wrong size on COMP_ActionManager_C_OnActionInterruptible__DelegateSignature");
static_assert(offsetof(COMP_ActionManager_C_OnActionInterruptible__DelegateSignature, Action) == 0x000000, "Member 'COMP_ActionManager_C_OnActionInterruptible__DelegateSignature::Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnActionInterrupted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_OnActionInterrupted__DelegateSignature final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_OnActionInterrupted__DelegateSignature) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnActionInterrupted__DelegateSignature");
static_assert(sizeof(COMP_ActionManager_C_OnActionInterrupted__DelegateSignature) == 0x000008, "Wrong size on COMP_ActionManager_C_OnActionInterrupted__DelegateSignature");
static_assert(offsetof(COMP_ActionManager_C_OnActionInterrupted__DelegateSignature, Action) == 0x000000, "Member 'COMP_ActionManager_C_OnActionInterrupted__DelegateSignature::Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnActionStarted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_OnActionStarted__DelegateSignature final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_OnActionStarted__DelegateSignature) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnActionStarted__DelegateSignature");
static_assert(sizeof(COMP_ActionManager_C_OnActionStarted__DelegateSignature) == 0x000008, "Wrong size on COMP_ActionManager_C_OnActionStarted__DelegateSignature");
static_assert(offsetof(COMP_ActionManager_C_OnActionStarted__DelegateSignature, Action) == 0x000000, "Member 'COMP_ActionManager_C_OnActionStarted__DelegateSignature::Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnActionEnded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_OnActionEnded__DelegateSignature final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_OnActionEnded__DelegateSignature) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnActionEnded__DelegateSignature");
static_assert(sizeof(COMP_ActionManager_C_OnActionEnded__DelegateSignature) == 0x000008, "Wrong size on COMP_ActionManager_C_OnActionEnded__DelegateSignature");
static_assert(offsetof(COMP_ActionManager_C_OnActionEnded__DelegateSignature, Action) == 0x000000, "Member 'COMP_ActionManager_C_OnActionEnded__DelegateSignature::Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnQueuedActionStarted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature");
static_assert(sizeof(COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature) == 0x000008, "Wrong size on COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature");
static_assert(offsetof(COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature, Action) == 0x000000, "Member 'COMP_ActionManager_C_OnQueuedActionStarted__DelegateSignature::Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ExecuteUbergraph_COMP_ActionManager
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager) == 0x000004, "Wrong alignment on COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager");
static_assert(sizeof(COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager) == 0x000008, "Wrong size on COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager");
static_assert(offsetof(COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager, EntryPoint) == 0x000000, "Member 'COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_ActionManager_C_ExecuteUbergraph_COMP_ActionManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_ActionManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_ActionManager_C_ReceiveTick");
static_assert(sizeof(COMP_ActionManager_C_ReceiveTick) == 0x000004, "Wrong size on COMP_ActionManager_C_ReceiveTick");
static_assert(offsetof(COMP_ActionManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_ActionManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.InitializeActionManager
// 0x0058 (0x0058 - 0x0000)
struct COMP_ActionManager_C_InitializeActionManager final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeMontage_MontageDuration;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_InitializeActionManager) == 0x000008, "Wrong alignment on COMP_ActionManager_C_InitializeActionManager");
static_assert(sizeof(COMP_ActionManager_C_InitializeActionManager) == 0x000058, "Wrong size on COMP_ActionManager_C_InitializeActionManager");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, AnimInstance) == 0x000000, "Member 'COMP_ActionManager_C_InitializeActionManager::AnimInstance' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, Character) == 0x000008, "Member 'COMP_ActionManager_C_InitializeActionManager::Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000010, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'COMP_ActionManager_C_InitializeActionManager::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_ActionManager_C_InitializeActionManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'COMP_ActionManager_C_InitializeActionManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_GetMontage_Result) == 0x000048, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_ResumeMontage_MontageDuration) == 0x000050, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_ResumeMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_InitializeActionManager, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'COMP_ActionManager_C_InitializeActionManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.CanBeginAction
// 0x0040 (0x0040 - 0x0000)
struct COMP_ActionManager_C_CanBeginAction final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           Priority;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCompatibleMontageForAnimInstance_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInterruptibleAtPriority_Result;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_CanBeginAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_CanBeginAction");
static_assert(sizeof(COMP_ActionManager_C_CanBeginAction) == 0x000040, "Wrong size on COMP_ActionManager_C_CanBeginAction");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, Montage) == 0x000000, "Member 'COMP_ActionManager_C_CanBeginAction::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, Priority) == 0x000008, "Member 'COMP_ActionManager_C_CanBeginAction::Priority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, Result) == 0x000009, "Member 'COMP_ActionManager_C_CanBeginAction::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000018, "Member 'COMP_ActionManager_C_CanBeginAction::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_ActionManager_C_CanBeginAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000028, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_IsCompatibleMontageForAnimInstance_ReturnValue) == 0x000038, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_IsCompatibleMontageForAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_IsInterruptibleAtPriority_Result) == 0x000039, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_IsInterruptibleAtPriority_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_CanBeginAction, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'COMP_ActionManager_C_CanBeginAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.TryBeginAction
// 0x0028 (0x0028 - 0x0000)
struct COMP_ActionManager_C_TryBeginAction final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           Priority;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     Action;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_TryBeginAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_TryBeginAction");
static_assert(sizeof(COMP_ActionManager_C_TryBeginAction) == 0x000028, "Wrong size on COMP_ActionManager_C_TryBeginAction");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, Montage) == 0x000000, "Member 'COMP_ActionManager_C_TryBeginAction::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, Priority) == 0x000008, "Member 'COMP_ActionManager_C_TryBeginAction::Priority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, Action) == 0x000010, "Member 'COMP_ActionManager_C_TryBeginAction::Action' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, CallFunc_CanBeginAction_Result) == 0x000018, "Member 'COMP_ActionManager_C_TryBeginAction::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'COMP_ActionManager_C_TryBeginAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryBeginAction, CallFunc_ForceBeginAction_Action) == 0x000020, "Member 'COMP_ActionManager_C_TryBeginAction::CallFunc_ForceBeginAction_Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.TryEndCurrentAction
// 0x000C (0x000C - 0x0000)
struct COMP_ActionManager_C_TryEndCurrentAction final
{
public:
	ENUM_ActionPriority                           InterruptPriority;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendOutTime;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInterruptibleAtPriority_Result;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_TryEndCurrentAction) == 0x000004, "Wrong alignment on COMP_ActionManager_C_TryEndCurrentAction");
static_assert(sizeof(COMP_ActionManager_C_TryEndCurrentAction) == 0x00000C, "Wrong size on COMP_ActionManager_C_TryEndCurrentAction");
static_assert(offsetof(COMP_ActionManager_C_TryEndCurrentAction, InterruptPriority) == 0x000000, "Member 'COMP_ActionManager_C_TryEndCurrentAction::InterruptPriority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryEndCurrentAction, BlendOutTime) == 0x000004, "Member 'COMP_ActionManager_C_TryEndCurrentAction::BlendOutTime' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryEndCurrentAction, Result) == 0x000008, "Member 'COMP_ActionManager_C_TryEndCurrentAction::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryEndCurrentAction, CallFunc_IsInterruptibleAtPriority_Result) == 0x000009, "Member 'COMP_ActionManager_C_TryEndCurrentAction::CallFunc_IsInterruptibleAtPriority_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryEndCurrentAction, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'COMP_ActionManager_C_TryEndCurrentAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ForceBeginAction
// 0x00A8 (0x00A8 - 0x0000)
struct COMP_ActionManager_C_ForceBeginAction final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           Priority;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     Action;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     NewAction;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_PlayMontage_MontageDuration;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_ForceBeginAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_ForceBeginAction");
static_assert(sizeof(COMP_ActionManager_C_ForceBeginAction) == 0x0000A8, "Wrong size on COMP_ActionManager_C_ForceBeginAction");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, Montage) == 0x000000, "Member 'COMP_ActionManager_C_ForceBeginAction::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, Priority) == 0x000008, "Member 'COMP_ActionManager_C_ForceBeginAction::Priority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, Action) == 0x000010, "Member 'COMP_ActionManager_C_ForceBeginAction::Action' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, AnimInstance) == 0x000018, "Member 'COMP_ActionManager_C_ForceBeginAction::AnimInstance' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, NewAction) == 0x000020, "Member 'COMP_ActionManager_C_ForceBeginAction::NewAction' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, Character) == 0x000028, "Member 'COMP_ActionManager_C_ForceBeginAction::Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000040, "Member 'COMP_ActionManager_C_ForceBeginAction::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'COMP_ActionManager_C_ForceBeginAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000080, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_GetAnimInstance_ReturnValue) == 0x000088, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'COMP_ActionManager_C_ForceBeginAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_PlayMontage_MontageDuration) == 0x0000A0, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_PlayMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceBeginAction, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A4, "Member 'COMP_ActionManager_C_ForceBeginAction::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ForceEndCurrentAction
// 0x0058 (0x0058 - 0x0000)
struct COMP_ActionManager_C_ForceEndCurrentAction final
{
public:
	class UCharacterAction_C*                     NewAction;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     PreviousAction;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_ForceEndCurrentAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_ForceEndCurrentAction");
static_assert(sizeof(COMP_ActionManager_C_ForceEndCurrentAction) == 0x000058, "Wrong size on COMP_ActionManager_C_ForceEndCurrentAction");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, NewAction) == 0x000000, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::NewAction' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, BlendOutTime) == 0x000008, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::BlendOutTime' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, PreviousAction) == 0x000010, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::PreviousAction' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, AnimInstance) == 0x000018, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::AnimInstance' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, CallFunc_GetMontage_Result) == 0x000020, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000030, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000040, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ForceEndCurrentAction, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'COMP_ActionManager_C_ForceEndCurrentAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnActionMontageEnded
// 0x0020 (0x0020 - 0x0000)
struct COMP_ActionManager_C_OnActionMontageEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interrupted;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_Result;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_OnActionMontageEnded) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnActionMontageEnded");
static_assert(sizeof(COMP_ActionManager_C_OnActionMontageEnded) == 0x000020, "Wrong size on COMP_ActionManager_C_OnActionMontageEnded");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, Montage) == 0x000000, "Member 'COMP_ActionManager_C_OnActionMontageEnded::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, Interrupted) == 0x000008, "Member 'COMP_ActionManager_C_OnActionMontageEnded::Interrupted' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, CallFunc_IsActive_Result) == 0x000009, "Member 'COMP_ActionManager_C_OnActionMontageEnded::CallFunc_IsActive_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, CallFunc_GetMontage_Result) == 0x000010, "Member 'COMP_ActionManager_C_OnActionMontageEnded::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'COMP_ActionManager_C_OnActionMontageEnded::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnActionMontageEnded, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'COMP_ActionManager_C_OnActionMontageEnded::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.TryQueueAction
// 0x0068 (0x0068 - 0x0000)
struct COMP_ActionManager_C_TryQueueAction final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           Priority;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QueueDuration;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLatentEventHandle                     K2Node_MakeStruct_LatentEventHandle;               // 0x0010(0x0010)(ContainsInstancedReference)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCharacterAction_C* Action)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_CharacterActionParams          K2Node_MakeStruct_STRUCT_CharacterActionParams;    // 0x0040(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_TryQueueAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_TryQueueAction");
static_assert(sizeof(COMP_ActionManager_C_TryQueueAction) == 0x000068, "Wrong size on COMP_ActionManager_C_TryQueueAction");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, Montage) == 0x000000, "Member 'COMP_ActionManager_C_TryQueueAction::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, Priority) == 0x000008, "Member 'COMP_ActionManager_C_TryQueueAction::Priority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, QueueDuration) == 0x00000C, "Member 'COMP_ActionManager_C_TryQueueAction::QueueDuration' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, K2Node_MakeStruct_LatentEventHandle) == 0x000010, "Member 'COMP_ActionManager_C_TryQueueAction::K2Node_MakeStruct_LatentEventHandle' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, CallFunc_CanBeginAction_Result) == 0x000020, "Member 'COMP_ActionManager_C_TryQueueAction::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'COMP_ActionManager_C_TryQueueAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'COMP_ActionManager_C_TryQueueAction::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'COMP_ActionManager_C_TryQueueAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'COMP_ActionManager_C_TryQueueAction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, K2Node_MakeStruct_STRUCT_CharacterActionParams) == 0x000040, "Member 'COMP_ActionManager_C_TryQueueAction::K2Node_MakeStruct_STRUCT_CharacterActionParams' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueAction, CallFunc_ForceBeginAction_Action) == 0x000060, "Member 'COMP_ActionManager_C_TryQueueAction::CallFunc_ForceBeginAction_Action' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.TryQueueActionWithEvent
// 0x0068 (0x0068 - 0x0000)
struct COMP_ActionManager_C_TryQueueActionWithEvent final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           Priority;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QueueDuration;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLatentEventHandle                     EventHandle;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallEventByHandle_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCharacterAction_C* Action)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_CharacterActionParams          K2Node_MakeStruct_STRUCT_CharacterActionParams;    // 0x0048(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_TryQueueActionWithEvent) == 0x000008, "Wrong alignment on COMP_ActionManager_C_TryQueueActionWithEvent");
static_assert(sizeof(COMP_ActionManager_C_TryQueueActionWithEvent) == 0x000068, "Wrong size on COMP_ActionManager_C_TryQueueActionWithEvent");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, Montage) == 0x000000, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, Priority) == 0x000008, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::Priority' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, QueueDuration) == 0x00000C, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::QueueDuration' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, EventHandle) == 0x000010, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::EventHandle' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_CanBeginAction_Result) == 0x000020, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_CallEventByHandle_ReturnValue) == 0x000021, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_CallEventByHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_ForceBeginAction_Action) == 0x000028, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_TryQueueActionWithEvent, K2Node_MakeStruct_STRUCT_CharacterActionParams) == 0x000048, "Member 'COMP_ActionManager_C_TryQueueActionWithEvent::K2Node_MakeStruct_STRUCT_CharacterActionParams' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ClearQueuedAction
// 0x0040 (0x0040 - 0x0000)
struct COMP_ActionManager_C_ClearQueuedAction final
{
public:
	struct FLatentEventHandle                     K2Node_MakeStruct_LatentEventHandle;               // 0x0000(0x0010)(ContainsInstancedReference)
	TDelegate<void(class UCharacterAction_C* Action)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FSTRUCT_CharacterActionParams          K2Node_MakeStruct_STRUCT_CharacterActionParams;    // 0x0020(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_ClearQueuedAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_ClearQueuedAction");
static_assert(sizeof(COMP_ActionManager_C_ClearQueuedAction) == 0x000040, "Wrong size on COMP_ActionManager_C_ClearQueuedAction");
static_assert(offsetof(COMP_ActionManager_C_ClearQueuedAction, K2Node_MakeStruct_LatentEventHandle) == 0x000000, "Member 'COMP_ActionManager_C_ClearQueuedAction::K2Node_MakeStruct_LatentEventHandle' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ClearQueuedAction, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'COMP_ActionManager_C_ClearQueuedAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ClearQueuedAction, K2Node_MakeStruct_STRUCT_CharacterActionParams) == 0x000020, "Member 'COMP_ActionManager_C_ClearQueuedAction::K2Node_MakeStruct_STRUCT_CharacterActionParams' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnTryBeginQueuedAction
// 0x0038 (0x0038 - 0x0000)
struct COMP_ActionManager_C_OnTryBeginQueuedAction final
{
public:
	class UCharacterAction_C*                     PreviousAction;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLatentEventHandle                     EventHandle;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_HasQueuedAction_Result;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallEventByHandle_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_OnTryBeginQueuedAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_OnTryBeginQueuedAction");
static_assert(sizeof(COMP_ActionManager_C_OnTryBeginQueuedAction) == 0x000038, "Wrong size on COMP_ActionManager_C_OnTryBeginQueuedAction");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, PreviousAction) == 0x000000, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::PreviousAction' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, EventHandle) == 0x000008, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::EventHandle' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_HasQueuedAction_Result) == 0x000018, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_HasQueuedAction_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_CallEventByHandle_ReturnValue) == 0x000019, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_CallEventByHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00001C, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_CanBeginAction_Result) == 0x000020, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_ForceBeginAction_Action) == 0x000028, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnTryBeginQueuedAction, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'COMP_ActionManager_C_OnTryBeginQueuedAction::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.OnMontageDurationEnded
// 0x0002 (0x0002 - 0x0000)
struct COMP_ActionManager_C_OnMontageDurationEnded final
{
public:
	bool                                          CallFunc_IsActive_Result;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_OnMontageDurationEnded) == 0x000001, "Wrong alignment on COMP_ActionManager_C_OnMontageDurationEnded");
static_assert(sizeof(COMP_ActionManager_C_OnMontageDurationEnded) == 0x000002, "Wrong size on COMP_ActionManager_C_OnMontageDurationEnded");
static_assert(offsetof(COMP_ActionManager_C_OnMontageDurationEnded, CallFunc_IsActive_Result) == 0x000000, "Member 'COMP_ActionManager_C_OnMontageDurationEnded::CallFunc_IsActive_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_OnMontageDurationEnded, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'COMP_ActionManager_C_OnMontageDurationEnded::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.UpdateActiveAction
// 0x0070 (0x0070 - 0x0000)
struct COMP_ActionManager_C_UpdateActiveAction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetElapsedTime_IsFinished;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_UpdateActiveAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_UpdateActiveAction");
static_assert(sizeof(COMP_ActionManager_C_UpdateActiveAction) == 0x000070, "Wrong size on COMP_ActionManager_C_UpdateActiveAction");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, DeltaTime) == 0x000000, "Member 'COMP_ActionManager_C_UpdateActiveAction::DeltaTime' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, AnimInstance) == 0x000008, "Member 'COMP_ActionManager_C_UpdateActiveAction::AnimInstance' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetOwner_ReturnValue_1) == 0x000038, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetMontage_Result) == 0x000040, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000048, "Member 'COMP_ActionManager_C_UpdateActiveAction::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'COMP_ActionManager_C_UpdateActiveAction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_Montage_GetPosition_ReturnValue) == 0x000054, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000058, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_SetElapsedTime_IsFinished) == 0x000068, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_SetElapsedTime_IsFinished' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_UpdateActiveAction, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'COMP_ActionManager_C_UpdateActiveAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.SetActionsPaused
// 0x0002 (0x0002 - 0x0000)
struct COMP_ActionManager_C_SetActionsPaused final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_SetActionsPaused) == 0x000001, "Wrong alignment on COMP_ActionManager_C_SetActionsPaused");
static_assert(sizeof(COMP_ActionManager_C_SetActionsPaused) == 0x000002, "Wrong size on COMP_ActionManager_C_SetActionsPaused");
static_assert(offsetof(COMP_ActionManager_C_SetActionsPaused, State) == 0x000000, "Member 'COMP_ActionManager_C_SetActionsPaused::State' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_SetActionsPaused, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'COMP_ActionManager_C_SetActionsPaused::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.GetCurrentAction
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_GetCurrentAction final
{
public:
	class UCharacterAction_C*                     CurrentAction_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_GetCurrentAction) == 0x000008, "Wrong alignment on COMP_ActionManager_C_GetCurrentAction");
static_assert(sizeof(COMP_ActionManager_C_GetCurrentAction) == 0x000008, "Wrong size on COMP_ActionManager_C_GetCurrentAction");
static_assert(offsetof(COMP_ActionManager_C_GetCurrentAction, CurrentAction_0) == 0x000000, "Member 'COMP_ActionManager_C_GetCurrentAction::CurrentAction_0' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.GetCurrentMontage
// 0x0018 (0x0018 - 0x0000)
struct COMP_ActionManager_C_GetCurrentMontage final
{
public:
	class UAnimMontage*                           Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_GetCurrentMontage) == 0x000008, "Wrong alignment on COMP_ActionManager_C_GetCurrentMontage");
static_assert(sizeof(COMP_ActionManager_C_GetCurrentMontage) == 0x000018, "Wrong size on COMP_ActionManager_C_GetCurrentMontage");
static_assert(offsetof(COMP_ActionManager_C_GetCurrentMontage, Result) == 0x000000, "Member 'COMP_ActionManager_C_GetCurrentMontage::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetCurrentMontage, CallFunc_GetMontage_Result) == 0x000008, "Member 'COMP_ActionManager_C_GetCurrentMontage::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetCurrentMontage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'COMP_ActionManager_C_GetCurrentMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.HasQueuedAction
// 0x0002 (0x0002 - 0x0000)
struct COMP_ActionManager_C_HasQueuedAction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_HasQueuedAction) == 0x000001, "Wrong alignment on COMP_ActionManager_C_HasQueuedAction");
static_assert(sizeof(COMP_ActionManager_C_HasQueuedAction) == 0x000002, "Wrong size on COMP_ActionManager_C_HasQueuedAction");
static_assert(offsetof(COMP_ActionManager_C_HasQueuedAction, Result) == 0x000000, "Member 'COMP_ActionManager_C_HasQueuedAction::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_HasQueuedAction, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'COMP_ActionManager_C_HasQueuedAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.GetActionProgress
// 0x000C (0x000C - 0x0000)
struct COMP_ActionManager_C_GetActionProgress final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetProgress_Progress;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_GetActionProgress) == 0x000004, "Wrong alignment on COMP_ActionManager_C_GetActionProgress");
static_assert(sizeof(COMP_ActionManager_C_GetActionProgress) == 0x00000C, "Wrong size on COMP_ActionManager_C_GetActionProgress");
static_assert(offsetof(COMP_ActionManager_C_GetActionProgress, Result) == 0x000000, "Member 'COMP_ActionManager_C_GetActionProgress::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetActionProgress, CallFunc_GetProgress_Progress) == 0x000004, "Member 'COMP_ActionManager_C_GetActionProgress::CallFunc_GetProgress_Progress' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetActionProgress, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_ActionManager_C_GetActionProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.IsMontageCurrentlyPlaying
// 0x0020 (0x0020 - 0x0000)
struct COMP_ActionManager_C_IsMontageCurrentlyPlaying final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_IsMontageCurrentlyPlaying) == 0x000008, "Wrong alignment on COMP_ActionManager_C_IsMontageCurrentlyPlaying");
static_assert(sizeof(COMP_ActionManager_C_IsMontageCurrentlyPlaying) == 0x000020, "Wrong size on COMP_ActionManager_C_IsMontageCurrentlyPlaying");
static_assert(offsetof(COMP_ActionManager_C_IsMontageCurrentlyPlaying, Montage) == 0x000000, "Member 'COMP_ActionManager_C_IsMontageCurrentlyPlaying::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsMontageCurrentlyPlaying, Result) == 0x000008, "Member 'COMP_ActionManager_C_IsMontageCurrentlyPlaying::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsMontageCurrentlyPlaying, CallFunc_GetMontage_Result) == 0x000010, "Member 'COMP_ActionManager_C_IsMontageCurrentlyPlaying::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsMontageCurrentlyPlaying, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'COMP_ActionManager_C_IsMontageCurrentlyPlaying::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsMontageCurrentlyPlaying, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'COMP_ActionManager_C_IsMontageCurrentlyPlaying::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.IsActionQueuedWithMontage
// 0x0010 (0x0010 - 0x0000)
struct COMP_ActionManager_C_IsActionQueuedWithMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_IsActionQueuedWithMontage) == 0x000008, "Wrong alignment on COMP_ActionManager_C_IsActionQueuedWithMontage");
static_assert(sizeof(COMP_ActionManager_C_IsActionQueuedWithMontage) == 0x000010, "Wrong size on COMP_ActionManager_C_IsActionQueuedWithMontage");
static_assert(offsetof(COMP_ActionManager_C_IsActionQueuedWithMontage, Montage) == 0x000000, "Member 'COMP_ActionManager_C_IsActionQueuedWithMontage::Montage' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsActionQueuedWithMontage, Result) == 0x000008, "Member 'COMP_ActionManager_C_IsActionQueuedWithMontage::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_IsActionQueuedWithMontage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'COMP_ActionManager_C_IsActionQueuedWithMontage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.SetActionsEnabled
// 0x0002 (0x0002 - 0x0000)
struct COMP_ActionManager_C_SetActionsEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_SetActionsEnabled) == 0x000001, "Wrong alignment on COMP_ActionManager_C_SetActionsEnabled");
static_assert(sizeof(COMP_ActionManager_C_SetActionsEnabled) == 0x000002, "Wrong size on COMP_ActionManager_C_SetActionsEnabled");
static_assert(offsetof(COMP_ActionManager_C_SetActionsEnabled, State) == 0x000000, "Member 'COMP_ActionManager_C_SetActionsEnabled::State' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_SetActionsEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'COMP_ActionManager_C_SetActionsEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.SetActionTickEnabled
// 0x0002 (0x0002 - 0x0000)
struct COMP_ActionManager_C_SetActionTickEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_SetActionTickEnabled) == 0x000001, "Wrong alignment on COMP_ActionManager_C_SetActionTickEnabled");
static_assert(sizeof(COMP_ActionManager_C_SetActionTickEnabled) == 0x000002, "Wrong size on COMP_ActionManager_C_SetActionTickEnabled");
static_assert(offsetof(COMP_ActionManager_C_SetActionTickEnabled, Enabled) == 0x000000, "Member 'COMP_ActionManager_C_SetActionTickEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_SetActionTickEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'COMP_ActionManager_C_SetActionTickEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.GetQueuedActionMontage
// 0x0008 (0x0008 - 0x0000)
struct COMP_ActionManager_C_GetQueuedActionMontage final
{
public:
	class UAnimMontage*                           QueuedMontage;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_GetQueuedActionMontage) == 0x000008, "Wrong alignment on COMP_ActionManager_C_GetQueuedActionMontage");
static_assert(sizeof(COMP_ActionManager_C_GetQueuedActionMontage) == 0x000008, "Wrong size on COMP_ActionManager_C_GetQueuedActionMontage");
static_assert(offsetof(COMP_ActionManager_C_GetQueuedActionMontage, QueuedMontage) == 0x000000, "Member 'COMP_ActionManager_C_GetQueuedActionMontage::QueuedMontage' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.GetQueueTimeRemaining
// 0x0014 (0x0014 - 0x0000)
struct COMP_ActionManager_C_GetQueueTimeRemaining final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_ActionManager_C_GetQueueTimeRemaining) == 0x000004, "Wrong alignment on COMP_ActionManager_C_GetQueueTimeRemaining");
static_assert(sizeof(COMP_ActionManager_C_GetQueueTimeRemaining) == 0x000014, "Wrong size on COMP_ActionManager_C_GetQueueTimeRemaining");
static_assert(offsetof(COMP_ActionManager_C_GetQueueTimeRemaining, Result) == 0x000000, "Member 'COMP_ActionManager_C_GetQueueTimeRemaining::Result' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetQueueTimeRemaining, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'COMP_ActionManager_C_GetQueueTimeRemaining::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetQueueTimeRemaining, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_ActionManager_C_GetQueueTimeRemaining::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetQueueTimeRemaining, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'COMP_ActionManager_C_GetQueueTimeRemaining::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_GetQueueTimeRemaining, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'COMP_ActionManager_C_GetQueueTimeRemaining::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function COMP_ActionManager.COMP_ActionManager_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_ActionManager_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_ActionManager_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_ActionManager_C_ShouldSaveComponent");
static_assert(sizeof(COMP_ActionManager_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_ActionManager_C_ShouldSaveComponent");
static_assert(offsetof(COMP_ActionManager_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_ActionManager_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_ActionManager_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_ActionManager_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_ActionManager_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_SentryTurret_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_InteractResultType_structs.hpp"
#include "ENUM_DoorState_structs.hpp"
#include "INTERACT_DestructibleBase_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_SentryTurret_Base.INTERACT_SentryTurret_Base_C
// 0x0188 (0x04D0 - 0x0348)
class AINTERACT_SentryTurret_Base_C : public AINTERACT_DestructibleBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_SentryTurret_Base_C;       // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_VoxelAudio_C*                     Voxel_Rotating;                                    // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FulcrumMesh;                                       // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorRightMesh;                                     // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorLeftMesh;                                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DomeMesh;                                          // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BaseMesh;                                          // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorState                                DoorState;                                         // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedStateTime;                                  // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurretDeployDuration;                              // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurretConcealedHeight;                             // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorOpenDistance;                                  // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTurretRotating;                                  // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTurretAudible;                                   // 0x03A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6[0x2];                                      // 0x03A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               DeploySoundCue;                                    // 0x03A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ConcealSoundCue;                                   // 0x03D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ExplodeSoundCue;                                   // 0x03F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ExplodeFX;                                         // 0x0420(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsTurretEnabled;                                   // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelAudioComponent*                   LoopAudioComponent;                                // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BrokenDomeMesh;                                    // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BrokenFulcrumMesh;                                 // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    DomeGoreMeshes;                                    // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class USoundCue>               RotateStartSoundCue;                               // 0x0478(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundCue*                              RotateLoopSoundCue;                                // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               RotateEndSoundCue;                                 // 0x04A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_SentryTurret_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature(bool bAudibleState);
	void BndEvt__INTERACT_SentryTurret_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void UserConstructionScript();
	void IsSentryTurretEnabled(bool* Result);
	void IsSentryTurretAudible(bool* Result);
	void CanDeploySentryTurret(bool* Result);
	void SetSentryTurretRelativePitch(float Pitch);
	void SetSentryTurretRelativeYaw(float Yaw);
	void GetSentryTurretRelativeYaw(float* Result);
	void GetTurretRelativeRotation(struct FRotator* Result);
	void InitializeSentryTurret(bool OnBeginPlay);
	void SetupAttributeBinds();
	void TickSentryTurret(float DeltaSeconds);
	void TickSentryTurretTransition(float DeltaSeconds);
	void TryDeploySentryTurret(class AActor* SourceActor, bool* Result);
	void ForceDeploySentryTurret(class AActor* SourceActor);
	void TryConcealSentryTurret(bool* Result);
	void ForceConcealSentryTurret();
	void UpdateSentryTurretTransition(float StateProgress);
	void UpdateDomeMeshLocation(float DeployProgress);
	void UpdateDoorMeshLocations(float OpenProgress);
	void UpdateMeshEmissiveStrength(float Strength);
	void SetSentryTurretVisibility(bool VisibilityState);
	void SetSentryTurretAudibility(bool AudibilityState);
	void GetTurretYawAngleToLocation(const struct FVector& Location, float* Result);
	void GetTurretPitchAngleToLocation(const struct FVector& Location, float* Result);
	void GetElapsedStateTime(float* Result);
	void HasTickBehaviorWhilePerceptible(bool* Result);
	void HasCriticalTickBehavior(bool* Result);
	void CanChangeTickState(bool DesiredState, bool* Result);
	void TryChangeTickState(bool DesiredState, bool* Result);
	void OnTickStateChanged(bool State);
	void GetDoorState(ENUM_DoorState* Result);
	void OnMagneticDisableStateChanged(bool DisableState);
	void OnSentryTurretStartedDeploying(class AActor* SourceActor);
	void OnSentryTurretFinishedDeploying();
	void OnSentryTurretStartedConcealing();
	void OnSentryTurretFinishedConcealing();
	void PlayExplosionEffects();
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void SpawnGoreDebris();
	void SetBrokenMeshes();
	void TryStartRotating();
	void TryStopRotating();
	void InitializeDestructible();
	void OnDeath(class AActor* SourceActor, bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void UpdateDeathSettings(bool DuringBeginPlay, bool* Result);
	void GetArmorAugmentationPercentage(class UOBJ_ImpactData_C* ImpactData, float* Result);
	void GetDefaultOverrideAttributes(TArray<struct FDefaultAttribute>* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_SentryTurret_Base_C">();
	}
	static class AINTERACT_SentryTurret_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_SentryTurret_Base_C>();
	}
};
static_assert(alignof(AINTERACT_SentryTurret_Base_C) == 0x000008, "Wrong alignment on AINTERACT_SentryTurret_Base_C");
static_assert(sizeof(AINTERACT_SentryTurret_Base_C) == 0x0004D0, "Wrong size on AINTERACT_SentryTurret_Base_C");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, UberGraphFrame_INTERACT_SentryTurret_Base_C) == 0x000348, "Member 'AINTERACT_SentryTurret_Base_C::UberGraphFrame_INTERACT_SentryTurret_Base_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, Voxel_Rotating) == 0x000350, "Member 'AINTERACT_SentryTurret_Base_C::Voxel_Rotating' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, COMP_VoxelAudio) == 0x000358, "Member 'AINTERACT_SentryTurret_Base_C::COMP_VoxelAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, FulcrumMesh) == 0x000360, "Member 'AINTERACT_SentryTurret_Base_C::FulcrumMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DoorRightMesh) == 0x000368, "Member 'AINTERACT_SentryTurret_Base_C::DoorRightMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DoorLeftMesh) == 0x000370, "Member 'AINTERACT_SentryTurret_Base_C::DoorLeftMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, COMP_VoxelCullable) == 0x000378, "Member 'AINTERACT_SentryTurret_Base_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DomeMesh) == 0x000380, "Member 'AINTERACT_SentryTurret_Base_C::DomeMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, BaseMesh) == 0x000388, "Member 'AINTERACT_SentryTurret_Base_C::BaseMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DoorState) == 0x000390, "Member 'AINTERACT_SentryTurret_Base_C::DoorState' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, ElapsedStateTime) == 0x000394, "Member 'AINTERACT_SentryTurret_Base_C::ElapsedStateTime' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, TurretDeployDuration) == 0x000398, "Member 'AINTERACT_SentryTurret_Base_C::TurretDeployDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, TurretConcealedHeight) == 0x00039C, "Member 'AINTERACT_SentryTurret_Base_C::TurretConcealedHeight' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DoorOpenDistance) == 0x0003A0, "Member 'AINTERACT_SentryTurret_Base_C::DoorOpenDistance' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, IsTurretRotating) == 0x0003A4, "Member 'AINTERACT_SentryTurret_Base_C::IsTurretRotating' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, IsTurretAudible) == 0x0003A5, "Member 'AINTERACT_SentryTurret_Base_C::IsTurretAudible' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DeploySoundCue) == 0x0003A8, "Member 'AINTERACT_SentryTurret_Base_C::DeploySoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, ConcealSoundCue) == 0x0003D0, "Member 'AINTERACT_SentryTurret_Base_C::ConcealSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, ExplodeSoundCue) == 0x0003F8, "Member 'AINTERACT_SentryTurret_Base_C::ExplodeSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, ExplodeFX) == 0x000420, "Member 'AINTERACT_SentryTurret_Base_C::ExplodeFX' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, IsTurretEnabled) == 0x000448, "Member 'AINTERACT_SentryTurret_Base_C::IsTurretEnabled' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, LoopAudioComponent) == 0x000450, "Member 'AINTERACT_SentryTurret_Base_C::LoopAudioComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, BrokenDomeMesh) == 0x000458, "Member 'AINTERACT_SentryTurret_Base_C::BrokenDomeMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, BrokenFulcrumMesh) == 0x000460, "Member 'AINTERACT_SentryTurret_Base_C::BrokenFulcrumMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, DomeGoreMeshes) == 0x000468, "Member 'AINTERACT_SentryTurret_Base_C::DomeGoreMeshes' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, RotateStartSoundCue) == 0x000478, "Member 'AINTERACT_SentryTurret_Base_C::RotateStartSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, RotateLoopSoundCue) == 0x0004A0, "Member 'AINTERACT_SentryTurret_Base_C::RotateLoopSoundCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_SentryTurret_Base_C, RotateEndSoundCue) == 0x0004A8, "Member 'AINTERACT_SentryTurret_Base_C::RotateEndSoundCue' has a wrong offset!");

}


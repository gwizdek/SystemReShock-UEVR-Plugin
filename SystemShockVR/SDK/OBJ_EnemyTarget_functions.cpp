#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_EnemyTarget

#include "Basic.hpp"

#include "OBJ_EnemyTarget_classes.hpp"
#include "OBJ_EnemyTarget_parameters.hpp"


namespace SDK
{

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.Get Target Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOBJ_EnemyTarget_C::Get_Target_Location(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "Get Target Location");

	Params::OBJ_EnemyTarget_C_Get_Target_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.Get Target Direction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    TwoD                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOBJ_EnemyTarget_C::Get_Target_Direction(bool TwoD, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "Get Target Direction");

	Params::OBJ_EnemyTarget_C_Get_Target_Direction Parms{};

	Parms.TwoD = TwoD;

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UOBJ_EnemyTarget_C::GetTargetTransform(struct FTransform* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "GetTargetTransform");

	Params::OBJ_EnemyTarget_C_GetTargetTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetFootLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          NavigationLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOBJ_EnemyTarget_C::GetTargetFootLocation(struct FVector* NavigationLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "GetTargetFootLocation");

	Params::OBJ_EnemyTarget_C_GetTargetFootLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NavigationLocation != nullptr)
		*NavigationLocation = std::move(Parms.NavigationLocation);
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOBJ_EnemyTarget_C::GetTargetCharacter(class APAWN_SystemShockCharacter_C** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "GetTargetCharacter");

	Params::OBJ_EnemyTarget_C_GetTargetCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.HasRecentlySeenTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   TimeThreshold                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOBJ_EnemyTarget_C::HasRecentlySeenTarget(float TimeThreshold, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "HasRecentlySeenTarget");

	Params::OBJ_EnemyTarget_C_HasRecentlySeenTarget Parms{};

	Parms.TimeThreshold = TimeThreshold;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.SetVector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewVector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOBJ_EnemyTarget_C::SetVector(const struct FVector& NewVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OBJ_EnemyTarget_C", "SetVector");

	Params::OBJ_EnemyTarget_C_SetVector Parms{};

	Parms.NewVector = std::move(NewVector);

	UObject::ProcessEvent(Func, &Parms);
}

}


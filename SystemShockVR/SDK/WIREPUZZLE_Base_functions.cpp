#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIREPUZZLE_Base

#include "Basic.hpp"

#include "WIREPUZZLE_Base_classes.hpp"
#include "WIREPUZZLE_Base_parameters.hpp"


namespace SDK
{

// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.OnPowerLevelChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TotalPowerLevel                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::OnPowerLevelChanged__DelegateSignature(int32 TotalPowerLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "OnPowerLevelChanged__DelegateSignature");

	Params::WIREPUZZLE_Base_C_OnPowerLevelChanged__DelegateSignature Parms{};

	Parms.TotalPowerLevel = TotalPowerLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.ExecuteUbergraph_WIREPUZZLE_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::ExecuteUbergraph_WIREPUZZLE_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "ExecuteUbergraph_WIREPUZZLE_Base");

	Params::WIREPUZZLE_Base_C_ExecuteUbergraph_WIREPUZZLE_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "ReceiveTick");

	Params::WIREPUZZLE_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.RegisterActiveTrace
// (Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::RegisterActiveTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "RegisterActiveTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.UpdatePropagationAudio
// (Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::UpdatePropagationAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "UpdatePropagationAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.UnregisterActiveTrace
// (Public, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::UnregisterActiveTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "UnregisterActiveTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.SetBatteryInput
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FIntPoint                        BatteryLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BatteryInputSocket                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PowerLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::SetBatteryInput(const struct FIntPoint& BatteryLocation, int32 BatteryInputSocket, int32 PowerLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "SetBatteryInput");

	Params::WIREPUZZLE_Base_C_SetBatteryInput Parms{};

	Parms.BatteryLocation = std::move(BatteryLocation);
	Parms.BatteryInputSocket = BatteryInputSocket;
	Parms.PowerLevel = PowerLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.UpdateBatteryPower
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::UpdateBatteryPower(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "UpdateBatteryPower");

	Params::WIREPUZZLE_Base_C_UpdateBatteryPower Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.GetSelectedWireSourceCell
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCOMP_WirePuzzle_Cell_Base_C*     SelectedCell                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::GetSelectedWireSourceCell(class UCOMP_WirePuzzle_Cell_Base_C** SelectedCell)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "GetSelectedWireSourceCell");

	Params::WIREPUZZLE_Base_C_GetSelectedWireSourceCell Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedCell != nullptr)
		*SelectedCell = Parms.SelectedCell;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.SetSelectedWireSourceCell
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_WirePuzzle_Cell_Base_C*     NewSelection                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::SetSelectedWireSourceCell(class UCOMP_WirePuzzle_Cell_Base_C* NewSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "SetSelectedWireSourceCell");

	Params::WIREPUZZLE_Base_C_SetSelectedWireSourceCell Parms{};

	Parms.NewSelection = NewSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.ReserveWireDepthOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWIREPUZZLE_WirePlug_C*           Plug                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::ReserveWireDepthOffset(class AWIREPUZZLE_WirePlug_C* Plug, float* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "ReserveWireDepthOffset");

	Params::WIREPUZZLE_Base_C_ReserveWireDepthOffset Parms{};

	Parms.Plug = Plug;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = Parms.Offset;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.ReleaseWireDepthOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWIREPUZZLE_WirePlug_C*           Plug                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::ReleaseWireDepthOffset(class AWIREPUZZLE_WirePlug_C* Plug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "ReleaseWireDepthOffset");

	Params::WIREPUZZLE_Base_C_ReleaseWireDepthOffset Parms{};

	Parms.Plug = Plug;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.GetBatteryCells
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UCOMP_WirePuzzle_Cell_Base_C*>Cells                                                  (Parm, OutParm, ContainsInstancedReference)

void AWIREPUZZLE_Base_C::GetBatteryCells(TArray<class UCOMP_WirePuzzle_Cell_Base_C*>* Cells)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "GetBatteryCells");

	Params::WIREPUZZLE_Base_C_GetBatteryCells Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cells != nullptr)
		*Cells = std::move(Parms.Cells);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.UpdateWireRetraction
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::UpdateWireRetraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "UpdateWireRetraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.StopChanneling
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewChannelingInteract                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_Base_C::StopChanneling(class AActor* NewChannelingInteract, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "StopChanneling");

	Params::WIREPUZZLE_Base_C_StopChanneling Parms{};

	Parms.NewChannelingInteract = NewChannelingInteract;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.SortBatteries
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectA                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjectB                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AWIREPUZZLE_Base_C::SortBatteries(const class UObject* ObjectA, const class UObject* ObjectB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "SortBatteries");

	Params::WIREPUZZLE_Base_C_SortBatteries Parms{};

	Parms.ObjectA = ObjectA;
	Parms.ObjectB = ObjectB;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.EVENT_OnPuzzleBoxClosed
// (Protected, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::EVENT_OnPuzzleBoxClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "EVENT_OnPuzzleBoxClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.InteractWithPuzzlePrimitive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractResultType                 Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ResultText                                             (Parm, OutParm)

void AWIREPUZZLE_Base_C::InteractWithPuzzlePrimitive(class UPrimitiveComponent* CursorPrimitive, ENUM_InteractResultType* Result, class FText* ResultText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "InteractWithPuzzlePrimitive");

	Params::WIREPUZZLE_Base_C_InteractWithPuzzlePrimitive Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ResultText != nullptr)
		*ResultText = std::move(Parms.ResultText);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.GetPuzzleShape
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  TargetShape                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::GetPuzzleShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** TargetShape)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "GetPuzzleShape");

	Params::WIREPUZZLE_Base_C_GetPuzzleShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetShape != nullptr)
		*TargetShape = Parms.TargetShape;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.SetPuzzleSolved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_PuzzleSolveType                    SolveType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::SetPuzzleSolved(ENUM_PuzzleSolveType SolveType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "SetPuzzleSolved");

	Params::WIREPUZZLE_Base_C_SetPuzzleSolved Parms{};

	Parms.SolveType = SolveType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.LoadPuzzleFromDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWIREPUZZLE_Base_C::LoadPuzzleFromDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "LoadPuzzleFromDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.IsVerticalAxisReversed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWIREPUZZLE_Base_C::IsVerticalAxisReversed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "IsVerticalAxisReversed");

	Params::WIREPUZZLE_Base_C_IsVerticalAxisReversed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIREPUZZLE_Base.WIREPUZZLE_Base_C.GetCellComponentFromPrimitive
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCOMP_PuzzleCell_Base_C*          Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWIREPUZZLE_Base_C::GetCellComponentFromPrimitive(class UPrimitiveComponent* PrimitiveComponent, class UCOMP_PuzzleCell_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIREPUZZLE_Base_C", "GetCellComponentFromPrimitive");

	Params::WIREPUZZLE_Base_C_GetCellComponentFromPrimitive Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


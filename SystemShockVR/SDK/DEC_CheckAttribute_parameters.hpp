#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_CheckAttribute

#include "Basic.hpp"

#include "ENUM_GreaterEqualLess_structs.hpp"


namespace SDK::Params
{

// Function DEC_CheckAttribute.DEC_CheckAttribute_C.PerformConditionCheckAI
// 0x0060 (0x0060 - 0x0000)
struct DEC_CheckAttribute_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GreaterEqualLess                         Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveModWithCategory_ReturnValue;     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_GreaterEqualLess                         Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEC_CheckAttribute_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on DEC_CheckAttribute_C_PerformConditionCheckAI");
static_assert(sizeof(DEC_CheckAttribute_C_PerformConditionCheckAI) == 0x000060, "Wrong size on DEC_CheckAttribute_C_PerformConditionCheckAI");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, Pawn) == 0x000018, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::Pawn' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, Temp_byte_Variable) == 0x000020, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_NotEqual_NameName_ReturnValue) == 0x000031, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_HasActiveModWithCategory_ReturnValue) == 0x000032, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_HasActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, Temp_byte_Variable_1) == 0x000033, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_GetAttribValue_ReturnValue) == 0x000034, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_GetAttribInstance_ReturnValue) == 0x000038, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_GetMaxValue_ReturnValue) == 0x000040, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00004D, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_GetAttribValue_ReturnValue_1) == 0x000050, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_GetAttribValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000055, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, K2Node_Select_Default) == 0x000056, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000057, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000058, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DEC_CheckAttribute_C_PerformConditionCheckAI, K2Node_Select_Default_1) == 0x000059, "Member 'DEC_CheckAttribute_C_PerformConditionCheckAI::K2Node_Select_Default_1' has a wrong offset!");

}


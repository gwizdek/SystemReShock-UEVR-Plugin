#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DismembermentGib_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"


namespace SDK::Params
{

// Function DismembermentGib_Base.DismembermentGib_Base_C.ExecuteUbergraph_DismembermentGib_Base
// 0x0004 (0x0004 - 0x0000)
struct DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base) == 0x000004, "Wrong alignment on DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base");
static_assert(sizeof(DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base) == 0x000004, "Wrong size on DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base");
static_assert(offsetof(DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base, EntryPoint) == 0x000000, "Member 'DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base::EntryPoint' has a wrong offset!");

// Function DismembermentGib_Base.DismembermentGib_Base_C.InitializeHeroGib
// 0x0100 (0x0100 - 0x0000)
struct DismembermentGib_Base_C_InitializeHeroGib final
{
public:
	class UMeshComponent*                         CallFunc_GetMeshComponent_MeshComponent;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UMeshComponent*                         CallFunc_GetMeshComponent_MeshComponent_1;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DismembermentGib_Base_C_InitializeHeroGib) == 0x000010, "Wrong alignment on DismembermentGib_Base_C_InitializeHeroGib");
static_assert(sizeof(DismembermentGib_Base_C_InitializeHeroGib) == 0x000100, "Wrong size on DismembermentGib_Base_C_InitializeHeroGib");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_GetMeshComponent_MeshComponent) == 0x000000, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_GetMeshComponent_MeshComponent' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_GetMeshComponent_MeshComponent_1) == 0x000040, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_GetMeshComponent_MeshComponent_1' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000048, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'DismembermentGib_Base_C_InitializeHeroGib::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000E0, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_FMax_ReturnValue) == 0x0000EC, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x0000F8, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_InitializeHeroGib, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000FC, "Member 'DismembermentGib_Base_C_InitializeHeroGib::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function DismembermentGib_Base.DismembermentGib_Base_C.GetMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct DismembermentGib_Base_C_GetMeshComponent final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DismembermentGib_Base_C_GetMeshComponent) == 0x000008, "Wrong alignment on DismembermentGib_Base_C_GetMeshComponent");
static_assert(sizeof(DismembermentGib_Base_C_GetMeshComponent) == 0x000008, "Wrong size on DismembermentGib_Base_C_GetMeshComponent");
static_assert(offsetof(DismembermentGib_Base_C_GetMeshComponent, MeshComponent) == 0x000000, "Member 'DismembermentGib_Base_C_GetMeshComponent::MeshComponent' has a wrong offset!");

// Function DismembermentGib_Base.DismembermentGib_Base_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct DismembermentGib_Base_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(DismembermentGib_Base_C_ShouldSaveActor) == 0x000008, "Wrong alignment on DismembermentGib_Base_C_ShouldSaveActor");
static_assert(sizeof(DismembermentGib_Base_C_ShouldSaveActor) == 0x000038, "Wrong size on DismembermentGib_Base_C_ShouldSaveActor");
static_assert(offsetof(DismembermentGib_Base_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'DismembermentGib_Base_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'DismembermentGib_Base_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'DismembermentGib_Base_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function DismembermentGib_Base.DismembermentGib_Base_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct DismembermentGib_Base_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DismembermentGib_Base_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on DismembermentGib_Base_C_ReceivePendingBodyTransforms");
static_assert(sizeof(DismembermentGib_Base_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on DismembermentGib_Base_C_ReceivePendingBodyTransforms");
static_assert(offsetof(DismembermentGib_Base_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'DismembermentGib_Base_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'DismembermentGib_Base_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'DismembermentGib_Base_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function DismembermentGib_Base.DismembermentGib_Base_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct DismembermentGib_Base_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DismembermentGib_Base_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on DismembermentGib_Base_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(DismembermentGib_Base_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on DismembermentGib_Base_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(DismembermentGib_Base_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'DismembermentGib_Base_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(DismembermentGib_Base_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'DismembermentGib_Base_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


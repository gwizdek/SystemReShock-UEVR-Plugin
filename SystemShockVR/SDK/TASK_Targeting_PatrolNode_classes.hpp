#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Targeting_PatrolNode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Targeting_PatrolNode.TASK_Targeting_PatrolNode_C
// 0x0020 (0x00C8 - 0x00A8)
class UTASK_Targeting_PatrolNode_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AssignNavigationTarget;                            // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AssignBodyTarget;                                  // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AssignHeadTarget;                                  // 0x00BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AssignSkillTarget;                                 // 0x00BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     EnemyTarget;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_Targeting_PatrolNode(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Targeting_PatrolNode_C">();
	}
	static class UTASK_Targeting_PatrolNode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Targeting_PatrolNode_C>();
	}
};
static_assert(alignof(UTASK_Targeting_PatrolNode_C) == 0x000008, "Wrong alignment on UTASK_Targeting_PatrolNode_C");
static_assert(sizeof(UTASK_Targeting_PatrolNode_C) == 0x0000C8, "Wrong size on UTASK_Targeting_PatrolNode_C");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, UberGraphFrame) == 0x0000A8, "Member 'UTASK_Targeting_PatrolNode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, Pawn) == 0x0000B0, "Member 'UTASK_Targeting_PatrolNode_C::Pawn' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, AssignNavigationTarget) == 0x0000B8, "Member 'UTASK_Targeting_PatrolNode_C::AssignNavigationTarget' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, AssignBodyTarget) == 0x0000B9, "Member 'UTASK_Targeting_PatrolNode_C::AssignBodyTarget' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, AssignHeadTarget) == 0x0000BA, "Member 'UTASK_Targeting_PatrolNode_C::AssignHeadTarget' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, AssignSkillTarget) == 0x0000BB, "Member 'UTASK_Targeting_PatrolNode_C::AssignSkillTarget' has a wrong offset!");
static_assert(offsetof(UTASK_Targeting_PatrolNode_C, EnemyTarget) == 0x0000C0, "Member 'UTASK_Targeting_PatrolNode_C::EnemyTarget' has a wrong offset!");

}


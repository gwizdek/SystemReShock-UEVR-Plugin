#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_VitalBars

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_VitalBars.WIDGET_VitalBars_C
// 0x0060 (0x02C0 - 0x0260)
class UWIDGET_VitalBars_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridMeshWidget*                        MESH_VitalBars;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_VitalBarsFrame;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHealthRatio;                                   // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastHealth;                                        // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastHealthMax;                                     // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastEnergyRatio;                                   // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastEnergy;                                        // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastEnergyMax;                                     // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   MaxVitalsText;                                     // 0x0298(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MouseOver;                                         // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBioscanner;                                     // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        HardwareBag;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_VitalBars(int32 EntryPoint);
	void StopRevealAnimation();
	void InitializeVitalBars(class UWIDGET_PlayerHUD_C* HUD);
	void ShowVitalBars();
	void SetHealth(float HealthRatio, int32 Health, int32 HealthMax);
	void SetEnergy(float EnergyRatio, int32 Energy, int32 EnergyMax);
	void EVENT_OnMouseEnterVitalBars(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseLeaveVitalBars(const struct FPointerEvent& MouseEvent);
	void EVENT_OnHardwareBagChanged(int32 SlotIndex);
	void GetToolTipText(class FText* ToolTip);
	void DisableFlickerEffect(bool* Result);
	void EnableFlickerEffect(bool* Result);
	void OnMouseExit(bool* Result);
	void OnMouseOver(bool* Result);
	void GetMeshWidget(class UGridMeshWidget** Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_VitalBars_C">();
	}
	static class UWIDGET_VitalBars_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_VitalBars_C>();
	}
};
static_assert(alignof(UWIDGET_VitalBars_C) == 0x000008, "Wrong alignment on UWIDGET_VitalBars_C");
static_assert(sizeof(UWIDGET_VitalBars_C) == 0x0002C0, "Wrong size on UWIDGET_VitalBars_C");
static_assert(offsetof(UWIDGET_VitalBars_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_VitalBars_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, MESH_VitalBars) == 0x000268, "Member 'UWIDGET_VitalBars_C::MESH_VitalBars' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, MESH_VitalBarsFrame) == 0x000270, "Member 'UWIDGET_VitalBars_C::MESH_VitalBarsFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, PlayerHUD) == 0x000278, "Member 'UWIDGET_VitalBars_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastHealthRatio) == 0x000280, "Member 'UWIDGET_VitalBars_C::LastHealthRatio' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastHealth) == 0x000284, "Member 'UWIDGET_VitalBars_C::LastHealth' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastHealthMax) == 0x000288, "Member 'UWIDGET_VitalBars_C::LastHealthMax' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastEnergyRatio) == 0x00028C, "Member 'UWIDGET_VitalBars_C::LastEnergyRatio' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastEnergy) == 0x000290, "Member 'UWIDGET_VitalBars_C::LastEnergy' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, LastEnergyMax) == 0x000294, "Member 'UWIDGET_VitalBars_C::LastEnergyMax' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, MaxVitalsText) == 0x000298, "Member 'UWIDGET_VitalBars_C::MaxVitalsText' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, MouseOver) == 0x0002B0, "Member 'UWIDGET_VitalBars_C::MouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, HasBioscanner) == 0x0002B1, "Member 'UWIDGET_VitalBars_C::HasBioscanner' has a wrong offset!");
static_assert(offsetof(UWIDGET_VitalBars_C, HardwareBag) == 0x0002B8, "Member 'UWIDGET_VitalBars_C::HardwareBag' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveProjectile_Base

#include "Basic.hpp"

#include "ExplosiveProjectile_Base_classes.hpp"
#include "ExplosiveProjectile_Base_parameters.hpp"


namespace SDK
{

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ExecuteUbergraph_ExplosiveProjectile_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::ExecuteUbergraph_ExplosiveProjectile_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ExecuteUbergraph_ExplosiveProjectile_Base");

	Params::ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.StreamExplosiveAssets
// (BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::StreamExplosiveAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "StreamExplosiveAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");

	Params::ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AExplosiveProjectile_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069");

	Params::ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_12A5614F482FB743652E76BC115EB237
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::OnLoaded_12A5614F482FB743652E76BC115EB237(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "OnLoaded_12A5614F482FB743652E76BC115EB237");

	Params::ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_1001838C477EB2B0BA9CEF96E9984340
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::OnLoaded_1001838C477EB2B0BA9CEF96E9984340(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "OnLoaded_1001838C477EB2B0BA9CEF96E9984340");

	Params::ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeExplosive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::InitializeExplosive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "InitializeExplosive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeDamageSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribDamageType*                InDamageType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InDamageValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InArmorPenetration                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InBlastRadius                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InBlastImpulse                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::InitializeDamageSettings(class UAttribDamageType* InDamageType, int32 InDamageValue, int32 InArmorPenetration, int32 InBlastRadius, int32 InBlastImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "InitializeDamageSettings");

	Params::ExplosiveProjectile_Base_C_InitializeDamageSettings Parms{};

	Parms.InDamageType = InDamageType;
	Parms.InDamageValue = InDamageValue;
	Parms.InArmorPenetration = InArmorPenetration;
	Parms.InBlastRadius = InBlastRadius;
	Parms.InBlastImpulse = InBlastImpulse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeAttributes
// (Protected, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::InitializeAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "InitializeAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.PlayExplosionEffects
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                SpawnedFX                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::PlayExplosionEffects(class UNiagaraComponent** SpawnedFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "PlayExplosionEffects");

	Params::ExplosiveProjectile_Base_C_PlayExplosionEffects Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedFX != nullptr)
		*SpawnedFX = Parms.SpawnedFX;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ApplyExplosionDamage
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::ApplyExplosionDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ApplyExplosionDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ApplyCameraShake
// (Protected, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::ApplyCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ApplyCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.DetonateExplosive
// (Public, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::DetonateExplosive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "DetonateExplosive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.CleanupExplosive
// (Private, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::CleanupExplosive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "CleanupExplosive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.CreateExplosionSoundDetectionEvent
// (Protected, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::CreateExplosionSoundDetectionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "CreateExplosionSoundDetectionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnDamageAppliedToActors
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class UAttribMod*, struct FAttribDamageInstance>DamageInstances                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void AExplosiveProjectile_Base_C::OnDamageAppliedToActors(const TMap<class UAttribMod*, struct FAttribDamageInstance>& DamageInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "OnDamageAppliedToActors");

	Params::ExplosiveProjectile_Base_C_OnDamageAppliedToActors Parms{};

	Parms.DamageInstances = std::move(DamageInstances);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.IsTeleporting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::IsTeleporting(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "IsTeleporting");

	Params::ExplosiveProjectile_Base_C_IsTeleporting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.CanTeleportExplosive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::CanTeleportExplosive(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "CanTeleportExplosive");

	Params::ExplosiveProjectile_Base_C_CanTeleportExplosive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosiveEffectsAttachParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::GetExplosiveEffectsAttachParent(class USceneComponent** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "GetExplosiveEffectsAttachParent");

	Params::ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosivePhysicsComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              PhysicsComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::GetExplosivePhysicsComponent(class UPrimitiveComponent** PhysicsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "GetExplosivePhysicsComponent");

	Params::ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PhysicsComponent != nullptr)
		*PhysicsComponent = Parms.PhysicsComponent;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.MarkHasBeenDetonated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::MarkHasBeenDetonated(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "MarkHasBeenDetonated");

	Params::ExplosiveProjectile_Base_C_MarkHasBeenDetonated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.EVENT_OnDisableAttribChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "EVENT_OnDisableAttribChanged");

	Params::ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.EVENT_UpdateEnemyExplosiveCollisionResponse
// (Private, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::EVENT_UpdateEnemyExplosiveCollisionResponse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "EVENT_UpdateEnemyExplosiveCollisionResponse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosiveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::GetExplosiveLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "GetExplosiveLocation");

	Params::ExplosiveProjectile_Base_C_GetExplosiveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.SpawnTrailEffects
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   TrailSystem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::SpawnTrailEffects(class UNiagaraSystem* TrailSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "SpawnTrailEffects");

	Params::ExplosiveProjectile_Base_C_SpawnTrailEffects Parms{};

	Parms.TrailSystem = TrailSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.TryPlayLaunchEffects
// (Protected, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::TryPlayLaunchEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "TryPlayLaunchEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.TryTeleportExplosive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   MaterializeDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   TeleportFX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::TryTeleportExplosive(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* TeleportFX, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "TryTeleportExplosive");

	Params::ExplosiveProjectile_Base_C_TryTeleportExplosive Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.MaterializeDuration = MaterializeDuration;
	Parms.SoundCue = SoundCue;
	Parms.TeleportFX = TeleportFX;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.EVENT_OnFinishedMaterializingFromTeleport
// (Private, BlueprintCallable, BlueprintEvent)

void AExplosiveProjectile_Base_C::EVENT_OnFinishedMaterializingFromTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "EVENT_OnFinishedMaterializingFromTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.UpdateExplosiveVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::UpdateExplosiveVisibility(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "UpdateExplosiveVisibility");

	Params::ExplosiveProjectile_Base_C_UpdateExplosiveVisibility Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetLocalTrailOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::GetLocalTrailOffset(struct FVector* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "GetLocalTrailOffset");

	Params::ExplosiveProjectile_Base_C_GetLocalTrailOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.SetExplosionIgnoresOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AExplosiveProjectile_Base_C::SetExplosionIgnoresOwner(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "SetExplosionIgnoresOwner");

	Params::ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetTrailColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AExplosiveProjectile_Base_C::GetTrailColor(struct FLinearColor* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "GetTrailColor");

	Params::ExplosiveProjectile_Base_C_GetTrailColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AExplosiveProjectile_Base_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ShouldSaveActor");

	Params::ExplosiveProjectile_Base_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AExplosiveProjectile_Base_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ReceivePendingBodyTransforms");

	Params::ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AExplosiveProjectile_Base_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExplosiveProjectile_Base_C", "ReceivePendingCharacterVelocity");

	Params::ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


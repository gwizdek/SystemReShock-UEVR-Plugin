#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_WallSwitch

#include "Basic.hpp"

#include "ENUM_UpDown_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_ButtonColorType_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.ExecuteUbergraph_INTERACT_WallSwitch
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   K2Node_CustomEvent_State;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0018(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch");
static_assert(sizeof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch) == 0x000058, "Wrong size on INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, EntryPoint) == 0x000000, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, Temp_byte_Variable) == 0x000004, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, K2Node_CustomEvent_State) == 0x000005, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, K2Node_ComponentBoundEvent_bVisibleState) == 0x000010, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000040, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, K2Node_DynamicCast_AsAnim_Montage) == 0x000048, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch, CallFunc_Montage_Play_ReturnValue) == 0x000054, "Member 'INTERACT_WallSwitch_C_ExecuteUbergraph_INTERACT_WallSwitch::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_WallSwitch_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_WallSwitch_C_SetState final
{
public:
	ENUM_UpDown                                   State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_SetState) == 0x000001, "Wrong alignment on INTERACT_WallSwitch_C_SetState");
static_assert(sizeof(INTERACT_WallSwitch_C_SetState) == 0x000001, "Wrong size on INTERACT_WallSwitch_C_SetState");
static_assert(offsetof(INTERACT_WallSwitch_C_SetState, State_0) == 0x000000, "Member 'INTERACT_WallSwitch_C_SetState::State_0' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.TryInteract
// 0x00F8 (0x00F8 - 0x0000)
struct INTERACT_WallSwitch_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CurrentInteractResults;                            // 0x0038(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0070(0x0020)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00D8(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_TryInteract");
static_assert(sizeof(INTERACT_WallSwitch_C_TryInteract) == 0x0000F8, "Wrong size on INTERACT_WallSwitch_C_TryInteract");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_WallSwitch_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_WallSwitch_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_WallSwitch_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_WallSwitch_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, CurrentInteractResults) == 0x000038, "Member 'INTERACT_WallSwitch_C_TryInteract::CurrentInteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, Temp_text_Variable) == 0x000058, "Member 'INTERACT_WallSwitch_C_TryInteract::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000070, "Member 'INTERACT_WallSwitch_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, Temp_bool_Variable) == 0x000090, "Member 'INTERACT_WallSwitch_C_TryInteract::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000098, "Member 'INTERACT_WallSwitch_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B8, "Member 'INTERACT_WallSwitch_C_TryInteract::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'INTERACT_WallSwitch_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, K2Node_Select_Default) == 0x0000C0, "Member 'INTERACT_WallSwitch_C_TryInteract::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000D8, "Member 'INTERACT_WallSwitch_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_WallSwitch_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_GetTargetShape");
static_assert(sizeof(INTERACT_WallSwitch_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_WallSwitch_C_GetTargetShape");
static_assert(offsetof(INTERACT_WallSwitch_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_WallSwitch_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_WallSwitch_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_WallSwitch_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.OnBrokenInteraction
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_WallSwitch_C_OnBrokenInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsButtonPoweredOn_Result;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_OnBrokenInteraction) == 0x000010, "Wrong alignment on INTERACT_WallSwitch_C_OnBrokenInteraction");
static_assert(sizeof(INTERACT_WallSwitch_C_OnBrokenInteraction) == 0x0000A0, "Wrong size on INTERACT_WallSwitch_C_OnBrokenInteraction");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, Result) == 0x000000, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_IsButtonPoweredOn_Result) == 0x000019, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_IsButtonPoweredOn_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GetGameInstance_ReturnValue_1) == 0x000028, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GetGameInstance_ReturnValue_2) == 0x000030, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000038, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x000048, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000054, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000058, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000064, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnBrokenInteraction, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'INTERACT_WallSwitch_C_OnBrokenInteraction::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.PlayInteractionSound
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_WallSwitch_C_PlayInteractionSound final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default;                             // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_PlayInteractionSound) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_PlayInteractionSound");
static_assert(sizeof(INTERACT_WallSwitch_C_PlayInteractionSound) == 0x000050, "Wrong size on INTERACT_WallSwitch_C_PlayInteractionSound");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, Temp_byte_Variable) == 0x000008, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_PlayInteractionSound, K2Node_Select_Default) == 0x000028, "Member 'INTERACT_WallSwitch_C_PlayInteractionSound::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.UpdateSwitchState
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_WallSwitch_C_UpdateSwitchState final
{
public:
	ENUM_UpDown                                   InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Switch_C*                       K2Node_DynamicCast_AsAnim_BP_Switch;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_UpdateSwitchState) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_UpdateSwitchState");
static_assert(sizeof(INTERACT_WallSwitch_C_UpdateSwitchState) == 0x000040, "Wrong size on INTERACT_WallSwitch_C_UpdateSwitchState");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, InState) == 0x000000, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::InState' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_byte_Variable) == 0x000001, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_float_Variable) == 0x000004, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_float_Variable_1) == 0x000008, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_byte_Variable_1) == 0x00000C, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_float_Variable_2) == 0x000010, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_float_Variable_3) == 0x000014, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_byte_Variable_2) == 0x000018, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_bool_Variable) == 0x000019, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, Temp_bool_Variable_1) == 0x00001A, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, K2Node_Select_Default) == 0x00001C, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, K2Node_Select_Default_1) == 0x000020, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, K2Node_Select_Default_2) == 0x000024, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, K2Node_DynamicCast_AsAnim_BP_Switch) == 0x000030, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::K2Node_DynamicCast_AsAnim_BP_Switch' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_WallSwitch_C_UpdateSwitchState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.UpdateLockLightColor
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_WallSwitch_C_UpdateLockLightColor final
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ButtonColorType                          Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0xB];                                       // 0x0015(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEveryTargetInteractUnlocked_Result;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsButtonFunctional_Result;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ButtonColorType                          K2Node_Select_Default_1;                           // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetButtonColor_ButtonColor;               // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_UpdateLockLightColor) == 0x000010, "Wrong alignment on INTERACT_WallSwitch_C_UpdateLockLightColor");
static_assert(sizeof(INTERACT_WallSwitch_C_UpdateLockLightColor) == 0x000060, "Wrong size on INTERACT_WallSwitch_C_UpdateLockLightColor");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, LightColor) == 0x000000, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::LightColor' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, Temp_bool_Variable) == 0x000010, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, Temp_byte_Variable) == 0x000011, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, Temp_byte_Variable_1) == 0x000012, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, Temp_bool_Variable_1) == 0x000013, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, Temp_byte_Variable_2) == 0x000014, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, K2Node_MakeStruct_Vector4) == 0x000020, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, K2Node_MakeStruct_Vector4_1) == 0x000030, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, CallFunc_IsEveryTargetInteractUnlocked_Result) == 0x000040, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::CallFunc_IsEveryTargetInteractUnlocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, CallFunc_IsButtonFunctional_Result) == 0x000041, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::CallFunc_IsButtonFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, K2Node_Select_Default) == 0x000042, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, K2Node_Select_Default_1) == 0x000043, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateLockLightColor, CallFunc_GetButtonColor_ButtonColor) == 0x000044, "Member 'INTERACT_WallSwitch_C_UpdateLockLightColor::CallFunc_GetButtonColor_ButtonColor' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.InitializeButtonState
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_WallSwitch_C_InitializeButtonState final
{
public:
	bool                                          CallFunc_HasButtonBeenActivated_Result;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_InitializeButtonState) == 0x000001, "Wrong alignment on INTERACT_WallSwitch_C_InitializeButtonState");
static_assert(sizeof(INTERACT_WallSwitch_C_InitializeButtonState) == 0x000002, "Wrong size on INTERACT_WallSwitch_C_InitializeButtonState");
static_assert(offsetof(INTERACT_WallSwitch_C_InitializeButtonState, CallFunc_HasButtonBeenActivated_Result) == 0x000000, "Member 'INTERACT_WallSwitch_C_InitializeButtonState::CallFunc_HasButtonBeenActivated_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_InitializeButtonState, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'INTERACT_WallSwitch_C_InitializeButtonState::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.GetSuccessMessage
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_WallSwitch_C_GetSuccessMessage final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetSuccessMessage_Result;                 // 0x0018(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_GetSuccessMessage) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_GetSuccessMessage");
static_assert(sizeof(INTERACT_WallSwitch_C_GetSuccessMessage) == 0x000038, "Wrong size on INTERACT_WallSwitch_C_GetSuccessMessage");
static_assert(offsetof(INTERACT_WallSwitch_C_GetSuccessMessage, Result) == 0x000000, "Member 'INTERACT_WallSwitch_C_GetSuccessMessage::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetSuccessMessage, CallFunc_GetSuccessMessage_Result) == 0x000018, "Member 'INTERACT_WallSwitch_C_GetSuccessMessage::CallFunc_GetSuccessMessage_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetSuccessMessage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'INTERACT_WallSwitch_C_GetSuccessMessage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetSuccessMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000031, "Member 'INTERACT_WallSwitch_C_GetSuccessMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_GetSuccessMessage, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'INTERACT_WallSwitch_C_GetSuccessMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.UpdateSwitchVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_WallSwitch_C_UpdateSwitchVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_WallSwitch_C_UpdateSwitchVisibility) == 0x000001, "Wrong alignment on INTERACT_WallSwitch_C_UpdateSwitchVisibility");
static_assert(sizeof(INTERACT_WallSwitch_C_UpdateSwitchVisibility) == 0x000001, "Wrong size on INTERACT_WallSwitch_C_UpdateSwitchVisibility");
static_assert(offsetof(INTERACT_WallSwitch_C_UpdateSwitchVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_WallSwitch_C_UpdateSwitchVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_WallSwitch.INTERACT_WallSwitch_C.OnInteractSuccess
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_WallSwitch_C_OnInteractSuccess final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_WallSwitch_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_UpDown                                   K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_WallSwitch_C_OnInteractSuccess) == 0x000008, "Wrong alignment on INTERACT_WallSwitch_C_OnInteractSuccess");
static_assert(sizeof(INTERACT_WallSwitch_C_OnInteractSuccess) == 0x000030, "Wrong size on INTERACT_WallSwitch_C_OnInteractSuccess");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, SourceActor) == 0x000000, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, Temp_byte_Variable) == 0x000008, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, Temp_byte_Variable_1) == 0x000009, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, Temp_byte_Variable_2) == 0x000018, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, CallFunc_Array_Get_Item) == 0x000020, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_WallSwitch_C_OnInteractSuccess, K2Node_Select_Default) == 0x00002D, "Member 'INTERACT_WallSwitch_C_OnInteractSuccess::K2Node_Select_Default' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_BreakablePanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.ExecuteUbergraph_INTERACT_BreakablePanel
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  K2Node_ComponentBoundEvent_DamageInstance;         // 0x0010(0x0028)()
	class UObject*                                K2Node_ComponentBoundEvent_UserParams;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetShouldBeVisible_Result;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      K2Node_DynamicCast_AsOBJ_Impact_Data;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnDamageReceived_Result;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel");
static_assert(sizeof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel) == 0x000060, "Wrong size on INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, EntryPoint) == 0x000000, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_ComponentBoundEvent_OtherActor) == 0x000008, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_ComponentBoundEvent_DamageInstance) == 0x000010, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_ComponentBoundEvent_DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_ComponentBoundEvent_UserParams) == 0x000038, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_ComponentBoundEvent_UserParams' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, CallFunc_SetShouldBeVisible_Result) == 0x000040, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::CallFunc_SetShouldBeVisible_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_DynamicCast_AsOBJ_Impact_Data) == 0x000048, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_DynamicCast_AsOBJ_Impact_Data' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, CallFunc_Round_ReturnValue) == 0x000054, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel, CallFunc_OnDamageReceived_Result) == 0x000058, "Member 'INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel::CallFunc_OnDamageReceived_Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");
static_assert(sizeof(INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature) == 0x000038, "Wrong size on INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");
static_assert(offsetof(INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, DamageInstance) == 0x000008, "Member 'INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, UserParams) == 0x000030, "Member 'INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::UserParams' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.InitializeBreakablePanel
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_BreakablePanel_C_InitializeBreakablePanel final
{
public:
	bool                                          CallFunc_IsActivatedAndPowered_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_InitializeBreakablePanel) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_InitializeBreakablePanel");
static_assert(sizeof(INTERACT_BreakablePanel_C_InitializeBreakablePanel) == 0x000001, "Wrong size on INTERACT_BreakablePanel_C_InitializeBreakablePanel");
static_assert(offsetof(INTERACT_BreakablePanel_C_InitializeBreakablePanel, CallFunc_IsActivatedAndPowered_Result) == 0x000000, "Member 'INTERACT_BreakablePanel_C_InitializeBreakablePanel::CallFunc_IsActivatedAndPowered_Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TryInitializeDisableQuest
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_BreakablePanel_C_TryInitializeDisableQuest final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_TryInitializeDisableQuest");
static_assert(sizeof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest) == 0x000030, "Wrong size on INTERACT_BreakablePanel_C_TryInitializeDisableQuest");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, GameInstance) == 0x000000, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, CallFunc_HasCompletedStoryQuest_Completed) == 0x000029, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInitializeDisableQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x00002A, "Member 'INTERACT_BreakablePanel_C_TryInitializeDisableQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.OnActivationStateChanged
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_BreakablePanel_C_OnActivationStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnBeginPlay;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_OnActivationStateChanged) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_OnActivationStateChanged");
static_assert(sizeof(INTERACT_BreakablePanel_C_OnActivationStateChanged) == 0x000002, "Wrong size on INTERACT_BreakablePanel_C_OnActivationStateChanged");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnActivationStateChanged, State) == 0x000000, "Member 'INTERACT_BreakablePanel_C_OnActivationStateChanged::State' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnActivationStateChanged, OnBeginPlay) == 0x000001, "Member 'INTERACT_BreakablePanel_C_OnActivationStateChanged::OnBeginPlay' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TrySetActivationState
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_BreakablePanel_C_TrySetActivationState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedDisableQuest_Result;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_TrySetActivationState) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_TrySetActivationState");
static_assert(sizeof(INTERACT_BreakablePanel_C_TrySetActivationState) == 0x000006, "Wrong size on INTERACT_BreakablePanel_C_TrySetActivationState");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, State) == 0x000000, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::State' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, Result) == 0x000001, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, CallFunc_HasCompletedDisableQuest_Result) == 0x000002, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::CallFunc_HasCompletedDisableQuest_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TrySetActivationState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'INTERACT_BreakablePanel_C_TrySetActivationState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetActivationStateInternal
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_BreakablePanel_C_SetActivationStateInternal final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_SetActivationStateInternal) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_SetActivationStateInternal");
static_assert(sizeof(INTERACT_BreakablePanel_C_SetActivationStateInternal) == 0x000001, "Wrong size on INTERACT_BreakablePanel_C_SetActivationStateInternal");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetActivationStateInternal, State) == 0x000000, "Member 'INTERACT_BreakablePanel_C_SetActivationStateInternal::State' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.OnDamageReceived
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_BreakablePanel_C_OnDamageReceived final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      DamageType;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageValue;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitFaceIndex;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactRadius;                                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_OnDamageReceived) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_OnDamageReceived");
static_assert(sizeof(INTERACT_BreakablePanel_C_OnDamageReceived) == 0x000048, "Wrong size on INTERACT_BreakablePanel_C_OnDamageReceived");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, SourceActor) == 0x000000, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, DamageType) == 0x000008, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::DamageType' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, DamageValue) == 0x000010, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::DamageValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, HitComponent) == 0x000018, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::HitComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, HitFaceIndex) == 0x000020, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::HitFaceIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, HitLocation) == 0x000024, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::HitLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, HitNormal) == 0x000030, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::HitNormal' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, ImpactRadius) == 0x00003C, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::ImpactRadius' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_OnDamageReceived, Result) == 0x000040, "Member 'INTERACT_BreakablePanel_C_OnDamageReceived::Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetShouldBeVisible
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_BreakablePanel_C_SetShouldBeVisible final
{
public:
	bool                                          VisibleState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_SetShouldBeVisible) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_SetShouldBeVisible");
static_assert(sizeof(INTERACT_BreakablePanel_C_SetShouldBeVisible) == 0x000002, "Wrong size on INTERACT_BreakablePanel_C_SetShouldBeVisible");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetShouldBeVisible, VisibleState) == 0x000000, "Member 'INTERACT_BreakablePanel_C_SetShouldBeVisible::VisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetShouldBeVisible, Result) == 0x000001, "Member 'INTERACT_BreakablePanel_C_SetShouldBeVisible::Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.CanTakeDamage
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_BreakablePanel_C_CanTakeDamage final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_CanTakeDamage) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_CanTakeDamage");
static_assert(sizeof(INTERACT_BreakablePanel_C_CanTakeDamage) == 0x000018, "Wrong size on INTERACT_BreakablePanel_C_CanTakeDamage");
static_assert(offsetof(INTERACT_BreakablePanel_C_CanTakeDamage, DamageType) == 0x000000, "Member 'INTERACT_BreakablePanel_C_CanTakeDamage::DamageType' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_CanTakeDamage, ImpactData) == 0x000008, "Member 'INTERACT_BreakablePanel_C_CanTakeDamage::ImpactData' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_CanTakeDamage, Result) == 0x000010, "Member 'INTERACT_BreakablePanel_C_CanTakeDamage::Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.EVENT_OnStoryQuestChanged
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   StoryQuestName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetActivationState_Result;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged) == 0x000038, "Wrong size on INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, StoryQuestName) == 0x000000, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::StoryQuestName' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, Value) == 0x000008, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::Value' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, CallFunc_TrySetActivationState_Result) == 0x000009, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::CallFunc_TrySetActivationState_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000031, "Member 'INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.IsActivatedAndPowered
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_BreakablePanel_C_IsActivatedAndPowered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_IsActivatedAndPowered) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_IsActivatedAndPowered");
static_assert(sizeof(INTERACT_BreakablePanel_C_IsActivatedAndPowered) == 0x000002, "Wrong size on INTERACT_BreakablePanel_C_IsActivatedAndPowered");
static_assert(offsetof(INTERACT_BreakablePanel_C_IsActivatedAndPowered, Result) == 0x000000, "Member 'INTERACT_BreakablePanel_C_IsActivatedAndPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_IsActivatedAndPowered, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'INTERACT_BreakablePanel_C_IsActivatedAndPowered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.GetNormalizedLightColor
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_BreakablePanel_C_GetNormalizedLightColor final
{
public:
	struct FLinearColor                           LightColor;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Result;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightColorLength;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightColorVector;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_BreakablePanel_C_GetNormalizedLightColor) == 0x000004, "Wrong alignment on INTERACT_BreakablePanel_C_GetNormalizedLightColor");
static_assert(sizeof(INTERACT_BreakablePanel_C_GetNormalizedLightColor) == 0x000060, "Wrong size on INTERACT_BreakablePanel_C_GetNormalizedLightColor");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, LightColor) == 0x000000, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::LightColor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, Result) == 0x000010, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, LightColorLength) == 0x000020, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::LightColorLength' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, LightColorVector) == 0x000024, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::LightColorVector' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000030, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, CallFunc_VSize_ReturnValue) == 0x000040, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000044, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetNormalizedLightColor, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'INTERACT_BreakablePanel_C_GetNormalizedLightColor::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.HasCompletedDisableQuest
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_BreakablePanel_C_HasCompletedDisableQuest final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_HasCompletedDisableQuest");
static_assert(sizeof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest) == 0x000020, "Wrong size on INTERACT_BreakablePanel_C_HasCompletedDisableQuest");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, Result) == 0x000000, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, CallFunc_HasCompletedStoryQuest_Completed) == 0x000019, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_HasCompletedDisableQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001A, "Member 'INTERACT_BreakablePanel_C_HasCompletedDisableQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TryInteract
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_BreakablePanel_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          DesiredState;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0040(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0068(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TrySetActivationState_Result;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_TryInteract");
static_assert(sizeof(INTERACT_BreakablePanel_C_TryInteract) == 0x000090, "Wrong size on INTERACT_BreakablePanel_C_TryInteract");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_BreakablePanel_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_BreakablePanel_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_BreakablePanel_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_BreakablePanel_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, DesiredState) == 0x000038, "Member 'INTERACT_BreakablePanel_C_TryInteract::DesiredState' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000040, "Member 'INTERACT_BreakablePanel_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'INTERACT_BreakablePanel_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000068, "Member 'INTERACT_BreakablePanel_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, CallFunc_TrySetActivationState_Result) == 0x000088, "Member 'INTERACT_BreakablePanel_C_TryInteract::CallFunc_TrySetActivationState_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'INTERACT_BreakablePanel_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_BreakablePanel_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_IsInteractActivated");
static_assert(sizeof(INTERACT_BreakablePanel_C_IsInteractActivated) == 0x000001, "Wrong size on INTERACT_BreakablePanel_C_IsInteractActivated");
static_assert(offsetof(INTERACT_BreakablePanel_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_BreakablePanel_C_IsInteractActivated::Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.GetInteractLocked
// 0x0098 (0x0098 - 0x0000)
struct INTERACT_BreakablePanel_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedDisableQuest_Result;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(INTERACT_BreakablePanel_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_BreakablePanel_C_GetInteractLocked");
static_assert(sizeof(INTERACT_BreakablePanel_C_GetInteractLocked) == 0x000098, "Wrong size on INTERACT_BreakablePanel_C_GetInteractLocked");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, CallFunc_HasCompletedDisableQuest_Result) == 0x000068, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::CallFunc_HasCompletedDisableQuest_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, K2Node_MakeArray_Array) == 0x000070, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_GetInteractLocked, CallFunc_Format_ReturnValue) == 0x000080, "Member 'INTERACT_BreakablePanel_C_GetInteractLocked::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_BreakablePanel_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_BreakablePanel_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_BreakablePanel_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_BreakablePanel_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_BreakablePanel_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetInteractPowered
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_BreakablePanel_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_BreakablePanel_C_SetInteractPowered) == 0x000001, "Wrong alignment on INTERACT_BreakablePanel_C_SetInteractPowered");
static_assert(sizeof(INTERACT_BreakablePanel_C_SetInteractPowered) == 0x000004, "Wrong size on INTERACT_BreakablePanel_C_SetInteractPowered");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_BreakablePanel_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_BreakablePanel_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'INTERACT_BreakablePanel_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_BreakablePanel_C_SetInteractPowered, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'INTERACT_BreakablePanel_C_SetInteractPowered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


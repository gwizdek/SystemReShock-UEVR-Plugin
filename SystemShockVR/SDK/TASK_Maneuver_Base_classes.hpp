#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Maneuver_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Maneuver_Base.TASK_Maneuver_Base_C
// 0x0020 (0x00C8 - 0x00A8)
class UTASK_Maneuver_Base_C : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDrawResults;                                  // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelSpatialNavigationQuery*           Query;                                             // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_Maneuver_Base(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void EVENT_OnQueryFinished(bool bResult, TArray<struct FVector4>& WeightedWorldLocations);
	void DrawWeightedLocations(bool Result, TArray<struct FVector4>& WeightedWorldLocations);
	void OnLocationFound(const struct FVector& FoundLocation, bool* Result);
	void GetTargetPawn(class APAWN_SystemShockCharacter_C** Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Maneuver_Base_C">();
	}
	static class UTASK_Maneuver_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Maneuver_Base_C>();
	}
};
static_assert(alignof(UTASK_Maneuver_Base_C) == 0x000008, "Wrong alignment on UTASK_Maneuver_Base_C");
static_assert(sizeof(UTASK_Maneuver_Base_C) == 0x0000C8, "Wrong size on UTASK_Maneuver_Base_C");
static_assert(offsetof(UTASK_Maneuver_Base_C, UberGraphFrame) == 0x0000A8, "Member 'UTASK_Maneuver_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_Base_C, EnemyPawn) == 0x0000B0, "Member 'UTASK_Maneuver_Base_C::EnemyPawn' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_Base_C, DebugDrawResults) == 0x0000B8, "Member 'UTASK_Maneuver_Base_C::DebugDrawResults' has a wrong offset!");
static_assert(offsetof(UTASK_Maneuver_Base_C, Query) == 0x0000C0, "Member 'UTASK_Maneuver_Base_C::Query' has a wrong offset!");

}


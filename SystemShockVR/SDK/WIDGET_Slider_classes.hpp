#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Slider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_Slider.WIDGET_Slider_C
// 0x0090 (0x02F0 - 0x0260)
class UWIDGET_Slider_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_MouseOver;                                    // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMAGE_Background;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Input;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_SelectionIndicator;                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_SliderValue;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsMouseDown;                                       // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMouseOver;                                       // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MousePosition;                                     // 0x0294(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         DiscreteValues;                                    // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SliderValue;                                       // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialValue;                                      // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueMin;                                          // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueMax;                                          // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Postfix;                                           // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FractionalDigits;                                  // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               BackgroundDynamicMaterial;                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnValueChanged__DelegateSignature(float NewSliderValue, float NewAbsoluteValue);
	void ExecuteUbergraph_WIDGET_Slider(int32 EntryPoint);
	void Construct();
	struct FEventReply EVENT_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnMouseUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseExit(const struct FPointerEvent& MouseEvent);
	void SetSliderValue(float NormalizedValue, float* RealValue);
	void SetSliderRealValue(float RealValue);
	void GetSliderValueFromMousePosition(float* SliderValue_0);
	void GetSliderValue(float* NormalizedValue);
	void GetRealValue(float* RealValue);
	void GetSliderPositionFromValue(float SliderValue_0, struct FVector2D* NewParam);
	void RealToNormalized(float RealValue, float* NormalizedValue);
	void Set_Instanced_Values(int32 DiscreteValues_0, float InitialValues, float ValueMin_0, float ValueMax_0, const class FText& Postfix_0, int32 FractionalDigits_0);
	void InitializeSlider();
	void UpdateBackgroundFill();
	void SetIsHighlighted(bool IsHighlighted);

	void GetSliderLength(float* Length) const;
	void OnPaint(struct FPaintContext& Context) const;
	void GetSliderTextToDisplay(class FText* Text) const;
	void NormalizedToReal(float SliderValue_0, float* RealValue) const;
	void NormalizedToDiscrete(float NormalizedValue, float* DiscreteValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_Slider_C">();
	}
	static class UWIDGET_Slider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_Slider_C>();
	}
};
static_assert(alignof(UWIDGET_Slider_C) == 0x000008, "Wrong alignment on UWIDGET_Slider_C");
static_assert(sizeof(UWIDGET_Slider_C) == 0x0002F0, "Wrong size on UWIDGET_Slider_C");
static_assert(offsetof(UWIDGET_Slider_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_Slider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, ANIM_MouseOver) == 0x000268, "Member 'UWIDGET_Slider_C::ANIM_MouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, IMAGE_Background) == 0x000270, "Member 'UWIDGET_Slider_C::IMAGE_Background' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, MESH_Input) == 0x000278, "Member 'UWIDGET_Slider_C::MESH_Input' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, MESH_SelectionIndicator) == 0x000280, "Member 'UWIDGET_Slider_C::MESH_SelectionIndicator' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, TEXT_SliderValue) == 0x000288, "Member 'UWIDGET_Slider_C::TEXT_SliderValue' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, IsMouseDown) == 0x000290, "Member 'UWIDGET_Slider_C::IsMouseDown' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, IsMouseOver) == 0x000291, "Member 'UWIDGET_Slider_C::IsMouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, MousePosition) == 0x000294, "Member 'UWIDGET_Slider_C::MousePosition' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, OnValueChanged) == 0x0002A0, "Member 'UWIDGET_Slider_C::OnValueChanged' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, DiscreteValues) == 0x0002B0, "Member 'UWIDGET_Slider_C::DiscreteValues' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, SliderValue) == 0x0002B4, "Member 'UWIDGET_Slider_C::SliderValue' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, InitialValue) == 0x0002B8, "Member 'UWIDGET_Slider_C::InitialValue' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, ValueMin) == 0x0002BC, "Member 'UWIDGET_Slider_C::ValueMin' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, ValueMax) == 0x0002C0, "Member 'UWIDGET_Slider_C::ValueMax' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, Postfix) == 0x0002C8, "Member 'UWIDGET_Slider_C::Postfix' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, FractionalDigits) == 0x0002E0, "Member 'UWIDGET_Slider_C::FractionalDigits' has a wrong offset!");
static_assert(offsetof(UWIDGET_Slider_C, BackgroundDynamicMaterial) == 0x0002E8, "Member 'UWIDGET_Slider_C::BackgroundDynamicMaterial' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_VitalBars

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.ExecuteUbergraph_WIDGET_VitalBars
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars) == 0x000004, "Wrong alignment on WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars");
static_assert(sizeof(WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars) == 0x000004, "Wrong size on WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars");
static_assert(offsetof(WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars, EntryPoint) == 0x000000, "Member 'WIDGET_VitalBars_C_ExecuteUbergraph_WIDGET_VitalBars::EntryPoint' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.InitializeVitalBars
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_VitalBars_C_InitializeVitalBars final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_VitalBars_C_InitializeVitalBars) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_InitializeVitalBars");
static_assert(sizeof(WIDGET_VitalBars_C_InitializeVitalBars) == 0x000030, "Wrong size on WIDGET_VitalBars_C_InitializeVitalBars");
static_assert(offsetof(WIDGET_VitalBars_C_InitializeVitalBars, HUD) == 0x000000, "Member 'WIDGET_VitalBars_C_InitializeVitalBars::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_InitializeVitalBars, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_VitalBars_C_InitializeVitalBars::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_InitializeVitalBars, CallFunc_FindItem_FoundItem) == 0x000018, "Member 'WIDGET_VitalBars_C_InitializeVitalBars::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_InitializeVitalBars, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_VitalBars_C_InitializeVitalBars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_InitializeVitalBars, CallFunc_GetBagByType_Bag) == 0x000028, "Member 'WIDGET_VitalBars_C_InitializeVitalBars::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.SetHealth
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_VitalBars_C_SetHealth final
{
public:
	float                                         HealthRatio;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Health;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HealthMax;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_VitalBars_C_SetHealth) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_SetHealth");
static_assert(sizeof(WIDGET_VitalBars_C_SetHealth) == 0x000018, "Wrong size on WIDGET_VitalBars_C_SetHealth");
static_assert(offsetof(WIDGET_VitalBars_C_SetHealth, HealthRatio) == 0x000000, "Member 'WIDGET_VitalBars_C_SetHealth::HealthRatio' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetHealth, Health) == 0x000004, "Member 'WIDGET_VitalBars_C_SetHealth::Health' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetHealth, HealthMax) == 0x000008, "Member 'WIDGET_VitalBars_C_SetHealth::HealthMax' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetHealth, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_VitalBars_C_SetHealth::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.SetEnergy
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_VitalBars_C_SetEnergy final
{
public:
	float                                         EnergyRatio;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Energy;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnergyMax;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_VitalBars_C_SetEnergy) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_SetEnergy");
static_assert(sizeof(WIDGET_VitalBars_C_SetEnergy) == 0x000018, "Wrong size on WIDGET_VitalBars_C_SetEnergy");
static_assert(offsetof(WIDGET_VitalBars_C_SetEnergy, EnergyRatio) == 0x000000, "Member 'WIDGET_VitalBars_C_SetEnergy::EnergyRatio' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetEnergy, Energy) == 0x000004, "Member 'WIDGET_VitalBars_C_SetEnergy::Energy' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetEnergy, EnergyMax) == 0x000008, "Member 'WIDGET_VitalBars_C_SetEnergy::EnergyMax' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_SetEnergy, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_VitalBars_C_SetEnergy::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.EVENT_OnMouseEnterVitalBars
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars");
static_assert(sizeof(WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars) == 0x0000A8, "Wrong size on WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars, MyGeometry) == 0x000000, "Member 'WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars, MouseEvent) == 0x000038, "Member 'WIDGET_VitalBars_C_EVENT_OnMouseEnterVitalBars::MouseEvent' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.EVENT_OnMouseLeaveVitalBars
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars");
static_assert(sizeof(WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars) == 0x000070, "Wrong size on WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars, MouseEvent) == 0x000000, "Member 'WIDGET_VitalBars_C_EVENT_OnMouseLeaveVitalBars::MouseEvent' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.EVENT_OnHardwareBagChanged
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_Bioscan_Base_C*               K2Node_DynamicCast_AsHARDWARE_Bioscan_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged");
static_assert(sizeof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged) == 0x000030, "Wrong size on WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged, SlotIndex) == 0x000000, "Member 'WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged, CallFunc_GetSlotItem_Item) == 0x000018, "Member 'WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_AsHARDWARE_Bioscan_Base) == 0x000020, "Member 'WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_AsHARDWARE_Bioscan_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_VitalBars_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.GetToolTipText
// 0x0478 (0x0478 - 0x0000)
struct WIDGET_VitalBars_C_GetToolTipText final
{
public:
	class FText                                   ToolTip;                                           // 0x0000(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_4;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_5;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_4;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_6;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_5;          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_6;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_7;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_7;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0158(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0198(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0200(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0240(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0280(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x02D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0310(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0350(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0360(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0370(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0388(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x03A0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x03B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x03D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0410(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0450(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0460(0x0018)()
};
static_assert(alignof(WIDGET_VitalBars_C_GetToolTipText) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_GetToolTipText");
static_assert(sizeof(WIDGET_VitalBars_C_GetToolTipText) == 0x000478, "Wrong size on WIDGET_VitalBars_C_GetToolTipText");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, ToolTip) == 0x000000, "Member 'WIDGET_VitalBars_C_GetToolTipText::ToolTip' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, Temp_bool_Variable) == 0x000018, "Member 'WIDGET_VitalBars_C_GetToolTipText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001A, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue) == 0x000020, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000028, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_1) == 0x000030, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_2) == 0x000034, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000038, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000080, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_3) == 0x000084, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000088, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_4) == 0x0000D0, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000D4, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x0000D8, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_5) == 0x0000DC, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_4) == 0x0000E0, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0000E4, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_6) == 0x0000E8, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0000F0, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_5) == 0x0000F4, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_FTrunc_ReturnValue) == 0x0000F8, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_6) == 0x0000FC, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Round_ReturnValue_7) == 0x000140, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Round_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, Temp_bool_Variable_1) == 0x000144, "Member 'WIDGET_VitalBars_C_GetToolTipText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000148, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_IntFloat_ReturnValue_7) == 0x000150, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_IntFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_FTrunc_ReturnValue_1) == 0x000154, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000158, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000198, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeArray_Array) == 0x0001D8, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000200, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000240, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_7) == 0x000280, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002C0, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002C4, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_FTrunc_ReturnValue_2) == 0x0002C8, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_FTrunc_ReturnValue_3) == 0x0002CC, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_8) == 0x0002D0, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_9) == 0x000310, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeArray_Array_1) == 0x000350, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeArray_Array_2) == 0x000360, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Format_ReturnValue_1) == 0x000370, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Format_ReturnValue_2) == 0x000388, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_Select_Default) == 0x0003A0, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_Select_Default_1) == 0x0003B8, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_10) == 0x0003D0, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_11) == 0x000410, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, K2Node_MakeArray_Array_3) == 0x000450, "Member 'WIDGET_VitalBars_C_GetToolTipText::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WIDGET_VitalBars_C_GetToolTipText, CallFunc_Format_ReturnValue_3) == 0x000460, "Member 'WIDGET_VitalBars_C_GetToolTipText::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.DisableFlickerEffect
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_VitalBars_C_DisableFlickerEffect final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_VitalBars_C_DisableFlickerEffect) == 0x000001, "Wrong alignment on WIDGET_VitalBars_C_DisableFlickerEffect");
static_assert(sizeof(WIDGET_VitalBars_C_DisableFlickerEffect) == 0x000001, "Wrong size on WIDGET_VitalBars_C_DisableFlickerEffect");
static_assert(offsetof(WIDGET_VitalBars_C_DisableFlickerEffect, Result) == 0x000000, "Member 'WIDGET_VitalBars_C_DisableFlickerEffect::Result' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.EnableFlickerEffect
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_VitalBars_C_EnableFlickerEffect final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_VitalBars_C_EnableFlickerEffect) == 0x000001, "Wrong alignment on WIDGET_VitalBars_C_EnableFlickerEffect");
static_assert(sizeof(WIDGET_VitalBars_C_EnableFlickerEffect) == 0x000001, "Wrong size on WIDGET_VitalBars_C_EnableFlickerEffect");
static_assert(offsetof(WIDGET_VitalBars_C_EnableFlickerEffect, Result) == 0x000000, "Member 'WIDGET_VitalBars_C_EnableFlickerEffect::Result' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.OnMouseExit
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_VitalBars_C_OnMouseExit final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_VitalBars_C_OnMouseExit) == 0x000001, "Wrong alignment on WIDGET_VitalBars_C_OnMouseExit");
static_assert(sizeof(WIDGET_VitalBars_C_OnMouseExit) == 0x000001, "Wrong size on WIDGET_VitalBars_C_OnMouseExit");
static_assert(offsetof(WIDGET_VitalBars_C_OnMouseExit, Result) == 0x000000, "Member 'WIDGET_VitalBars_C_OnMouseExit::Result' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.OnMouseOver
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_VitalBars_C_OnMouseOver final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_VitalBars_C_OnMouseOver) == 0x000001, "Wrong alignment on WIDGET_VitalBars_C_OnMouseOver");
static_assert(sizeof(WIDGET_VitalBars_C_OnMouseOver) == 0x000001, "Wrong size on WIDGET_VitalBars_C_OnMouseOver");
static_assert(offsetof(WIDGET_VitalBars_C_OnMouseOver, Result) == 0x000000, "Member 'WIDGET_VitalBars_C_OnMouseOver::Result' has a wrong offset!");

// Function WIDGET_VitalBars.WIDGET_VitalBars_C.GetMeshWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_VitalBars_C_GetMeshWidget final
{
public:
	class UGridMeshWidget*                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_VitalBars_C_GetMeshWidget) == 0x000008, "Wrong alignment on WIDGET_VitalBars_C_GetMeshWidget");
static_assert(sizeof(WIDGET_VitalBars_C_GetMeshWidget) == 0x000008, "Wrong size on WIDGET_VitalBars_C_GetMeshWidget");
static_assert(offsetof(WIDGET_VitalBars_C_GetMeshWidget, Result) == 0x000000, "Member 'WIDGET_VitalBars_C_GetMeshWidget::Result' has a wrong offset!");

}


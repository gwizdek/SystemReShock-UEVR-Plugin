#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Biometer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Biometer.WIDGET_Biometer_C.ExecuteUbergraph_WIDGET_Biometer
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer) == 0x000004, "Wrong alignment on WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer");
static_assert(sizeof(WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer) == 0x000040, "Wrong size on WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer");
static_assert(offsetof(WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer, EntryPoint) == 0x000000, "Member 'WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_Biometer_C_ExecuteUbergraph_WIDGET_Biometer::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_Biometer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_Tick) == 0x000004, "Wrong alignment on WIDGET_Biometer_C_Tick");
static_assert(sizeof(WIDGET_Biometer_C_Tick) == 0x00003C, "Wrong size on WIDGET_Biometer_C_Tick");
static_assert(offsetof(WIDGET_Biometer_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_Biometer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_Biometer_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.InitializeBiometer
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_Biometer_C_InitializeBiometer final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UHARDWARE_Bioscan_Base_C*               K2Node_DynamicCast_AsHARDWARE_Bioscan_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_InitializeBiometer) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_InitializeBiometer");
static_assert(sizeof(WIDGET_Biometer_C_InitializeBiometer) == 0x000038, "Wrong size on WIDGET_Biometer_C_InitializeBiometer");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, HUD) == 0x000000, "Member 'WIDGET_Biometer_C_InitializeBiometer::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, CallFunc_FindItem_FoundItem) == 0x000008, "Member 'WIDGET_Biometer_C_InitializeBiometer::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WIDGET_Biometer_C_InitializeBiometer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, K2Node_DynamicCast_AsHARDWARE_Bioscan_Base) == 0x000020, "Member 'WIDGET_Biometer_C_InitializeBiometer::K2Node_DynamicCast_AsHARDWARE_Bioscan_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Biometer_C_InitializeBiometer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_InitializeBiometer, CallFunc_GetBagByType_Bag) == 0x000030, "Member 'WIDGET_Biometer_C_InitializeBiometer::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.ShowBiometer
// 0x000C (0x000C - 0x0000)
struct WIDGET_Biometer_C_ShowBiometer final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_ShowBiometer) == 0x000004, "Wrong alignment on WIDGET_Biometer_C_ShowBiometer");
static_assert(sizeof(WIDGET_Biometer_C_ShowBiometer) == 0x00000C, "Wrong size on WIDGET_Biometer_C_ShowBiometer");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, Visible) == 0x000000, "Member 'WIDGET_Biometer_C_ShowBiometer::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_Biometer_C_ShowBiometer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_Biometer_C_ShowBiometer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_Biometer_C_ShowBiometer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'WIDGET_Biometer_C_ShowBiometer::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'WIDGET_Biometer_C_ShowBiometer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WIDGET_Biometer_C_ShowBiometer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_ShowBiometer, K2Node_Select_Default) == 0x00000A, "Member 'WIDGET_Biometer_C_ShowBiometer::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.EVENT_OnHardwareBagChanged
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Biometer_C_EVENT_OnHardwareBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_Bioscan_Base_C*               K2Node_DynamicCast_AsHARDWARE_Bioscan_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_EVENT_OnHardwareBagChanged");
static_assert(sizeof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged) == 0x000030, "Wrong size on WIDGET_Biometer_C_EVENT_OnHardwareBagChanged");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged, SlotIndex) == 0x000000, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareBagChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged, CallFunc_GetSlotItem_Item) == 0x000018, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_AsHARDWARE_Bioscan_Base) == 0x000020, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_AsHARDWARE_Bioscan_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareBagChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.UpdateBiometer
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Biometer_C_UpdateBiometer final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInProgress;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_UpdateBiometer) == 0x000004, "Wrong alignment on WIDGET_Biometer_C_UpdateBiometer");
static_assert(sizeof(WIDGET_Biometer_C_UpdateBiometer) == 0x000028, "Wrong size on WIDGET_Biometer_C_UpdateBiometer");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, DeltaTime) == 0x000000, "Member 'WIDGET_Biometer_C_UpdateBiometer::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, FadeInProgress) == 0x000004, "Member 'WIDGET_Biometer_C_UpdateBiometer::FadeInProgress' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000020, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_UpdateBiometer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'WIDGET_Biometer_C_UpdateBiometer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.SetHardwareItem
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_Biometer_C_SetHardwareItem final
{
public:
	class UHARDWARE_Bioscan_Base_C*               Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeVisible;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Activated, bool MagLocked)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Activated, bool MagLocked)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_SetHardwareItem) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_SetHardwareItem");
static_assert(sizeof(WIDGET_Biometer_C_SetHardwareItem) == 0x000038, "Wrong size on WIDGET_Biometer_C_SetHardwareItem");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, Item) == 0x000000, "Member 'WIDGET_Biometer_C_SetHardwareItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, ShouldBeVisible) == 0x000008, "Member 'WIDGET_Biometer_C_SetHardwareItem::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WIDGET_Biometer_C_SetHardwareItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WIDGET_Biometer_C_SetHardwareItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WIDGET_Biometer_C_SetHardwareItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WIDGET_Biometer_C_SetHardwareItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_SetHardwareItem, CallFunc_GetIsActivated_Result) == 0x000031, "Member 'WIDGET_Biometer_C_SetHardwareItem::CallFunc_GetIsActivated_Result' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.EVENT_OnHardwareStateChanged
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_Biometer_C_EVENT_OnHardwareStateChanged final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MagLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged) == 0x000001, "Wrong alignment on WIDGET_Biometer_C_EVENT_OnHardwareStateChanged");
static_assert(sizeof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged) == 0x000004, "Wrong size on WIDGET_Biometer_C_EVENT_OnHardwareStateChanged");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged, Activated) == 0x000000, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareStateChanged::Activated' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged, MagLocked) == 0x000001, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareStateChanged::MagLocked' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnHardwareStateChanged, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WIDGET_Biometer_C_EVENT_OnHardwareStateChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.EVENT_OnMouseOverTraceLines
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines");
static_assert(sizeof(WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines) == 0x0000A8, "Wrong size on WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines, MyGeometry) == 0x000000, "Member 'WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines, MouseEvent) == 0x000038, "Member 'WIDGET_Biometer_C_EVENT_OnMouseOverTraceLines::MouseEvent' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.EVENT_OnMouseLeaveTraceLines
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines");
static_assert(sizeof(WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines) == 0x000070, "Wrong size on WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines");
static_assert(offsetof(WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines, MouseEvent) == 0x000000, "Member 'WIDGET_Biometer_C_EVENT_OnMouseLeaveTraceLines::MouseEvent' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.GetHeartRate
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Biometer_C_GetHeartRate final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTimeSeriesTraceFunction*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTRACE_HeartVoltage_C*                  K2Node_DynamicCast_AsTRACE_Heart_Voltage;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_GetHeartRate) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_GetHeartRate");
static_assert(sizeof(WIDGET_Biometer_C_GetHeartRate) == 0x000028, "Wrong size on WIDGET_Biometer_C_GetHeartRate");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, Result) == 0x000000, "Member 'WIDGET_Biometer_C_GetHeartRate::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000004, "Member 'WIDGET_Biometer_C_GetHeartRate::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, CallFunc_Array_Get_Item) == 0x000008, "Member 'WIDGET_Biometer_C_GetHeartRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, K2Node_DynamicCast_AsTRACE_Heart_Voltage) == 0x000010, "Member 'WIDGET_Biometer_C_GetHeartRate::K2Node_DynamicCast_AsTRACE_Heart_Voltage' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_Biometer_C_GetHeartRate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'WIDGET_Biometer_C_GetHeartRate::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetHeartRate, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WIDGET_Biometer_C_GetHeartRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.GetEnergyUsage
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_Biometer_C_GetEnergyUsage final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyPerMinute;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickInterval;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CurrentAttribMod;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTickRate_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAttribMod*>                     CallFunc_GetActiveModsWithApplyType_ReturnValue;   // 0x0048(0x0010)(ReferenceParm)
	class UAttribMod*                             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_GetEnergyUsage) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_GetEnergyUsage");
static_assert(sizeof(WIDGET_Biometer_C_GetEnergyUsage) == 0x000078, "Wrong size on WIDGET_Biometer_C_GetEnergyUsage");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, Result) == 0x000000, "Member 'WIDGET_Biometer_C_GetEnergyUsage::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, EnergyPerMinute) == 0x000004, "Member 'WIDGET_Biometer_C_GetEnergyUsage::EnergyPerMinute' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, TickInterval) == 0x000008, "Member 'WIDGET_Biometer_C_GetEnergyUsage::TickInterval' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CurrentAttribMod) == 0x000010, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CurrentAttribMod' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, EnergyAttribInstance) == 0x000018, "Member 'WIDGET_Biometer_C_GetEnergyUsage::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WIDGET_Biometer_C_GetEnergyUsage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_GetTickRate_ReturnValue) == 0x00002C, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_GetTickRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Round_ReturnValue) == 0x000030, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WIDGET_Biometer_C_GetEnergyUsage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_GetActiveModsWithApplyType_ReturnValue) == 0x000048, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_GetActiveModsWithApplyType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Array_Get_Item) == 0x000058, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_GetAttribInstance_ReturnValue) == 0x000068, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetEnergyUsage, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_Biometer_C_GetEnergyUsage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.GetChiFrequency
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Biometer_C_GetChiFrequency final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeSeriesTraceFunction*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTRACE_ChiWave_C*                       K2Node_DynamicCast_AsTRACE_Chi_Wave;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_GetChiFrequency) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_GetChiFrequency");
static_assert(sizeof(WIDGET_Biometer_C_GetChiFrequency) == 0x000030, "Wrong size on WIDGET_Biometer_C_GetChiFrequency");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, Result) == 0x000000, "Member 'WIDGET_Biometer_C_GetChiFrequency::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, CallFunc_Array_Get_Item) == 0x000008, "Member 'WIDGET_Biometer_C_GetChiFrequency::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, K2Node_DynamicCast_AsTRACE_Chi_Wave) == 0x000010, "Member 'WIDGET_Biometer_C_GetChiFrequency::K2Node_DynamicCast_AsTRACE_Chi_Wave' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_Biometer_C_GetChiFrequency::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'WIDGET_Biometer_C_GetChiFrequency::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, CallFunc_Round_ReturnValue) == 0x000020, "Member 'WIDGET_Biometer_C_GetChiFrequency::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WIDGET_Biometer_C_GetChiFrequency::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetChiFrequency, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'WIDGET_Biometer_C_GetChiFrequency::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.GetToolTipText
// 0x0140 (0x0140 - 0x0000)
struct WIDGET_Biometer_C_GetToolTipText final
{
public:
	class FText                                   ToolTip;                                           // 0x0000(0x0018)(Parm, OutParm)
	float                                         CallFunc_GetChiFrequency_Result;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnergyUsage_Result;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	int32                                         CallFunc_GetHeartRate_Result;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
};
static_assert(alignof(WIDGET_Biometer_C_GetToolTipText) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_GetToolTipText");
static_assert(sizeof(WIDGET_Biometer_C_GetToolTipText) == 0x000140, "Wrong size on WIDGET_Biometer_C_GetToolTipText");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, ToolTip) == 0x000000, "Member 'WIDGET_Biometer_C_GetToolTipText::ToolTip' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_GetChiFrequency_Result) == 0x000018, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_GetChiFrequency_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_GetEnergyUsage_Result) == 0x00001C, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_GetEnergyUsage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WIDGET_Biometer_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_GetHeartRate_Result) == 0x000078, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_GetHeartRate_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'WIDGET_Biometer_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000C0, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'WIDGET_Biometer_C_GetToolTipText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, K2Node_MakeArray_Array) == 0x000118, "Member 'WIDGET_Biometer_C_GetToolTipText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_Biometer_C_GetToolTipText, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WIDGET_Biometer_C_GetToolTipText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.OnMouseExit
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Biometer_C_OnMouseExit final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_OnMouseExit) == 0x000001, "Wrong alignment on WIDGET_Biometer_C_OnMouseExit");
static_assert(sizeof(WIDGET_Biometer_C_OnMouseExit) == 0x000001, "Wrong size on WIDGET_Biometer_C_OnMouseExit");
static_assert(offsetof(WIDGET_Biometer_C_OnMouseExit, Result) == 0x000000, "Member 'WIDGET_Biometer_C_OnMouseExit::Result' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.OnMouseOver
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Biometer_C_OnMouseOver final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_OnMouseOver) == 0x000001, "Wrong alignment on WIDGET_Biometer_C_OnMouseOver");
static_assert(sizeof(WIDGET_Biometer_C_OnMouseOver) == 0x000001, "Wrong size on WIDGET_Biometer_C_OnMouseOver");
static_assert(offsetof(WIDGET_Biometer_C_OnMouseOver, Result) == 0x000000, "Member 'WIDGET_Biometer_C_OnMouseOver::Result' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.GetMeshWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Biometer_C_GetMeshWidget final
{
public:
	class UGridMeshWidget*                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Biometer_C_GetMeshWidget) == 0x000008, "Wrong alignment on WIDGET_Biometer_C_GetMeshWidget");
static_assert(sizeof(WIDGET_Biometer_C_GetMeshWidget) == 0x000008, "Wrong size on WIDGET_Biometer_C_GetMeshWidget");
static_assert(offsetof(WIDGET_Biometer_C_GetMeshWidget, Result) == 0x000000, "Member 'WIDGET_Biometer_C_GetMeshWidget::Result' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.EnableFlickerEffect
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Biometer_C_EnableFlickerEffect final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_EnableFlickerEffect) == 0x000001, "Wrong alignment on WIDGET_Biometer_C_EnableFlickerEffect");
static_assert(sizeof(WIDGET_Biometer_C_EnableFlickerEffect) == 0x000001, "Wrong size on WIDGET_Biometer_C_EnableFlickerEffect");
static_assert(offsetof(WIDGET_Biometer_C_EnableFlickerEffect, Result) == 0x000000, "Member 'WIDGET_Biometer_C_EnableFlickerEffect::Result' has a wrong offset!");

// Function WIDGET_Biometer.WIDGET_Biometer_C.DisableFlickerEffect
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Biometer_C_DisableFlickerEffect final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Biometer_C_DisableFlickerEffect) == 0x000001, "Wrong alignment on WIDGET_Biometer_C_DisableFlickerEffect");
static_assert(sizeof(WIDGET_Biometer_C_DisableFlickerEffect) == 0x000001, "Wrong size on WIDGET_Biometer_C_DisableFlickerEffect");
static_assert(offsetof(WIDGET_Biometer_C_DisableFlickerEffect, Result) == 0x000000, "Member 'WIDGET_Biometer_C_DisableFlickerEffect::Result' has a wrong offset!");

}


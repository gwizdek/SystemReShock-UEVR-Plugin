#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SlottedItem

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_SlottedItem.WIDGET_SlottedItem_C
// 0x0040 (0x02A0 - 0x0260)
class UWIDGET_SlottedItem_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       TransitionHighlight;                               // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_HotkeyBackground;                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ItemIcon;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ItemRegion;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_UpgradeIcon;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_HotkeyText;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_ItemCount;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITEM_Base_C*                           SlottedItem;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetItem(class UITEM_Base_C* Item);
	void SetHotkeyText(const class FText& Text);
	void ClearHotkeyText();
	void UpdateItemCountText();
	void UpdateAmmoCountText();
	void EVENT_OnSlottedItemChanged();
	void UpdateModkitStatus(class UITEM_WeaponBase_C* Weapon);
	void EVENT_OnModKitInstalled(class UITEM_WeaponBase_C* Weapon, class UITEM_WeaponModKit_Base_C* ModKit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_SlottedItem_C">();
	}
	static class UWIDGET_SlottedItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_SlottedItem_C>();
	}
};
static_assert(alignof(UWIDGET_SlottedItem_C) == 0x000008, "Wrong alignment on UWIDGET_SlottedItem_C");
static_assert(sizeof(UWIDGET_SlottedItem_C) == 0x0002A0, "Wrong size on UWIDGET_SlottedItem_C");
static_assert(offsetof(UWIDGET_SlottedItem_C, TransitionHighlight) == 0x000260, "Member 'UWIDGET_SlottedItem_C::TransitionHighlight' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, MESH_HotkeyBackground) == 0x000268, "Member 'UWIDGET_SlottedItem_C::MESH_HotkeyBackground' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, MESH_ItemIcon) == 0x000270, "Member 'UWIDGET_SlottedItem_C::MESH_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, MESH_ItemRegion) == 0x000278, "Member 'UWIDGET_SlottedItem_C::MESH_ItemRegion' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, MESH_UpgradeIcon) == 0x000280, "Member 'UWIDGET_SlottedItem_C::MESH_UpgradeIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, TEXT_HotkeyText) == 0x000288, "Member 'UWIDGET_SlottedItem_C::TEXT_HotkeyText' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, TEXT_ItemCount) == 0x000290, "Member 'UWIDGET_SlottedItem_C::TEXT_ItemCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_SlottedItem_C, SlottedItem) == 0x000298, "Member 'UWIDGET_SlottedItem_C::SlottedItem' has a wrong offset!");

}


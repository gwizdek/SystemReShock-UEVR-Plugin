#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CORPSE_Protoborg

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.ExecuteUbergraph_CORPSE_Protoborg
// 0x0004 (0x0004 - 0x0000)
struct CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg) == 0x000004, "Wrong alignment on CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg");
static_assert(sizeof(CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg) == 0x000004, "Wrong size on CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg");
static_assert(offsetof(CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg, EntryPoint) == 0x000000, "Member 'CORPSE_Protoborg_C_ExecuteUbergraph_CORPSE_Protoborg::EntryPoint' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.UserConstructionScript
// 0x0058 (0x0058 - 0x0000)
struct CORPSE_Protoborg_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSingleAnimationPlayData               K2Node_MakeStruct_SingleAnimationPlayData;         // 0x0038(0x0018)(NoDestructor)
	class USkeletalMesh*                          K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_UserConstructionScript) == 0x000008, "Wrong alignment on CORPSE_Protoborg_C_UserConstructionScript");
static_assert(sizeof(CORPSE_Protoborg_C_UserConstructionScript) == 0x000058, "Wrong size on CORPSE_Protoborg_C_UserConstructionScript");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_bool_Variable_1) == 0x000018, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_object_Variable_2) == 0x000020, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, Temp_object_Variable_3) == 0x000028, "Member 'CORPSE_Protoborg_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, K2Node_Select_Default) == 0x000030, "Member 'CORPSE_Protoborg_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, K2Node_MakeStruct_SingleAnimationPlayData) == 0x000038, "Member 'CORPSE_Protoborg_C_UserConstructionScript::K2Node_MakeStruct_SingleAnimationPlayData' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_UserConstructionScript, K2Node_Select_Default_1) == 0x000050, "Member 'CORPSE_Protoborg_C_UserConstructionScript::K2Node_Select_Default_1' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.InitializeProtoborg
// 0x0028 (0x0028 - 0x0000)
struct CORPSE_Protoborg_C_InitializeProtoborg final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_InitializeProtoborg) == 0x000008, "Wrong alignment on CORPSE_Protoborg_C_InitializeProtoborg");
static_assert(sizeof(CORPSE_Protoborg_C_InitializeProtoborg) == 0x000028, "Wrong size on CORPSE_Protoborg_C_InitializeProtoborg");
static_assert(offsetof(CORPSE_Protoborg_C_InitializeProtoborg, Temp_bool_Variable) == 0x000000, "Member 'CORPSE_Protoborg_C_InitializeProtoborg::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_InitializeProtoborg, Temp_object_Variable) == 0x000008, "Member 'CORPSE_Protoborg_C_InitializeProtoborg::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_InitializeProtoborg, Temp_object_Variable_1) == 0x000010, "Member 'CORPSE_Protoborg_C_InitializeProtoborg::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_InitializeProtoborg, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000018, "Member 'CORPSE_Protoborg_C_InitializeProtoborg::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_InitializeProtoborg, K2Node_Select_Default) == 0x000020, "Member 'CORPSE_Protoborg_C_InitializeProtoborg::K2Node_Select_Default' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.UpdateProtoborgMesh
// 0x0004 (0x0004 - 0x0000)
struct CORPSE_Protoborg_C_UpdateProtoborgMesh final
{
public:
	float                                         CircuitBrightness;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_UpdateProtoborgMesh) == 0x000004, "Wrong alignment on CORPSE_Protoborg_C_UpdateProtoborgMesh");
static_assert(sizeof(CORPSE_Protoborg_C_UpdateProtoborgMesh) == 0x000004, "Wrong size on CORPSE_Protoborg_C_UpdateProtoborgMesh");
static_assert(offsetof(CORPSE_Protoborg_C_UpdateProtoborgMesh, CircuitBrightness) == 0x000000, "Member 'CORPSE_Protoborg_C_UpdateProtoborgMesh::CircuitBrightness' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.EVENT_OnUpdateCircuitBrightness
// 0x0018 (0x0018 - 0x0000)
struct CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness final
{
public:
	float                                         NewBrightness;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCustomPrimitiveDataFloat_ReturnValue;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness) == 0x000004, "Wrong alignment on CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness");
static_assert(sizeof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness) == 0x000018, "Wrong size on CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, NewBrightness) == 0x000000, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::NewBrightness' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, CallFunc_GetCustomPrimitiveDataFloat_ReturnValue) == 0x00000C, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::CallFunc_GetCustomPrimitiveDataFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness, CallFunc_FMax_ReturnValue) == 0x000014, "Member 'CORPSE_Protoborg_C_EVENT_OnUpdateCircuitBrightness::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.SetDeadDescriptionText
// 0x00C8 (0x00C8 - 0x0000)
struct CORPSE_Protoborg_C_SetDeadDescriptionText final
{
public:
	bool                                          IsInventoryEmpty;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLootableDisplayName_Text;              // 0x0008(0x0018)()
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetInventoryDescriptionText_ResultMessage; // 0x0028(0x0018)()
	bool                                          CallFunc_IsBagEmpty_Result;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGeneratedLoot_Result;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLootableDisplayName_Text_1;            // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
};
static_assert(alignof(CORPSE_Protoborg_C_SetDeadDescriptionText) == 0x000008, "Wrong alignment on CORPSE_Protoborg_C_SetDeadDescriptionText");
static_assert(sizeof(CORPSE_Protoborg_C_SetDeadDescriptionText) == 0x0000C8, "Wrong size on CORPSE_Protoborg_C_SetDeadDescriptionText");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, IsInventoryEmpty) == 0x000000, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::IsInventoryEmpty' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_GetLootableDisplayName_Text) == 0x000008, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_GetLootableDisplayName_Text' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_GetBagByIndex_Bag) == 0x000020, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_GetInventoryDescriptionText_ResultMessage) == 0x000028, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_GetInventoryDescriptionText_ResultMessage' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_IsBagEmpty_Result) == 0x000040, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_IsBagEmpty_Result' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_HasGeneratedLoot_Result) == 0x000041, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_HasGeneratedLoot_Result' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_GetLootableDisplayName_Text_1) == 0x000048, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_GetLootableDisplayName_Text_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, K2Node_MakeArray_Array) == 0x0000A0, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_SetDeadDescriptionText, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'CORPSE_Protoborg_C_SetDeadDescriptionText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.EVENT_OnDamageReceived
// 0x0078 (0x0078 - 0x0000)
struct CORPSE_Protoborg_C_EVENT_OnDamageReceived final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasAlive;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_EVENT_OnDamageReceived) == 0x000008, "Wrong alignment on CORPSE_Protoborg_C_EVENT_OnDamageReceived");
static_assert(sizeof(CORPSE_Protoborg_C_EVENT_OnDamageReceived) == 0x000078, "Wrong size on CORPSE_Protoborg_C_EVENT_OnDamageReceived");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, OtherActor) == 0x000000, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::OtherActor' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, DamageInstance) == 0x000008, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::DamageInstance' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, UserParams) == 0x000030, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::UserParams' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, WasAlive) == 0x000038, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::WasAlive' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, Temp_bool_Variable) == 0x000039, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, Temp_object_Variable) == 0x000040, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, Temp_object_Variable_1) == 0x000048, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_EVENT_OnDamageReceived, K2Node_Select_Default) == 0x000070, "Member 'CORPSE_Protoborg_C_EVENT_OnDamageReceived::K2Node_Select_Default' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.EnableScanShape
// 0x0001 (0x0001 - 0x0000)
struct CORPSE_Protoborg_C_EnableScanShape final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Protoborg_C_EnableScanShape) == 0x000001, "Wrong alignment on CORPSE_Protoborg_C_EnableScanShape");
static_assert(sizeof(CORPSE_Protoborg_C_EnableScanShape) == 0x000001, "Wrong size on CORPSE_Protoborg_C_EnableScanShape");
static_assert(offsetof(CORPSE_Protoborg_C_EnableScanShape, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'CORPSE_Protoborg_C_EnableScanShape::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct CORPSE_Protoborg_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Protoborg_C_GetTargetShape) == 0x000008, "Wrong alignment on CORPSE_Protoborg_C_GetTargetShape");
static_assert(sizeof(CORPSE_Protoborg_C_GetTargetShape) == 0x000010, "Wrong size on CORPSE_Protoborg_C_GetTargetShape");
static_assert(offsetof(CORPSE_Protoborg_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'CORPSE_Protoborg_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CORPSE_Protoborg_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'CORPSE_Protoborg_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function CORPSE_Protoborg.CORPSE_Protoborg_C.UpdateCorpseVisibility
// 0x0001 (0x0001 - 0x0000)
struct CORPSE_Protoborg_C_UpdateCorpseVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Protoborg_C_UpdateCorpseVisibility) == 0x000001, "Wrong alignment on CORPSE_Protoborg_C_UpdateCorpseVisibility");
static_assert(sizeof(CORPSE_Protoborg_C_UpdateCorpseVisibility) == 0x000001, "Wrong size on CORPSE_Protoborg_C_UpdateCorpseVisibility");
static_assert(offsetof(CORPSE_Protoborg_C_UpdateCorpseVisibility, VisibilityState) == 0x000000, "Member 'CORPSE_Protoborg_C_UpdateCorpseVisibility::VisibilityState' has a wrong offset!");

}


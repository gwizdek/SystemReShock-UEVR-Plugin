#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEBUG_SkipShodanArena

#include "Basic.hpp"


namespace SDK::Params
{

// Function DEBUG_SkipShodanArena.DEBUG_SkipShodanArena_C.TriggerDebugFunction
// 0x0028 (0x0028 - 0x0000)
struct DEBUG_SkipShodanArena_C_TriggerDebugFunction final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TriggerDebugFunction_Handled;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryLeaveCurrentLevel_Result;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBUG_SkipShodanArena_C_TriggerDebugFunction) == 0x000008, "Wrong alignment on DEBUG_SkipShodanArena_C_TriggerDebugFunction");
static_assert(sizeof(DEBUG_SkipShodanArena_C_TriggerDebugFunction) == 0x000028, "Wrong size on DEBUG_SkipShodanArena_C_TriggerDebugFunction");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, Handled) == 0x000000, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::Handled' has a wrong offset!");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, CallFunc_TriggerDebugFunction_Handled) == 0x000010, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::CallFunc_TriggerDebugFunction_Handled' has a wrong offset!");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DEBUG_SkipShodanArena_C_TriggerDebugFunction, CallFunc_TryLeaveCurrentLevel_Result) == 0x000021, "Member 'DEBUG_SkipShodanArena_C_TriggerDebugFunction::CallFunc_TryLeaveCurrentLevel_Result' has a wrong offset!");

}


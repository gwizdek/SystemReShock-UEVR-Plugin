#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_GamePig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "INTERACT_Channeling_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_GamePig.INTERACT_GamePig_C
// 0x00C0 (0x0410 - 0x0350)
class AINTERACT_GamePig_C final : public AINTERACT_Channeling_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_GamePig_C;                 // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        SpeakerLocation;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TargetBox;                                         // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 PlayerPawn;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          PlayerController;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayStartTimestamp;                                // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_GamePig_C*                        GamePigItem;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               MinigameCaptureComponent;                          // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMINILEVEL_Base_C*                      MinigameActor;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AACTOR_GamePigSplashScreenManager_C*    SplashActor;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_MenuMove_C*                StopHackerMoveControl;                             // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicScreenMaterial;                             // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicGlowMaterial;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxGlowIntensity;                                  // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentGlowIntensity;                              // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetGlowIntensity;                               // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPoweredOn;                                       // 0x03CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPuttingAway;                                     // 0x03CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSkipGamepigIntro;                                 // 0x03CE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CF[0x1];                                      // 0x03CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SourceTransitionLocation;                          // 0x03D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetTransitionLocation;                          // 0x03DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SourceTransitionRotation;                          // 0x03E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetTransitionRotation;                          // 0x03F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DistanceFromPlayer;                                // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionDuration;                                // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionStartTimestamp;                          // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_GamePig(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void InitializeGamePigMaterials();
	void CreateGamepigSplashScreen();
	void CreateMinigameLevel(bool* Result);
	void TogglePowerLED();
	void PlayMinigameSound(class USoundCue* SoundCue, class UAudioComponent** AudioComponent);
	void UpdateMaterials(float DeltaTime);
	void UpdateTransition();
	void StopPlayingGamePig();
	void GetHolsteredTransform(struct FTransform* Transform);
	void CanResumeChannelingInteraction(bool* Result);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void StopChanneling(class AActor* NewChannelingInteract, bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_GamePig_C">();
	}
	static class AINTERACT_GamePig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_GamePig_C>();
	}
};
static_assert(alignof(AINTERACT_GamePig_C) == 0x000008, "Wrong alignment on AINTERACT_GamePig_C");
static_assert(sizeof(AINTERACT_GamePig_C) == 0x000410, "Wrong size on AINTERACT_GamePig_C");
static_assert(offsetof(AINTERACT_GamePig_C, UberGraphFrame_INTERACT_GamePig_C) == 0x000350, "Member 'AINTERACT_GamePig_C::UberGraphFrame_INTERACT_GamePig_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, SpeakerLocation) == 0x000358, "Member 'AINTERACT_GamePig_C::SpeakerLocation' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TargetBox) == 0x000360, "Member 'AINTERACT_GamePig_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, StaticMesh) == 0x000368, "Member 'AINTERACT_GamePig_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, PlayerPawn) == 0x000370, "Member 'AINTERACT_GamePig_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, PlayerController) == 0x000378, "Member 'AINTERACT_GamePig_C::PlayerController' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, PlayStartTimestamp) == 0x000380, "Member 'AINTERACT_GamePig_C::PlayStartTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, GamePigItem) == 0x000388, "Member 'AINTERACT_GamePig_C::GamePigItem' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, MinigameCaptureComponent) == 0x000390, "Member 'AINTERACT_GamePig_C::MinigameCaptureComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, MinigameActor) == 0x000398, "Member 'AINTERACT_GamePig_C::MinigameActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, SplashActor) == 0x0003A0, "Member 'AINTERACT_GamePig_C::SplashActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, StopHackerMoveControl) == 0x0003A8, "Member 'AINTERACT_GamePig_C::StopHackerMoveControl' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, DynamicScreenMaterial) == 0x0003B0, "Member 'AINTERACT_GamePig_C::DynamicScreenMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, DynamicGlowMaterial) == 0x0003B8, "Member 'AINTERACT_GamePig_C::DynamicGlowMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, MaxGlowIntensity) == 0x0003C0, "Member 'AINTERACT_GamePig_C::MaxGlowIntensity' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, CurrentGlowIntensity) == 0x0003C4, "Member 'AINTERACT_GamePig_C::CurrentGlowIntensity' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TargetGlowIntensity) == 0x0003C8, "Member 'AINTERACT_GamePig_C::TargetGlowIntensity' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, IsPoweredOn) == 0x0003CC, "Member 'AINTERACT_GamePig_C::IsPoweredOn' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, IsPuttingAway) == 0x0003CD, "Member 'AINTERACT_GamePig_C::IsPuttingAway' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, bSkipGamepigIntro) == 0x0003CE, "Member 'AINTERACT_GamePig_C::bSkipGamepigIntro' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, SourceTransitionLocation) == 0x0003D0, "Member 'AINTERACT_GamePig_C::SourceTransitionLocation' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TargetTransitionLocation) == 0x0003DC, "Member 'AINTERACT_GamePig_C::TargetTransitionLocation' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, SourceTransitionRotation) == 0x0003E8, "Member 'AINTERACT_GamePig_C::SourceTransitionRotation' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TargetTransitionRotation) == 0x0003F4, "Member 'AINTERACT_GamePig_C::TargetTransitionRotation' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, DistanceFromPlayer) == 0x000400, "Member 'AINTERACT_GamePig_C::DistanceFromPlayer' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TransitionDuration) == 0x000404, "Member 'AINTERACT_GamePig_C::TransitionDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_GamePig_C, TransitionStartTimestamp) == 0x000408, "Member 'AINTERACT_GamePig_C::TransitionStartTimestamp' has a wrong offset!");

}


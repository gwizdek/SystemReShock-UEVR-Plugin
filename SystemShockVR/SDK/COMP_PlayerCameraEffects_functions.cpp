#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_PlayerCameraEffects

#include "Basic.hpp"

#include "COMP_PlayerCameraEffects_classes.hpp"
#include "COMP_PlayerCameraEffects_parameters.hpp"


namespace SDK
{

// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ExecuteUbergraph_COMP_PlayerCameraEffects
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::ExecuteUbergraph_COMP_PlayerCameraEffects(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ExecuteUbergraph_COMP_PlayerCameraEffects");

	Params::COMP_PlayerCameraEffects_C_ExecuteUbergraph_COMP_PlayerCameraEffects Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ReceiveTick");

	Params::COMP_PlayerCameraEffects_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BlindnessExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::BlindnessExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BlindnessExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BlindnessApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::BlindnessApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BlindnessApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BeginCyberspaceGreenGrid
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reversed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::BeginCyberspaceGreenGrid(bool Reversed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BeginCyberspaceGreenGrid");

	Params::COMP_PlayerCameraEffects_C_BeginCyberspaceGreenGrid Parms{};

	Parms.Reversed = Reversed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.VisionExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::VisionExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "VisionExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.VisionApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::VisionApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "VisionApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.MedipatchExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::MedipatchExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "MedipatchExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.MedipatchApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::MedipatchApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "MedipatchApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.DetoxExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::DetoxExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "DetoxExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.DetoxApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::DetoxApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "DetoxApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.StaminupExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::StaminupExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "StaminupExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.StaminupApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::StaminupApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "StaminupApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BerserkApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::BerserkApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BerserkApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ClumsyExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ClumsyExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ClumsyExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ClumsyApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ClumsyApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ClumsyApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ReflexExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ReflexExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ReflexExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ReflexApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ReflexApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ReflexApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.PsychosisExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::PsychosisExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "PsychosisExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.PsychosisApplied
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::PsychosisApplied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "PsychosisApplied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BerserkExpired
// (BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::BerserkExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BerserkExpired");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.AddScreenShakeEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::AddScreenShakeEffect(float Scale, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "AddScreenShakeEffect");

	Params::COMP_PlayerCameraEffects_C_AddScreenShakeEffect Parms{};

	Parms.Scale = Scale;
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateBloodEffects
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::UpdateBloodEffects(bool ForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateBloodEffects");

	Params::COMP_PlayerCameraEffects_C_UpdateBloodEffects Parms{};

	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.AddDamageEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::AddDamageEffects(float Damage, class UAttribDamageType* DamageType, class UOBJ_ImpactData_C* ImpactData, class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "AddDamageEffects");

	Params::COMP_PlayerCameraEffects_C_AddDamageEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.ImpactData = ImpactData;
	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.SetupAttribEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::SetupAttribEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "SetupAttribEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.GetRampUpRampDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaintainDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RampUpDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RampDownDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TargetValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::GetRampUpRampDown(float StartTime, float CurrentTime, float MaintainDuration, float RampUpDuration, float RampDownDuration, float TargetValue, float* NewValue, bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "GetRampUpRampDown");

	Params::COMP_PlayerCameraEffects_C_GetRampUpRampDown Parms{};

	Parms.StartTime = StartTime;
	Parms.CurrentTime = CurrentTime;
	Parms.MaintainDuration = MaintainDuration;
	Parms.RampUpDuration = RampUpDuration;
	Parms.RampDownDuration = RampDownDuration;
	Parms.TargetValue = TargetValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateDamageDirectionEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::UpdateDamageDirectionEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateDamageDirectionEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateDeathVignette
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::UpdateDeathVignette()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateDeathVignette");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.GetRampUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaintainTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RampUpTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TargetValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFinished                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::GetRampUp(float StartTime, float CurrentTime, float MaintainTime, float RampUpTime, float TargetValue, float* NewValue, bool* IsFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "GetRampUp");

	Params::COMP_PlayerCameraEffects_C_GetRampUp Parms{};

	Parms.StartTime = StartTime;
	Parms.CurrentTime = CurrentTime;
	Parms.MaintainTime = MaintainTime;
	Parms.RampUpTime = RampUpTime;
	Parms.TargetValue = TargetValue;

	UObject::ProcessEvent(Func, &Parms);

	if (NewValue != nullptr)
		*NewValue = Parms.NewValue;

	if (IsFinished != nullptr)
		*IsFinished = Parms.IsFinished;
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateLowHealthPulse
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::UpdateLowHealthPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateLowHealthPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.GetDamageDirectionIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::GetDamageDirectionIndex(class UOBJ_ImpactData_C* ImpactData, class AActor* SourceActor, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "GetDamageDirectionIndex");

	Params::COMP_PlayerCameraEffects_C_GetDamageDirectionIndex Parms{};

	Parms.ImpactData = ImpactData;
	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.InitializeAttributeEvents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::InitializeAttributeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "InitializeAttributeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.EVENT_OnHealthChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EModApplyType                           ApplyType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::EVENT_OnHealthChanged(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "EVENT_OnHealthChanged");

	Params::COMP_PlayerCameraEffects_C_EVENT_OnHealthChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;
	Parms.MaxValue = MaxValue;
	Parms.ApplyType = ApplyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateCameraShakeEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::UpdateCameraShakeEffects(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateCameraShakeEffects");

	Params::COMP_PlayerCameraEffects_C_UpdateCameraShakeEffects Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.AddScreenShakeEffectWithDuration
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::AddScreenShakeEffectWithDuration(float Scale, float Duration, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "AddScreenShakeEffectWithDuration");

	Params::COMP_PlayerCameraEffects_C_AddScreenShakeEffectWithDuration Parms{};

	Parms.Scale = Scale;
	Parms.Duration = Duration;
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.AddScreenHitReactEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHeadHit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::AddScreenHitReactEffect(float Scale, const struct FVector& Direction, bool IsHeadHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "AddScreenHitReactEffect");

	Params::COMP_PlayerCameraEffects_C_AddScreenHitReactEffect Parms{};

	Parms.Scale = Scale;
	Parms.Direction = std::move(Direction);
	Parms.IsHeadHit = IsHeadHit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateCameraHitReacts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::UpdateCameraHitReacts(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateCameraHitReacts");

	Params::COMP_PlayerCameraEffects_C_UpdateCameraHitReacts Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.GetAttribRatio
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttributeDef*                    Attrib                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::GetAttribRatio(class UAttributeDef* Attrib, float* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "GetAttribRatio");

	Params::COMP_PlayerCameraEffects_C_GetAttribRatio Parms{};

	Parms.Attrib = Attrib;

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.GetAttribBonus
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttributeDef*                    Attrib                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Bonus                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::GetAttribBonus(class UAttributeDef* Attrib, float* Bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "GetAttribBonus");

	Params::COMP_PlayerCameraEffects_C_GetAttribBonus Parms{};

	Parms.Attrib = Attrib;

	UObject::ProcessEvent(Func, &Parms);

	if (Bonus != nullptr)
		*Bonus = Parms.Bonus;
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "EVENT_OnDisableAttribChanged");

	Params::COMP_PlayerCameraEffects_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.EVENT_OnModApplied
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribMod*                       AttribMod                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::EVENT_OnModApplied(class UAttribMod* AttribMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "EVENT_OnModApplied");

	Params::COMP_PlayerCameraEffects_C_EVENT_OnModApplied Parms{};

	Parms.AttribMod = AttribMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.EVENT_OnModExpired
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribMod*                       AttribMod                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::EVENT_OnModExpired(class UAttribMod* AttribMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "EVENT_OnModExpired");

	Params::COMP_PlayerCameraEffects_C_EVENT_OnModExpired Parms{};

	Parms.AttribMod = AttribMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.BindAttributeApplyExpireEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttributeDef*                    Attribute                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CategoryName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::BindAttributeApplyExpireEvents(class UAttributeDef* Attribute, class FName CategoryName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "BindAttributeApplyExpireEvents");

	Params::COMP_PlayerCameraEffects_C_BindAttributeApplyExpireEvents Parms{};

	Parms.Attribute = Attribute;
	Parms.CategoryName = CategoryName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.OnPatchEffectAppliedOrExpired
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EffectCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Expired                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_PlayerCameraEffects_C::OnPatchEffectAppliedOrExpired(class FName EffectCategory, bool Expired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "OnPatchEffectAppliedOrExpired");

	Params::COMP_PlayerCameraEffects_C_OnPatchEffectAppliedOrExpired Parms{};

	Parms.EffectCategory = EffectCategory;
	Parms.Expired = Expired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateCyberspaceGreenGrid
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::UpdateCyberspaceGreenGrid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateCyberspaceGreenGrid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.UpdateScreenGlitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_PlayerCameraEffects_C::UpdateScreenGlitch(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "UpdateScreenGlitch");

	Params::COMP_PlayerCameraEffects_C_UpdateScreenGlitch Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.AddTeleportScreenEffect
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::AddTeleportScreenEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "AddTeleportScreenEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_PlayerCameraEffects.COMP_PlayerCameraEffects_C.ClearBloodEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_PlayerCameraEffects_C::ClearBloodEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_PlayerCameraEffects_C", "ClearBloodEffects");

	UObject::ProcessEvent(Func, nullptr);
}

}


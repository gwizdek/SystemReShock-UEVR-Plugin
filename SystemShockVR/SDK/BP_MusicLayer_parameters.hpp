#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MusicLayer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MusicLayer.BP_MusicLayer_C.GetRandomSegment
// 0x0018 (0x0018 - 0x0000)
struct BP_MusicLayer_C_GetRandomSegment final
{
public:
	class USoundWave*                             MusicSegment;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundWave*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_GetRandomSegment) == 0x000008, "Wrong alignment on BP_MusicLayer_C_GetRandomSegment");
static_assert(sizeof(BP_MusicLayer_C_GetRandomSegment) == 0x000018, "Wrong size on BP_MusicLayer_C_GetRandomSegment");
static_assert(offsetof(BP_MusicLayer_C_GetRandomSegment, MusicSegment) == 0x000000, "Member 'BP_MusicLayer_C_GetRandomSegment::MusicSegment' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetRandomSegment, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_MusicLayer_C_GetRandomSegment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetRandomSegment, CallFunc_RandomInteger_ReturnValue) == 0x00000C, "Member 'BP_MusicLayer_C_GetRandomSegment::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetRandomSegment, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_MusicLayer_C_GetRandomSegment::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.GetShouldRetrigger
// 0x0002 (0x0002 - 0x0000)
struct BP_MusicLayer_C_GetShouldRetrigger final
{
public:
	bool                                          bShouldRetrigger;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_GetShouldRetrigger) == 0x000001, "Wrong alignment on BP_MusicLayer_C_GetShouldRetrigger");
static_assert(sizeof(BP_MusicLayer_C_GetShouldRetrigger) == 0x000002, "Wrong size on BP_MusicLayer_C_GetShouldRetrigger");
static_assert(offsetof(BP_MusicLayer_C_GetShouldRetrigger, bShouldRetrigger) == 0x000000, "Member 'BP_MusicLayer_C_GetShouldRetrigger::bShouldRetrigger' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetShouldRetrigger, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_MusicLayer_C_GetShouldRetrigger::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.CalculateLayerVolume
// 0x0038 (0x0038 - 0x0000)
struct BP_MusicLayer_C_CalculateLayerVolume final
{
public:
	float                                         LayerVolume;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputVolume;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_CalculateLayerVolume) == 0x000008, "Wrong alignment on BP_MusicLayer_C_CalculateLayerVolume");
static_assert(sizeof(BP_MusicLayer_C_CalculateLayerVolume) == 0x000038, "Wrong size on BP_MusicLayer_C_CalculateLayerVolume");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, LayerVolume) == 0x000000, "Member 'BP_MusicLayer_C_CalculateLayerVolume::LayerVolume' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, OutputVolume) == 0x000004, "Member 'BP_MusicLayer_C_CalculateLayerVolume::OutputVolume' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MusicLayer_C_CalculateLayerVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MusicLayer_C_CalculateLayerVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalculateLayerVolume, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_MusicLayer_C_CalculateLayerVolume::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.ApplyVolumeMultiplier
// 0x0018 (0x0018 - 0x0000)
struct BP_MusicLayer_C_ApplyVolumeMultiplier final
{
public:
	class FString                                 MultiplierKey;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_ApplyVolumeMultiplier) == 0x000008, "Wrong alignment on BP_MusicLayer_C_ApplyVolumeMultiplier");
static_assert(sizeof(BP_MusicLayer_C_ApplyVolumeMultiplier) == 0x000018, "Wrong size on BP_MusicLayer_C_ApplyVolumeMultiplier");
static_assert(offsetof(BP_MusicLayer_C_ApplyVolumeMultiplier, MultiplierKey) == 0x000000, "Member 'BP_MusicLayer_C_ApplyVolumeMultiplier::MultiplierKey' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ApplyVolumeMultiplier, Value) == 0x000010, "Member 'BP_MusicLayer_C_ApplyVolumeMultiplier::Value' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.UpdateLayerVolume
// 0x0028 (0x0028 - 0x0000)
struct BP_MusicLayer_C_UpdateLayerVolume final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateLayerVolume_LayerVolume;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_UpdateLayerVolume) == 0x000008, "Wrong alignment on BP_MusicLayer_C_UpdateLayerVolume");
static_assert(sizeof(BP_MusicLayer_C_UpdateLayerVolume) == 0x000028, "Wrong size on BP_MusicLayer_C_UpdateLayerVolume");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MusicLayer_C_UpdateLayerVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MusicLayer_C_UpdateLayerVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_CalculateLayerVolume_LayerVolume) == 0x00000C, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_CalculateLayerVolume_LayerVolume' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_UpdateLayerVolume, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MusicLayer_C_UpdateLayerVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.SpawnSegmentAudioComponent
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MusicLayer_C_SpawnSegmentAudioComponent final
{
public:
	class UAudioComponent*                        SpawnedComponent;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveSegmentCount_Result;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_MusicCue_C*                         K2Node_DynamicCast_AsBP_Music_Cue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMusicDebugLoggingEnabled_Result;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USoundWave*                             CallFunc_GetRandomSegment_MusicSegment;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_SpawnSegmentAudioComponent) == 0x000008, "Wrong alignment on BP_MusicLayer_C_SpawnSegmentAudioComponent");
static_assert(sizeof(BP_MusicLayer_C_SpawnSegmentAudioComponent) == 0x0000B0, "Wrong size on BP_MusicLayer_C_SpawnSegmentAudioComponent");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, SpawnedComponent) == 0x000000, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::SpawnedComponent' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_GetActiveSegmentCount_Result) == 0x000008, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_GetActiveSegmentCount_Result' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_GetOuterObject_ReturnValue) == 0x000030, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, K2Node_DynamicCast_AsBP_Music_Cue) == 0x000048, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::K2Node_DynamicCast_AsBP_Music_Cue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_IsMusicDebugLoggingEnabled_Result) == 0x000068, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_IsMusicDebugLoggingEnabled_Result' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_GetRandomSegment_MusicSegment) == 0x000090, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_GetRandomSegment_MusicSegment' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_SpawnSound2D_ReturnValue) == 0x000098, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_SpawnSegmentAudioComponent, CallFunc_Array_Add_ReturnValue_1) == 0x0000A8, "Member 'BP_MusicLayer_C_SpawnSegmentAudioComponent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.RemoveInactiveAudioComponents
// 0x0030 (0x0030 - 0x0000)
struct BP_MusicLayer_C_RemoveInactiveAudioComponents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_RemoveInactiveAudioComponents) == 0x000008, "Wrong alignment on BP_MusicLayer_C_RemoveInactiveAudioComponents");
static_assert(sizeof(BP_MusicLayer_C_RemoveInactiveAudioComponents) == 0x000030, "Wrong size on BP_MusicLayer_C_RemoveInactiveAudioComponents");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_IsActive_ReturnValue) == 0x000018, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Max_ReturnValue) == 0x00001C, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_RemoveInactiveAudioComponents, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MusicLayer_C_RemoveInactiveAudioComponents::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.PrintCurrentAudioComponents
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MusicLayer_C_PrintCurrentAudioComponents final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_PrintCurrentAudioComponents) == 0x000008, "Wrong alignment on BP_MusicLayer_C_PrintCurrentAudioComponents");
static_assert(sizeof(BP_MusicLayer_C_PrintCurrentAudioComponents) == 0x0000C0, "Wrong size on BP_MusicLayer_C_PrintCurrentAudioComponents");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, AudioComponent) == 0x000000, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_IsPlaying_ReturnValue) == 0x000014, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Conv_BoolToString_ReturnValue) == 0x000028, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A0, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_PrintCurrentAudioComponents, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B0, "Member 'BP_MusicLayer_C_PrintCurrentAudioComponents::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.StopAll
// 0x0020 (0x0020 - 0x0000)
struct BP_MusicLayer_C_StopAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_StopAll) == 0x000008, "Wrong alignment on BP_MusicLayer_C_StopAll");
static_assert(sizeof(BP_MusicLayer_C_StopAll) == 0x000020, "Wrong size on BP_MusicLayer_C_StopAll");
static_assert(offsetof(BP_MusicLayer_C_StopAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MusicLayer_C_StopAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MusicLayer_C_StopAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MusicLayer_C_StopAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_MusicLayer_C_StopAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_MusicLayer_C_StopAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_MusicLayer_C_StopAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_StopAll, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_MusicLayer_C_StopAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.GetCanPlay
// 0x0004 (0x0004 - 0x0000)
struct BP_MusicLayer_C_GetCanPlay final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShouldRetrigger_bShouldRetrigger;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_GetCanPlay) == 0x000001, "Wrong alignment on BP_MusicLayer_C_GetCanPlay");
static_assert(sizeof(BP_MusicLayer_C_GetCanPlay) == 0x000004, "Wrong size on BP_MusicLayer_C_GetCanPlay");
static_assert(offsetof(BP_MusicLayer_C_GetCanPlay, Return) == 0x000000, "Member 'BP_MusicLayer_C_GetCanPlay::Return' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetCanPlay, CallFunc_GetShouldRetrigger_bShouldRetrigger) == 0x000001, "Member 'BP_MusicLayer_C_GetCanPlay::CallFunc_GetShouldRetrigger_bShouldRetrigger' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetCanPlay, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_MusicLayer_C_GetCanPlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetCanPlay, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_MusicLayer_C_GetCanPlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.GetActiveSegmentCount
// 0x0008 (0x0008 - 0x0000)
struct BP_MusicLayer_C_GetActiveSegmentCount final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_GetActiveSegmentCount) == 0x000004, "Wrong alignment on BP_MusicLayer_C_GetActiveSegmentCount");
static_assert(sizeof(BP_MusicLayer_C_GetActiveSegmentCount) == 0x000008, "Wrong size on BP_MusicLayer_C_GetActiveSegmentCount");
static_assert(offsetof(BP_MusicLayer_C_GetActiveSegmentCount, Result) == 0x000000, "Member 'BP_MusicLayer_C_GetActiveSegmentCount::Result' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_GetActiveSegmentCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_MusicLayer_C_GetActiveSegmentCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.GetNextPlayableMeasure
// 0x0004 (0x0004 - 0x0000)
struct BP_MusicLayer_C_GetNextPlayableMeasure final
{
public:
	int32                                         Measure;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_GetNextPlayableMeasure) == 0x000004, "Wrong alignment on BP_MusicLayer_C_GetNextPlayableMeasure");
static_assert(sizeof(BP_MusicLayer_C_GetNextPlayableMeasure) == 0x000004, "Wrong size on BP_MusicLayer_C_GetNextPlayableMeasure");
static_assert(offsetof(BP_MusicLayer_C_GetNextPlayableMeasure, Measure) == 0x000000, "Member 'BP_MusicLayer_C_GetNextPlayableMeasure::Measure' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.SetNextPlayableMeasure
// 0x0004 (0x0004 - 0x0000)
struct BP_MusicLayer_C_SetNextPlayableMeasure final
{
public:
	int32                                         Measure;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_SetNextPlayableMeasure) == 0x000004, "Wrong alignment on BP_MusicLayer_C_SetNextPlayableMeasure");
static_assert(sizeof(BP_MusicLayer_C_SetNextPlayableMeasure) == 0x000004, "Wrong size on BP_MusicLayer_C_SetNextPlayableMeasure");
static_assert(offsetof(BP_MusicLayer_C_SetNextPlayableMeasure, Measure) == 0x000000, "Member 'BP_MusicLayer_C_SetNextPlayableMeasure::Measure' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.InitializeLayer
// 0x0030 (0x0030 - 0x0000)
struct BP_MusicLayer_C_InitializeLayer final
{
public:
	class UBP_MusicLayer_C*                       Layer;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicCue_C*                         K2Node_DynamicCast_AsBP_Music_Cue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NumBars, float CurrentExploreMusicIntensity, float CurrentCombatMusicIntensity)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_InitializeLayer) == 0x000008, "Wrong alignment on BP_MusicLayer_C_InitializeLayer");
static_assert(sizeof(BP_MusicLayer_C_InitializeLayer) == 0x000030, "Wrong size on BP_MusicLayer_C_InitializeLayer");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, Layer) == 0x000000, "Member 'BP_MusicLayer_C_InitializeLayer::Layer' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'BP_MusicLayer_C_InitializeLayer::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, K2Node_DynamicCast_AsBP_Music_Cue) == 0x000010, "Member 'BP_MusicLayer_C_InitializeLayer::K2Node_DynamicCast_AsBP_Music_Cue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MusicLayer_C_InitializeLayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_MusicLayer_C_InitializeLayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_InitializeLayer, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MusicLayer_C_InitializeLayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.ScheduleNextSegment
// 0x0018 (0x0018 - 0x0000)
struct BP_MusicLayer_C_ScheduleNextSegment final
{
public:
	int32                                         ScheduledMeasure;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPlayableMeasure_Measure;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPlayableMeasure_Measure_1;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPlayableMeasure_Measure_2;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShouldRetrigger_bShouldRetrigger;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MusicLayer_C_ScheduleNextSegment) == 0x000004, "Wrong alignment on BP_MusicLayer_C_ScheduleNextSegment");
static_assert(sizeof(BP_MusicLayer_C_ScheduleNextSegment) == 0x000018, "Wrong size on BP_MusicLayer_C_ScheduleNextSegment");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, ScheduledMeasure) == 0x000000, "Member 'BP_MusicLayer_C_ScheduleNextSegment::ScheduledMeasure' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, CallFunc_GetNextPlayableMeasure_Measure) == 0x000004, "Member 'BP_MusicLayer_C_ScheduleNextSegment::CallFunc_GetNextPlayableMeasure_Measure' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, CallFunc_GetNextPlayableMeasure_Measure_1) == 0x000008, "Member 'BP_MusicLayer_C_ScheduleNextSegment::CallFunc_GetNextPlayableMeasure_Measure_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, CallFunc_GetNextPlayableMeasure_Measure_2) == 0x00000C, "Member 'BP_MusicLayer_C_ScheduleNextSegment::CallFunc_GetNextPlayableMeasure_Measure_2' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, CallFunc_GetShouldRetrigger_bShouldRetrigger) == 0x000010, "Member 'BP_MusicLayer_C_ScheduleNextSegment::CallFunc_GetShouldRetrigger_bShouldRetrigger' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_ScheduleNextSegment, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MusicLayer_C_ScheduleNextSegment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.EVENT_OnMeasure
// 0x0040 (0x0040 - 0x0000)
struct BP_MusicLayer_C_EVENT_OnMeasure final
{
public:
	int32                                         NumBars;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentExploreMusicIntensity;                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCombatMusicIntensity;                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShouldRetrigger_bShouldRetrigger;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcShouldPlaySegment_bShouldPlay;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ScheduleNextSegment_ScheduledMeasure;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_EVENT_OnMeasure) == 0x000008, "Wrong alignment on BP_MusicLayer_C_EVENT_OnMeasure");
static_assert(sizeof(BP_MusicLayer_C_EVENT_OnMeasure) == 0x000040, "Wrong size on BP_MusicLayer_C_EVENT_OnMeasure");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, NumBars) == 0x000000, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::NumBars' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CurrentExploreMusicIntensity) == 0x000004, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CurrentExploreMusicIntensity' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CurrentCombatMusicIntensity) == 0x000008, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CurrentCombatMusicIntensity' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_GetShouldRetrigger_bShouldRetrigger) == 0x00000C, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_GetShouldRetrigger_bShouldRetrigger' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_CalcShouldPlaySegment_bShouldPlay) == 0x000031, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_CalcShouldPlaySegment_bShouldPlay' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_ScheduleNextSegment_ScheduledMeasure) == 0x000034, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_ScheduleNextSegment_ScheduledMeasure' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_EVENT_OnMeasure, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_MusicLayer_C_EVENT_OnMeasure::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MusicLayer.BP_MusicLayer_C.CalcShouldPlaySegment
// 0x001C (0x001C - 0x0000)
struct BP_MusicLayer_C_CalcShouldPlaySegment final
{
public:
	float                                         CurrentExploreMusicIntensity;                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCombatMusicIntensity;                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldPlay;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MusicLayer_C_CalcShouldPlaySegment) == 0x000004, "Wrong alignment on BP_MusicLayer_C_CalcShouldPlaySegment");
static_assert(sizeof(BP_MusicLayer_C_CalcShouldPlaySegment) == 0x00001C, "Wrong size on BP_MusicLayer_C_CalcShouldPlaySegment");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CurrentExploreMusicIntensity) == 0x000000, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CurrentExploreMusicIntensity' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CurrentCombatMusicIntensity) == 0x000004, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CurrentCombatMusicIntensity' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, bShouldPlay) == 0x000008, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::bShouldPlay' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000017, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000018, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_BooleanAND_ReturnValue_1) == 0x000019, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MusicLayer_C_CalcShouldPlaySegment, CallFunc_BooleanAND_ReturnValue_2) == 0x00001A, "Member 'BP_MusicLayer_C_CalcShouldPlaySegment::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

}


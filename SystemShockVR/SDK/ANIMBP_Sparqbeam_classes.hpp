#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Sparqbeam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Sparqbeam.ANIMBP_Sparqbeam_C
// 0x0370 (0x0630 - 0x02C0)
class UANIMBP_Sparqbeam_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x02F8(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x04D0(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x05D8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x05F8(0x0020)()
	int32                                         CurrentChargeModeIndex;                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               KnobRotation;                                      // 0x061C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetHeatPercentage(float HeatPercentage, bool* Result);
	void SetTimeSinceFired(float TimeSinceFired, bool* Result);
	void SetChargeValue(float NormalisedChargeValue, bool* Result);
	void SetChargeMode(int32 ModeIndex, bool* Result);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ANIMBP_Sparqbeam(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Sparqbeam_C">();
	}
	static class UANIMBP_Sparqbeam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Sparqbeam_C>();
	}
};
static_assert(alignof(UANIMBP_Sparqbeam_C) == 0x000010, "Wrong alignment on UANIMBP_Sparqbeam_C");
static_assert(sizeof(UANIMBP_Sparqbeam_C) == 0x000630, "Wrong size on UANIMBP_Sparqbeam_C");
static_assert(offsetof(UANIMBP_Sparqbeam_C, UberGraphFrame) == 0x0002C0, "Member 'UANIMBP_Sparqbeam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UANIMBP_Sparqbeam_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, AnimGraphNode_CopyPoseFromMesh) == 0x0002F8, "Member 'UANIMBP_Sparqbeam_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, AnimGraphNode_ModifyBone) == 0x0004D0, "Member 'UANIMBP_Sparqbeam_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, AnimGraphNode_ComponentToLocalSpace) == 0x0005D8, "Member 'UANIMBP_Sparqbeam_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, AnimGraphNode_LocalToComponentSpace) == 0x0005F8, "Member 'UANIMBP_Sparqbeam_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, CurrentChargeModeIndex) == 0x000618, "Member 'UANIMBP_Sparqbeam_C::CurrentChargeModeIndex' has a wrong offset!");
static_assert(offsetof(UANIMBP_Sparqbeam_C, KnobRotation) == 0x00061C, "Member 'UANIMBP_Sparqbeam_C::KnobRotation' has a wrong offset!");

}


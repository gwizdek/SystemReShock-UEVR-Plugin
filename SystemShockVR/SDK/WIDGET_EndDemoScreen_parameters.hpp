#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_EndDemoScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.ExecuteUbergraph_WIDGET_EndGameScreen
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen) == 0x000004, "Wrong alignment on WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen");
static_assert(sizeof(WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen) == 0x000040, "Wrong size on WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen");
static_assert(offsetof(WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen, EntryPoint) == 0x000000, "Member 'WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_EndGameScreen_C_ExecuteUbergraph_WIDGET_EndGameScreen::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_EndGameScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_EndGameScreen_C_Tick) == 0x000004, "Wrong alignment on WIDGET_EndGameScreen_C_Tick");
static_assert(sizeof(WIDGET_EndGameScreen_C_Tick) == 0x00003C, "Wrong size on WIDGET_EndGameScreen_C_Tick");
static_assert(offsetof(WIDGET_EndGameScreen_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_EndGameScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_EndGameScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.OpenEndCard
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_EndGameScreen_C_OpenEndCard final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MusicCue_C*                         CallFunc_SetMusicState_MusicCue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenSource_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_EndGameScreen_C_OpenEndCard) == 0x000008, "Wrong alignment on WIDGET_EndGameScreen_C_OpenEndCard");
static_assert(sizeof(WIDGET_EndGameScreen_C_OpenEndCard) == 0x000048, "Wrong size on WIDGET_EndGameScreen_C_OpenEndCard");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, CallFunc_SetMusicState_MusicCue) == 0x000020, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::CallFunc_SetMusicState_MusicCue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OpenEndCard, CallFunc_OpenSource_ReturnValue) == 0x000040, "Member 'WIDGET_EndGameScreen_C_OpenEndCard::CallFunc_OpenSource_ReturnValue' has a wrong offset!");

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.EVENT_QuitGame
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_EndGameScreen_C_EVENT_QuitGame final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_EndGameScreen_C_EVENT_QuitGame) == 0x000008, "Wrong alignment on WIDGET_EndGameScreen_C_EVENT_QuitGame");
static_assert(sizeof(WIDGET_EndGameScreen_C_EVENT_QuitGame) == 0x000018, "Wrong size on WIDGET_EndGameScreen_C_EVENT_QuitGame");
static_assert(offsetof(WIDGET_EndGameScreen_C_EVENT_QuitGame, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'WIDGET_EndGameScreen_C_EVENT_QuitGame::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_EVENT_QuitGame, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000008, "Member 'WIDGET_EndGameScreen_C_EVENT_QuitGame::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_EVENT_QuitGame, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_EndGameScreen_C_EVENT_QuitGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.PlayEndCard
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_EndGameScreen_C_PlayEndCard final
{
public:
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_EndGameScreen_C_PlayEndCard) == 0x000001, "Wrong alignment on WIDGET_EndGameScreen_C_PlayEndCard");
static_assert(sizeof(WIDGET_EndGameScreen_C_PlayEndCard) == 0x000001, "Wrong size on WIDGET_EndGameScreen_C_PlayEndCard");
static_assert(offsetof(WIDGET_EndGameScreen_C_PlayEndCard, CallFunc_Play_ReturnValue) == 0x000000, "Member 'WIDGET_EndGameScreen_C_PlayEndCard::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WIDGET_EndDemoScreen.WIDGET_EndGameScreen_C.OnKeyDown
// 0x02B8 (0x02B8 - 0x0000)
struct WIDGET_EndGameScreen_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsAnyAnimationPlaying_ReturnValue;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0200(0x00B8)()
};
static_assert(alignof(WIDGET_EndGameScreen_C_OnKeyDown) == 0x000008, "Wrong alignment on WIDGET_EndGameScreen_C_OnKeyDown");
static_assert(sizeof(WIDGET_EndGameScreen_C_OnKeyDown) == 0x0002B8, "Wrong size on WIDGET_EndGameScreen_C_OnKeyDown");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, CallFunc_IsAnyAnimationPlaying_ReturnValue) == 0x000128, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::CallFunc_IsAnyAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, CallFunc_Not_PreBool_ReturnValue) == 0x000129, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, CallFunc_GetGameInstance_ReturnValue) == 0x000130, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, K2Node_DynamicCast_AsGI_Single_Player) == 0x000138, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_EndGameScreen_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000200, "Member 'WIDGET_EndGameScreen_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

}


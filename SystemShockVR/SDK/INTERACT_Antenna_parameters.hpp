#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Antenna

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Antenna.INTERACT_Antenna_C.ExecuteUbergraph_INTERACT_Antenna
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna) == 0x000004, "Wrong alignment on INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna");
static_assert(sizeof(INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna) == 0x000008, "Wrong size on INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna");
static_assert(offsetof(INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna, EntryPoint) == 0x000000, "Member 'INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna, K2Node_Event_EndPlayReason) == 0x000005, "Member 'INTERACT_Antenna_C_ExecuteUbergraph_INTERACT_Antenna::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_ReceiveEndPlay");
static_assert(sizeof(INTERACT_Antenna_C_ReceiveEndPlay) == 0x000001, "Wrong size on INTERACT_Antenna_C_ReceiveEndPlay");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'INTERACT_Antenna_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Antenna_C_BndEvt__INTERACT_PlastiqueTarget_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Antenna_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_GetTargetShape");
static_assert(sizeof(INTERACT_Antenna_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_Antenna_C_GetTargetShape");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Antenna_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Antenna_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000013, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000014, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetTargetShape, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'INTERACT_Antenna_C_GetTargetShape::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.InitializeAntenna
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Antenna_C_InitializeAntenna final
{
public:
	class UAttribInstance*                        HealthAttribInstance;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_InitializeAntenna) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_InitializeAntenna");
static_assert(sizeof(INTERACT_Antenna_C_InitializeAntenna) == 0x000010, "Wrong size on INTERACT_Antenna_C_InitializeAntenna");
static_assert(offsetof(INTERACT_Antenna_C_InitializeAntenna, HealthAttribInstance) == 0x000000, "Member 'INTERACT_Antenna_C_InitializeAntenna::HealthAttribInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_InitializeAntenna, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Antenna_C_InitializeAntenna::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Antenna_C_InitializeAttributes final
{
public:
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_Antenna_C_InitializeAttributes");
static_assert(sizeof(INTERACT_Antenna_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_Antenna_C_InitializeAttributes");
static_assert(offsetof(INTERACT_Antenna_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_Antenna_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.SetAntennaState
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Antenna_C_SetAntennaState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_SetAntennaState) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_SetAntennaState");
static_assert(sizeof(INTERACT_Antenna_C_SetAntennaState) == 0x000038, "Wrong size on INTERACT_Antenna_C_SetAntennaState");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, Active) == 0x000000, "Member 'INTERACT_Antenna_C_SetAntennaState::Active' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Antenna_C_SetAntennaState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_Antenna_C_SetAntennaState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Antenna_C_SetAntennaState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'INTERACT_Antenna_C_SetAntennaState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SetAntennaState, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'INTERACT_Antenna_C_SetAntennaState::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryInteract
// 0x0148 (0x0148 - 0x0000)
struct INTERACT_Antenna_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RequiredItemClass;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0048(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0068(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_FindAndCacheRequiredItem_Result;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginChannelingSequence_Result;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPerformChannelingSequence_Result;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00A0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00C0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00E8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0108(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0128(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_TryInteract");
static_assert(sizeof(INTERACT_Antenna_C_TryInteract) == 0x000148, "Wrong size on INTERACT_Antenna_C_TryInteract");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Antenna_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Antenna_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Antenna_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Antenna_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, HackerPawn) == 0x000038, "Member 'INTERACT_Antenna_C_TryInteract::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, RequiredItemClass) == 0x000040, "Member 'INTERACT_Antenna_C_TryInteract::RequiredItemClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000048, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000068, "Member 'INTERACT_Antenna_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CallFunc_FindAndCacheRequiredItem_Result) == 0x000088, "Member 'INTERACT_Antenna_C_TryInteract::CallFunc_FindAndCacheRequiredItem_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CallFunc_TryBeginChannelingSequence_Result) == 0x000089, "Member 'INTERACT_Antenna_C_TryInteract::CallFunc_TryBeginChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000090, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CallFunc_CanPerformChannelingSequence_Result) == 0x000099, "Member 'INTERACT_Antenna_C_TryInteract::CallFunc_CanPerformChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000A0, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000C0, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E0, "Member 'INTERACT_Antenna_C_TryInteract::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000E8, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000108, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000128, "Member 'INTERACT_Antenna_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.FindAndCacheRequiredItem
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Antenna_C_FindAndCacheRequiredItem final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItemBySoftClass_FoundItem;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Story_Base_C*                     K2Node_DynamicCast_AsITEM_Story_Base;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_FindAndCacheRequiredItem) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_FindAndCacheRequiredItem");
static_assert(sizeof(INTERACT_Antenna_C_FindAndCacheRequiredItem) == 0x000030, "Wrong size on INTERACT_Antenna_C_FindAndCacheRequiredItem");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, Character) == 0x000000, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, Result) == 0x000008, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, CallFunc_GetInventoryComponent_Inventory) == 0x000010, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, CallFunc_FindItemBySoftClass_FoundItem) == 0x000018, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::CallFunc_FindItemBySoftClass_FoundItem' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, K2Node_DynamicCast_AsITEM_Story_Base) == 0x000020, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::K2Node_DynamicCast_AsITEM_Story_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_FindAndCacheRequiredItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Antenna_C_FindAndCacheRequiredItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryDrawPlastique
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Antenna_C_TryDrawPlastique final
{
public:
	class UMOVECONTROL_Base_C*                    CallFunc_GetChannelingMoveControl_Result;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AStaticMeshActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_TryDrawPlastique) == 0x000010, "Wrong alignment on INTERACT_Antenna_C_TryDrawPlastique");
static_assert(sizeof(INTERACT_Antenna_C_TryDrawPlastique) == 0x000060, "Wrong size on INTERACT_Antenna_C_TryDrawPlastique");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_GetChannelingMoveControl_Result) == 0x000000, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_GetChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_SetStaticMesh_ReturnValue) == 0x000008, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryDrawPlastique, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'INTERACT_Antenna_C_TryDrawPlastique::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryPlacePlastique
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Antenna_C_TryPlacePlastique final
{
public:
	class UClass*                                 RequiredItemClass;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_TryPlacePlastique) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_TryPlacePlastique");
static_assert(sizeof(INTERACT_Antenna_C_TryPlacePlastique) == 0x000020, "Wrong size on INTERACT_Antenna_C_TryPlacePlastique");
static_assert(offsetof(INTERACT_Antenna_C_TryPlacePlastique, RequiredItemClass) == 0x000000, "Member 'INTERACT_Antenna_C_TryPlacePlastique::RequiredItemClass' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryPlacePlastique, CallFunc_GetBag_Result) == 0x000008, "Member 'INTERACT_Antenna_C_TryPlacePlastique::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryPlacePlastique, CallFunc_RemoveItemCount_RemovedItem) == 0x000010, "Member 'INTERACT_Antenna_C_TryPlacePlastique::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryPlacePlastique, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'INTERACT_Antenna_C_TryPlacePlastique::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryArmPlastique
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Antenna_C_TryArmPlastique final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_TryArmPlastique) == 0x000004, "Wrong alignment on INTERACT_Antenna_C_TryArmPlastique");
static_assert(sizeof(INTERACT_Antenna_C_TryArmPlastique) == 0x000010, "Wrong size on INTERACT_Antenna_C_TryArmPlastique");
static_assert(offsetof(INTERACT_Antenna_C_TryArmPlastique, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_TryArmPlastique::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryArmPlastique, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_Antenna_C_TryArmPlastique::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryArmPlastique, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Antenna_C_TryArmPlastique::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryArmPlastique, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'INTERACT_Antenna_C_TryArmPlastique::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.UpdateDetonationTimer
// 0x0180 (0x0180 - 0x0000)
struct INTERACT_Antenna_C_UpdateDetonationTimer final
{
public:
	float                                         SecondsRemaining;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TickInterval;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_3;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_4;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0168(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_UpdateDetonationTimer) == 0x000010, "Wrong alignment on INTERACT_Antenna_C_UpdateDetonationTimer");
static_assert(sizeof(INTERACT_Antenna_C_UpdateDetonationTimer) == 0x000180, "Wrong size on INTERACT_Antenna_C_UpdateDetonationTimer");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, SecondsRemaining) == 0x000000, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::SecondsRemaining' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, TickInterval) == 0x000004, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::TickInterval' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetGameInstance_ReturnValue_2) == 0x000028, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000030, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x000040, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetGameInstance_ReturnValue_3) == 0x000060, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsGI_Single_Player_3) == 0x000070, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsGI_Single_Player_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_IsStreamingLevels_Result) == 0x000079, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000B0, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B4, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000C0, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000C8, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Fraction_ReturnValue) == 0x0000D4, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_FFloor_ReturnValue) == 0x0000D8, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000DC, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E0, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E4, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000E8, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000F4, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetGameInstance_ReturnValue_4) == 0x000100, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_AsGI_Single_Player_4) == 0x000108, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_AsGI_Single_Player_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_DynamicCast_bSuccess_5) == 0x000110, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000114, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000120, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000150, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000154, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000158, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000168, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateDetonationTimer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000170, "Member 'INTERACT_Antenna_C_UpdateDetonationTimer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryClearDetonationTimer
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_TryClearDetonationTimer final
{
public:
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_TryClearDetonationTimer) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_TryClearDetonationTimer");
static_assert(sizeof(INTERACT_Antenna_C_TryClearDetonationTimer) == 0x000001, "Wrong size on INTERACT_Antenna_C_TryClearDetonationTimer");
static_assert(offsetof(INTERACT_Antenna_C_TryClearDetonationTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_TryClearDetonationTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.DealExplosionDamage
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_Antenna_C_DealExplosionDamage final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UAttribMod*, struct FAttribDamageInstance> CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances; // 0x0020(0x0050)()
};
static_assert(alignof(INTERACT_Antenna_C_DealExplosionDamage) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_DealExplosionDamage");
static_assert(sizeof(INTERACT_Antenna_C_DealExplosionDamage) == 0x000070, "Wrong size on INTERACT_Antenna_C_DealExplosionDamage");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000004, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000008, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DealExplosionDamage, CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances) == 0x000020, "Member 'INTERACT_Antenna_C_DealExplosionDamage::CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.SpawnAntennaDebris
// 0x00E0 (0x00E0 - 0x0000)
struct INTERACT_Antenna_C_SpawnAntennaDebris final
{
public:
	class UStaticMeshComponent*                   PanelMeshComponent;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChildComponents;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	class ADEBRIS_DynamicMesh_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADEBRIS_DynamicMesh_C*                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_Antenna_C_SpawnAntennaDebris) == 0x000010, "Wrong alignment on INTERACT_Antenna_C_SpawnAntennaDebris");
static_assert(sizeof(INTERACT_Antenna_C_SpawnAntennaDebris) == 0x0000E0, "Wrong size on INTERACT_Antenna_C_SpawnAntennaDebris");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, PanelMeshComponent) == 0x000000, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::PanelMeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, ChildComponents) == 0x000008, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::ChildComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, Temp_int_Array_Index_Variable) == 0x000054, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_Array_Get_Item) == 0x000060, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000068, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000080, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000B8, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000C0, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_SpawnAntennaDebris, CallFunc_GetChildrenComponents_Children) == 0x0000C8, "Member 'INTERACT_Antenna_C_SpawnAntennaDebris::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.UpdateAntennaVisibility
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Antenna_C_UpdateAntennaVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_UpdateAntennaVisibility) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_UpdateAntennaVisibility");
static_assert(sizeof(INTERACT_Antenna_C_UpdateAntennaVisibility) == 0x000002, "Wrong size on INTERACT_Antenna_C_UpdateAntennaVisibility");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_Antenna_C_UpdateAntennaVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaVisibility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'INTERACT_Antenna_C_UpdateAntennaVisibility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.DisableAntennaCollision
// 0x0088 (0x0088 - 0x0000)
struct INTERACT_Antenna_C_DisableAntennaCollision final
{
public:
	TArray<class USceneComponent*>                ChildComponents;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_1;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_1;         // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_Antenna_C_DisableAntennaCollision) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_DisableAntennaCollision");
static_assert(sizeof(INTERACT_Antenna_C_DisableAntennaCollision) == 0x000088, "Wrong size on INTERACT_Antenna_C_DisableAntennaCollision");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, ChildComponents) == 0x000000, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::ChildComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000038, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, K2Node_DynamicCast_AsStatic_Mesh_Component_1) == 0x000048, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::K2Node_DynamicCast_AsStatic_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_GetChildrenComponents_Children) == 0x000060, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_DisableAntennaCollision, CallFunc_GetChildrenComponents_Children_1) == 0x000078, "Member 'INTERACT_Antenna_C_DisableAntennaCollision::CallFunc_GetChildrenComponents_Children_1' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Antenna_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_ReceiveAnimationMessage");
static_assert(sizeof(INTERACT_Antenna_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on INTERACT_Antenna_C_ReceiveAnimationMessage");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000013, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000014, "Member 'INTERACT_Antenna_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryToggleTargetInteractable
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Antenna_C_TryToggleTargetInteractable final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0018(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_TryToggleTargetInteractable) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_TryToggleTargetInteractable");
static_assert(sizeof(INTERACT_Antenna_C_TryToggleTargetInteractable) == 0x000038, "Wrong size on INTERACT_Antenna_C_TryToggleTargetInteractable");
static_assert(offsetof(INTERACT_Antenna_C_TryToggleTargetInteractable, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_TryToggleTargetInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryToggleTargetInteractable, CallFunc_TryInteract_self_CastInput) == 0x000008, "Member 'INTERACT_Antenna_C_TryToggleTargetInteractable::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryToggleTargetInteractable, CallFunc_TryInteract_InteractResults) == 0x000018, "Member 'INTERACT_Antenna_C_TryToggleTargetInteractable::CallFunc_TryInteract_InteractResults' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.IsAntennaDestroyed
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_IsAntennaDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_IsAntennaDestroyed) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_IsAntennaDestroyed");
static_assert(sizeof(INTERACT_Antenna_C_IsAntennaDestroyed) == 0x000001, "Wrong size on INTERACT_Antenna_C_IsAntennaDestroyed");
static_assert(offsetof(INTERACT_Antenna_C_IsAntennaDestroyed, Result) == 0x000000, "Member 'INTERACT_Antenna_C_IsAntennaDestroyed::Result' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.TryCompleteDestroyQuest
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Antenna_C_TryCompleteDestroyQuest final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SetCompletedStoryQuest_LogString;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_TryCompleteDestroyQuest) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_TryCompleteDestroyQuest");
static_assert(sizeof(INTERACT_Antenna_C_TryCompleteDestroyQuest) == 0x000028, "Wrong size on INTERACT_Antenna_C_TryCompleteDestroyQuest");
static_assert(offsetof(INTERACT_Antenna_C_TryCompleteDestroyQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_TryCompleteDestroyQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryCompleteDestroyQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_Antenna_C_TryCompleteDestroyQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryCompleteDestroyQuest, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_Antenna_C_TryCompleteDestroyQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryCompleteDestroyQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x000011, "Member 'INTERACT_Antenna_C_TryCompleteDestroyQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_TryCompleteDestroyQuest, CallFunc_SetCompletedStoryQuest_LogString) == 0x000018, "Member 'INTERACT_Antenna_C_TryCompleteDestroyQuest::CallFunc_SetCompletedStoryQuest_LogString' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.UpdateAntennaMeshEmissive
// 0x000C (0x000C - 0x0000)
struct INTERACT_Antenna_C_UpdateAntennaMeshEmissive final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_UpdateAntennaMeshEmissive) == 0x000004, "Wrong alignment on INTERACT_Antenna_C_UpdateAntennaMeshEmissive");
static_assert(sizeof(INTERACT_Antenna_C_UpdateAntennaMeshEmissive) == 0x00000C, "Wrong size on INTERACT_Antenna_C_UpdateAntennaMeshEmissive");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaMeshEmissive, Scale) == 0x000000, "Member 'INTERACT_Antenna_C_UpdateAntennaMeshEmissive::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaMeshEmissive, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'INTERACT_Antenna_C_UpdateAntennaMeshEmissive::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.UpdateAntennaDestroyedState
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_Antenna_C_UpdateAntennaDestroyedState final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_UpdateAntennaDestroyedState) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_UpdateAntennaDestroyedState");
static_assert(sizeof(INTERACT_Antenna_C_UpdateAntennaDestroyedState) == 0x000078, "Wrong size on INTERACT_Antenna_C_UpdateAntennaDestroyedState");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaDestroyedState, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'INTERACT_Antenna_C_UpdateAntennaDestroyedState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaDestroyedState, K2Node_MakeArray_Array) == 0x000040, "Member 'INTERACT_Antenna_C_UpdateAntennaDestroyedState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaDestroyedState, CallFunc_SetStaticMesh_ReturnValue) == 0x000050, "Member 'INTERACT_Antenna_C_UpdateAntennaDestroyedState::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaDestroyedState, CallFunc_Format_ReturnValue) == 0x000058, "Member 'INTERACT_Antenna_C_UpdateAntennaDestroyedState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_UpdateAntennaDestroyedState, CallFunc_SetStaticMesh_ReturnValue_1) == 0x000070, "Member 'INTERACT_Antenna_C_UpdateAntennaDestroyedState::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.CanInteractBeDestroyed
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_CanInteractBeDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_CanInteractBeDestroyed) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_CanInteractBeDestroyed");
static_assert(sizeof(INTERACT_Antenna_C_CanInteractBeDestroyed) == 0x000001, "Wrong size on INTERACT_Antenna_C_CanInteractBeDestroyed");
static_assert(offsetof(INTERACT_Antenna_C_CanInteractBeDestroyed, Result) == 0x000000, "Member 'INTERACT_Antenna_C_CanInteractBeDestroyed::Result' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.GetInteractDestroyed
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Antenna_C_GetInteractDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAntennaDestroyed_Result;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_GetInteractDestroyed) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_GetInteractDestroyed");
static_assert(sizeof(INTERACT_Antenna_C_GetInteractDestroyed) == 0x000002, "Wrong size on INTERACT_Antenna_C_GetInteractDestroyed");
static_assert(offsetof(INTERACT_Antenna_C_GetInteractDestroyed, Result) == 0x000000, "Member 'INTERACT_Antenna_C_GetInteractDestroyed::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_GetInteractDestroyed, CallFunc_IsAntennaDestroyed_Result) == 0x000001, "Member 'INTERACT_Antenna_C_GetInteractDestroyed::CallFunc_IsAntennaDestroyed_Result' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.ResumeChannelingSequence
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Antenna_C_ResumeChannelingSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWaitingToHolster;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindAndCacheRequiredItem_Result;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResumeChannelingSequence_IsWaitingToHolster; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_ResumeChannelingSequence) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_ResumeChannelingSequence");
static_assert(sizeof(INTERACT_Antenna_C_ResumeChannelingSequence) == 0x000010, "Wrong size on INTERACT_Antenna_C_ResumeChannelingSequence");
static_assert(offsetof(INTERACT_Antenna_C_ResumeChannelingSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Antenna_C_ResumeChannelingSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ResumeChannelingSequence, IsWaitingToHolster) == 0x000008, "Member 'INTERACT_Antenna_C_ResumeChannelingSequence::IsWaitingToHolster' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ResumeChannelingSequence, CallFunc_FindAndCacheRequiredItem_Result) == 0x000009, "Member 'INTERACT_Antenna_C_ResumeChannelingSequence::CallFunc_FindAndCacheRequiredItem_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_ResumeChannelingSequence, CallFunc_ResumeChannelingSequence_IsWaitingToHolster) == 0x00000A, "Member 'INTERACT_Antenna_C_ResumeChannelingSequence::CallFunc_ResumeChannelingSequence_IsWaitingToHolster' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.CreateChannelingMoveControl
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_Antenna_C_CreateChannelingMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_WorldMove_C*               MoveControl;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_WorldMove_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_CreateChannelingMoveControl) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_CreateChannelingMoveControl");
static_assert(sizeof(INTERACT_Antenna_C_CreateChannelingMoveControl) == 0x000080, "Wrong size on INTERACT_Antenna_C_CreateChannelingMoveControl");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, HackerPawn) == 0x000000, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, Result) == 0x000008, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, MoveControl) == 0x000010, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::MoveControl' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_MakeLiteralByte_ReturnValue) == 0x000018, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_RegisterMoveControl_Result) == 0x000028, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Roll_1) == 0x000044, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Pitch_1) == 0x000048, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Yaw_1) == 0x00004C, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000064, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_CreateChannelingMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'INTERACT_Antenna_C_CreateChannelingMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.OnChannelingMontageFinished
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Antenna_C_OnChannelingMontageFinished final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_OnChannelingMontageFinished) == 0x000001, "Wrong alignment on INTERACT_Antenna_C_OnChannelingMontageFinished");
static_assert(sizeof(INTERACT_Antenna_C_OnChannelingMontageFinished) == 0x000001, "Wrong size on INTERACT_Antenna_C_OnChannelingMontageFinished");
static_assert(offsetof(INTERACT_Antenna_C_OnChannelingMontageFinished, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'INTERACT_Antenna_C_OnChannelingMontageFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.EVENT_OnDisableAttribChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Antenna_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_Antenna_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged) == 0x000010, "Wrong size on INTERACT_Antenna_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_Antenna_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_Antenna_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_Antenna_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Antenna_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.EVENT_OnAttribInstanceCreated
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated final
{
public:
	class UAttribInstance*                        AttribInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated");
static_assert(sizeof(INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated) == 0x000008, "Wrong size on INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated, AttribInstance) == 0x000000, "Member 'INTERACT_Antenna_C_EVENT_OnAttribInstanceCreated::AttribInstance' has a wrong offset!");

// Function INTERACT_Antenna.INTERACT_Antenna_C.EVENT_OnStartedUnloadingLevel
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel) == 0x000008, "Wrong alignment on INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel");
static_assert(sizeof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel) == 0x000028, "Wrong size on INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Antenna_C_EVENT_OnStartedUnloadingLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


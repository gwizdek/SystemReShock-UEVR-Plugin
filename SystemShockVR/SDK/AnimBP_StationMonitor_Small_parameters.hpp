#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_StationMonitor_Small

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_StationMonitor_Small.AnimBP_StationMonitor_Small_C.ExecuteUbergraph_AnimBP_StationMonitor_Small
// 0x0080 (0x0080 - 0x0000)
struct AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small) == 0x000010, "Wrong alignment on AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small");
static_assert(sizeof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small) == 0x000080, "Wrong size on AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, EntryPoint) == 0x000000, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, K2Node_Event_DeltaTimeX) == 0x000040, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000048, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_GetSocketRotation_ReturnValue) == 0x00005C, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small, CallFunc_InverseTransformRotation_ReturnValue) == 0x000068, "Member 'AnimBP_StationMonitor_Small_C_ExecuteUbergraph_AnimBP_StationMonitor_Small::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");

// Function AnimBP_StationMonitor_Small.AnimBP_StationMonitor_Small_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_StationMonitor_Small_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_StationMonitor_Small.AnimBP_StationMonitor_Small_C.SetTargetVector
// 0x0090 (0x0090 - 0x0000)
struct AnimBP_StationMonitor_Small_C_SetTargetVector final
{
public:
	struct FVector                                Segment;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetVector2D;                                    // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_StationMonitor_Small_C_SetTargetVector) == 0x000010, "Wrong alignment on AnimBP_StationMonitor_Small_C_SetTargetVector");
static_assert(sizeof(AnimBP_StationMonitor_Small_C_SetTargetVector) == 0x000090, "Wrong size on AnimBP_StationMonitor_Small_C_SetTargetVector");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, Segment) == 0x000000, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::Segment' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, TargetVector2D) == 0x00000C, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::TargetVector2D' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_MakeRotFromX_ReturnValue) == 0x000050, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_VSize_ReturnValue) == 0x00005C, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_InverseTransformRotation_ReturnValue) == 0x000060, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006C, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_BreakVector_X) == 0x000070, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_BreakVector_Y) == 0x000074, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_BreakVector_Z) == 0x000078, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_SetTargetVector, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'AnimBP_StationMonitor_Small_C_SetTargetVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function AnimBP_StationMonitor_Small.AnimBP_StationMonitor_Small_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_StationMonitor_Small_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_StationMonitor_Small_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_StationMonitor_Small_C_AnimGraph");
static_assert(sizeof(AnimBP_StationMonitor_Small_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_StationMonitor_Small_C_AnimGraph");
static_assert(offsetof(AnimBP_StationMonitor_Small_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_StationMonitor_Small_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


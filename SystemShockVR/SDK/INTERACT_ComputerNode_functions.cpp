#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ComputerNode

#include "Basic.hpp"

#include "INTERACT_ComputerNode_classes.hpp"
#include "INTERACT_ComputerNode_parameters.hpp"


namespace SDK
{

// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.ExecuteUbergraph_INTERACT_ComputerNode
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::ExecuteUbergraph_INTERACT_ComputerNode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "ExecuteUbergraph_INTERACT_ComputerNode");

	Params::INTERACT_ComputerNode_C_ExecuteUbergraph_INTERACT_ComputerNode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.BndEvt__INTERACT_ComputerNode_Single_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::BndEvt__INTERACT_ComputerNode_Single_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "BndEvt__INTERACT_ComputerNode_Single_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_ComputerNode_C_BndEvt__INTERACT_ComputerNode_Single_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.InitializeAttributeEvents
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::InitializeAttributeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "InitializeAttributeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.ApplyImpulseToChildMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::ApplyImpulseToChildMesh(class UStaticMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "ApplyImpulseToChildMesh");

	Params::INTERACT_ComputerNode_C_ApplyImpulseToChildMesh Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EjectAllDebris
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::EjectAllDebris()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EjectAllDebris");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EjectDebrisInAngleFromImpact
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UStaticMeshComponent*>     MeshComponents                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AINTERACT_ComputerNode_C::EjectDebrisInAngleFromImpact(class UOBJ_ImpactData_C* ImpactData, float Angle, TArray<class UStaticMeshComponent*>& MeshComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EjectDebrisInAngleFromImpact");

	Params::INTERACT_ComputerNode_C_EjectDebrisInAngleFromImpact Parms{};

	Parms.ImpactData = ImpactData;
	Parms.Angle = Angle;
	Parms.MeshComponents = std::move(MeshComponents);

	UObject::ProcessEvent(Func, &Parms);

	MeshComponents = std::move(Parms.MeshComponents);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EnableLowHealthMeshCollision
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::EnableLowHealthMeshCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EnableLowHealthMeshCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EnableHighHealthMeshCollision
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::EnableHighHealthMeshCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EnableHighHealthMeshCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EnableAllCollision
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::EnableAllCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EnableAllCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.AssignMeshEjectPitchAngles
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::AssignMeshEjectPitchAngles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "AssignMeshEjectPitchAngles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.AddMeshEjectPitchAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// float                                   PitchDegrees                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::AddMeshEjectPitchAngle(TArray<class UStaticMeshComponent*>& MeshComponent, float PitchDegrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "AddMeshEjectPitchAngle");

	Params::INTERACT_ComputerNode_C_AddMeshEjectPitchAngle Parms{};

	Parms.MeshComponent = std::move(MeshComponent);
	Parms.PitchDegrees = PitchDegrees;

	UObject::ProcessEvent(Func, &Parms);

	MeshComponent = std::move(Parms.MeshComponent);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.AssignMeshesToDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::AssignMeshesToDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "AssignMeshesToDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.DisableSmokeParticleSystem
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::DisableSmokeParticleSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "DisableSmokeParticleSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UpdateMaterialParameters
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::UpdateMaterialParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UpdateMaterialParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UpdateComputerNodeVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibleState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::UpdateComputerNodeVisibility(bool VisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UpdateComputerNodeVisibility");

	Params::INTERACT_ComputerNode_C_UpdateComputerNodeVisibility Parms{};

	Parms.VisibleState = VisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UpdateNavigationModifier
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::UpdateNavigationModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UpdateNavigationModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.TryDestroyAllDebris
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::TryDestroyAllDebris(bool DuringBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "TryDestroyAllDebris");

	Params::INTERACT_ComputerNode_C_TryDestroyAllDebris Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.CreateExplosionEffects
// (Private, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::CreateExplosionEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "CreateExplosionEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.PlayEffectsFromComponent
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UFXSystemAsset>    EffectsSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class USceneComponent*                  SceneComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RelativeOffset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::PlayEffectsFromComponent(TSoftObjectPtr<class UFXSystemAsset> EffectsSystem, class USceneComponent* SceneComponent, const struct FVector& RelativeOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "PlayEffectsFromComponent");

	Params::INTERACT_ComputerNode_C_PlayEffectsFromComponent Parms{};

	Parms.EffectsSystem = EffectsSystem;
	Parms.SceneComponent = SceneComponent;
	Parms.RelativeOffset = std::move(RelativeOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "EVENT_OnDisableAttribChanged");

	Params::INTERACT_ComputerNode_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UpdateComputerNodeEmissive
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EmissiveStrength                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::UpdateComputerNodeEmissive(float EmissiveStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UpdateComputerNodeEmissive");

	Params::INTERACT_ComputerNode_C_UpdateComputerNodeEmissive Parms{};

	Parms.EmissiveStrength = EmissiveStrength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.InitializeDestructible
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_ComputerNode_C::InitializeDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "InitializeDestructible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.OnDeath
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::OnDeath(class AActor* SourceActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "OnDeath");

	Params::INTERACT_ComputerNode_C_OnDeath Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.OnTakeDamage
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::OnTakeDamage(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "OnTakeDamage");

	Params::INTERACT_ComputerNode_C_OnTakeDamage Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.UpdateDeathSettings
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_ComputerNode_C::UpdateDeathSettings(bool DuringBeginPlay, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "UpdateDeathSettings");

	Params::INTERACT_ComputerNode_C_UpdateDeathSettings Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_ComputerNode.INTERACT_ComputerNode_C.GetArmorAugmentationPercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_ComputerNode_C::GetArmorAugmentationPercentage(class UOBJ_ImpactData_C* ImpactData, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_ComputerNode_C", "GetArmorAugmentationPercentage");

	Params::INTERACT_ComputerNode_C_GetArmorAugmentationPercentage Parms{};

	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


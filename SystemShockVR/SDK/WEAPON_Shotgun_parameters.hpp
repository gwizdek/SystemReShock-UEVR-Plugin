#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_Shotgun

#include "Basic.hpp"

#include "STRUCT_WeaponMode_structs.hpp"
#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ENUM_ActionPriority_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.ExecuteUbergraph_WEAPON_Shotgun
// 0x00F8 (0x00F8 - 0x0000)
struct WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_4;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun");
static_assert(sizeof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun) == 0x0000F8, "Wrong size on WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, EntryPoint) == 0x000000, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CustomEvent_Loaded_4) == 0x000028, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, Temp_object_Variable) == 0x000040, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_AsAnim_Montage) == 0x000048, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CustomEvent_Loaded_3) == 0x000058, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, Temp_object_Variable_1) == 0x000060, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000068, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CustomEvent_Loaded_2) == 0x000078, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, Temp_object_Variable_2) == 0x000080, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_AsAnim_Montage_2) == 0x000088, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CustomEvent_Loaded_1) == 0x000098, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, Temp_object_Variable_3) == 0x0000A0, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_AsAnim_Montage_3) == 0x0000A8, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CustomEvent_Loaded) == 0x0000B8, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, Temp_object_Variable_4) == 0x0000C0, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_AsAnim_Montage_4) == 0x0000C8, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_AsAnim_Montage_4' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D4, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000E4, "Member 'WEAPON_Shotgun_C_ExecuteUbergraph_WEAPON_Shotgun::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0");
static_assert(sizeof(WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0) == 0x000008, "Wrong size on WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0");
static_assert(offsetof(WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0, Loaded) == 0x000000, "Member 'WEAPON_Shotgun_C_OnLoaded_2183B74E4001A8A7130BAA9FB81C3BE0::Loaded' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.OnLoaded_DD526C064C5CF2A316E40594429A4869
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869");
static_assert(sizeof(WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869) == 0x000008, "Wrong size on WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869");
static_assert(offsetof(WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869, Loaded) == 0x000000, "Member 'WEAPON_Shotgun_C_OnLoaded_DD526C064C5CF2A316E40594429A4869::Loaded' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8");
static_assert(sizeof(WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8) == 0x000008, "Wrong size on WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8");
static_assert(offsetof(WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8, Loaded) == 0x000000, "Member 'WEAPON_Shotgun_C_OnLoaded_95E300A34F4CEF7E181DB58C730C6BD8::Loaded' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.OnLoaded_CA58795345D1B066165266B901195175
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175");
static_assert(sizeof(WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175) == 0x000008, "Wrong size on WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175");
static_assert(offsetof(WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175, Loaded) == 0x000000, "Member 'WEAPON_Shotgun_C_OnLoaded_CA58795345D1B066165266B901195175::Loaded' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6");
static_assert(sizeof(WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6) == 0x000008, "Wrong size on WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6");
static_assert(offsetof(WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6, Loaded) == 0x000000, "Member 'WEAPON_Shotgun_C_OnLoaded_CF8884BB47FBD87AAC4F75A03C8F08A6::Loaded' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.Activate
// 0x0050 (0x0050 - 0x0000)
struct WEAPON_Shotgun_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_ActionManager_C*                  ActionManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivelyReloading_Result;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_TryBeginAction_Action;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_Activate) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_Activate");
static_assert(sizeof(WEAPON_Shotgun_C_Activate) == 0x000050, "Wrong size on WEAPON_Shotgun_C_Activate");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, Character) == 0x000000, "Member 'WEAPON_Shotgun_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, Result) == 0x000008, "Member 'WEAPON_Shotgun_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, ActionManager) == 0x000010, "Member 'WEAPON_Shotgun_C_Activate::ActionManager' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, Temp_bool_Variable) == 0x000018, "Member 'WEAPON_Shotgun_C_Activate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'WEAPON_Shotgun_C_Activate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, CallFunc_IsActivelyReloading_Result) == 0x000028, "Member 'WEAPON_Shotgun_C_Activate::CallFunc_IsActivelyReloading_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, K2Node_Select_Default) == 0x000030, "Member 'WEAPON_Shotgun_C_Activate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, CallFunc_CanBeginAction_Result) == 0x000038, "Member 'WEAPON_Shotgun_C_Activate::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, CallFunc_TryBeginAction_Action) == 0x000040, "Member 'WEAPON_Shotgun_C_Activate::CallFunc_TryBeginAction_Action' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_Activate, CallFunc_Activate_Result) == 0x000048, "Member 'WEAPON_Shotgun_C_Activate::CallFunc_Activate_Result' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.ReceiveAnimationMessage
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_Shotgun_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySwitchToDesiredModeImmediately_Result; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_Shotgun_C_ReceiveAnimationMessage) == 0x000028, "Wrong size on WEAPON_Shotgun_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_GetOwnerCharacter_Character) == 0x000018, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_TrySwitchToDesiredModeImmediately_Result) == 0x000021, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_TrySwitchToDesiredModeImmediately_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000022, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000023, "Member 'WEAPON_Shotgun_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.IsActivelyReloading
// 0x0050 (0x0050 - 0x0000)
struct WEAPON_Shotgun_C_IsActivelyReloading final
{
public:
	bool                                          IncludeModeSwitch;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CurrentMontage;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_IsActivelyReloading) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_IsActivelyReloading");
static_assert(sizeof(WEAPON_Shotgun_C_IsActivelyReloading) == 0x000050, "Wrong size on WEAPON_Shotgun_C_IsActivelyReloading");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, IncludeModeSwitch) == 0x000000, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::IncludeModeSwitch' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, Result) == 0x000001, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CurrentMontage) == 0x000008, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CurrentMontage' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CurrentAction) == 0x000010, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CurrentAction' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000028, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_GetCurrentAction_CurrentAction) == 0x000030, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000038, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000039, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_GetMontage_Result) == 0x000040, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_BooleanOR_ReturnValue_1) == 0x000049, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_IsActivelyReloading, CallFunc_BooleanOR_ReturnValue_2) == 0x00004A, "Member 'WEAPON_Shotgun_C_IsActivelyReloading::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.RefillShell
// 0x02D0 (0x02D0 - 0x0000)
struct WEAPON_Shotgun_C_RefillShell final
{
public:
	struct FLatentEventHandle                     LatentEventHandle;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	ENUM_ActionPriority                           MontagePriority;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShellsToReload;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemovedAmmo;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AmmoClass;                                         // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FLatentEventHandle                     CallFunc_CreateEventHandle_ReturnValue;            // 0x0068(0x0010)(ContainsInstancedReference)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0090(0x0100)(HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveItemCountByClass_RemovedCount;      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTryingToRefillMagazine_Result;          // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCount_Result;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_1;                    // 0x01B0(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_RefillShell) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_RefillShell");
static_assert(sizeof(WEAPON_Shotgun_C_RefillShell) == 0x0002D0, "Wrong size on WEAPON_Shotgun_C_RefillShell");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, LatentEventHandle) == 0x000000, "Member 'WEAPON_Shotgun_C_RefillShell::LatentEventHandle' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, MontagePriority) == 0x000010, "Member 'WEAPON_Shotgun_C_RefillShell::MontagePriority' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, MontageToPlay) == 0x000018, "Member 'WEAPON_Shotgun_C_RefillShell::MontageToPlay' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, ShellsToReload) == 0x000020, "Member 'WEAPON_Shotgun_C_RefillShell::ShellsToReload' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, RemovedAmmo) == 0x000024, "Member 'WEAPON_Shotgun_C_RefillShell::RemovedAmmo' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, AmmoClass) == 0x000028, "Member 'WEAPON_Shotgun_C_RefillShell::AmmoClass' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, AmmoBag) == 0x000050, "Member 'WEAPON_Shotgun_C_RefillShell::AmmoBag' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'WEAPON_Shotgun_C_RefillShell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_CreateEventHandle_ReturnValue) == 0x000068, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_CreateEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000078, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetAmmoInMagazine_Ammo) == 0x00007C, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_Less_FloatFloat_ReturnValue) == 0x000080, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_RandomFloat_ReturnValue) == 0x000084, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetCurrentMode_Mode) == 0x000090, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetOwnerCharacter_Character) == 0x000190, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_RemoveItemCountByClass_RemovedCount) == 0x000198, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_RemoveItemCountByClass_RemovedCount' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_IsTryingToRefillMagazine_Result) == 0x00019C, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_IsTryingToRefillMagazine_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_Not_PreBool_ReturnValue) == 0x00019D, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetItemCount_Result) == 0x0001A0, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001A4, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_IsValid_ReturnValue) == 0x0001A5, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001A6, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_BooleanOR_ReturnValue) == 0x0001A7, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A8, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetCurrentMode_Mode_1) == 0x0001B0, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetCurrentMode_Mode_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetWeaponPropertyValueByType_Value) == 0x0002B0, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002B4, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetInventory_Inventory) == 0x0002B8, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C0, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_RefillShell, CallFunc_GetBagByType_Bag) == 0x0002C8, "Member 'WEAPON_Shotgun_C_RefillShell::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.EnableDamage
// 0x000C (0x000C - 0x0000)
struct WEAPON_Shotgun_C_EnableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnableDamage_Result;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_EnableDamage) == 0x000004, "Wrong alignment on WEAPON_Shotgun_C_EnableDamage");
static_assert(sizeof(WEAPON_Shotgun_C_EnableDamage) == 0x00000C, "Wrong size on WEAPON_Shotgun_C_EnableDamage");
static_assert(offsetof(WEAPON_Shotgun_C_EnableDamage, Result) == 0x000000, "Member 'WEAPON_Shotgun_C_EnableDamage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_EnableDamage, CallFunc_GetAmmoInMagazine_Ammo) == 0x000004, "Member 'WEAPON_Shotgun_C_EnableDamage::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_EnableDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WEAPON_Shotgun_C_EnableDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_EnableDamage, CallFunc_EnableDamage_Result) == 0x000009, "Member 'WEAPON_Shotgun_C_EnableDamage::CallFunc_EnableDamage_Result' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.FireProjectile
// 0x04C0 (0x04C0 - 0x0000)
struct WEAPON_Shotgun_C_FireProjectile final
{
public:
	class AActor*                                 FiredProjectile;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAttribModApplyData>            AdditionalApplyMods;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    SecondaryDamageMod;                                // 0x0028(0x00A0)(Edit, BlueprintVisible)
	int32                                         SecondaryDamage;                                   // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ImpulseStrength;                                   // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorPenetration;                                  // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamagePerPellet;                                   // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PelletCount;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      DamageType;                                        // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileDirection;                               // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpreadDirection;                                   // 0x00F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDropoffScale;                                // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ConeHalfAngle;                                     // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDirection;                                   // 0x0108(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0114(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x0120(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CurrentMode;                                       // 0x0130(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class AShotgunFlechetteProjectile_C*          PelletProjectileActor;                             // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PelletProjectileClass;                             // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance;       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetProjectileClass_Result;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsShotgun_Flechette_Projectile; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_2;     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_3;     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x02D0(0x0100)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TriangulateRayDirection_TriangulatedDirection; // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0400(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AShotgunFlechetteProjectile_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x0460(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x04B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_FireProjectile) == 0x000010, "Wrong alignment on WEAPON_Shotgun_C_FireProjectile");
static_assert(sizeof(WEAPON_Shotgun_C_FireProjectile) == 0x0004C0, "Wrong size on WEAPON_Shotgun_C_FireProjectile");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, FiredProjectile) == 0x000000, "Member 'WEAPON_Shotgun_C_FireProjectile::FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, Direction) == 0x000008, "Member 'WEAPON_Shotgun_C_FireProjectile::Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, AdditionalApplyMods) == 0x000018, "Member 'WEAPON_Shotgun_C_FireProjectile::AdditionalApplyMods' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, SecondaryDamageMod) == 0x000028, "Member 'WEAPON_Shotgun_C_FireProjectile::SecondaryDamageMod' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, SecondaryDamage) == 0x0000C8, "Member 'WEAPON_Shotgun_C_FireProjectile::SecondaryDamage' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, ImpulseStrength) == 0x0000CC, "Member 'WEAPON_Shotgun_C_FireProjectile::ImpulseStrength' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, ArmorPenetration) == 0x0000D0, "Member 'WEAPON_Shotgun_C_FireProjectile::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, DamagePerPellet) == 0x0000D4, "Member 'WEAPON_Shotgun_C_FireProjectile::DamagePerPellet' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, PelletCount) == 0x0000D8, "Member 'WEAPON_Shotgun_C_FireProjectile::PelletCount' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, DamageType) == 0x0000E0, "Member 'WEAPON_Shotgun_C_FireProjectile::DamageType' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, ProjectileDirection) == 0x0000E8, "Member 'WEAPON_Shotgun_C_FireProjectile::ProjectileDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, SpreadDirection) == 0x0000F4, "Member 'WEAPON_Shotgun_C_FireProjectile::SpreadDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, DamageDropoffScale) == 0x000100, "Member 'WEAPON_Shotgun_C_FireProjectile::DamageDropoffScale' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, ConeHalfAngle) == 0x000104, "Member 'WEAPON_Shotgun_C_FireProjectile::ConeHalfAngle' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CameraDirection) == 0x000108, "Member 'WEAPON_Shotgun_C_FireProjectile::CameraDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CameraLocation) == 0x000114, "Member 'WEAPON_Shotgun_C_FireProjectile::CameraLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, BarrelLocation) == 0x000120, "Member 'WEAPON_Shotgun_C_FireProjectile::BarrelLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CurrentMode) == 0x000130, "Member 'WEAPON_Shotgun_C_FireProjectile::CurrentMode' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, PelletProjectileActor) == 0x000230, "Member 'WEAPON_Shotgun_C_FireProjectile::PelletProjectileActor' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, PelletProjectileClass) == 0x000238, "Member 'WEAPON_Shotgun_C_FireProjectile::PelletProjectileClass' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CharacterOwner) == 0x000240, "Member 'WEAPON_Shotgun_C_FireProjectile::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, Temp_float_Variable) == 0x000248, "Member 'WEAPON_Shotgun_C_FireProjectile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, Temp_float_Variable_1) == 0x00024C, "Member 'WEAPON_Shotgun_C_FireProjectile::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetMaxCombatTraceDistance_Distance) == 0x000250, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetMaxCombatTraceDistance_Distance' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetProjectileClass_Result) == 0x000258, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetProjectileClass_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, K2Node_ClassDynamicCast_AsShotgun_Flechette_Projectile) == 0x000260, "Member 'WEAPON_Shotgun_C_FireProjectile::K2Node_ClassDynamicCast_AsShotgun_Flechette_Projectile' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, K2Node_ClassDynamicCast_bSuccess) == 0x000268, "Member 'WEAPON_Shotgun_C_FireProjectile::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetWeaponMeshComponent_Result) == 0x000270, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetSocketLocation_ReturnValue) == 0x000278, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Divide_IntInt_ReturnValue) == 0x000284, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000288, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00028C, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, Temp_int_Variable) == 0x000290, "Member 'WEAPON_Shotgun_C_FireProjectile::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000294, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000298, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Add_IntInt_ReturnValue) == 0x00029C, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0002A0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0002A4, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002A8, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0002AC, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002B0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Array_Add_ReturnValue) == 0x0002B4, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value) == 0x0002BC, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x0002C0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0002C4, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value_2) == 0x0002C8, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetWeaponPropertyValueByType_Value_3) == 0x0002CC, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetWeaponPropertyValueByType_Value_3' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetCurrentMode_Mode) == 0x0002D0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x0003D0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003D4, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0003D8, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0003DC, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_TriangulateRayDirection_TriangulatedDirection) == 0x0003E0, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_TriangulateRayDirection_TriangulatedDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0003EC, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, Temp_bool_Variable) == 0x0003F8, "Member 'WEAPON_Shotgun_C_FireProjectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_MakeTransform_ReturnValue) == 0x000400, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000430, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, K2Node_Select_Default) == 0x000438, "Member 'WEAPON_Shotgun_C_FireProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_FinishSpawningActor_ReturnValue) == 0x000440, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000448, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetOwnerCharacter_Character) == 0x000458, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetHeadTransform_Transform) == 0x000460, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_BreakTransform_Location) == 0x000490, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_BreakTransform_Rotation) == 0x00049C, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_BreakTransform_Scale) == 0x0004A8, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_FireProjectile, CallFunc_GetForwardVector_ReturnValue) == 0x0004B4, "Member 'WEAPON_Shotgun_C_FireProjectile::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.TryEmptyMagazine
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_Shotgun_C_TryEmptyMagazine final
{
public:
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_TryEmptyMagazine) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_TryEmptyMagazine");
static_assert(sizeof(WEAPON_Shotgun_C_TryEmptyMagazine) == 0x000010, "Wrong size on WEAPON_Shotgun_C_TryEmptyMagazine");
static_assert(offsetof(WEAPON_Shotgun_C_TryEmptyMagazine, CallFunc_GetOwnerCharacter_Character) == 0x000000, "Member 'WEAPON_Shotgun_C_TryEmptyMagazine::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_TryEmptyMagazine, CallFunc_IsEquipped_Result) == 0x000008, "Member 'WEAPON_Shotgun_C_TryEmptyMagazine::CallFunc_IsEquipped_Result' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.QueueModeSwitch
// 0x0140 (0x0140 - 0x0000)
struct WEAPON_Shotgun_C_QueueModeSwitch final
{
public:
	int32                                         CallFunc_GetDesiredModeSwitchIndex_Result;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryBeginReloading_Result;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivelyReloading_Result;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0028(0x0100)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoInMagazineOrChamber_Result;        // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivelyReloading_Result_1;             // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_QueueModeSwitch) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_QueueModeSwitch");
static_assert(sizeof(WEAPON_Shotgun_C_QueueModeSwitch) == 0x000140, "Wrong size on WEAPON_Shotgun_C_QueueModeSwitch");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetDesiredModeSwitchIndex_Result) == 0x000000, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetDesiredModeSwitchIndex_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_TryBeginReloading_Result) == 0x00000C, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_TryBeginReloading_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_IsActivelyReloading_Result) == 0x000014, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_IsActivelyReloading_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, Temp_bool_Variable) == 0x000015, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000018, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, K2Node_Select_Default) == 0x000020, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetWeaponMode_Mode) == 0x000028, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetInventory_Inventory) == 0x000128, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetBagByType_Bag) == 0x000130, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_GetItemCount_Result) == 0x000138, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_HasAmmoInMagazineOrChamber_Result) == 0x00013C, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_HasAmmoInMagazineOrChamber_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_Greater_IntInt_ReturnValue) == 0x00013D, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_QueueModeSwitch, CallFunc_IsActivelyReloading_Result_1) == 0x00013E, "Member 'WEAPON_Shotgun_C_QueueModeSwitch::CallFunc_IsActivelyReloading_Result_1' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.SetCurrentMode
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_Shotgun_C_SetCurrentMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_SetCurrentMode) == 0x000004, "Wrong alignment on WEAPON_Shotgun_C_SetCurrentMode");
static_assert(sizeof(WEAPON_Shotgun_C_SetCurrentMode) == 0x000008, "Wrong size on WEAPON_Shotgun_C_SetCurrentMode");
static_assert(offsetof(WEAPON_Shotgun_C_SetCurrentMode, Mode) == 0x000000, "Member 'WEAPON_Shotgun_C_SetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_SetCurrentMode, Result) == 0x000004, "Member 'WEAPON_Shotgun_C_SetCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_SetCurrentMode, CallFunc_SetCurrentMode_Result) == 0x000005, "Member 'WEAPON_Shotgun_C_SetCurrentMode::CallFunc_SetCurrentMode_Result' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.GetProjectileClass
// 0x0030 (0x0030 - 0x0000)
struct WEAPON_Shotgun_C_GetProjectileClass final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_Shotgun_C_GetProjectileClass) == 0x000008, "Wrong alignment on WEAPON_Shotgun_C_GetProjectileClass");
static_assert(sizeof(WEAPON_Shotgun_C_GetProjectileClass) == 0x000030, "Wrong size on WEAPON_Shotgun_C_GetProjectileClass");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, Result) == 0x000000, "Member 'WEAPON_Shotgun_C_GetProjectileClass::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, Temp_bool_Variable) == 0x000008, "Member 'WEAPON_Shotgun_C_GetProjectileClass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, Temp_class_Variable) == 0x000010, "Member 'WEAPON_Shotgun_C_GetProjectileClass::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, Temp_class_Variable_1) == 0x000018, "Member 'WEAPON_Shotgun_C_GetProjectileClass::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'WEAPON_Shotgun_C_GetProjectileClass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_Shotgun_C_GetProjectileClass, K2Node_Select_Default) == 0x000028, "Member 'WEAPON_Shotgun_C_GetProjectileClass::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_Shotgun.WEAPON_Shotgun_C.SetHasBarrelAttachment
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_Shotgun_C_SetHasBarrelAttachment final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_Shotgun_C_SetHasBarrelAttachment) == 0x000001, "Wrong alignment on WEAPON_Shotgun_C_SetHasBarrelAttachment");
static_assert(sizeof(WEAPON_Shotgun_C_SetHasBarrelAttachment) == 0x000001, "Wrong size on WEAPON_Shotgun_C_SetHasBarrelAttachment");
static_assert(offsetof(WEAPON_Shotgun_C_SetHasBarrelAttachment, State) == 0x000000, "Member 'WEAPON_Shotgun_C_SetHasBarrelAttachment::State' has a wrong offset!");

}


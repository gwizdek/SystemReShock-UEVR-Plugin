#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FUNCLIB_Maneuver

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetSphereVertices
// 0x00D0 (0x00D0 - 0x0000)
struct FUNCLIB_Maneuver_C_GetSphereVertices final
{
public:
	int32                                         NumberOfPoints;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Vertices;                                          // 0x0018(0x0010)(Parm, OutParm)
	struct FVector                                Up;                                                // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theta;                                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        SphereVertices;                                    // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FVector                                CurrentSphereVertex;                               // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Phi;                                               // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentVertex;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoldenAngle;                                       // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoldenRatio;                                       // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleAroundAxis_ReturnValue;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_3;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_4;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_5;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_6;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetSphereVertices) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetSphereVertices");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetSphereVertices) == 0x0000D0, "Wrong size on FUNCLIB_Maneuver_C_GetSphereVertices");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, NumberOfPoints) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::NumberOfPoints' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Forward) == 0x000004, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Forward' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, __WorldContext) == 0x000010, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Vertices) == 0x000018, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Vertices' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Up) == 0x000028, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Up' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Theta) == 0x000034, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Theta' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, SphereVertices) == 0x000038, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::SphereVertices' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CurrentSphereVertex) == 0x000048, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CurrentSphereVertex' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Phi) == 0x000054, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Phi' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CurrentVertex) == 0x000058, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CurrentVertex' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, GoldenAngle) == 0x00005C, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::GoldenAngle' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, GoldenRatio) == 0x000060, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::GoldenRatio' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, Temp_int_Variable) == 0x000064, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue) == 0x000074, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_Cross_VectorVector_ReturnValue) == 0x000078, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000084, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_1) == 0x000090, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_GetAngleAroundAxis_ReturnValue) == 0x000094, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_GetAngleAroundAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_2) == 0x000098, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_RotateAngleAxis_ReturnValue) == 0x00009C, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_3) == 0x0000A8, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_MakeVector_ReturnValue) == 0x0000AC, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_GetPI_ReturnValue) == 0x0000BC, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, CallFunc_GetPI_ReturnValue_1) == 0x0000C0, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::CallFunc_GetPI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_4) == 0x0000C4, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_5) == 0x0000C8, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetSphereVertices, K2Node_MathExpression_ReturnValue_6) == 0x0000CC, "Member 'FUNCLIB_Maneuver_C_GetSphereVertices::K2Node_MathExpression_ReturnValue_6' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.AmountOutsideRange
// 0x0030 (0x0030 - 0x0000)
struct FUNCLIB_Maneuver_C_AmountOutsideRange final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Min;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Maneuver_C_AmountOutsideRange) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_AmountOutsideRange");
static_assert(sizeof(FUNCLIB_Maneuver_C_AmountOutsideRange) == 0x000030, "Wrong size on FUNCLIB_Maneuver_C_AmountOutsideRange");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, Value) == 0x000000, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::Value' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, Min) == 0x000004, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::Min' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, Max) == 0x000008, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::Max' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, __WorldContext) == 0x000010, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, Result) == 0x000018, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000024, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_AmountOutsideRange, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'FUNCLIB_Maneuver_C_AmountOutsideRange::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.CullDirectionsByAngle
// 0x0080 (0x0080 - 0x0000)
struct FUNCLIB_Maneuver_C_CullDirectionsByAngle final
{
public:
	TArray<struct FVector>                        Directions;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                SourceDirection;                                   // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAngle;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RemainingDirections;                               // 0x0028(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        ReturnDirections;                                  // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FVector                                CurrentDirection;                                  // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenNormals_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Maneuver_C_CullDirectionsByAngle) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_CullDirectionsByAngle");
static_assert(sizeof(FUNCLIB_Maneuver_C_CullDirectionsByAngle) == 0x000080, "Wrong size on FUNCLIB_Maneuver_C_CullDirectionsByAngle");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, Directions) == 0x000000, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::Directions' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, SourceDirection) == 0x000010, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::SourceDirection' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, MaxAngle) == 0x00001C, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::MaxAngle' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, __WorldContext) == 0x000020, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, RemainingDirections) == 0x000028, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::RemainingDirections' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, ReturnDirections) == 0x000038, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::ReturnDirections' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CurrentDirection) == 0x000048, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CurrentDirection' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, Temp_int_Array_Index_Variable) == 0x000058, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_Array_Get_Item) == 0x000060, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_AngleBetweenNormals_ReturnValue) == 0x000078, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_AngleBetweenNormals_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CullDirectionsByAngle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'FUNCLIB_Maneuver_C_CullDirectionsByAngle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetDirectionSphereTrace
// 0x0190 (0x0190 - 0x0000)
struct FUNCLIB_Maneuver_C_GetDirectionSphereTrace final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TestDirection;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0020(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Hit;                                               // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetDirectionSphereTrace");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace) == 0x000190, "Wrong size on FUNCLIB_Maneuver_C_GetDirectionSphereTrace");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, Actor) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::Actor' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, TestDirection) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::TestDirection' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, Distance) == 0x000014, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::Distance' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, __WorldContext) == 0x000018, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, OutHit) == 0x000020, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::OutHit' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, Hit) == 0x0000A8, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::Hit' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, Radius) == 0x0000AC, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::Radius' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, SourceLocation) == 0x0000B0, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::SourceLocation' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, K2Node_DynamicCast_AsCharacter) == 0x0000C0, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000CC, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, K2Node_MakeArray_Array) == 0x0000D8, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E8, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F4, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000100, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetDirectionSphereTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x000188, "Member 'FUNCLIB_Maneuver_C_GetDirectionSphereTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetWeightSucceededMax
// 0x0010 (0x0010 - 0x0000)
struct FUNCLIB_Maneuver_C_GetWeightSucceededMax final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeightSucceededMax;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetWeightSucceededMax) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetWeightSucceededMax");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetWeightSucceededMax) == 0x000010, "Wrong size on FUNCLIB_Maneuver_C_GetWeightSucceededMax");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightSucceededMax, __WorldContext) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetWeightSucceededMax::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightSucceededMax, WeightSucceededMax) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetWeightSucceededMax::WeightSucceededMax' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetWeightSucceededMin
// 0x0010 (0x0010 - 0x0000)
struct FUNCLIB_Maneuver_C_GetWeightSucceededMin final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeightSucceededMin;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetWeightSucceededMin) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetWeightSucceededMin");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetWeightSucceededMin) == 0x000010, "Wrong size on FUNCLIB_Maneuver_C_GetWeightSucceededMin");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightSucceededMin, __WorldContext) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetWeightSucceededMin::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightSucceededMin, WeightSucceededMin) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetWeightSucceededMin::WeightSucceededMin' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetWeightFailedMax
// 0x0010 (0x0010 - 0x0000)
struct FUNCLIB_Maneuver_C_GetWeightFailedMax final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeightFailedMax;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetWeightFailedMax) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetWeightFailedMax");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetWeightFailedMax) == 0x000010, "Wrong size on FUNCLIB_Maneuver_C_GetWeightFailedMax");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightFailedMax, __WorldContext) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetWeightFailedMax::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightFailedMax, WeightFailedMax) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetWeightFailedMax::WeightFailedMax' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetWeightFailedMin
// 0x0010 (0x0010 - 0x0000)
struct FUNCLIB_Maneuver_C_GetWeightFailedMin final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeightFailedMin;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetWeightFailedMin) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetWeightFailedMin");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetWeightFailedMin) == 0x000010, "Wrong size on FUNCLIB_Maneuver_C_GetWeightFailedMin");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightFailedMin, __WorldContext) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetWeightFailedMin::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetWeightFailedMin, WeightFailedMin) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetWeightFailedMin::WeightFailedMin' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.CombineWeights
// 0x0070 (0x0070 - 0x0000)
struct FUNCLIB_Maneuver_C_CombineWeights final
{
public:
	TArray<float>                                 WeightsA;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<float>                                 WeightsB;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 NewWeights;                                        // 0x0028(0x0010)(Parm, OutParm)
	TArray<float>                                 ModifiedWeights;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_CombineWeights) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_CombineWeights");
static_assert(sizeof(FUNCLIB_Maneuver_C_CombineWeights) == 0x000070, "Wrong size on FUNCLIB_Maneuver_C_CombineWeights");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, WeightsA) == 0x000000, "Member 'FUNCLIB_Maneuver_C_CombineWeights::WeightsA' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, WeightsB) == 0x000010, "Member 'FUNCLIB_Maneuver_C_CombineWeights::WeightsB' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, __WorldContext) == 0x000020, "Member 'FUNCLIB_Maneuver_C_CombineWeights::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, NewWeights) == 0x000028, "Member 'FUNCLIB_Maneuver_C_CombineWeights::NewWeights' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, ModifiedWeights) == 0x000038, "Member 'FUNCLIB_Maneuver_C_CombineWeights::ModifiedWeights' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'FUNCLIB_Maneuver_C_CombineWeights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'FUNCLIB_Maneuver_C_CombineWeights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Array_Get_Item) == 0x000054, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CombineWeights, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'FUNCLIB_Maneuver_C_CombineWeights::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetPredictedTargetLocation
// 0x00A8 (0x00A8 - 0x0000)
struct FUNCLIB_Maneuver_C_GetPredictedTargetLocation final
{
public:
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeInTheFuture;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PredictedLocation;                                 // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetLocation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           DetectedPawn;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastSeenLocation_Result;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastSeenTimestamp_LastSeenTimestamp;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPredictedActorLocation_Result;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetPredictedTargetLocation");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation) == 0x0000A8, "Wrong size on FUNCLIB_Maneuver_C_GetPredictedTargetLocation");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, Target) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::Target' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, TimeInTheFuture) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::TimeInTheFuture' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, __WorldContext) == 0x000010, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, PredictedLocation) == 0x000018, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::PredictedLocation' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, OffsetLocation) == 0x000024, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::OffsetLocation' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, DetectedPawn) == 0x000030, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::DetectedPawn' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, DetectionEvent) == 0x000038, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::DetectionEvent' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000040, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_GetLastSeenLocation_Result) == 0x000054, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_GetLastSeenLocation_Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00006C, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_GetLastSeenTimestamp_LastSeenTimestamp) == 0x000078, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_GetLastSeenTimestamp_LastSeenTimestamp' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00007C, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_GetDetectedPawn_Pawn) == 0x000080, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_Get_Target_Location_Location) == 0x00008C, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedTargetLocation, CallFunc_GetPredictedActorLocation_Result) == 0x00009C, "Member 'FUNCLIB_Maneuver_C_GetPredictedTargetLocation::CallFunc_GetPredictedActorLocation_Result' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.CreateNavTarget
// 0x0038 (0x0038 - 0x0000)
struct FUNCLIB_Maneuver_C_CreateNavTarget final
{
public:
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_CreateNavTarget) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_CreateNavTarget");
static_assert(sizeof(FUNCLIB_Maneuver_C_CreateNavTarget) == 0x000038, "Wrong size on FUNCLIB_Maneuver_C_CreateNavTarget");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, Enemy) == 0x000000, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::Enemy' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, Location) == 0x000008, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::Location' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, __WorldContext) == 0x000018, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, Target) == 0x000020, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::Target' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_CreateNavTarget, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'FUNCLIB_Maneuver_C_CreateNavTarget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function FUNCLIB_Maneuver.FUNCLIB_Maneuver_C.GetPredictedActorLocation
// 0x0068 (0x0068 - 0x0000)
struct FUNCLIB_Maneuver_C_GetPredictedActorLocation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeInFuture;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Maneuver_C_GetPredictedActorLocation) == 0x000008, "Wrong alignment on FUNCLIB_Maneuver_C_GetPredictedActorLocation");
static_assert(sizeof(FUNCLIB_Maneuver_C_GetPredictedActorLocation) == 0x000068, "Wrong size on FUNCLIB_Maneuver_C_GetPredictedActorLocation");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, Actor) == 0x000000, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::Actor' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, Offset) == 0x000008, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::Offset' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, TimeInFuture) == 0x000014, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::TimeInFuture' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, __WorldContext) == 0x000018, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, Result) == 0x000020, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, CallFunc_GetVelocity_ReturnValue) == 0x000038, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Maneuver_C_GetPredictedActorLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00005C, "Member 'FUNCLIB_Maneuver_C_GetPredictedActorLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}


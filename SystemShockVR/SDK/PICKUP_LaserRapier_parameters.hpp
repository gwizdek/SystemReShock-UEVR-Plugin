#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PICKUP_LaserRapier

#include "Basic.hpp"

#include "ENUM_LaserRapierColor_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"


namespace SDK::Params
{

// Function PICKUP_LaserRapier.PICKUP_LaserRapier_C.OnPrePickup
// 0x0048 (0x0048 - 0x0000)
struct PICKUP_LaserRapier_C_OnPrePickup final
{
public:
	class UWEAPON_LaserRapier_C*                  CreatedWeapon;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItemInstance_Result;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_CreateInventoryItem_Item;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWEAPON_LaserRapier_C*                  K2Node_DynamicCast_AsWEAPON_Laser_Rapier;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PICKUP_LaserRapier_C_OnPrePickup) == 0x000008, "Wrong alignment on PICKUP_LaserRapier_C_OnPrePickup");
static_assert(sizeof(PICKUP_LaserRapier_C_OnPrePickup) == 0x000048, "Wrong size on PICKUP_LaserRapier_C_OnPrePickup");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, CreatedWeapon) == 0x000000, "Member 'PICKUP_LaserRapier_C_OnPrePickup::CreatedWeapon' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, CallFunc_GetItemClass_Result) == 0x000008, "Member 'PICKUP_LaserRapier_C_OnPrePickup::CallFunc_GetItemClass_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, CallFunc_HasItemInstance_Result) == 0x000010, "Member 'PICKUP_LaserRapier_C_OnPrePickup::CallFunc_HasItemInstance_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000018, "Member 'PICKUP_LaserRapier_C_OnPrePickup::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'PICKUP_LaserRapier_C_OnPrePickup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, CallFunc_CreateInventoryItem_Item) == 0x000030, "Member 'PICKUP_LaserRapier_C_OnPrePickup::CallFunc_CreateInventoryItem_Item' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, K2Node_DynamicCast_AsWEAPON_Laser_Rapier) == 0x000038, "Member 'PICKUP_LaserRapier_C_OnPrePickup::K2Node_DynamicCast_AsWEAPON_Laser_Rapier' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_OnPrePickup, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PICKUP_LaserRapier_C_OnPrePickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PICKUP_LaserRapier.PICKUP_LaserRapier_C.GetItemDisplayName
// 0x0150 (0x0150 - 0x0000)
struct PICKUP_LaserRapier_C_GetItemDisplayName final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	ENUM_LaserRapierColor                         InstanceColor;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDisplayName_Result;                // 0x0020(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetItem_Result;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWEAPON_LaserRapier_C*                  K2Node_DynamicCast_AsWEAPON_Laser_Rapier;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LaserRapierColor                         CallFunc_GetLaserBeamColorType_Result;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDisplayName_Result_1;              // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
};
static_assert(alignof(PICKUP_LaserRapier_C_GetItemDisplayName) == 0x000008, "Wrong alignment on PICKUP_LaserRapier_C_GetItemDisplayName");
static_assert(sizeof(PICKUP_LaserRapier_C_GetItemDisplayName) == 0x000150, "Wrong size on PICKUP_LaserRapier_C_GetItemDisplayName");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, Result) == 0x000000, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, InstanceColor) == 0x000018, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::InstanceColor' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_GetItemDisplayName_Result) == 0x000020, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_GetItemDisplayName_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000060, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000A8, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_GetItem_Result) == 0x0000B0, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_GetItem_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, K2Node_DynamicCast_AsWEAPON_Laser_Rapier) == 0x0000C0, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::K2Node_DynamicCast_AsWEAPON_Laser_Rapier' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_GetLaserBeamColorType_Result) == 0x0000C9, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_GetLaserBeamColorType_Result' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_GetItemDisplayName_Result_1) == 0x0000D0, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_GetItemDisplayName_Result_1' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, K2Node_MakeArray_Array) == 0x000128, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PICKUP_LaserRapier_C_GetItemDisplayName, CallFunc_Format_ReturnValue) == 0x000138, "Member 'PICKUP_LaserRapier_C_GetItemDisplayName::CallFunc_Format_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SubDetails_Junk

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SubDetails_Junk.WIDGET_SubDetails_Junk_C.ExecuteUbergraph_WIDGET_SubDetails_Junk
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk) == 0x000004, "Wrong alignment on WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk");
static_assert(sizeof(WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk) == 0x000004, "Wrong size on WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk, EntryPoint) == 0x000000, "Member 'WIDGET_SubDetails_Junk_C_ExecuteUbergraph_WIDGET_SubDetails_Junk::EntryPoint' has a wrong offset!");

// Function WIDGET_SubDetails_Junk.WIDGET_SubDetails_Junk_C.GetAmmoDetails
// 0x000C (0x000C - 0x0000)
struct WIDGET_SubDetails_Junk_C_GetAmmoDetails final
{
public:
	bool                                          ShowAmmo;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountInClip;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountInInventory;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Junk_C_GetAmmoDetails) == 0x000004, "Wrong alignment on WIDGET_SubDetails_Junk_C_GetAmmoDetails");
static_assert(sizeof(WIDGET_SubDetails_Junk_C_GetAmmoDetails) == 0x00000C, "Wrong size on WIDGET_SubDetails_Junk_C_GetAmmoDetails");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_GetAmmoDetails, ShowAmmo) == 0x000000, "Member 'WIDGET_SubDetails_Junk_C_GetAmmoDetails::ShowAmmo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_GetAmmoDetails, CountInClip) == 0x000004, "Member 'WIDGET_SubDetails_Junk_C_GetAmmoDetails::CountInClip' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_GetAmmoDetails, CountInInventory) == 0x000008, "Member 'WIDGET_SubDetails_Junk_C_GetAmmoDetails::CountInInventory' has a wrong offset!");

// Function WIDGET_SubDetails_Junk.WIDGET_SubDetails_Junk_C.InitializeItemDetails
// 0x02E0 (0x02E0 - 0x0000)
struct WIDGET_SubDetails_Junk_C_InitializeItemDetails final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_InventoryDetails_C*             InventoryDetails;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecycleRewardCount;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RecycleRewardItemClass;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Junk_Base_C*                      JunkItem;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Junk_Base_C*                      K2Node_DynamicCast_AsITEM_Junk_Base;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0100(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0170(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0018)()
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x01F0(0x0018)()
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue_1;    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base_1;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0220(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0260(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0278(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02C8(0x0018)()
};
static_assert(alignof(WIDGET_SubDetails_Junk_C_InitializeItemDetails) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Junk_C_InitializeItemDetails");
static_assert(sizeof(WIDGET_SubDetails_Junk_C_InitializeItemDetails) == 0x0002E0, "Wrong size on WIDGET_SubDetails_Junk_C_InitializeItemDetails");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, Item) == 0x000000, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, InventoryDetails) == 0x000008, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::InventoryDetails' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, Result) == 0x000010, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, RecycleRewardCount) == 0x000014, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::RecycleRewardCount' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, RecycleRewardItemClass) == 0x000018, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::RecycleRewardItemClass' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, JunkItem) == 0x000020, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::JunkItem' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_DynamicCast_AsITEM_Junk_Base) == 0x000028, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_DynamicCast_AsITEM_Junk_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000032, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_MakeLiteralInt_ReturnValue) == 0x000034, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B8, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Round_ReturnValue) == 0x0000BC, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C0, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_3) == 0x000100, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeArray_Array) == 0x000140, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Round_ReturnValue_1) == 0x000150, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Format_ReturnValue) == 0x000158, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_4) == 0x000170, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0001D8, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_ClassDynamicCast_AsITEM_Base) == 0x0001E0, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_ClassDynamicCast_bSuccess) == 0x0001E8, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_GetEmptyText_ReturnValue) == 0x0001F0, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_LoadClassAsset_Blocking_ReturnValue_1) == 0x000208, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_LoadClassAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_ClassDynamicCast_AsITEM_Base_1) == 0x000210, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_ClassDynamicCast_AsITEM_Base_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_ClassDynamicCast_bSuccess_1) == 0x000218, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_5) == 0x000220, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_GetEmptyText_ReturnValue_1) == 0x000260, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeStruct_FormatArgumentData_6) == 0x000278, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, K2Node_MakeArray_Array_2) == 0x0002B8, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_InitializeItemDetails, CallFunc_Format_ReturnValue_2) == 0x0002C8, "Member 'WIDGET_SubDetails_Junk_C_InitializeItemDetails::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WIDGET_SubDetails_Junk.WIDGET_SubDetails_Junk_C.ShowExtendedDetails
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Junk_C_ShowExtendedDetails final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Junk_C_ShowExtendedDetails) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Junk_C_ShowExtendedDetails");
static_assert(sizeof(WIDGET_SubDetails_Junk_C_ShowExtendedDetails) == 0x000001, "Wrong size on WIDGET_SubDetails_Junk_C_ShowExtendedDetails");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_ShowExtendedDetails, Show) == 0x000000, "Member 'WIDGET_SubDetails_Junk_C_ShowExtendedDetails::Show' has a wrong offset!");

// Function WIDGET_SubDetails_Junk.WIDGET_SubDetails_Junk_C.ShowBars
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Junk_C_ShowBars final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Junk_C_ShowBars) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Junk_C_ShowBars");
static_assert(sizeof(WIDGET_SubDetails_Junk_C_ShowBars) == 0x000001, "Wrong size on WIDGET_SubDetails_Junk_C_ShowBars");
static_assert(offsetof(WIDGET_SubDetails_Junk_C_ShowBars, Show) == 0x000000, "Member 'WIDGET_SubDetails_Junk_C_ShowBars::Show' has a wrong offset!");

}


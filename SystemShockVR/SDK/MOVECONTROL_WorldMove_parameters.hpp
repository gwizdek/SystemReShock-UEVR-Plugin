#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MOVECONTROL_WorldMove

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_MoveControlParams_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_LookControlType_structs.hpp"


namespace SDK::Params
{

// Function MOVECONTROL_WorldMove.MOVECONTROL_WorldMove_C.InitializeMoveControl
// 0x0040 (0x0040 - 0x0000)
struct MOVECONTROL_WorldMove_C_InitializeMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              InitialControlParams;                              // 0x000C(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LookControlType                          LookControlType;                                   // 0x0035(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeMoveControl_Result;             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_WorldMove_C_InitializeMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_WorldMove_C_InitializeMoveControl");
static_assert(sizeof(MOVECONTROL_WorldMove_C_InitializeMoveControl) == 0x000040, "Wrong size on MOVECONTROL_WorldMove_C_InitializeMoveControl");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, Player_0) == 0x000000, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::Player_0' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, GameTime) == 0x000008, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::GameTime' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, InitialControlParams) == 0x00000C, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::InitialControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, Result) == 0x000034, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, LookControlType) == 0x000035, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::LookControlType' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, Temp_bool_Variable) == 0x000036, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, CallFunc_InitializeMoveControl_Result) == 0x000037, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::CallFunc_InitializeMoveControl_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, Temp_byte_Variable) == 0x000038, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, Temp_byte_Variable_1) == 0x000039, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_InitializeMoveControl, K2Node_Select_Default) == 0x00003A, "Member 'MOVECONTROL_WorldMove_C_InitializeMoveControl::K2Node_Select_Default' has a wrong offset!");

// Function MOVECONTROL_WorldMove.MOVECONTROL_WorldMove_C.UpdateMoveControl
// 0x00C0 (0x00C0 - 0x0000)
struct MOVECONTROL_WorldMove_C_UpdateMoveControl final
{
public:
	struct FVector2D                              MoveInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LookInput;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              ControlParams;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ActionInputValues;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         MoveInputScale;                                    // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExpire;                                      // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default_1;                           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeFloatDivide_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_WorldMove_C_UpdateMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_WorldMove_C_UpdateMoveControl");
static_assert(sizeof(MOVECONTROL_WorldMove_C_UpdateMoveControl) == 0x0000C0, "Wrong size on MOVECONTROL_WorldMove_C_UpdateMoveControl");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, MoveInput) == 0x000000, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::MoveInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, LookInput) == 0x000008, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::LookInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, ControlParams) == 0x000010, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::ControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, ActionInputValues) == 0x000038, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::ActionInputValues' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, MoveInputScale) == 0x000048, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::MoveInputScale' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Delta_Time) == 0x00004C, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Delta_Time' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, ShouldExpire) == 0x000050, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::ShouldExpire' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Progress) == 0x000054, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Progress' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Temp_bool_Variable) == 0x000058, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Temp_byte_Variable) == 0x000059, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Temp_byte_Variable_1) == 0x00005A, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x00005C, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_REase_ReturnValue) == 0x000068, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_MakeVector_ReturnValue) == 0x000084, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, Temp_bool_Variable_1) == 0x000090, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, K2Node_Select_Default) == 0x000094, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_VEase_ReturnValue) == 0x0000A0, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, K2Node_Select_Default_1) == 0x0000AC, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000AD, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_BooleanAND_ReturnValue) == 0x0000AE, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000B0, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_SafeFloatDivide_ReturnValue) == 0x0000B8, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_SafeFloatDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_WorldMove_C_UpdateMoveControl, CallFunc_FClamp_ReturnValue) == 0x0000BC, "Member 'MOVECONTROL_WorldMove_C_UpdateMoveControl::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}


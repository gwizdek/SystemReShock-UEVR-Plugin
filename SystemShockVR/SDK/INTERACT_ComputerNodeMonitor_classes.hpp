#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ComputerNodeMonitor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C
// 0x0078 (0x0380 - 0x0308)
class AINTERACT_ComputerNodeMonitor_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_ComputerNodeMonitor_C;     // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          TargetBox;                                         // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio;                                   // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NodeMonitor;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ChangeRate;                                        // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NodesRemaining;                                    // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DigitUpdateTimestamp;                              // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalEmissiveColor;                                // 0x033C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StandardEmissiveColor;                             // 0x034C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    AcquireFullCodeStoryQuest;                         // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<struct FDataTableRowHandle>            AcquireDigitStoryQuests;                           // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_INTERACT_ComputerNodeMonitor(int32 EntryPoint);
	void BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void EVENT_OnPylonDestroyed(int32 RemainingNodes);
	void InitializePylonTracking();
	void UpdateDisplayDigit();
	void UpdateEmissiveColor(bool State);
	void GetAcquireDigitQuestName(class FName* Result);
	void HasAcquiredCurrentDigit(bool* Result);
	void HasAcquiredAllDigits(bool* Result);
	void ShouldUpdateDigit(bool* Result);
	void SetDisplayDigit(int32 NewDigit, bool FinalValue);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryAcquireDigit(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_ComputerNodeMonitor_C">();
	}
	static class AINTERACT_ComputerNodeMonitor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_ComputerNodeMonitor_C>();
	}
};
static_assert(alignof(AINTERACT_ComputerNodeMonitor_C) == 0x000008, "Wrong alignment on AINTERACT_ComputerNodeMonitor_C");
static_assert(sizeof(AINTERACT_ComputerNodeMonitor_C) == 0x000380, "Wrong size on AINTERACT_ComputerNodeMonitor_C");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, UberGraphFrame_INTERACT_ComputerNodeMonitor_C) == 0x000308, "Member 'AINTERACT_ComputerNodeMonitor_C::UberGraphFrame_INTERACT_ComputerNodeMonitor_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, TargetBox) == 0x000310, "Member 'AINTERACT_ComputerNodeMonitor_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, COMP_VoxelAudio) == 0x000318, "Member 'AINTERACT_ComputerNodeMonitor_C::COMP_VoxelAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, COMP_VoxelCullable) == 0x000320, "Member 'AINTERACT_ComputerNodeMonitor_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, NodeMonitor) == 0x000328, "Member 'AINTERACT_ComputerNodeMonitor_C::NodeMonitor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, ChangeRate) == 0x000330, "Member 'AINTERACT_ComputerNodeMonitor_C::ChangeRate' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, NodesRemaining) == 0x000334, "Member 'AINTERACT_ComputerNodeMonitor_C::NodesRemaining' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, DigitUpdateTimestamp) == 0x000338, "Member 'AINTERACT_ComputerNodeMonitor_C::DigitUpdateTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, FinalEmissiveColor) == 0x00033C, "Member 'AINTERACT_ComputerNodeMonitor_C::FinalEmissiveColor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, StandardEmissiveColor) == 0x00034C, "Member 'AINTERACT_ComputerNodeMonitor_C::StandardEmissiveColor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, AcquireFullCodeStoryQuest) == 0x000360, "Member 'AINTERACT_ComputerNodeMonitor_C::AcquireFullCodeStoryQuest' has a wrong offset!");
static_assert(offsetof(AINTERACT_ComputerNodeMonitor_C, AcquireDigitStoryQuests) == 0x000370, "Member 'AINTERACT_ComputerNodeMonitor_C::AcquireDigitStoryQuests' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Display_WindowMode

#include "Basic.hpp"

#include "OPTION_Display_WindowMode_classes.hpp"
#include "OPTION_Display_WindowMode_parameters.hpp"


namespace SDK
{

// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.OnWindowModeChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::OnWindowModeChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "OnWindowModeChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.PopulateUniqueSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::PopulateUniqueSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "PopulateUniqueSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.ModeToText
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWindowMode                             Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Result                                                 (Parm, OutParm)

void UOPTION_Display_WindowMode_C::ModeToText(EWindowMode Mode, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "ModeToText");

	Params::OPTION_Display_WindowMode_C_ModeToText Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.ApplyDirtyValue
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::ApplyDirtyValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "ApplyDirtyValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.IsDirty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsDirty_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Display_WindowMode_C::IsDirty(bool* Param_IsDirty_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "IsDirty");

	Params::OPTION_Display_WindowMode_C_IsDirty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDirty_0 != nullptr)
		*Param_IsDirty_0 = Parms.Param_IsDirty_0;
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.AcceptCurrentValue
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::AcceptCurrentValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "AcceptCurrentValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.ApplyCleanValue
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::ApplyCleanValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "ApplyCleanValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.ModeToIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWindowMode                             Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOPTION_Display_WindowMode_C::ModeToIndex(EWindowMode Mode, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "ModeToIndex");

	Params::OPTION_Display_WindowMode_C_ModeToIndex Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.SelectDefaultValue
// (Public, BlueprintCallable, BlueprintEvent)

void UOPTION_Display_WindowMode_C::SelectDefaultValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "SelectDefaultValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.IsDefault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOPTION_Display_WindowMode_C::IsDefault(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "IsDefault");

	Params::OPTION_Display_WindowMode_C_IsDefault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function OPTION_Display_WindowMode.OPTION_Display_WindowMode_C.InitializeMenuListItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_MenuListBase_C*           ParentList                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOPTION_Display_WindowMode_C::InitializeMenuListItem(class UWIDGET_MenuListBase_C* ParentList, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OPTION_Display_WindowMode_C", "InitializeMenuListItem");

	Params::OPTION_Display_WindowMode_C_InitializeMenuListItem Parms{};

	Parms.ParentList = ParentList;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_DoorBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_DoorIcons_structs.hpp"
#include "ENUM_ButtonColorType_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_DoorState_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature final
{
public:
	class AINTERACT_DoorBase_C*                   Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorState                                State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature");
static_assert(sizeof(INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature) == 0x000010, "Wrong size on INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature, Door) == 0x000000, "Member 'INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature::Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature, State) == 0x000008, "Member 'INTERACT_DoorBase_C_OnDoorStateChanged__DelegateSignature::State' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ExecuteUbergraph_INTERACT_DoorBase
// 0x00D8 (0x00D8 - 0x0000)
struct INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnDoorwayUnblocked_Result;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActorBlockDoorway_Result;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSafeToClose_Result;                     // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_OnDoorwayBlocked_Result;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActorBlockDoorway_Result_1;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase");
static_assert(sizeof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase) == 0x0000D8, "Wrong size on INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, EntryPoint) == 0x000000, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, CallFunc_OnDoorwayUnblocked_Result) == 0x000024, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::CallFunc_OnDoorwayUnblocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, CallFunc_CanActorBlockDoorway_Result) == 0x000025, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::CallFunc_CanActorBlockDoorway_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_bVisibleState) == 0x000026, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, CallFunc_IsSafeToClose_Result) == 0x000027, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::CallFunc_IsSafeToClose_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, CallFunc_OnDoorwayBlocked_Result) == 0x0000D0, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::CallFunc_OnDoorwayBlocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase, CallFunc_CanActorBlockDoorway_Result_1) == 0x0000D1, "Member 'INTERACT_DoorBase_C_ExecuteUbergraph_INTERACT_DoorBase::CallFunc_CanActorBlockDoorway_Result_1' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_DoorBase_C_BndEvt__COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'INTERACT_DoorBase_C_BndEvt__SafetySensor_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UserConstructionScript
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_DoorBase_C_UserConstructionScript final
{
public:
	float                                         CallFunc_UpdateDoorEmissiveStrength_Strength;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_UserConstructionScript) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_UserConstructionScript");
static_assert(sizeof(INTERACT_DoorBase_C_UserConstructionScript) == 0x000014, "Wrong size on INTERACT_DoorBase_C_UserConstructionScript");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_UpdateDoorEmissiveStrength_Strength) == 0x000000, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_UpdateDoorEmissiveStrength_Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_BooleanNOR_ReturnValue) == 0x000004, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_BooleanNOR_ReturnValue_1) == 0x000005, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_BooleanNOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_IsValidClass_ReturnValue) == 0x00000D, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_IsValidClass_ReturnValue_1) == 0x00000E, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue_1) == 0x000010, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue_2) == 0x000011, "Member 'INTERACT_DoorBase_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoor
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_DoorBase_C_InitializeDoor final
{
public:
	bool                                          HasInitialLock;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldBeLocked;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLocked_Result;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door_1;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HideBackButton_Result;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door_2;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HideFrontButton_Result;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_InitializeDoor) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_InitializeDoor");
static_assert(sizeof(INTERACT_DoorBase_C_InitializeDoor) == 0x000078, "Wrong size on INTERACT_DoorBase_C_InitializeDoor");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, HasInitialLock) == 0x000000, "Member 'INTERACT_DoorBase_C_InitializeDoor::HasInitialLock' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, ShouldBeLocked) == 0x000001, "Member 'INTERACT_DoorBase_C_InitializeDoor::ShouldBeLocked' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_IsValidClass_ReturnValue) == 0x000002, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_BooleanNOR_ReturnValue) == 0x00000A, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000018, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000030, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_SetLocked_Result) == 0x000038, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_SetLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door_1) == 0x000040, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_HideBackButton_Result) == 0x000051, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_HideBackButton_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000058, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door_2) == 0x000060, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'INTERACT_DoorBase_C_InitializeDoor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoor, CallFunc_HideFrontButton_Result) == 0x000071, "Member 'INTERACT_DoorBase_C_InitializeDoor::CallFunc_HideFrontButton_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoorState
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_DoorBase_C_InitializeDoorState final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSafeToClose_Result;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeDoorMontage_ElapsedTime;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeDoorMontage_MontageDuration;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeDoorMontage_ElapsedTime_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeDoorMontage_MontageDuration_1;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door_1;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenDoor_Result;                          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenDoor_Result_1;                        // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_InitializeDoorState) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_InitializeDoorState");
static_assert(sizeof(INTERACT_DoorBase_C_InitializeDoorState) == 0x000080, "Wrong size on INTERACT_DoorBase_C_InitializeDoorState");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, AnimInstance) == 0x000000, "Member 'INTERACT_DoorBase_C_InitializeDoorState::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_IsSafeToClose_Result) == 0x000008, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_IsSafeToClose_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_ResumeDoorMontage_ElapsedTime) == 0x000028, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_ResumeDoorMontage_ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_ResumeDoorMontage_MontageDuration) == 0x00002C, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_ResumeDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_ResumeDoorMontage_ElapsedTime_1) == 0x000030, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_ResumeDoorMontage_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_ResumeDoorMontage_MontageDuration_1) == 0x000034, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_ResumeDoorMontage_MontageDuration_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000040, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_DynamicCast_AsINTERF_ANIM_Door_1) == 0x000058, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_DynamicCast_AsINTERF_ANIM_Door_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_OpenDoor_Result) == 0x000069, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_OpenDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_OpenDoor_Result_1) == 0x00006A, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_OpenDoor_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_GetAnimInstance_ReturnValue) == 0x000070, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'INTERACT_DoorBase_C_InitializeDoorState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000079, "Member 'INTERACT_DoorBase_C_InitializeDoorState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeDoorLockState
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_DoorBase_C_InitializeDoorLockState final
{
public:
	bool                                          ShouldBeLocked;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasCompletedRequiredQuests_Result;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSecurityForCurrentLevel_Result;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_InitializeDoorLockState) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_InitializeDoorLockState");
static_assert(sizeof(INTERACT_DoorBase_C_InitializeDoorLockState) == 0x000060, "Wrong size on INTERACT_DoorBase_C_InitializeDoorLockState");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, ShouldBeLocked) == 0x000000, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::ShouldBeLocked' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, GameInstance) == 0x000008, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_HasCompletedRequiredQuests_Result) == 0x000020, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_HasCompletedRequiredQuests_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000021, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_IsValidClass_ReturnValue) == 0x000039, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_GetSecurityForCurrentLevel_Result) == 0x00003C, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_GetSecurityForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000058, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeDoorLockState, CallFunc_BooleanOR_ReturnValue_1) == 0x00005A, "Member 'INTERACT_DoorBase_C_InitializeDoorLockState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_DoorBase_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_InitializeAttributes");
static_assert(sizeof(INTERACT_DoorBase_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_DoorBase_C_InitializeAttributes");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_DoorBase_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ValidateLockStates
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_DoorBase_C_ValidateLockStates final
{
public:
	int32                                         LockRequirementCount;                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_ValidateLockStates) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_ValidateLockStates");
static_assert(sizeof(INTERACT_DoorBase_C_ValidateLockStates) == 0x000038, "Wrong size on INTERACT_DoorBase_C_ValidateLockStates");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, LockRequirementCount) == 0x000000, "Member 'INTERACT_DoorBase_C_ValidateLockStates::LockRequirementCount' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, Temp_int_Variable) == 0x000004, "Member 'INTERACT_DoorBase_C_ValidateLockStates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, Temp_int_Variable_1) == 0x00000C, "Member 'INTERACT_DoorBase_C_ValidateLockStates::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000028, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, Temp_int_Variable_2) == 0x00002C, "Member 'INTERACT_DoorBase_C_ValidateLockStates::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, Temp_int_Variable_3) == 0x000030, "Member 'INTERACT_DoorBase_C_ValidateLockStates::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ValidateLockStates, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'INTERACT_DoorBase_C_ValidateLockStates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryAutoCloseDoor
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_DoorBase_C_TryAutoCloseDoor final
{
public:
	bool                                          CallFunc_IsDoorFunctional_Result;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyHostileEnemyNearDoor_Result;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSafeToClose_Result;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_TryAutoCloseDoor) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_TryAutoCloseDoor");
static_assert(sizeof(INTERACT_DoorBase_C_TryAutoCloseDoor) == 0x000005, "Wrong size on INTERACT_DoorBase_C_TryAutoCloseDoor");
static_assert(offsetof(INTERACT_DoorBase_C_TryAutoCloseDoor, CallFunc_IsDoorFunctional_Result) == 0x000000, "Member 'INTERACT_DoorBase_C_TryAutoCloseDoor::CallFunc_IsDoorFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryAutoCloseDoor, CallFunc_IsAnyHostileEnemyNearDoor_Result) == 0x000001, "Member 'INTERACT_DoorBase_C_TryAutoCloseDoor::CallFunc_IsAnyHostileEnemyNearDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryAutoCloseDoor, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_DoorBase_C_TryAutoCloseDoor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryAutoCloseDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'INTERACT_DoorBase_C_TryAutoCloseDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryAutoCloseDoor, CallFunc_IsSafeToClose_Result) == 0x000004, "Member 'INTERACT_DoorBase_C_TryAutoCloseDoor::CallFunc_IsSafeToClose_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsSafeToClose
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_DoorBase_C_IsSafeToClose final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorBlockDoorway_Result;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(INTERACT_DoorBase_C_IsSafeToClose) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_IsSafeToClose");
static_assert(sizeof(INTERACT_DoorBase_C_IsSafeToClose) == 0x000048, "Wrong size on INTERACT_DoorBase_C_IsSafeToClose");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_IsSafeToClose::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, OverlappingActors) == 0x000008, "Member 'INTERACT_DoorBase_C_IsSafeToClose::OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, Temp_int_Array_Index_Variable) == 0x000018, "Member 'INTERACT_DoorBase_C_IsSafeToClose::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'INTERACT_DoorBase_C_IsSafeToClose::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_CanActorBlockDoorway_Result) == 0x000034, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_CanActorBlockDoorway_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsSafeToClose, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000038, "Member 'INTERACT_DoorBase_C_IsSafeToClose::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsDoorFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_DoorBase_C_IsDoorFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsDoorFunctional) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_IsDoorFunctional");
static_assert(sizeof(INTERACT_DoorBase_C_IsDoorFunctional) == 0x00000C, "Wrong size on INTERACT_DoorBase_C_IsDoorFunctional");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorFunctional, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_IsDoorFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorFunctional, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_DoorBase_C_IsDoorFunctional::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_DoorBase_C_IsDoorFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_IsDoorFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsLocationInFrontOfDoor
// 0x003C (0x003C - 0x0000)
struct INTERACT_DoorBase_C_IsLocationInFrontOfDoor final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_IsLocationInFrontOfDoor");
static_assert(sizeof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor) == 0x00003C, "Wrong size on INTERACT_DoorBase_C_IsLocationInFrontOfDoor");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, Location) == 0x000000, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::Location' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, Result) == 0x00000C, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, CallFunc_GetActorForwardVector_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, CallFunc_Dot_VectorVector_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsLocationInFrontOfDoor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_IsLocationInFrontOfDoor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsAnyHostileEnemyNearDoor
// 0x0140 (0x0140 - 0x0000)
struct INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyEvents_Result;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x00E0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVoxelNavAgentComponent*>        CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue; // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelNavAgentComponent*                CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor");
static_assert(sizeof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor) == 0x000140, "Wrong size on INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, EnemyPawn) == 0x000008, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::EnemyPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_HasAnyEvents_Result) == 0x000018, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_HasAnyEvents_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetActorForwardVector_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000044, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Vector_GetAbs_ReturnValue) == 0x00005C, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Dot_VectorVector_ReturnValue) == 0x000068, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00006C, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000078, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetPlayerPawn_ReturnValue) == 0x000080, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetGameInstance_ReturnValue) == 0x000088, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetComponentBounds_Origin) == 0x000090, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetComponentBounds_BoxExtent) == 0x00009C, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetComponentBounds_SphereRadius) == 0x0000A8, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000B0, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000BC, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_MakeBox_ReturnValue) == 0x0000E0, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue) == 0x000100, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetNavigationAgentsInWorldBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Array_Get_Item) == 0x000118, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, CallFunc_GetOwner_ReturnValue) == 0x000128, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000130, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'INTERACT_DoorBase_C_IsAnyHostileEnemyNearDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CanActorBlockDoorway
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_DoorBase_C_CanActorBlockDoorway final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_CanActorBlockDoorway) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_CanActorBlockDoorway");
static_assert(sizeof(INTERACT_DoorBase_C_CanActorBlockDoorway) == 0x000020, "Wrong size on INTERACT_DoorBase_C_CanActorBlockDoorway");
static_assert(offsetof(INTERACT_DoorBase_C_CanActorBlockDoorway, Actor) == 0x000000, "Member 'INTERACT_DoorBase_C_CanActorBlockDoorway::Actor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CanActorBlockDoorway, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_CanActorBlockDoorway::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CanActorBlockDoorway, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_CanActorBlockDoorway::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CanActorBlockDoorway, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_CanActorBlockDoorway::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetDoorEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct INTERACT_DoorBase_C_GetDoorEmissiveStrength final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_GetDoorEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_GetDoorEmissiveStrength");
static_assert(sizeof(INTERACT_DoorBase_C_GetDoorEmissiveStrength) == 0x00000C, "Wrong size on INTERACT_DoorBase_C_GetDoorEmissiveStrength");
static_assert(offsetof(INTERACT_DoorBase_C_GetDoorEmissiveStrength, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_GetDoorEmissiveStrength::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetDoorEmissiveStrength, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_DoorBase_C_GetDoorEmissiveStrength::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetDoorEmissiveStrength, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_GetDoorEmissiveStrength::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.HasCompletedRequiredQuests
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_DoorBase_C_HasCompletedRequiredQuests final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_HasCompletedRequiredQuests) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_HasCompletedRequiredQuests");
static_assert(sizeof(INTERACT_DoorBase_C_HasCompletedRequiredQuests) == 0x000058, "Wrong size on INTERACT_DoorBase_C_HasCompletedRequiredQuests");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, GameInstance) == 0x000008, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Array_Get_Item) == 0x000040, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_HasCompletedStoryQuest_Completed) == 0x000055, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_HasCompletedRequiredQuests, CallFunc_Not_PreBool_ReturnValue) == 0x000056, "Member 'INTERACT_DoorBase_C_HasCompletedRequiredQuests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.StartAutoCloseTimer
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_StartAutoCloseTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_StartAutoCloseTimer) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_StartAutoCloseTimer");
static_assert(sizeof(INTERACT_DoorBase_C_StartAutoCloseTimer) == 0x000018, "Wrong size on INTERACT_DoorBase_C_StartAutoCloseTimer");
static_assert(offsetof(INTERACT_DoorBase_C_StartAutoCloseTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_DoorBase_C_StartAutoCloseTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_StartAutoCloseTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_StartAutoCloseTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OpenDoor
// 0x00C0 (0x00C0 - 0x0000)
struct INTERACT_DoorBase_C_OpenDoor final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChildComponents;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	float                                         MontageStartTime;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReverseDoorMontage_ElapsedTime;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReverseDoorMontage_MontageDuration;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayDoorMontage_MontageDuration;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDetachInteract_Result;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenDoor_Result;                          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_OpenDoor) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OpenDoor");
static_assert(sizeof(INTERACT_DoorBase_C_OpenDoor) == 0x0000C0, "Wrong size on INTERACT_DoorBase_C_OpenDoor");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, SourceActor) == 0x000000, "Member 'INTERACT_DoorBase_C_OpenDoor::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, ChildComponents) == 0x000008, "Member 'INTERACT_DoorBase_C_OpenDoor::ChildComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, MontageStartTime) == 0x000018, "Member 'INTERACT_DoorBase_C_OpenDoor::MontageStartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'INTERACT_DoorBase_C_OpenDoor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'INTERACT_DoorBase_C_OpenDoor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_GetChildrenComponents_Children) == 0x000028, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_ReverseDoorMontage_ElapsedTime) == 0x00003C, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_ReverseDoorMontage_ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_ReverseDoorMontage_MontageDuration) == 0x000040, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_ReverseDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00005C, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_PlayDoorMontage_MontageDuration) == 0x000060, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_PlayDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_Array_Get_Item) == 0x000068, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000088, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_TryDetachInteract_Result) == 0x00009A, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_TryDetachInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_DoesImplementInterface_ReturnValue) == 0x00009B, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00009C, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_BooleanAND_ReturnValue) == 0x00009D, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A0, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x0000A8, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, CallFunc_OpenDoor_Result) == 0x0000B9, "Member 'INTERACT_DoorBase_C_OpenDoor::CallFunc_OpenDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OpenDoor, K2Node_SwitchEnum_CmpSuccess) == 0x0000BA, "Member 'INTERACT_DoorBase_C_OpenDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CloseDoor
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_DoorBase_C_CloseDoor final
{
public:
	float                                         MontageDuration;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageStartTime;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReverseDoorMontage_ElapsedTime;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReverseDoorMontage_MontageDuration;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayDoorMontage_MontageDuration;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseDoor_Result;                         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_CloseDoor) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_CloseDoor");
static_assert(sizeof(INTERACT_DoorBase_C_CloseDoor) == 0x000058, "Wrong size on INTERACT_DoorBase_C_CloseDoor");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, MontageDuration) == 0x000000, "Member 'INTERACT_DoorBase_C_CloseDoor::MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, MontageStartTime) == 0x000004, "Member 'INTERACT_DoorBase_C_CloseDoor::MontageStartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_ReverseDoorMontage_ElapsedTime) == 0x00000C, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_ReverseDoorMontage_ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_ReverseDoorMontage_MontageDuration) == 0x000010, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_ReverseDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, K2Node_DynamicCast_AsAnim_Montage) == 0x000020, "Member 'INTERACT_DoorBase_C_CloseDoor::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_DoorBase_C_CloseDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00002C, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_PlayDoorMontage_MontageDuration) == 0x000030, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_PlayDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'INTERACT_DoorBase_C_CloseDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000035, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000036, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_BooleanAND_ReturnValue) == 0x000037, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000040, "Member 'INTERACT_DoorBase_C_CloseDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_DoorBase_C_CloseDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CloseDoor, CallFunc_CloseDoor_Result) == 0x000051, "Member 'INTERACT_DoorBase_C_CloseDoor::CallFunc_CloseDoor_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UnlockDoor
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_DoorBase_C_UnlockDoor final
{
public:
	bool                                          AutoOpen;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLocked_Result;                         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_UnlockDoor) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_UnlockDoor");
static_assert(sizeof(INTERACT_DoorBase_C_UnlockDoor) == 0x000080, "Wrong size on INTERACT_DoorBase_C_UnlockDoor");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, AutoOpen) == 0x000000, "Member 'INTERACT_DoorBase_C_UnlockDoor::AutoOpen' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'INTERACT_DoorBase_C_UnlockDoor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'INTERACT_DoorBase_C_UnlockDoor::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_DoorBase_C_UnlockDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_Montage_Play_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_Len_ReturnValue) == 0x000050, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_BooleanNAND_ReturnValue) == 0x000055, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000056, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_BooleanAND_ReturnValue) == 0x000057, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000060, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000068, "Member 'INTERACT_DoorBase_C_UnlockDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'INTERACT_DoorBase_C_UnlockDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UnlockDoor, CallFunc_SetLocked_Result) == 0x000079, "Member 'INTERACT_DoorBase_C_UnlockDoor::CallFunc_SetLocked_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnStateFinished
// 0x00C8 (0x00C8 - 0x0000)
struct INTERACT_DoorBase_C_EVENT_OnStateFinished final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocked_Result;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput_1;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults_1;            // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_EVENT_OnStateFinished) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_EVENT_OnStateFinished");
static_assert(sizeof(INTERACT_DoorBase_C_EVENT_OnStateFinished) == 0x0000C8, "Wrong size on INTERACT_DoorBase_C_EVENT_OnStateFinished");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000018, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_IsLocked_Result) == 0x000029, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_IsLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Array_Get_Item) == 0x000030, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_TryInteract_self_CastInput) == 0x000040, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_TryInteract_InteractResults) == 0x000050, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000071, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_TryInteract_self_CastInput_1) == 0x000088, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_TryInteract_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_TryInteract_InteractResults_1) == 0x000098, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_TryInteract_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStateFinished, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'INTERACT_DoorBase_C_EVENT_OnStateFinished::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnSecurityLevelChanged
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged final
{
public:
	int32                                         NewSecurityLevel;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged");
static_assert(sizeof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged) == 0x000030, "Wrong size on INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, NewSecurityLevel) == 0x000000, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::NewSecurityLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'INTERACT_DoorBase_C_EVENT_OnSecurityLevelChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnStoryQuestChanged
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   StoryQuestName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedRequiredQuests_Result;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged) == 0x000048, "Wrong size on INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, StoryQuestName) == 0x000000, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::StoryQuestName' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, Value) == 0x000008, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::Value' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, GameInstance) == 0x000010, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, CallFunc_HasCompletedRequiredQuests_Result) == 0x000020, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::CallFunc_HasCompletedRequiredQuests_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'INTERACT_DoorBase_C_EVENT_OnStoryQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.LockDoor
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_DoorBase_C_LockDoor final
{
public:
	bool                                          CloseDoor;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_LockDoor) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_LockDoor");
static_assert(sizeof(INTERACT_DoorBase_C_LockDoor) == 0x000003, "Wrong size on INTERACT_DoorBase_C_LockDoor");
static_assert(offsetof(INTERACT_DoorBase_C_LockDoor, CloseDoor) == 0x000000, "Member 'INTERACT_DoorBase_C_LockDoor::CloseDoor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_LockDoor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_DoorBase_C_LockDoor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_LockDoor, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'INTERACT_DoorBase_C_LockDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetTargetShape");
static_assert(sizeof(INTERACT_DoorBase_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_DoorBase_C_GetTargetShape");
static_assert(offsetof(INTERACT_DoorBase_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_DoorBase_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_DoorBase_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetTargetShape, NewLocalVar_0) == 0x000010, "Member 'INTERACT_DoorBase_C_GetTargetShape::NewLocalVar_0' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryQueueDoorToggle
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_DoorBase_C_TryQueueDoorToggle final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_TryQueueDoorToggle) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TryQueueDoorToggle");
static_assert(sizeof(INTERACT_DoorBase_C_TryQueueDoorToggle) == 0x000028, "Wrong size on INTERACT_DoorBase_C_TryQueueDoorToggle");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, SourceActor) == 0x000000, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, InteractionType) == 0x000008, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001D, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001E, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_BooleanOR_ReturnValue_1) == 0x00001F, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryQueueDoorToggle, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'INTERACT_DoorBase_C_TryQueueDoorToggle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryHandleQueuedToggle
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_DoorBase_C_TryHandleQueuedToggle final
{
public:
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0000(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDoorFunctional_Result;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_TryHandleQueuedToggle) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TryHandleQueuedToggle");
static_assert(sizeof(INTERACT_DoorBase_C_TryHandleQueuedToggle) == 0x000028, "Wrong size on INTERACT_DoorBase_C_TryHandleQueuedToggle");
static_assert(offsetof(INTERACT_DoorBase_C_TryHandleQueuedToggle, CallFunc_TryInteract_InteractResults) == 0x000000, "Member 'INTERACT_DoorBase_C_TryHandleQueuedToggle::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryHandleQueuedToggle, CallFunc_IsDoorFunctional_Result) == 0x000020, "Member 'INTERACT_DoorBase_C_TryHandleQueuedToggle::CallFunc_IsDoorFunctional_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_Broken
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_DoorBase_C_FailedAction_Broken final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0030(0x0030)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_FailedAction_Broken) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_FailedAction_Broken");
static_assert(sizeof(INTERACT_DoorBase_C_FailedAction_Broken) == 0x000070, "Wrong size on INTERACT_DoorBase_C_FailedAction_Broken");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, CursorPrimitive) == 0x000000, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, K2Node_MakeArray_Array_1) == 0x000018, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000030, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Broken, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_DoorBase_C_FailedAction_Broken::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_Locked
// 0x00D0 (0x00D0 - 0x0000)
struct INTERACT_DoorBase_C_FailedAction_Locked final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0038(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x00A8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_FailedAction_Locked) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_FailedAction_Locked");
static_assert(sizeof(INTERACT_DoorBase_C_FailedAction_Locked) == 0x0000D0, "Wrong size on INTERACT_DoorBase_C_FailedAction_Locked");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CursorPrimitive) == 0x000000, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, Temp_int_Array_Index_Variable) == 0x000020, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, K2Node_MakeArray_Array_1) == 0x000028, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000038, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_GetGameInstance_ReturnValue) == 0x000068, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, K2Node_DynamicCast_AsGI_Single_Player) == 0x000078, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_Array_Get_Item) == 0x000088, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_TryInteract_self_CastInput) == 0x000098, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_TryInteract_InteractResults) == 0x0000A8, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_Locked, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'INTERACT_DoorBase_C_FailedAction_Locked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InteractOnOpening
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_DoorBase_C_InteractOnOpening final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0038(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_InteractOnOpening) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_InteractOnOpening");
static_assert(sizeof(INTERACT_DoorBase_C_InteractOnOpening) == 0x000058, "Wrong size on INTERACT_DoorBase_C_InteractOnOpening");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, SourceActor) == 0x000000, "Member 'INTERACT_DoorBase_C_InteractOnOpening::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, Temp_int_Array_Index_Variable) == 0x000008, "Member 'INTERACT_DoorBase_C_InteractOnOpening::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'INTERACT_DoorBase_C_InteractOnOpening::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_Array_Get_Item) == 0x000018, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_TryInteract_self_CastInput) == 0x000028, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnOpening, CallFunc_TryInteract_InteractResults) == 0x000038, "Member 'INTERACT_DoorBase_C_InteractOnOpening::CallFunc_TryInteract_InteractResults' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.InteractOnClosing
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_DoorBase_C_InteractOnClosing final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0030(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_InteractOnClosing) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_InteractOnClosing");
static_assert(sizeof(INTERACT_DoorBase_C_InteractOnClosing) == 0x000050, "Wrong size on INTERACT_DoorBase_C_InteractOnClosing");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTERACT_DoorBase_C_InteractOnClosing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'INTERACT_DoorBase_C_InteractOnClosing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_Array_Get_Item) == 0x000010, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_TryInteract_self_CastInput) == 0x000020, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_InteractOnClosing, CallFunc_TryInteract_InteractResults) == 0x000030, "Member 'INTERACT_DoorBase_C_InteractOnClosing::CallFunc_TryInteract_InteractResults' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetInteractLocked
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_DoorBase_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_SetInteractLocked");
static_assert(sizeof(INTERACT_DoorBase_C_SetInteractLocked) == 0x000003, "Wrong size on INTERACT_DoorBase_C_SetInteractLocked");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_DoorBase_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_DoorBase_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractLocked, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'INTERACT_DoorBase_C_SetInteractLocked::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetStopMeshTicksTimer
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_SetStopMeshTicksTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_SetStopMeshTicksTimer) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_SetStopMeshTicksTimer");
static_assert(sizeof(INTERACT_DoorBase_C_SetStopMeshTicksTimer) == 0x000018, "Wrong size on INTERACT_DoorBase_C_SetStopMeshTicksTimer");
static_assert(offsetof(INTERACT_DoorBase_C_SetStopMeshTicksTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_DoorBase_C_SetStopMeshTicksTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetStopMeshTicksTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_SetStopMeshTicksTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryStopMeshComponentTicks
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_TryStopMeshComponentTicks final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_TryStopMeshComponentTicks) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TryStopMeshComponentTicks");
static_assert(sizeof(INTERACT_DoorBase_C_TryStopMeshComponentTicks) == 0x000010, "Wrong size on INTERACT_DoorBase_C_TryStopMeshComponentTicks");
static_assert(offsetof(INTERACT_DoorBase_C_TryStopMeshComponentTicks, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'INTERACT_DoorBase_C_TryStopMeshComponentTicks::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryStopMeshComponentTicks, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_TryStopMeshComponentTicks::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryStopMeshComponentTicks, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'INTERACT_DoorBase_C_TryStopMeshComponentTicks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.PlayDoorMontage
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_DoorBase_C_PlayDoorMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageDuration;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageLength;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstance;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_PlayDoorMontage) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_PlayDoorMontage");
static_assert(sizeof(INTERACT_DoorBase_C_PlayDoorMontage) == 0x000048, "Wrong size on INTERACT_DoorBase_C_PlayDoorMontage");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, Montage) == 0x000000, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, StartTime) == 0x000008, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::StartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, MontageDuration) == 0x00000C, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, MontageLength) == 0x000010, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::MontageLength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, AnimInstance) == 0x000018, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_PlayDoorMontage, CallFunc_Montage_Play_ReturnValue) == 0x000040, "Member 'INTERACT_DoorBase_C_PlayDoorMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateHackerDisplayMeshForScan
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDisplayMesh_Result;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan");
static_assert(sizeof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan) == 0x000038, "Wrong size on INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, HackerPawn) == 0x000000, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000018, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000028, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan, CallFunc_SetDisplayMesh_Result) == 0x000031, "Member 'INTERACT_DoorBase_C_UpdateHackerDisplayMeshForScan::CallFunc_SetDisplayMesh_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnAccesscardScanned
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_DoorBase_C_OnAccesscardScanned final
{
public:
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0028(0x0030)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorFunctional_Result;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_OnAccesscardScanned) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnAccesscardScanned");
static_assert(sizeof(INTERACT_DoorBase_C_OnAccesscardScanned) == 0x000068, "Wrong size on INTERACT_DoorBase_C_OnAccesscardScanned");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, K2Node_MakeArray_Array) == 0x000000, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, K2Node_MakeArray_Array_1) == 0x000010, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000028, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnAccesscardScanned, CallFunc_IsDoorFunctional_Result) == 0x000061, "Member 'INTERACT_DoorBase_C_OnAccesscardScanned::CallFunc_IsDoorFunctional_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetDoorLockAnimationState
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_DoorBase_C_SetDoorLockAnimationState final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLocked_Result;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_SetDoorLockAnimationState) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_SetDoorLockAnimationState");
static_assert(sizeof(INTERACT_DoorBase_C_SetDoorLockAnimationState) == 0x000080, "Wrong size on INTERACT_DoorBase_C_SetDoorLockAnimationState");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_Len_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000048, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000060, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_SetLocked_Result) == 0x000068, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_SetLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_Montage_Play_ReturnValue) == 0x00006C, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_BooleanNAND_ReturnValue) == 0x000078, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorLockAnimationState, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'INTERACT_DoorBase_C_SetDoorLockAnimationState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ReverseDoorMontage
// 0x00E0 (0x00E0 - 0x0000)
struct INTERACT_DoorBase_C_ReverseDoorMontage final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageDuration;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageStartTime;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMontageProgress;                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeSinceStateChange;                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           TargetMontage;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           SourceMontage;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayDoorMontage_MontageDuration;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0040(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_1;                           // 0x0070(0x0028)(HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_ReverseDoorMontage) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_ReverseDoorMontage");
static_assert(sizeof(INTERACT_DoorBase_C_ReverseDoorMontage) == 0x0000E0, "Wrong size on INTERACT_DoorBase_C_ReverseDoorMontage");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, ElapsedTime) == 0x000000, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, MontageDuration) == 0x000004, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, MontageStartTime) == 0x000008, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::MontageStartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CurrentMontageProgress) == 0x00000C, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CurrentMontageProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, ElapsedTimeSinceStateChange) == 0x000010, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::ElapsedTimeSinceStateChange' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, TargetMontage) == 0x000018, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::TargetMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, SourceMontage) == 0x000020, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::SourceMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, AnimInstance) == 0x000028, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, Temp_bool_Variable) == 0x000030, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_PlayDoorMontage_MontageDuration) == 0x000034, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_PlayDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, Temp_bool_Variable_1) == 0x000039, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_Select_Default) == 0x000040, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000068, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_Select_Default_1) == 0x000070, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000098, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0000A8, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_DynamicCast_AsAnim_Montage_1) == 0x0000B0, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x0000C0, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000C8, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_FMin_ReturnValue) == 0x0000D8, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReverseDoorMontage, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'INTERACT_DoorBase_C_ReverseDoorMontage::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ResumeDoorMontage
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_DoorBase_C_ResumeDoorMontage final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontageDuration;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeSinceStateChange;                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToResume;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayDoorMontage_MontageDuration;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_ResumeDoorMontage) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_ResumeDoorMontage");
static_assert(sizeof(INTERACT_DoorBase_C_ResumeDoorMontage) == 0x000058, "Wrong size on INTERACT_DoorBase_C_ResumeDoorMontage");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, ElapsedTime) == 0x000000, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, MontageDuration) == 0x000004, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, ElapsedTimeSinceStateChange) == 0x000008, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::ElapsedTimeSinceStateChange' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, MontageToResume) == 0x000010, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::MontageToResume' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_PlayDoorMontage_MontageDuration) == 0x00001C, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_PlayDoorMontage_MontageDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000030, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000040, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000048, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeDoorMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'INTERACT_DoorBase_C_ResumeDoorMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_DoorMontageFinished
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_EVENT_DoorMontageFinished final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_EVENT_DoorMontageFinished) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_EVENT_DoorMontageFinished");
static_assert(sizeof(INTERACT_DoorBase_C_EVENT_DoorMontageFinished) == 0x000010, "Wrong size on INTERACT_DoorBase_C_EVENT_DoorMontageFinished");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_DoorMontageFinished, Montage) == 0x000000, "Member 'INTERACT_DoorBase_C_EVENT_DoorMontageFinished::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_DoorMontageFinished, bInterrupted) == 0x000008, "Member 'INTERACT_DoorBase_C_EVENT_DoorMontageFinished::bInterrupted' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorVisibility
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_UpdateDoorVisibility final
{
public:
	bool                                          VisibleState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetButtonColor_ButtonColor;               // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_UpdateDoorVisibility) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_UpdateDoorVisibility");
static_assert(sizeof(INTERACT_DoorBase_C_UpdateDoorVisibility) == 0x000018, "Wrong size on INTERACT_DoorBase_C_UpdateDoorVisibility");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorVisibility, VisibleState) == 0x000000, "Member 'INTERACT_DoorBase_C_UpdateDoorVisibility::VisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorVisibility, CallFunc_GetButtonColor_ButtonColor) == 0x000004, "Member 'INTERACT_DoorBase_C_UpdateDoorVisibility::CallFunc_GetButtonColor_ButtonColor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorVisibility, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000014, "Member 'INTERACT_DoorBase_C_UpdateDoorVisibility::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetDoorButtonColorType
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_DoorBase_C_SetDoorButtonColorType final
{
public:
	ENUM_ButtonColorType                          Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetButtonColor_ButtonColor;               // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_SetDoorButtonColorType) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_SetDoorButtonColorType");
static_assert(sizeof(INTERACT_DoorBase_C_SetDoorButtonColorType) == 0x000014, "Wrong size on INTERACT_DoorBase_C_SetDoorButtonColorType");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorButtonColorType, Color) == 0x000000, "Member 'INTERACT_DoorBase_C_SetDoorButtonColorType::Color' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetDoorButtonColorType, CallFunc_GetButtonColor_ButtonColor) == 0x000004, "Member 'INTERACT_DoorBase_C_SetDoorButtonColorType::CallFunc_GetButtonColor_ButtonColor' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorButtonColor
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_DoorBase_C_UpdateDoorButtonColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_UpdateDoorButtonColor) == 0x000010, "Wrong alignment on INTERACT_DoorBase_C_UpdateDoorButtonColor");
static_assert(sizeof(INTERACT_DoorBase_C_UpdateDoorButtonColor) == 0x000050, "Wrong size on INTERACT_DoorBase_C_UpdateDoorButtonColor");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, Color) == 0x000000, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::Color' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_GetButtonMesh_Mesh) == 0x000010, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_GetButtonMesh_Mesh' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_BreakColor_R) == 0x000028, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_BreakColor_G) == 0x00002C, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_BreakColor_B) == 0x000030, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, CallFunc_BreakColor_A) == 0x000034, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorButtonColor, K2Node_MakeStruct_Vector4) == 0x000040, "Member 'INTERACT_DoorBase_C_UpdateDoorButtonColor::K2Node_MakeStruct_Vector4' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetScreenIcon
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_DoorBase_C_SetScreenIcon final
{
public:
	ENUM_DoorIcons                                DoorIcon;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DoorIcons                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh_2;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_SetScreenIcon) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_SetScreenIcon");
static_assert(sizeof(INTERACT_DoorBase_C_SetScreenIcon) == 0x000040, "Wrong size on INTERACT_DoorBase_C_SetScreenIcon");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, DoorIcon) == 0x000000, "Member 'INTERACT_DoorBase_C_SetScreenIcon::DoorIcon' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, Temp_byte_Variable) == 0x000001, "Member 'INTERACT_DoorBase_C_SetScreenIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, Temp_float_Variable) == 0x000004, "Member 'INTERACT_DoorBase_C_SetScreenIcon::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, Temp_float_Variable_1) == 0x000008, "Member 'INTERACT_DoorBase_C_SetScreenIcon::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, Temp_float_Variable_2) == 0x00000C, "Member 'INTERACT_DoorBase_C_SetScreenIcon::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, Temp_float_Variable_3) == 0x000010, "Member 'INTERACT_DoorBase_C_SetScreenIcon::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, CallFunc_GetButtonMesh_Mesh) == 0x000018, "Member 'INTERACT_DoorBase_C_SetScreenIcon::CallFunc_GetButtonMesh_Mesh' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, K2Node_Select_Default) == 0x000020, "Member 'INTERACT_DoorBase_C_SetScreenIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, CallFunc_GetButtonMesh_Mesh_1) == 0x000028, "Member 'INTERACT_DoorBase_C_SetScreenIcon::CallFunc_GetButtonMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, CallFunc_RandomFloat_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_SetScreenIcon::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenIcon, CallFunc_GetButtonMesh_Mesh_2) == 0x000038, "Member 'INTERACT_DoorBase_C_SetScreenIcon::CallFunc_GetButtonMesh_Mesh_2' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetScreenDisabled
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_DoorBase_C_SetScreenDisabled final
{
public:
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_SetScreenDisabled) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_SetScreenDisabled");
static_assert(sizeof(INTERACT_DoorBase_C_SetScreenDisabled) == 0x000008, "Wrong size on INTERACT_DoorBase_C_SetScreenDisabled");
static_assert(offsetof(INTERACT_DoorBase_C_SetScreenDisabled, CallFunc_GetButtonMesh_Mesh) == 0x000000, "Member 'INTERACT_DoorBase_C_SetScreenDisabled::CallFunc_GetButtonMesh_Mesh' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TickButtonPulse
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_DoorBase_C_TickButtonPulse final
{
public:
	float                                         PulseProgress;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	struct FLinearColor                           CallFunc_GetButtonColor_ButtonColor;               // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetButtonColorWhilePulsing_PulseValue;    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_TickButtonPulse) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TickButtonPulse");
static_assert(sizeof(INTERACT_DoorBase_C_TickButtonPulse) == 0x000058, "Wrong size on INTERACT_DoorBase_C_TickButtonPulse");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, PulseProgress) == 0x000000, "Member 'INTERACT_DoorBase_C_TickButtonPulse::PulseProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_DoorBase_C_TickButtonPulse::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_GetButtonColor_ButtonColor) == 0x000014, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_GetButtonColor_ButtonColor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_GetButtonColorWhilePulsing_PulseValue) == 0x000034, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_GetButtonColorWhilePulsing_PulseValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000044, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TickButtonPulse, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'INTERACT_DoorBase_C_TickButtonPulse::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.StartButtonPulse
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_DoorBase_C_StartButtonPulse final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_StartButtonPulse) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_StartButtonPulse");
static_assert(sizeof(INTERACT_DoorBase_C_StartButtonPulse) == 0x000004, "Wrong size on INTERACT_DoorBase_C_StartButtonPulse");
static_assert(offsetof(INTERACT_DoorBase_C_StartButtonPulse, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'INTERACT_DoorBase_C_StartButtonPulse::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetButtonMesh
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_DoorBase_C_GetButtonMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_GetButtonMesh) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetButtonMesh");
static_assert(sizeof(INTERACT_DoorBase_C_GetButtonMesh) == 0x000008, "Wrong size on INTERACT_DoorBase_C_GetButtonMesh");
static_assert(offsetof(INTERACT_DoorBase_C_GetButtonMesh, Mesh) == 0x000000, "Member 'INTERACT_DoorBase_C_GetButtonMesh::Mesh' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorwayBlocked
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_OnDoorwayBlocked final
{
public:
	class AActor*                                 BlockingActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_OnDoorwayBlocked) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnDoorwayBlocked");
static_assert(sizeof(INTERACT_DoorBase_C_OnDoorwayBlocked) == 0x000010, "Wrong size on INTERACT_DoorBase_C_OnDoorwayBlocked");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayBlocked, BlockingActor) == 0x000000, "Member 'INTERACT_DoorBase_C_OnDoorwayBlocked::BlockingActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayBlocked, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_OnDoorwayBlocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayBlocked, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'INTERACT_DoorBase_C_OnDoorwayBlocked::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayBlocked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'INTERACT_DoorBase_C_OnDoorwayBlocked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnDoorwayUnblocked
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_OnDoorwayUnblocked final
{
public:
	class AActor*                                 UnblockingActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_OnDoorwayUnblocked) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnDoorwayUnblocked");
static_assert(sizeof(INTERACT_DoorBase_C_OnDoorwayUnblocked) == 0x000010, "Wrong size on INTERACT_DoorBase_C_OnDoorwayUnblocked");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayUnblocked, UnblockingActor) == 0x000000, "Member 'INTERACT_DoorBase_C_OnDoorwayUnblocked::UnblockingActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayUnblocked, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_OnDoorwayUnblocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnDoorwayUnblocked, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000009, "Member 'INTERACT_DoorBase_C_OnDoorwayUnblocked::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsHiddenInteractablePrimitive
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_DoorBase_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoorCollisionPrimitive_Result;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInFrontOfDoor_Result;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive) == 0x000028, "Wrong size on INTERACT_DoorBase_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_IsDoorCollisionPrimitive_Result) == 0x000012, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_IsDoorCollisionPrimitive_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, Temp_bool_Variable) == 0x000013, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, CallFunc_IsLocationInFrontOfDoor_Result) == 0x000024, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::CallFunc_IsLocationInFrontOfDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsHiddenInteractablePrimitive, K2Node_Select_Default) == 0x000025, "Member 'INTERACT_DoorBase_C_IsHiddenInteractablePrimitive::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsDoorCollisionPrimitive
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_IsDoorCollisionPrimitive final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsDoorCollisionPrimitive) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_IsDoorCollisionPrimitive");
static_assert(sizeof(INTERACT_DoorBase_C_IsDoorCollisionPrimitive) == 0x000010, "Wrong size on INTERACT_DoorBase_C_IsDoorCollisionPrimitive");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorCollisionPrimitive, PrimitiveComponent) == 0x000000, "Member 'INTERACT_DoorBase_C_IsDoorCollisionPrimitive::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorCollisionPrimitive, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_IsDoorCollisionPrimitive::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsDoorCollisionPrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'INTERACT_DoorBase_C_IsDoorCollisionPrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.IsInteractActivated
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_DoorBase_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_IsInteractActivated");
static_assert(sizeof(INTERACT_DoorBase_C_IsInteractActivated) == 0x000002, "Wrong size on INTERACT_DoorBase_C_IsInteractActivated");
static_assert(offsetof(INTERACT_DoorBase_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_IsInteractActivated::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_IsInteractActivated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'INTERACT_DoorBase_C_IsInteractActivated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractLocked
// 0x00D8 (0x00D8 - 0x0000)
struct INTERACT_DoorBase_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSecurityLockText_Result;               // 0x0038(0x0018)()
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetInteractLocked");
static_assert(sizeof(INTERACT_DoorBase_C_GetInteractLocked) == 0x0000D8, "Wrong size on INTERACT_DoorBase_C_GetInteractLocked");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_DoorBase_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_DoorBase_C_GetInteractLocked::LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'INTERACT_DoorBase_C_GetInteractLocked::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_DoorBase_C_GetInteractLocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_GetSecurityLockText_Result) == 0x000038, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_GetSecurityLockText_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_GetInventoryComponent_Inventory) == 0x000050, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'INTERACT_DoorBase_C_GetInteractLocked::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, K2Node_MakeArray_Array) == 0x000098, "Member 'INTERACT_DoorBase_C_GetInteractLocked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_GetItemCount_Result) == 0x0000A8, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_IsValidClass_ReturnValue) == 0x0000C9, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractLocked, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'INTERACT_DoorBase_C_GetInteractLocked::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractBroken
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_DoorBase_C_GetInteractBroken final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BrokenMessage_0;                                   // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(INTERACT_DoorBase_C_GetInteractBroken) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetInteractBroken");
static_assert(sizeof(INTERACT_DoorBase_C_GetInteractBroken) == 0x000020, "Wrong size on INTERACT_DoorBase_C_GetInteractBroken");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBroken, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_GetInteractBroken::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBroken, BrokenMessage_0) == 0x000008, "Member 'INTERACT_DoorBase_C_GetInteractBroken::BrokenMessage_0' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetInteractBusy
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_DoorBase_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage_0;                                     // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsSafeToClose_Result;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_GetInteractBusy) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetInteractBusy");
static_assert(sizeof(INTERACT_DoorBase_C_GetInteractBusy) == 0x000028, "Wrong size on INTERACT_DoorBase_C_GetInteractBusy");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBusy, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBusy, BusyMessage_0) == 0x000008, "Member 'INTERACT_DoorBase_C_GetInteractBusy::BusyMessage_0' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBusy, CallFunc_IsSafeToClose_Result) == 0x000020, "Member 'INTERACT_DoorBase_C_GetInteractBusy::CallFunc_IsSafeToClose_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBusy, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'INTERACT_DoorBase_C_GetInteractBusy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetInteractBusy, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'INTERACT_DoorBase_C_GetInteractBusy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateCanNavAgentsUnblock
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock final
{
public:
	bool                                          CallFunc_IsDoorFunctional_Result;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock");
static_assert(sizeof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock) == 0x000005, "Wrong size on INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock, CallFunc_IsDoorFunctional_Result) == 0x000000, "Member 'INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock::CallFunc_IsDoorFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock, CallFunc_BooleanNOR_ReturnValue) == 0x000002, "Member 'INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'INTERACT_DoorBase_C_UpdateCanNavAgentsUnblock::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_ReceiveAnimationMessage");
static_assert(sizeof(INTERACT_DoorBase_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on INTERACT_DoorBase_C_ReceiveAnimationMessage");
static_assert(offsetof(INTERACT_DoorBase_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'INTERACT_DoorBase_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'INTERACT_DoorBase_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'INTERACT_DoorBase_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.GetClosestTargetShape
// 0x0098 (0x0098 - 0x0000)
struct INTERACT_DoorBase_C_GetClosestTargetShape final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShapeInFront;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharacterInFront;                                // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        ShapeComponent;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CurrentPrimitive;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsCollisionEnabled_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetButtonMesh_Mesh;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInFrontOfDoor_Result;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInFrontOfDoor_Result_1;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHiddenInteractablePrimitive_Result;     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_GetClosestTargetShape) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_GetClosestTargetShape");
static_assert(sizeof(INTERACT_DoorBase_C_GetClosestTargetShape) == 0x000098, "Wrong size on INTERACT_DoorBase_C_GetClosestTargetShape");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, Character) == 0x000000, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, IsShapeInFront) == 0x000010, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::IsShapeInFront' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, IsCharacterInFront) == 0x000011, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::IsCharacterInFront' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, ShapeComponent) == 0x000018, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CurrentPrimitive) == 0x000020, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CurrentPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_K2_IsCollisionEnabled_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_K2_IsCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, Temp_int_Array_Index_Variable) == 0x000034, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_GetButtonMesh_Mesh) == 0x000038, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_GetButtonMesh_Mesh' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000048, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_Array_Get_Item) == 0x000058, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000065, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_IsLocationInFrontOfDoor_Result) == 0x000074, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_IsLocationInFrontOfDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_IsLocationInFrontOfDoor_Result_1) == 0x000084, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_IsLocationInFrontOfDoor_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_GetTargetShape_ShapeComponent) == 0x000088, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_IsHiddenInteractablePrimitive_Result) == 0x000090, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_IsHiddenInteractablePrimitive_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_GetClosestTargetShape, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'INTERACT_DoorBase_C_GetClosestTargetShape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.ResumeChannelingSequence
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_ResumeChannelingSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWaitingToHolster;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResumeChannelingSequence_IsWaitingToHolster; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_ResumeChannelingSequence) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_ResumeChannelingSequence");
static_assert(sizeof(INTERACT_DoorBase_C_ResumeChannelingSequence) == 0x000010, "Wrong size on INTERACT_DoorBase_C_ResumeChannelingSequence");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeChannelingSequence, HackerPawn) == 0x000000, "Member 'INTERACT_DoorBase_C_ResumeChannelingSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeChannelingSequence, IsWaitingToHolster) == 0x000008, "Member 'INTERACT_DoorBase_C_ResumeChannelingSequence::IsWaitingToHolster' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_ResumeChannelingSequence, CallFunc_ResumeChannelingSequence_IsWaitingToHolster) == 0x000009, "Member 'INTERACT_DoorBase_C_ResumeChannelingSequence::CallFunc_ResumeChannelingSequence_IsWaitingToHolster' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CreateChannelingMoveControl
// 0x03E0 (0x03E0 - 0x0000)
struct INTERACT_DoorBase_C_CreateChannelingMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_StationMove_C*             ScanMoveControl;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MountRotation;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                MountEyeLocation;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        TargetShape;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       FloorResult;                                       // 0x0038(0x0094)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference)
	struct FVector                                MountLocation;                                     // 0x00CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMountingFromFront;                               // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHalfHeightStanding_Result;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTorsoToEyeHeightStanding_Result;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetClosestTargetShape_Result;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHalfHeightStanding_Result_1;           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInFrontOfDoor_Result;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_2;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default;                             // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       CallFunc_K2_FindFloor_FloorResult;                 // 0x02A0(0x0094)(NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue_1;         // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x03BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_StationMove_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_CreateChannelingMoveControl) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_CreateChannelingMoveControl");
static_assert(sizeof(INTERACT_DoorBase_C_CreateChannelingMoveControl) == 0x0003E0, "Wrong size on INTERACT_DoorBase_C_CreateChannelingMoveControl");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, HackerPawn) == 0x000000, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Result) == 0x000008, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, ScanMoveControl) == 0x000010, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::ScanMoveControl' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, MountRotation) == 0x000018, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::MountRotation' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, MountEyeLocation) == 0x000024, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::MountEyeLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, TargetShape) == 0x000030, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::TargetShape' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, FloorResult) == 0x000038, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::FloorResult' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, MountLocation) == 0x0000CC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::MountLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, IsMountingFromFront) == 0x0000D8, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::IsMountingFromFront' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Temp_bool_Variable) == 0x0000D9, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Temp_float_Variable) == 0x0000DC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Temp_float_Variable_1) == 0x0000E0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E4, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_ComposeRotators_ReturnValue) == 0x0000F0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000FC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetHalfHeightStanding_Result) == 0x000108, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetHalfHeightStanding_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_RegisterMoveControl_Result) == 0x00010C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetTorsoToEyeHeightStanding_Result) == 0x000110, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetTorsoToEyeHeightStanding_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetClosestTargetShape_Result) == 0x000118, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetClosestTargetShape_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetHalfHeightStanding_Result_1) == 0x000120, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetHalfHeightStanding_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_FloatFloat_ReturnValue) == 0x000124, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000128, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_IsLocationInFrontOfDoor_Result) == 0x000134, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_IsLocationInFrontOfDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_X) == 0x000138, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Y) == 0x00013C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Z) == 0x000140, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Vector_Up_ReturnValue) == 0x000144, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000150, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00015C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_X_1) == 0x000168, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Y_1) == 0x00016C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Z_1) == 0x000170, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Vector_Up_ReturnValue_1) == 0x000174, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_MakeVector_ReturnValue) == 0x000180, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00018C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Vector_Up_ReturnValue_2) == 0x000198, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Vector_Up_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001A4, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Temp_bool_Variable_1) == 0x0001BC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, Temp_bool_Variable_2) == 0x0001BD, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001C0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001CC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, K2Node_Select_Default) == 0x0001D8, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0001F0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001FC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_MakeRotFromX_ReturnValue) == 0x000208, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_bBlockingHit) == 0x000214, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_bInitialOverlap) == 0x000215, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_Time) == 0x000218, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_Distance) == 0x00021C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_Location) == 0x000220, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_ImpactPoint) == 0x00022C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_Normal) == 0x000238, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_ImpactNormal) == 0x000244, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_HitItem) == 0x000270, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_ElementIndex) == 0x000274, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_FaceIndex) == 0x000278, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_TraceStart) == 0x00027C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakHitResult_TraceEnd) == 0x000288, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000294, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_FindFloor_FloorResult) == 0x0002A0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_FindFloor_FloorResult' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, K2Node_Select_Default_1) == 0x000334, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000340, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetActorForwardVector_ReturnValue) == 0x00034C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_X_2) == 0x000358, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Y_2) == 0x00035C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Z_2) == 0x000360, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000364, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_IsValid_ReturnValue) == 0x000368, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_GetScaledBoxExtent_ReturnValue_1) == 0x00036C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_GetScaledBoxExtent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_X_3) == 0x000378, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Y_3) == 0x00037C, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_BreakVector_Z_3) == 0x000380, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_MakeVector_ReturnValue_1) == 0x000384, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, K2Node_Select_Default_2) == 0x000390, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000394, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000398, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0003A4, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003B0, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0003BC, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003C8, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_CreateChannelingMoveControl, CallFunc_SpawnObject_ReturnValue) == 0x0003D8, "Member 'INTERACT_DoorBase_C_CreateChannelingMoveControl::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnChannelingMontageStarted
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_DoorBase_C_OnChannelingMontageStarted final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_OnChannelingMontageStarted) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnChannelingMontageStarted");
static_assert(sizeof(INTERACT_DoorBase_C_OnChannelingMontageStarted) == 0x000008, "Wrong size on INTERACT_DoorBase_C_OnChannelingMontageStarted");
static_assert(offsetof(INTERACT_DoorBase_C_OnChannelingMontageStarted, HackerPawn) == 0x000000, "Member 'INTERACT_DoorBase_C_OnChannelingMontageStarted::HackerPawn' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.OnRestoreInventoryAfterSequence
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDisplayMesh_Result;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence");
static_assert(sizeof(INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence) == 0x000010, "Wrong size on INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence");
static_assert(offsetof(INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence, HackerPawn) == 0x000000, "Member 'INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence, CallFunc_SetDisplayMesh_Result) == 0x000008, "Member 'INTERACT_DoorBase_C_OnRestoreInventoryAfterSequence::CallFunc_SetDisplayMesh_Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.SetInteractPowered
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_DoorBase_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDoorEmissiveStrength_Strength;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_SetInteractPowered");
static_assert(sizeof(INTERACT_DoorBase_C_SetInteractPowered) == 0x000014, "Wrong size on INTERACT_DoorBase_C_SetInteractPowered");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_DoorBase_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_DoorBase_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_DoorBase_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_DoorBase_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, CallFunc_UpdateDoorEmissiveStrength_Strength) == 0x00000C, "Member 'INTERACT_DoorBase_C_SetInteractPowered::CallFunc_UpdateDoorEmissiveStrength_Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'INTERACT_DoorBase_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.UpdateDoorEmissiveStrength
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_DoorBase_C_UpdateDoorEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Strength;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 MeshComponents;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	float                                         EmissiveStrength;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_UpdateDoorEmissiveStrength");
static_assert(sizeof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength) == 0x000050, "Wrong size on INTERACT_DoorBase_C_UpdateDoorEmissiveStrength");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, Strength) == 0x000004, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, MeshComponents) == 0x000008, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::MeshComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, EmissiveStrength) == 0x000018, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000038, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000048, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_UpdateDoorEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'INTERACT_DoorBase_C_UpdateDoorEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.FailedAction_NotFunctional
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_DoorBase_C_FailedAction_NotFunctional final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0030(0x0030)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_FailedAction_NotFunctional) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_FailedAction_NotFunctional");
static_assert(sizeof(INTERACT_DoorBase_C_FailedAction_NotFunctional) == 0x000070, "Wrong size on INTERACT_DoorBase_C_FailedAction_NotFunctional");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, CursorPrimitive) == 0x000000, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, K2Node_MakeArray_Array_1) == 0x000018, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000030, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_FailedAction_NotFunctional, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_DoorBase_C_FailedAction_NotFunctional::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.EVENT_OnDisableAttribChanged
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDoorEmissiveStrength_Strength;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged) == 0x000018, "Wrong size on INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, CallFunc_UpdateDoorEmissiveStrength_Strength) == 0x000010, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::CallFunc_UpdateDoorEmissiveStrength_Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_DoorBase_C_EVENT_OnDisableAttribChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_DoorBase_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DoorBase_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_DoorBase_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_DoorBase_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_DoorBase_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_DoorBase_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_DoorBase_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryFixOverlappingActorPhysics
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_DoorBase_C_TryFixOverlappingActorPhysics final
{
public:
	class AActor*                                 CurrentOverlapActor;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OverlappingActors;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorBlockDoorway_Result;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TryFixOverlappingActorPhysics");
static_assert(sizeof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics) == 0x000068, "Wrong size on INTERACT_DoorBase_C_TryFixOverlappingActorPhysics");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CurrentOverlapActor) == 0x000000, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CurrentOverlapActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, OverlappingActors) == 0x000008, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_Array_Get_Item) == 0x000020, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_CanActorBlockDoorway_Result) == 0x000028, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_CanActorBlockDoorway_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000038, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, K2Node_DynamicCast_AsPICKUP_Base) == 0x000048, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryFixOverlappingActorPhysics, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000058, "Member 'INTERACT_DoorBase_C_TryFixOverlappingActorPhysics::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");

// Function INTERACT_DoorBase.INTERACT_DoorBase_C.TryInteract
// 0x0218 (0x0218 - 0x0000)
struct INTERACT_DoorBase_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsDoorFunctional_Result;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0040(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginChannelingSequence_Result;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractBusy_Result;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractBusy_BusyMessage;              // 0x0070(0x0018)()
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0090(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x00A8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00C8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetInteractBroken_Result;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractBroken_BrokenMessage;          // 0x0110(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0128(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0148(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x0170(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x0190(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_8;        // 0x01B8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_9;        // 0x01D8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_10;       // 0x01F8(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DoorBase_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_DoorBase_C_TryInteract");
static_assert(sizeof(INTERACT_DoorBase_C_TryInteract) == 0x000218, "Wrong size on INTERACT_DoorBase_C_TryInteract");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_DoorBase_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_DoorBase_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_DoorBase_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_DoorBase_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_IsDoorFunctional_Result) == 0x000038, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_IsDoorFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000040, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000060, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_TryBeginChannelingSequence_Result) == 0x000069, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_TryBeginChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_IsValidClass_ReturnValue) == 0x00006A, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractBusy_Result) == 0x00006B, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractBusy_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractBusy_BusyMessage) == 0x000070, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractBusy_BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractLocked_Result) == 0x000088, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractLocked_LockMessage) == 0x000090, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x0000A8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000C8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000E8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractBroken_Result) == 0x000108, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractBroken_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_GetInteractBroken_BrokenMessage) == 0x000110, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_GetInteractBroken_BrokenMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000128, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000148, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000168, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000169, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00016A, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00016B, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_BooleanOR_ReturnValue) == 0x00016C, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, CallFunc_BooleanOR_ReturnValue_1) == 0x00016D, "Member 'INTERACT_DoorBase_C_TryInteract::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x000170, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x000190, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x0001B0, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_8) == 0x0001B8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_8' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_9) == 0x0001D8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_9' has a wrong offset!");
static_assert(offsetof(INTERACT_DoorBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_10) == 0x0001F8, "Member 'INTERACT_DoorBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_10' has a wrong offset!");

}


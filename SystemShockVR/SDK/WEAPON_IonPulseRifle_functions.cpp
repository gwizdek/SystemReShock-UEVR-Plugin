#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_IonPulseRifle

#include "Basic.hpp"

#include "WEAPON_IonPulseRifle_classes.hpp"
#include "WEAPON_IonPulseRifle_parameters.hpp"


namespace SDK
{

// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.ExecuteUbergraph_WEAPON_IonPulseRifle
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::ExecuteUbergraph_WEAPON_IonPulseRifle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "ExecuteUbergraph_WEAPON_IonPulseRifle");

	Params::WEAPON_IonPulseRifle_C_ExecuteUbergraph_WEAPON_IonPulseRifle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.StreamWeaponAssets
// (BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::StreamWeaponAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "StreamWeaponAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.StreamWeaponMontages
// (BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::StreamWeaponMontages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "StreamWeaponMontages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_FF9E235148FC867D6DEB3BA47A521CE4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_FF9E235148FC867D6DEB3BA47A521CE4(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_FF9E235148FC867D6DEB3BA47A521CE4");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_FF9E235148FC867D6DEB3BA47A521CE4 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_C9C6266F4695E530B12EE9891AFF049B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_C9C6266F4695E530B12EE9891AFF049B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_C9C6266F4695E530B12EE9891AFF049B");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_C9C6266F4695E530B12EE9891AFF049B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_8EF3A359490A637DA4A310A4F7D96B09
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_8EF3A359490A637DA4A310A4F7D96B09(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_8EF3A359490A637DA4A310A4F7D96B09");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_8EF3A359490A637DA4A310A4F7D96B09 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_CD69C5494A86D5F07CAB9C8622D628DB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_CD69C5494A86D5F07CAB9C8622D628DB(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_CD69C5494A86D5F07CAB9C8622D628DB");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_CD69C5494A86D5F07CAB9C8622D628DB Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_615E8328463F46FE8BB727A0EA83FCD9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_615E8328463F46FE8BB727A0EA83FCD9(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_615E8328463F46FE8BB727A0EA83FCD9");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_615E8328463F46FE8BB727A0EA83FCD9 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_7C2F215149D6D7C6CFF9009641C41CC6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_7C2F215149D6D7C6CFF9009641C41CC6(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_7C2F215149D6D7C6CFF9009641C41CC6");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_7C2F215149D6D7C6CFF9009641C41CC6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_0588E56D4D1DCF9CCD4DD4B5FBFF5F20
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_0588E56D4D1DCF9CCD4DD4B5FBFF5F20(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_0588E56D4D1DCF9CCD4DD4B5FBFF5F20");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_0588E56D4D1DCF9CCD4DD4B5FBFF5F20 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_76BD371E42A51692AA80A7A93DD7B834
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_76BD371E42A51692AA80A7A93DD7B834(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_76BD371E42A51692AA80A7A93DD7B834");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_76BD371E42A51692AA80A7A93DD7B834 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_6366B05B452B4B0F22FFFEB05DC9C551
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_6366B05B452B4B0F22FFFEB05DC9C551(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_6366B05B452B4B0F22FFFEB05DC9C551");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_6366B05B452B4B0F22FFFEB05DC9C551 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnLoaded_A152499A464E718E1950958E67FCF392
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::OnLoaded_A152499A464E718E1950958E67FCF392(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnLoaded_A152499A464E718E1950958E67FCF392");

	Params::WEAPON_IonPulseRifle_C_OnLoaded_A152499A464E718E1950958E67FCF392 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.Activate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::Activate(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "Activate");

	Params::WEAPON_IonPulseRifle_C_Activate Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.Deactivate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::Deactivate(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "Deactivate");

	Params::WEAPON_IonPulseRifle_C_Deactivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.UpdateEnergyEventBindings
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BindsEnabled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::UpdateEnergyEventBindings(bool BindsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "UpdateEnergyEventBindings");

	Params::WEAPON_IonPulseRifle_C_UpdateEnergyEventBindings Parms{};

	Parms.BindsEnabled = BindsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.EVENT_OnEnergyDepleted
// (Private, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::EVENT_OnEnergyDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "EVENT_OnEnergyDepleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.CanActivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::CanActivate(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "CanActivate");

	Params::WEAPON_IonPulseRifle_C_CanActivate Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.EVENT_UpdateCharge
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::EVENT_UpdateCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "EVENT_UpdateCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetBeamSurfaceResponseVectors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ImpactLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BeamDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SurfaceNormal                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BeamRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStrongestBeam                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reflection                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Origin                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  Directions                                             (Parm, OutParm)

void UWEAPON_IonPulseRifle_C::GetBeamSurfaceResponseVectors(const struct FVector& ImpactLocation, const struct FVector& BeamDirection, const struct FVector& SurfaceNormal, EPhysicalSurface SurfaceType, float BeamRadius, bool IsStrongestBeam, bool* Reflection, float* Intensity, struct FVector* Origin, TArray<struct FVector>* Directions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetBeamSurfaceResponseVectors");

	Params::WEAPON_IonPulseRifle_C_GetBeamSurfaceResponseVectors Parms{};

	Parms.ImpactLocation = std::move(ImpactLocation);
	Parms.BeamDirection = std::move(BeamDirection);
	Parms.SurfaceNormal = std::move(SurfaceNormal);
	Parms.SurfaceType = SurfaceType;
	Parms.BeamRadius = BeamRadius;
	Parms.IsStrongestBeam = IsStrongestBeam;

	UObject::ProcessEvent(Func, &Parms);

	if (Reflection != nullptr)
		*Reflection = Parms.Reflection;

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;

	if (Origin != nullptr)
		*Origin = std::move(Parms.Origin);

	if (Directions != nullptr)
		*Directions = std::move(Parms.Directions);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.FireChargedShot
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnergyCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::FireChargedShot(int32 EnergyCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "FireChargedShot");

	Params::WEAPON_IonPulseRifle_C_FireChargedShot Parms{};

	Parms.EnergyCost = EnergyCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.TraceChargedShotRecurse
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BeamDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EnergyCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ChargeProgress                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverchargeTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BeamIntensity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     LastHitCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_IonChargedBeamType                 BeamType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::TraceChargedShotRecurse(const struct FVector& SourceLocation, const struct FVector& TargetLocation, const struct FVector& BeamDirection, int32 EnergyCost, float ChargeProgress, float OverchargeTime, float BeamIntensity, class APAWN_SystemShockCharacter_C* LastHitCharacter, ENUM_IonChargedBeamType BeamType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "TraceChargedShotRecurse");

	Params::WEAPON_IonPulseRifle_C_TraceChargedShotRecurse Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.BeamDirection = std::move(BeamDirection);
	Parms.EnergyCost = EnergyCost;
	Parms.ChargeProgress = ChargeProgress;
	Parms.OverchargeTime = OverchargeTime;
	Parms.BeamIntensity = BeamIntensity;
	Parms.LastHitCharacter = LastHitCharacter;
	Parms.BeamType = BeamType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.TryStopChargingBeam
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FireBeamIfCharging                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::TryStopChargingBeam(bool FireBeamIfCharging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "TryStopChargingBeam");

	Params::WEAPON_IonPulseRifle_C_TryStopChargingBeam Parms{};

	Parms.FireBeamIfCharging = FireBeamIfCharging;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.UpdateChargeFX
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ChargeProgress                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::UpdateChargeFX(float ChargeProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "UpdateChargeFX");

	Params::WEAPON_IonPulseRifle_C_UpdateChargeFX Parms{};

	Parms.ChargeProgress = ChargeProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.UpdateChargeForceFeedback
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStarting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::UpdateChargeForceFeedback(bool IsStarting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "UpdateChargeForceFeedback");

	Params::WEAPON_IonPulseRifle_C_UpdateChargeForceFeedback Parms{};

	Parms.IsStarting = IsStarting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.SetChargeEnergyDrain
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DrainEnabled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::SetChargeEnergyDrain(bool DrainEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "SetChargeEnergyDrain");

	Params::WEAPON_IonPulseRifle_C_SetChargeEnergyDrain Parms{};

	Parms.DrainEnabled = DrainEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.HasEnoughEnergyToActivate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::HasEnoughEnergyToActivate(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "HasEnoughEnergyToActivate");

	Params::WEAPON_IonPulseRifle_C_HasEnoughEnergyToActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetDischargeMontage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::GetDischargeMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetDischargeMontage");

	Params::WEAPON_IonPulseRifle_C_GetDischargeMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnBecomeUnactivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::OnBecomeUnactivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnBecomeUnactivatable");

	Params::WEAPON_IonPulseRifle_C_OnBecomeUnactivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnDischargeMontageStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::OnDischargeMontageStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnDischargeMontageStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.EVENT_OnStopCharging
// (Private, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::EVENT_OnStopCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "EVENT_OnStopCharging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.StopChargeEffects
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasFired                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::StopChargeEffects(bool HasFired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "StopChargeEffects");

	Params::WEAPON_IonPulseRifle_C_StopChargeEffects Parms{};

	Parms.HasFired = HasFired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.PlayIonBeamFX
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::PlayIonBeamFX(const struct FVector& SourceLocation, const struct FVector& TargetLocation, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "PlayIonBeamFX");

	Params::WEAPON_IonPulseRifle_C_PlayIonBeamFX Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetDamageValueForEnergyCost
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnergyCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::GetDamageValueForEnergyCost(int32 EnergyCost, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetDamageValueForEnergyCost");

	Params::WEAPON_IonPulseRifle_C_GetDamageValueForEnergyCost Parms{};

	Parms.EnergyCost = EnergyCost;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetArmorPenetrationValueForEnergyCost
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnergyCost                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::GetArmorPenetrationValueForEnergyCost(int32 EnergyCost, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetArmorPenetrationValueForEnergyCost");

	Params::WEAPON_IonPulseRifle_C_GetArmorPenetrationValueForEnergyCost Parms{};

	Parms.EnergyCost = EnergyCost;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetUpfrontChargeEnergyCost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::GetUpfrontChargeEnergyCost(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetUpfrontChargeEnergyCost");

	Params::WEAPON_IonPulseRifle_C_GetUpfrontChargeEnergyCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnEnergyModeChanged
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::OnEnergyModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnEnergyModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.InitializeEnergyWeaponState
// (Public, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::InitializeEnergyWeaponState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "InitializeEnergyWeaponState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.SetCurrentMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_IonPulseRifle_C::SetCurrentMode(int32 Mode, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "SetCurrentMode");

	Params::WEAPON_IonPulseRifle_C_SetCurrentMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.EVENT_OnHolsterFinished
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::EVENT_OnHolsterFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "EVENT_OnHolsterFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.UpdateMainFX
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::UpdateMainFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "UpdateMainFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.OnUpdateHeat
// (Public, BlueprintCallable, BlueprintEvent)

void UWEAPON_IonPulseRifle_C::OnUpdateHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "OnUpdateHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.GetMaintainChargeEnergyCost
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::GetMaintainChargeEnergyCost(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "GetMaintainChargeEnergyCost");

	Params::WEAPON_IonPulseRifle_C_GetMaintainChargeEnergyCost Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_IonPulseRifle.WEAPON_IonPulseRifle_C.UpdateLastDamageValue
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_IonPulseRifle_C::UpdateLastDamageValue(float DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_IonPulseRifle_C", "UpdateLastDamageValue");

	Params::WEAPON_IonPulseRifle_C_UpdateLastDamageValue Parms{};

	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

